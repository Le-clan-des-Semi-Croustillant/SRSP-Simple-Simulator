id: SimpleSimulator
language: CSharp
name:
  Default: SimpleSimulator
qualifiedName:
  Default: SimpleSimulator
type: Assembly
modifiers: {}
items:
- id: AquitisionCommunication
  commentId: N:AquitisionCommunication
  language: CSharp
  name:
    CSharp: AquitisionCommunication
    VB: AquitisionCommunication
  nameWithType:
    CSharp: AquitisionCommunication
    VB: AquitisionCommunication
  qualifiedName:
    CSharp: AquitisionCommunication
    VB: AquitisionCommunication
  type: Namespace
  assemblies:
  - SimpleSimulator
  modifiers: {}
  items:
  - id: AquitisionCommunication.Aquisition
    commentId: T:AquitisionCommunication.Aquisition
    language: CSharp
    name:
      CSharp: Aquisition
      VB: Aquisition
    nameWithType:
      CSharp: Aquisition
      VB: Aquisition
    qualifiedName:
      CSharp: AquitisionCommunication.Aquisition
      VB: AquitisionCommunication.Aquisition
    type: Class
    assemblies:
    - SimpleSimulator
    namespace: AquitisionCommunication
    source:
      remote:
        path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Aquisition.cs
        branch: main
        repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
      id: Aquisition
      path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Aquisition.cs
      startLine: 8
    syntax:
      content:
        CSharp: public class Aquisition
        VB: Public Class Aquisition
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AquitisionCommunication.Aquisition.#ctor(PRace.Race)
      commentId: M:AquitisionCommunication.Aquisition.#ctor(PRace.Race)
      language: CSharp
      name:
        CSharp: Aquisition(Race)
        VB: Aquisition(Race)
      nameWithType:
        CSharp: Aquisition.Aquisition(Race)
        VB: Aquisition.Aquisition(Race)
      qualifiedName:
        CSharp: AquitisionCommunication.Aquisition.Aquisition(PRace.Race)
        VB: AquitisionCommunication.Aquisition.Aquisition(PRace.Race)
      type: Constructor
      assemblies:
      - SimpleSimulator
      namespace: AquitisionCommunication
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Aquisition.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: .ctor
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Aquisition.cs
        startLine: 10
      syntax:
        content:
          CSharp: public Aquisition(Race race)
          VB: Public Sub New(race As Race)
        parameters:
        - id: race
          type: PRace.Race
      overload: AquitisionCommunication.Aquisition.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.Aquisition.SetUp(PRace.Mode)
      commentId: M:AquitisionCommunication.Aquisition.SetUp(PRace.Mode)
      language: CSharp
      name:
        CSharp: SetUp(Mode)
        VB: SetUp(Mode)
      nameWithType:
        CSharp: Aquisition.SetUp(Mode)
        VB: Aquisition.SetUp(Mode)
      qualifiedName:
        CSharp: AquitisionCommunication.Aquisition.SetUp(PRace.Mode)
        VB: AquitisionCommunication.Aquisition.SetUp(PRace.Mode)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: AquitisionCommunication
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Aquisition.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: SetUp
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Aquisition.cs
        startLine: 22
      summary: "\n@param Mode mode\n"
      example: []
      syntax:
        content:
          CSharp: public void SetUp(Mode mode)
          VB: Public Sub SetUp(mode As Mode)
        parameters:
        - id: mode
          type: PRace.Mode
      overload: AquitisionCommunication.Aquisition.SetUp*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.Aquisition.change_Env(System.Single)
      commentId: M:AquitisionCommunication.Aquisition.change_Env(System.Single)
      language: CSharp
      name:
        CSharp: change_Env(Single)
        VB: change_Env(Single)
      nameWithType:
        CSharp: Aquisition.change_Env(Single)
        VB: Aquisition.change_Env(Single)
      qualifiedName:
        CSharp: AquitisionCommunication.Aquisition.change_Env(System.Single)
        VB: AquitisionCommunication.Aquisition.change_Env(System.Single)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: AquitisionCommunication
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Aquisition.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: change_Env
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Aquisition.cs
        startLine: 35
      summary: "\n@param float env\n"
      example: []
      syntax:
        content:
          CSharp: public void change_Env(float env)
          VB: Public Sub change_Env(env As Single)
        parameters:
        - id: env
          type: System.Single
      overload: AquitisionCommunication.Aquisition.change_Env*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.Aquisition.change_competitors(System.Single,System.Single,System.Single)
      commentId: M:AquitisionCommunication.Aquisition.change_competitors(System.Single,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: change_competitors(Single, Single, Single)
        VB: change_competitors(Single, Single, Single)
      nameWithType:
        CSharp: Aquisition.change_competitors(Single, Single, Single)
        VB: Aquisition.change_competitors(Single, Single, Single)
      qualifiedName:
        CSharp: AquitisionCommunication.Aquisition.change_competitors(System.Single, System.Single, System.Single)
        VB: AquitisionCommunication.Aquisition.change_competitors(System.Single, System.Single, System.Single)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: AquitisionCommunication
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Aquisition.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: change_competitors
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Aquisition.cs
        startLine: 44
      summary: "\n@param float id \n@param float latitude \n@param float longitude\n"
      example: []
      syntax:
        content:
          CSharp: public void change_competitors(float id, float longitude, float latitude)
          VB: Public Sub change_competitors(id As Single, longitude As Single, latitude As Single)
        parameters:
        - id: id
          type: System.Single
        - id: longitude
          type: System.Single
        - id: latitude
          type: System.Single
      overload: AquitisionCommunication.Aquisition.change_competitors*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.Aquisition.sentPosition(System.Int32,System.Double,System.Double)
      commentId: M:AquitisionCommunication.Aquisition.sentPosition(System.Int32,System.Double,System.Double)
      language: CSharp
      name:
        CSharp: sentPosition(Int32, Double, Double)
        VB: sentPosition(Int32, Double, Double)
      nameWithType:
        CSharp: Aquisition.sentPosition(Int32, Double, Double)
        VB: Aquisition.sentPosition(Int32, Double, Double)
      qualifiedName:
        CSharp: AquitisionCommunication.Aquisition.sentPosition(System.Int32, System.Double, System.Double)
        VB: AquitisionCommunication.Aquisition.sentPosition(System.Int32, System.Double, System.Double)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: AquitisionCommunication
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Aquisition.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: sentPosition
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Aquisition.cs
        startLine: 53
      summary: "\n@param int id \n@param float latitude \n@param float longitude\n"
      example: []
      syntax:
        content:
          CSharp: public void sentPosition(int id, double latitude, double longitude)
          VB: Public Sub sentPosition(id As Integer, latitude As Double, longitude As Double)
        parameters:
        - id: id
          type: System.Int32
        - id: latitude
          type: System.Double
        - id: longitude
          type: System.Double
      overload: AquitisionCommunication.Aquisition.sentPosition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AquitisionCommunication.AquisitionFichierSaveRace
    commentId: T:AquitisionCommunication.AquisitionFichierSaveRace
    language: CSharp
    name:
      CSharp: AquisitionFichierSaveRace
      VB: AquisitionFichierSaveRace
    nameWithType:
      CSharp: AquisitionFichierSaveRace
      VB: AquisitionFichierSaveRace
    qualifiedName:
      CSharp: AquitisionCommunication.AquisitionFichierSaveRace
      VB: AquitisionCommunication.AquisitionFichierSaveRace
    type: Class
    assemblies:
    - SimpleSimulator
    namespace: AquitisionCommunication
    source:
      remote:
        path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/AquisitionFichier.cs
        branch: main
        repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
      id: AquisitionFichierSaveRace
      path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/AquisitionFichier.cs
      startLine: 9
    syntax:
      content:
        CSharp: public class AquisitionFichierSaveRace
        VB: Public Class AquisitionFichierSaveRace
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AquitisionCommunication.AquisitionFichierSaveRace.#ctor(System.String)
      commentId: M:AquitisionCommunication.AquisitionFichierSaveRace.#ctor(System.String)
      language: CSharp
      name:
        CSharp: AquisitionFichierSaveRace(String)
        VB: AquisitionFichierSaveRace(String)
      nameWithType:
        CSharp: AquisitionFichierSaveRace.AquisitionFichierSaveRace(String)
        VB: AquisitionFichierSaveRace.AquisitionFichierSaveRace(String)
      qualifiedName:
        CSharp: AquitisionCommunication.AquisitionFichierSaveRace.AquisitionFichierSaveRace(System.String)
        VB: AquitisionCommunication.AquisitionFichierSaveRace.AquisitionFichierSaveRace(System.String)
      type: Constructor
      assemblies:
      - SimpleSimulator
      namespace: AquitisionCommunication
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/AquisitionFichier.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: .ctor
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/AquisitionFichier.cs
        startLine: 12
      syntax:
        content:
          CSharp: public AquisitionFichierSaveRace(string filePath)
          VB: Public Sub New(filePath As String)
        parameters:
        - id: filePath
          type: System.String
      overload: AquitisionCommunication.AquisitionFichierSaveRace.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AquitisionCommunication.AquisitionPolaire
    commentId: T:AquitisionCommunication.AquisitionPolaire
    language: CSharp
    name:
      CSharp: AquisitionPolaire
      VB: AquisitionPolaire
    nameWithType:
      CSharp: AquisitionPolaire
      VB: AquisitionPolaire
    qualifiedName:
      CSharp: AquitisionCommunication.AquisitionPolaire
      VB: AquitisionCommunication.AquisitionPolaire
    type: Class
    assemblies:
    - SimpleSimulator
    namespace: AquitisionCommunication
    source:
      remote:
        path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/AquisitionPolaire.cs
        branch: main
        repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
      id: AquisitionPolaire
      path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/AquisitionPolaire.cs
      startLine: 8
    syntax:
      content:
        CSharp: public class AquisitionPolaire
        VB: Public Class AquisitionPolaire
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AquitisionCommunication.AquisitionPolaire.#ctor
      commentId: M:AquitisionCommunication.AquisitionPolaire.#ctor
      language: CSharp
      name:
        CSharp: AquisitionPolaire()
        VB: AquisitionPolaire()
      nameWithType:
        CSharp: AquisitionPolaire.AquisitionPolaire()
        VB: AquisitionPolaire.AquisitionPolaire()
      qualifiedName:
        CSharp: AquitisionCommunication.AquisitionPolaire.AquisitionPolaire()
        VB: AquitisionCommunication.AquisitionPolaire.AquisitionPolaire()
      type: Constructor
      assemblies:
      - SimpleSimulator
      namespace: AquitisionCommunication
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/AquisitionPolaire.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: .ctor
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/AquisitionPolaire.cs
        startLine: 10
      syntax:
        content:
          CSharp: public AquisitionPolaire()
          VB: Public Sub New
      overload: AquitisionCommunication.AquisitionPolaire.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.AquisitionPolaire.ReadPolaire(System.String)
      commentId: M:AquitisionCommunication.AquisitionPolaire.ReadPolaire(System.String)
      language: CSharp
      name:
        CSharp: ReadPolaire(String)
        VB: ReadPolaire(String)
      nameWithType:
        CSharp: AquisitionPolaire.ReadPolaire(String)
        VB: AquisitionPolaire.ReadPolaire(String)
      qualifiedName:
        CSharp: AquitisionCommunication.AquisitionPolaire.ReadPolaire(System.String)
        VB: AquitisionCommunication.AquisitionPolaire.ReadPolaire(System.String)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: AquitisionCommunication
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/AquisitionPolaire.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: ReadPolaire
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/AquisitionPolaire.cs
        startLine: 15
      syntax:
        content:
          CSharp: public Dictionary<float, Dictionary<float, float>> ReadPolaire(string filePath)
          VB: Public Function ReadPolaire(filePath As String) As Dictionary(Of Single, Dictionary(Of Single, Single))
        parameters:
        - id: filePath
          type: System.String
        return:
          type: System.Collections.Generic.Dictionary{System.Single,System.Collections.Generic.Dictionary{System.Single,System.Single}}
      overload: AquitisionCommunication.AquisitionPolaire.ReadPolaire*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.AquisitionPolaire.ReadMultiplePolaire(System.Collections.Generic.List{System.String})
      commentId: M:AquitisionCommunication.AquisitionPolaire.ReadMultiplePolaire(System.Collections.Generic.List{System.String})
      language: CSharp
      name:
        CSharp: ReadMultiplePolaire(List<String>)
        VB: ReadMultiplePolaire(List(Of String))
      nameWithType:
        CSharp: AquisitionPolaire.ReadMultiplePolaire(List<String>)
        VB: AquisitionPolaire.ReadMultiplePolaire(List(Of String))
      qualifiedName:
        CSharp: AquitisionCommunication.AquisitionPolaire.ReadMultiplePolaire(System.Collections.Generic.List<System.String>)
        VB: AquitisionCommunication.AquisitionPolaire.ReadMultiplePolaire(System.Collections.Generic.List(Of System.String))
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: AquitisionCommunication
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/AquisitionPolaire.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: ReadMultiplePolaire
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/AquisitionPolaire.cs
        startLine: 46
      syntax:
        content:
          CSharp: public List<Dictionary<float, Dictionary<float, float>>> ReadMultiplePolaire(List<string> ListFilePath)
          VB: Public Function ReadMultiplePolaire(ListFilePath As List(Of String)) As List(Of Dictionary(Of Single, Dictionary(Of Single, Single)))
        parameters:
        - id: ListFilePath
          type: System.Collections.Generic.List{System.String}
        return:
          type: System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.Single,System.Collections.Generic.Dictionary{System.Single,System.Single}}}
      overload: AquitisionCommunication.AquisitionPolaire.ReadMultiplePolaire*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AquitisionCommunication.RaceSave
    commentId: T:AquitisionCommunication.RaceSave
    language: CSharp
    name:
      CSharp: RaceSave
      VB: RaceSave
    nameWithType:
      CSharp: RaceSave
      VB: RaceSave
    qualifiedName:
      CSharp: AquitisionCommunication.RaceSave
      VB: AquitisionCommunication.RaceSave
    type: Class
    assemblies:
    - SimpleSimulator
    namespace: AquitisionCommunication
    source:
      remote:
        path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/RaceSave.cs
        branch: main
        repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
      id: RaceSave
      path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/RaceSave.cs
      startLine: 10
    syntax:
      content:
        CSharp: public class RaceSave
        VB: Public Class RaceSave
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AquitisionCommunication.RaceSave.#ctor(System.String)
      commentId: M:AquitisionCommunication.RaceSave.#ctor(System.String)
      language: CSharp
      name:
        CSharp: RaceSave(String)
        VB: RaceSave(String)
      nameWithType:
        CSharp: RaceSave.RaceSave(String)
        VB: RaceSave.RaceSave(String)
      qualifiedName:
        CSharp: AquitisionCommunication.RaceSave.RaceSave(System.String)
        VB: AquitisionCommunication.RaceSave.RaceSave(System.String)
      type: Constructor
      assemblies:
      - SimpleSimulator
      namespace: AquitisionCommunication
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/RaceSave.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: .ctor
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/RaceSave.cs
        startLine: 13
      syntax:
        content:
          CSharp: public RaceSave(string filePath)
          VB: Public Sub New(filePath As String)
        parameters:
        - id: filePath
          type: System.String
      overload: AquitisionCommunication.RaceSave.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.RaceSave.GetJsonRace
      commentId: M:AquitisionCommunication.RaceSave.GetJsonRace
      language: CSharp
      name:
        CSharp: GetJsonRace()
        VB: GetJsonRace()
      nameWithType:
        CSharp: RaceSave.GetJsonRace()
        VB: RaceSave.GetJsonRace()
      qualifiedName:
        CSharp: AquitisionCommunication.RaceSave.GetJsonRace()
        VB: AquitisionCommunication.RaceSave.GetJsonRace()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: AquitisionCommunication
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/RaceSave.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetJsonRace
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/RaceSave.cs
        startLine: 48
      syntax:
        content:
          CSharp: public RaceSave.JsonRace GetJsonRace()
          VB: Public Function GetJsonRace As RaceSave.JsonRace
        return:
          type: AquitisionCommunication.RaceSave.JsonRace
      overload: AquitisionCommunication.RaceSave.GetJsonRace*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.RaceSave.Update(PRace.Race)
      commentId: M:AquitisionCommunication.RaceSave.Update(PRace.Race)
      language: CSharp
      name:
        CSharp: Update(Race)
        VB: Update(Race)
      nameWithType:
        CSharp: RaceSave.Update(Race)
        VB: RaceSave.Update(Race)
      qualifiedName:
        CSharp: AquitisionCommunication.RaceSave.Update(PRace.Race)
        VB: AquitisionCommunication.RaceSave.Update(PRace.Race)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: AquitisionCommunication
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/RaceSave.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Update
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/RaceSave.cs
        startLine: 53
      syntax:
        content:
          CSharp: public void Update(Race race)
          VB: Public Sub Update(race As Race)
        parameters:
        - id: race
          type: PRace.Race
      overload: AquitisionCommunication.RaceSave.Update*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.RaceSave.loadfile
      commentId: M:AquitisionCommunication.RaceSave.loadfile
      language: CSharp
      name:
        CSharp: loadfile()
        VB: loadfile()
      nameWithType:
        CSharp: RaceSave.loadfile()
        VB: RaceSave.loadfile()
      qualifiedName:
        CSharp: AquitisionCommunication.RaceSave.loadfile()
        VB: AquitisionCommunication.RaceSave.loadfile()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: AquitisionCommunication
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/RaceSave.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: loadfile
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/RaceSave.cs
        startLine: 74
      syntax:
        content:
          CSharp: public RaceSave.JsonRace loadfile()
          VB: Public Function loadfile As RaceSave.JsonRace
        return:
          type: AquitisionCommunication.RaceSave.JsonRace
      overload: AquitisionCommunication.RaceSave.loadfile*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.RaceSave.savefile
      commentId: M:AquitisionCommunication.RaceSave.savefile
      language: CSharp
      name:
        CSharp: savefile()
        VB: savefile()
      nameWithType:
        CSharp: RaceSave.savefile()
        VB: RaceSave.savefile()
      qualifiedName:
        CSharp: AquitisionCommunication.RaceSave.savefile()
        VB: AquitisionCommunication.RaceSave.savefile()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: AquitisionCommunication
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/RaceSave.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: savefile
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/RaceSave.cs
        startLine: 84
      syntax:
        content:
          CSharp: public void savefile()
          VB: Public Sub savefile
      overload: AquitisionCommunication.RaceSave.savefile*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AquitisionCommunication.RaceSave.JsonRace
    commentId: T:AquitisionCommunication.RaceSave.JsonRace
    language: CSharp
    name:
      CSharp: RaceSave.JsonRace
      VB: RaceSave.JsonRace
    nameWithType:
      CSharp: RaceSave.JsonRace
      VB: RaceSave.JsonRace
    qualifiedName:
      CSharp: AquitisionCommunication.RaceSave.JsonRace
      VB: AquitisionCommunication.RaceSave.JsonRace
    type: Class
    assemblies:
    - SimpleSimulator
    namespace: AquitisionCommunication
    source:
      remote:
        path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/RaceSave.cs
        branch: main
        repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
      id: JsonRace
      path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/RaceSave.cs
      startLine: 23
    syntax:
      content:
        CSharp: public class JsonRace
        VB: Public Class JsonRace
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AquitisionCommunication.RaceSave.JsonRace.#ctor
      commentId: M:AquitisionCommunication.RaceSave.JsonRace.#ctor
      language: CSharp
      name:
        CSharp: JsonRace()
        VB: JsonRace()
      nameWithType:
        CSharp: RaceSave.JsonRace.JsonRace()
        VB: RaceSave.JsonRace.JsonRace()
      qualifiedName:
        CSharp: AquitisionCommunication.RaceSave.JsonRace.JsonRace()
        VB: AquitisionCommunication.RaceSave.JsonRace.JsonRace()
      type: Constructor
      assemblies:
      - SimpleSimulator
      namespace: AquitisionCommunication
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/RaceSave.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: .ctor
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/RaceSave.cs
        startLine: 25
      syntax:
        content:
          CSharp: public JsonRace()
          VB: Public Sub New
      overload: AquitisionCommunication.RaceSave.JsonRace.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.RaceSave.JsonRace.RaceId
      commentId: F:AquitisionCommunication.RaceSave.JsonRace.RaceId
      language: CSharp
      name:
        CSharp: RaceId
        VB: RaceId
      nameWithType:
        CSharp: RaceSave.JsonRace.RaceId
        VB: RaceSave.JsonRace.RaceId
      qualifiedName:
        CSharp: AquitisionCommunication.RaceSave.JsonRace.RaceId
        VB: AquitisionCommunication.RaceSave.JsonRace.RaceId
      type: Field
      assemblies:
      - SimpleSimulator
      namespace: AquitisionCommunication
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/RaceSave.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: RaceId
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/RaceSave.cs
        startLine: 28
      syntax:
        content:
          CSharp: public int RaceId
          VB: Public RaceId As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.RaceSave.JsonRace.RaceTime
      commentId: F:AquitisionCommunication.RaceSave.JsonRace.RaceTime
      language: CSharp
      name:
        CSharp: RaceTime
        VB: RaceTime
      nameWithType:
        CSharp: RaceSave.JsonRace.RaceTime
        VB: RaceSave.JsonRace.RaceTime
      qualifiedName:
        CSharp: AquitisionCommunication.RaceSave.JsonRace.RaceTime
        VB: AquitisionCommunication.RaceSave.JsonRace.RaceTime
      type: Field
      assemblies:
      - SimpleSimulator
      namespace: AquitisionCommunication
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/RaceSave.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: RaceTime
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/RaceSave.cs
        startLine: 29
      syntax:
        content:
          CSharp: public DateTime RaceTime
          VB: Public RaceTime As Date
        return:
          type: System.DateTime
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.RaceSave.JsonRace.wayPointFile
      commentId: F:AquitisionCommunication.RaceSave.JsonRace.wayPointFile
      language: CSharp
      name:
        CSharp: wayPointFile
        VB: wayPointFile
      nameWithType:
        CSharp: RaceSave.JsonRace.wayPointFile
        VB: RaceSave.JsonRace.wayPointFile
      qualifiedName:
        CSharp: AquitisionCommunication.RaceSave.JsonRace.wayPointFile
        VB: AquitisionCommunication.RaceSave.JsonRace.wayPointFile
      type: Field
      assemblies:
      - SimpleSimulator
      namespace: AquitisionCommunication
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/RaceSave.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: wayPointFile
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/RaceSave.cs
        startLine: 30
      syntax:
        content:
          CSharp: public string wayPointFile
          VB: Public wayPointFile As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.RaceSave.JsonRace.currentPol
      commentId: F:AquitisionCommunication.RaceSave.JsonRace.currentPol
      language: CSharp
      name:
        CSharp: currentPol
        VB: currentPol
      nameWithType:
        CSharp: RaceSave.JsonRace.currentPol
        VB: RaceSave.JsonRace.currentPol
      qualifiedName:
        CSharp: AquitisionCommunication.RaceSave.JsonRace.currentPol
        VB: AquitisionCommunication.RaceSave.JsonRace.currentPol
      type: Field
      assemblies:
      - SimpleSimulator
      namespace: AquitisionCommunication
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/RaceSave.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: currentPol
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/RaceSave.cs
        startLine: 31
      syntax:
        content:
          CSharp: public string currentPol
          VB: Public currentPol As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.RaceSave.JsonRace.polFiles
      commentId: F:AquitisionCommunication.RaceSave.JsonRace.polFiles
      language: CSharp
      name:
        CSharp: polFiles
        VB: polFiles
      nameWithType:
        CSharp: RaceSave.JsonRace.polFiles
        VB: RaceSave.JsonRace.polFiles
      qualifiedName:
        CSharp: AquitisionCommunication.RaceSave.JsonRace.polFiles
        VB: AquitisionCommunication.RaceSave.JsonRace.polFiles
      type: Field
      assemblies:
      - SimpleSimulator
      namespace: AquitisionCommunication
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/RaceSave.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: polFiles
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/RaceSave.cs
        startLine: 32
      syntax:
        content:
          CSharp: public List<string> polFiles
          VB: Public polFiles As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.RaceSave.JsonRace.BoatId
      commentId: F:AquitisionCommunication.RaceSave.JsonRace.BoatId
      language: CSharp
      name:
        CSharp: BoatId
        VB: BoatId
      nameWithType:
        CSharp: RaceSave.JsonRace.BoatId
        VB: RaceSave.JsonRace.BoatId
      qualifiedName:
        CSharp: AquitisionCommunication.RaceSave.JsonRace.BoatId
        VB: AquitisionCommunication.RaceSave.JsonRace.BoatId
      type: Field
      assemblies:
      - SimpleSimulator
      namespace: AquitisionCommunication
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/RaceSave.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: BoatId
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/RaceSave.cs
        startLine: 33
      syntax:
        content:
          CSharp: public int BoatId
          VB: Public BoatId As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.RaceSave.JsonRace.BoatCap
      commentId: F:AquitisionCommunication.RaceSave.JsonRace.BoatCap
      language: CSharp
      name:
        CSharp: BoatCap
        VB: BoatCap
      nameWithType:
        CSharp: RaceSave.JsonRace.BoatCap
        VB: RaceSave.JsonRace.BoatCap
      qualifiedName:
        CSharp: AquitisionCommunication.RaceSave.JsonRace.BoatCap
        VB: AquitisionCommunication.RaceSave.JsonRace.BoatCap
      type: Field
      assemblies:
      - SimpleSimulator
      namespace: AquitisionCommunication
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/RaceSave.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: BoatCap
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/RaceSave.cs
        startLine: 34
      syntax:
        content:
          CSharp: public float BoatCap
          VB: Public BoatCap As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.RaceSave.JsonRace.longitude
      commentId: F:AquitisionCommunication.RaceSave.JsonRace.longitude
      language: CSharp
      name:
        CSharp: longitude
        VB: longitude
      nameWithType:
        CSharp: RaceSave.JsonRace.longitude
        VB: RaceSave.JsonRace.longitude
      qualifiedName:
        CSharp: AquitisionCommunication.RaceSave.JsonRace.longitude
        VB: AquitisionCommunication.RaceSave.JsonRace.longitude
      type: Field
      assemblies:
      - SimpleSimulator
      namespace: AquitisionCommunication
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/RaceSave.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: longitude
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/RaceSave.cs
        startLine: 35
      syntax:
        content:
          CSharp: public double longitude
          VB: Public longitude As Double
        return:
          type: System.Double
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.RaceSave.JsonRace.latitude
      commentId: F:AquitisionCommunication.RaceSave.JsonRace.latitude
      language: CSharp
      name:
        CSharp: latitude
        VB: latitude
      nameWithType:
        CSharp: RaceSave.JsonRace.latitude
        VB: RaceSave.JsonRace.latitude
      qualifiedName:
        CSharp: AquitisionCommunication.RaceSave.JsonRace.latitude
        VB: AquitisionCommunication.RaceSave.JsonRace.latitude
      type: Field
      assemblies:
      - SimpleSimulator
      namespace: AquitisionCommunication
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/RaceSave.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: latitude
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/RaceSave.cs
        startLine: 36
      syntax:
        content:
          CSharp: public double latitude
          VB: Public latitude As Double
        return:
          type: System.Double
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.RaceSave.JsonRace.accelerationFactor
      commentId: F:AquitisionCommunication.RaceSave.JsonRace.accelerationFactor
      language: CSharp
      name:
        CSharp: accelerationFactor
        VB: accelerationFactor
      nameWithType:
        CSharp: RaceSave.JsonRace.accelerationFactor
        VB: RaceSave.JsonRace.accelerationFactor
      qualifiedName:
        CSharp: AquitisionCommunication.RaceSave.JsonRace.accelerationFactor
        VB: AquitisionCommunication.RaceSave.JsonRace.accelerationFactor
      type: Field
      assemblies:
      - SimpleSimulator
      namespace: AquitisionCommunication
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/RaceSave.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: accelerationFactor
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/RaceSave.cs
        startLine: 37
      syntax:
        content:
          CSharp: public float accelerationFactor
          VB: Public accelerationFactor As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.RaceSave.JsonRace.Equals(System.Object)
      commentId: M:AquitisionCommunication.RaceSave.JsonRace.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: RaceSave.JsonRace.Equals(Object)
        VB: RaceSave.JsonRace.Equals(Object)
      qualifiedName:
        CSharp: AquitisionCommunication.RaceSave.JsonRace.Equals(System.Object)
        VB: AquitisionCommunication.RaceSave.JsonRace.Equals(System.Object)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: AquitisionCommunication
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/RaceSave.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Equals
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/RaceSave.cs
        startLine: 40
      syntax:
        content:
          CSharp: public bool Equals(object o)
          VB: Public Function Equals(o As Object) As Boolean
        parameters:
        - id: o
          type: System.Object
        return:
          type: System.Boolean
      overload: AquitisionCommunication.RaceSave.JsonRace.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AquitisionCommunication.Sauvegarde
    commentId: T:AquitisionCommunication.Sauvegarde
    language: CSharp
    name:
      CSharp: Sauvegarde
      VB: Sauvegarde
    nameWithType:
      CSharp: Sauvegarde
      VB: Sauvegarde
    qualifiedName:
      CSharp: AquitisionCommunication.Sauvegarde
      VB: AquitisionCommunication.Sauvegarde
    type: Class
    assemblies:
    - SimpleSimulator
    namespace: AquitisionCommunication
    source:
      remote:
        path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Sauvegarde.cs
        branch: main
        repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
      id: Sauvegarde
      path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Sauvegarde.cs
      startLine: 7
    syntax:
      content:
        CSharp: public class Sauvegarde
        VB: Public Class Sauvegarde
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AquitisionCommunication.Sauvegarde.#ctor
      commentId: M:AquitisionCommunication.Sauvegarde.#ctor
      language: CSharp
      name:
        CSharp: Sauvegarde()
        VB: Sauvegarde()
      nameWithType:
        CSharp: Sauvegarde.Sauvegarde()
        VB: Sauvegarde.Sauvegarde()
      qualifiedName:
        CSharp: AquitisionCommunication.Sauvegarde.Sauvegarde()
        VB: AquitisionCommunication.Sauvegarde.Sauvegarde()
      type: Constructor
      assemblies:
      - SimpleSimulator
      namespace: AquitisionCommunication
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Sauvegarde.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: .ctor
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Sauvegarde.cs
        startLine: 9
      syntax:
        content:
          CSharp: public Sauvegarde()
          VB: Public Sub New
      overload: AquitisionCommunication.Sauvegarde.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.Sauvegarde.Id
      commentId: F:AquitisionCommunication.Sauvegarde.Id
      language: CSharp
      name:
        CSharp: Id
        VB: Id
      nameWithType:
        CSharp: Sauvegarde.Id
        VB: Sauvegarde.Id
      qualifiedName:
        CSharp: AquitisionCommunication.Sauvegarde.Id
        VB: AquitisionCommunication.Sauvegarde.Id
      type: Field
      assemblies:
      - SimpleSimulator
      namespace: AquitisionCommunication
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Sauvegarde.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Id
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Sauvegarde.cs
        startLine: 13
      syntax:
        content:
          CSharp: public int Id
          VB: Public Id As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.Sauvegarde.InstantT
      commentId: F:AquitisionCommunication.Sauvegarde.InstantT
      language: CSharp
      name:
        CSharp: InstantT
        VB: InstantT
      nameWithType:
        CSharp: Sauvegarde.InstantT
        VB: Sauvegarde.InstantT
      qualifiedName:
        CSharp: AquitisionCommunication.Sauvegarde.InstantT
        VB: AquitisionCommunication.Sauvegarde.InstantT
      type: Field
      assemblies:
      - SimpleSimulator
      namespace: AquitisionCommunication
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Sauvegarde.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: InstantT
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Sauvegarde.cs
        startLine: 15
      syntax:
        content:
          CSharp: public DateTime InstantT
          VB: Public InstantT As Date
        return:
          type: System.DateTime
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.Sauvegarde.fichierGpx
      commentId: F:AquitisionCommunication.Sauvegarde.fichierGpx
      language: CSharp
      name:
        CSharp: fichierGpx
        VB: fichierGpx
      nameWithType:
        CSharp: Sauvegarde.fichierGpx
        VB: Sauvegarde.fichierGpx
      qualifiedName:
        CSharp: AquitisionCommunication.Sauvegarde.fichierGpx
        VB: AquitisionCommunication.Sauvegarde.fichierGpx
      type: Field
      assemblies:
      - SimpleSimulator
      namespace: AquitisionCommunication
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Sauvegarde.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: fichierGpx
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Sauvegarde.cs
        startLine: 17
      syntax:
        content:
          CSharp: public string fichierGpx
          VB: Public fichierGpx As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: SimpleSimulator.AquitisionCommunication.Trame
  commentId: N:SimpleSimulator.AquitisionCommunication.Trame
  language: CSharp
  name:
    CSharp: SimpleSimulator.AquitisionCommunication.Trame
    VB: SimpleSimulator.AquitisionCommunication.Trame
  nameWithType:
    CSharp: SimpleSimulator.AquitisionCommunication.Trame
    VB: SimpleSimulator.AquitisionCommunication.Trame
  qualifiedName:
    CSharp: SimpleSimulator.AquitisionCommunication.Trame
    VB: SimpleSimulator.AquitisionCommunication.Trame
  type: Namespace
  assemblies:
  - SimpleSimulator
  modifiers: {}
  items:
  - id: SimpleSimulator.AquitisionCommunication.Trame.Sender
    commentId: T:SimpleSimulator.AquitisionCommunication.Trame.Sender
    language: CSharp
    name:
      CSharp: Sender
      VB: Sender
    nameWithType:
      CSharp: Sender
      VB: Sender
    qualifiedName:
      CSharp: SimpleSimulator.AquitisionCommunication.Trame.Sender
      VB: SimpleSimulator.AquitisionCommunication.Trame.Sender
    type: Class
    assemblies:
    - SimpleSimulator
    namespace: SimpleSimulator.AquitisionCommunication.Trame
    source:
      remote:
        path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/Sender.cs
        branch: main
        repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
      id: Sender
      path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/Sender.cs
      startLine: 9
    syntax:
      content:
        CSharp: public class Sender
        VB: Public Class Sender
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SimpleSimulator.AquitisionCommunication.Trame.Sender.udpClient
      commentId: F:SimpleSimulator.AquitisionCommunication.Trame.Sender.udpClient
      language: CSharp
      name:
        CSharp: udpClient
        VB: udpClient
      nameWithType:
        CSharp: Sender.udpClient
        VB: Sender.udpClient
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.Sender.udpClient
        VB: SimpleSimulator.AquitisionCommunication.Trame.Sender.udpClient
      type: Field
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/Sender.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: udpClient
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/Sender.cs
        startLine: 11
      syntax:
        content:
          CSharp: public UdpClient udpClient
          VB: Public udpClient As UdpClient
        return:
          type: System.Net.Sockets.UdpClient
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.Sender.Send(SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA,System.String,System.Int32)
      commentId: M:SimpleSimulator.AquitisionCommunication.Trame.Sender.Send(SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA,System.String,System.Int32)
      language: CSharp
      name:
        CSharp: Send(TrameNMEA, String, Int32)
        VB: Send(TrameNMEA, String, Int32)
      nameWithType:
        CSharp: Sender.Send(TrameNMEA, String, Int32)
        VB: Sender.Send(TrameNMEA, String, Int32)
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.Sender.Send(SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA, System.String, System.Int32)
        VB: SimpleSimulator.AquitisionCommunication.Trame.Sender.Send(SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA, System.String, System.Int32)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/Sender.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Send
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/Sender.cs
        startLine: 12
      syntax:
        content:
          CSharp: public void Send(TrameNMEA trame, string ip, int port)
          VB: Public Sub Send(trame As TrameNMEA, ip As String, port As Integer)
        parameters:
        - id: trame
          type: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA
        - id: ip
          type: System.String
        - id: port
          type: System.Int32
      overload: SimpleSimulator.AquitisionCommunication.Trame.Sender.Send*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV
    commentId: T:SimpleSimulator.AquitisionCommunication.Trame.TrameMWV
    language: CSharp
    name:
      CSharp: TrameMWV
      VB: TrameMWV
    nameWithType:
      CSharp: TrameMWV
      VB: TrameMWV
    qualifiedName:
      CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV
      VB: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV
    type: Class
    assemblies:
    - SimpleSimulator
    namespace: SimpleSimulator.AquitisionCommunication.Trame
    source:
      remote:
        path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameMWV.cs
        branch: main
        repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
      id: TrameMWV
      path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameMWV.cs
      startLine: 19
    syntax:
      content:
        CSharp: public class TrameMWV
        VB: Public Class TrameMWV
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.TrameType
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.TrameType
      language: CSharp
      name:
        CSharp: TrameType
        VB: TrameType
      nameWithType:
        CSharp: TrameMWV.TrameType
        VB: TrameMWV.TrameType
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.TrameType
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.TrameType
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameMWV.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: TrameType
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameMWV.cs
        startLine: 21
      syntax:
        content:
          CSharp: public string TrameType { get; set; }
          VB: Public Property TrameType As String
        parameters: []
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.TrameType*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.AngleVent
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.AngleVent
      language: CSharp
      name:
        CSharp: AngleVent
        VB: AngleVent
      nameWithType:
        CSharp: TrameMWV.AngleVent
        VB: TrameMWV.AngleVent
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.AngleVent
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.AngleVent
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameMWV.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: AngleVent
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameMWV.cs
        startLine: 22
      syntax:
        content:
          CSharp: public float AngleVent { get; set; }
          VB: Public Property AngleVent As Single
        parameters: []
        return:
          type: System.Single
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.AngleVent*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Reference
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Reference
      language: CSharp
      name:
        CSharp: Reference
        VB: Reference
      nameWithType:
        CSharp: TrameMWV.Reference
        VB: TrameMWV.Reference
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Reference
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Reference
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameMWV.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Reference
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameMWV.cs
        startLine: 23
      syntax:
        content:
          CSharp: public char Reference { get; set; }
          VB: Public Property Reference As Char
        parameters: []
        return:
          type: System.Char
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Reference*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.VitesseVent
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.VitesseVent
      language: CSharp
      name:
        CSharp: VitesseVent
        VB: VitesseVent
      nameWithType:
        CSharp: TrameMWV.VitesseVent
        VB: TrameMWV.VitesseVent
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.VitesseVent
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.VitesseVent
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameMWV.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: VitesseVent
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameMWV.cs
        startLine: 24
      syntax:
        content:
          CSharp: public float VitesseVent { get; set; }
          VB: Public Property VitesseVent As Single
        parameters: []
        return:
          type: System.Single
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.VitesseVent*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Unite
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Unite
      language: CSharp
      name:
        CSharp: Unite
        VB: Unite
      nameWithType:
        CSharp: TrameMWV.Unite
        VB: TrameMWV.Unite
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Unite
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Unite
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameMWV.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Unite
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameMWV.cs
        startLine: 25
      syntax:
        content:
          CSharp: public char Unite { get; set; }
          VB: Public Property Unite As Char
        parameters: []
        return:
          type: System.Char
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Unite*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Etat
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Etat
      language: CSharp
      name:
        CSharp: Etat
        VB: Etat
      nameWithType:
        CSharp: TrameMWV.Etat
        VB: TrameMWV.Etat
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Etat
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Etat
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameMWV.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Etat
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameMWV.cs
        startLine: 26
      syntax:
        content:
          CSharp: public string Etat { get; set; }
          VB: Public Property Etat As String
        parameters: []
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Etat*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Controle
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Controle
      language: CSharp
      name:
        CSharp: Controle
        VB: Controle
      nameWithType:
        CSharp: TrameMWV.Controle
        VB: TrameMWV.Controle
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Controle
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Controle
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameMWV.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Controle
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameMWV.cs
        startLine: 27
      syntax:
        content:
          CSharp: public string Controle { get; set; }
          VB: Public Property Controle As String
        parameters: []
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Controle*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Checksum(System.String)
      commentId: M:SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Checksum(System.String)
      language: CSharp
      name:
        CSharp: Checksum(String)
        VB: Checksum(String)
      nameWithType:
        CSharp: TrameMWV.Checksum(String)
        VB: TrameMWV.Checksum(String)
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Checksum(System.String)
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Checksum(System.String)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameMWV.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Checksum
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameMWV.cs
        startLine: 29
      syntax:
        content:
          CSharp: public string Checksum(string trame)
          VB: Public Function Checksum(trame As String) As String
        parameters:
        - id: trame
          type: System.String
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Checksum*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.ToString
      commentId: M:SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: TrameMWV.ToString()
        VB: TrameMWV.ToString()
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.ToString()
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.ToString()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameMWV.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: ToString
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameMWV.cs
        startLine: 39
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.ToString*
      overridden: System.Object.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA
    commentId: T:SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA
    language: CSharp
    name:
      CSharp: TrameNMEA
      VB: TrameNMEA
    nameWithType:
      CSharp: TrameNMEA
      VB: TrameNMEA
    qualifiedName:
      CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA
      VB: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA
    type: Class
    assemblies:
    - SimpleSimulator
    namespace: SimpleSimulator.AquitisionCommunication.Trame
    source:
      remote:
        path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameNMEA.cs
        branch: main
        repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
      id: TrameNMEA
      path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameNMEA.cs
      startLine: 8
    syntax:
      content:
        CSharp: public class TrameNMEA
        VB: Public Class TrameNMEA
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA.ToString
      commentId: M:SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: TrameNMEA.ToString()
        VB: TrameNMEA.ToString()
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA.ToString()
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA.ToString()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameNMEA.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: ToString
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameNMEA.cs
        startLine: 19
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA.ToString*
      overridden: System.Object.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC
    commentId: T:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC
    language: CSharp
    name:
      CSharp: TrameRMC
      VB: TrameRMC
    nameWithType:
      CSharp: TrameRMC
      VB: TrameRMC
    qualifiedName:
      CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC
      VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC
    type: Class
    assemblies:
    - SimpleSimulator
    namespace: SimpleSimulator.AquitisionCommunication.Trame
    source:
      remote:
        path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRMC.cs
        branch: main
        repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
      id: TrameRMC
      path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRMC.cs
      startLine: 11
    syntax:
      content:
        CSharp: public class TrameRMC
        VB: Public Class TrameRMC
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.TrameType
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.TrameType
      language: CSharp
      name:
        CSharp: TrameType
        VB: TrameType
      nameWithType:
        CSharp: TrameRMC.TrameType
        VB: TrameRMC.TrameType
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.TrameType
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.TrameType
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRMC.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: TrameType
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRMC.cs
        startLine: 13
      syntax:
        content:
          CSharp: public string TrameType { get; set; }
          VB: Public Property TrameType As String
        parameters: []
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.TrameType*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Heure
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Heure
      language: CSharp
      name:
        CSharp: Heure
        VB: Heure
      nameWithType:
        CSharp: TrameRMC.Heure
        VB: TrameRMC.Heure
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Heure
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Heure
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRMC.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Heure
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRMC.cs
        startLine: 14
      syntax:
        content:
          CSharp: public DateTime Heure { get; set; }
          VB: Public Property Heure As Date
        parameters: []
        return:
          type: System.DateTime
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Heure*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Etat
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Etat
      language: CSharp
      name:
        CSharp: Etat
        VB: Etat
      nameWithType:
        CSharp: TrameRMC.Etat
        VB: TrameRMC.Etat
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Etat
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Etat
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRMC.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Etat
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRMC.cs
        startLine: 15
      syntax:
        content:
          CSharp: public string Etat { get; set; }
          VB: Public Property Etat As String
        parameters: []
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Etat*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Latitude
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Latitude
      language: CSharp
      name:
        CSharp: Latitude
        VB: Latitude
      nameWithType:
        CSharp: TrameRMC.Latitude
        VB: TrameRMC.Latitude
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Latitude
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Latitude
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRMC.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Latitude
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRMC.cs
        startLine: 16
      syntax:
        content:
          CSharp: public float Latitude { get; set; }
          VB: Public Property Latitude As Single
        parameters: []
        return:
          type: System.Single
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Latitude*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLatitude
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLatitude
      language: CSharp
      name:
        CSharp: IndicateurLatitude
        VB: IndicateurLatitude
      nameWithType:
        CSharp: TrameRMC.IndicateurLatitude
        VB: TrameRMC.IndicateurLatitude
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLatitude
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLatitude
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRMC.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: IndicateurLatitude
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRMC.cs
        startLine: 17
      syntax:
        content:
          CSharp: public char IndicateurLatitude { get; set; }
          VB: Public Property IndicateurLatitude As Char
        parameters: []
        return:
          type: System.Char
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLatitude*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Longitude
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Longitude
      language: CSharp
      name:
        CSharp: Longitude
        VB: Longitude
      nameWithType:
        CSharp: TrameRMC.Longitude
        VB: TrameRMC.Longitude
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Longitude
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Longitude
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRMC.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Longitude
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRMC.cs
        startLine: 18
      syntax:
        content:
          CSharp: public float Longitude { get; set; }
          VB: Public Property Longitude As Single
        parameters: []
        return:
          type: System.Single
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Longitude*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLongitude
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLongitude
      language: CSharp
      name:
        CSharp: IndicateurLongitude
        VB: IndicateurLongitude
      nameWithType:
        CSharp: TrameRMC.IndicateurLongitude
        VB: TrameRMC.IndicateurLongitude
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLongitude
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLongitude
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRMC.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: IndicateurLongitude
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRMC.cs
        startLine: 19
      syntax:
        content:
          CSharp: public char IndicateurLongitude { get; set; }
          VB: Public Property IndicateurLongitude As Char
        parameters: []
        return:
          type: System.Char
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLongitude*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Vitesse
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Vitesse
      language: CSharp
      name:
        CSharp: Vitesse
        VB: Vitesse
      nameWithType:
        CSharp: TrameRMC.Vitesse
        VB: TrameRMC.Vitesse
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Vitesse
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Vitesse
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRMC.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Vitesse
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRMC.cs
        startLine: 20
      syntax:
        content:
          CSharp: public float Vitesse { get; set; }
          VB: Public Property Vitesse As Single
        parameters: []
        return:
          type: System.Single
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Vitesse*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Road
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Road
      language: CSharp
      name:
        CSharp: Road
        VB: Road
      nameWithType:
        CSharp: TrameRMC.Road
        VB: TrameRMC.Road
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Road
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Road
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRMC.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Road
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRMC.cs
        startLine: 21
      syntax:
        content:
          CSharp: public float Road { get; set; }
          VB: Public Property Road As Single
        parameters: []
        return:
          type: System.Single
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Road*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Date
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Date
      language: CSharp
      name:
        CSharp: Date
        VB: Date
      nameWithType:
        CSharp: TrameRMC.Date
        VB: TrameRMC.Date
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Date
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Date
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRMC.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Date
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRMC.cs
        startLine: 22
      syntax:
        content:
          CSharp: public DateTime Date { get; set; }
          VB: Public Property Date As Date
        parameters: []
        return:
          type: System.DateTime
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Date*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Magneto
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Magneto
      language: CSharp
      name:
        CSharp: Magneto
        VB: Magneto
      nameWithType:
        CSharp: TrameRMC.Magneto
        VB: TrameRMC.Magneto
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Magneto
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Magneto
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRMC.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Magneto
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRMC.cs
        startLine: 23
      syntax:
        content:
          CSharp: public float Magneto { get; set; }
          VB: Public Property Magneto As Single
        parameters: []
        return:
          type: System.Single
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Magneto*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Sens
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Sens
      language: CSharp
      name:
        CSharp: Sens
        VB: Sens
      nameWithType:
        CSharp: TrameRMC.Sens
        VB: TrameRMC.Sens
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Sens
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Sens
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRMC.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Sens
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRMC.cs
        startLine: 24
      syntax:
        content:
          CSharp: public char Sens { get; set; }
          VB: Public Property Sens As Char
        parameters: []
        return:
          type: System.Char
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Sens*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Mode
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Mode
      language: CSharp
      name:
        CSharp: Mode
        VB: Mode
      nameWithType:
        CSharp: TrameRMC.Mode
        VB: TrameRMC.Mode
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Mode
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Mode
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRMC.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Mode
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRMC.cs
        startLine: 25
      syntax:
        content:
          CSharp: public char Mode { get; set; }
          VB: Public Property Mode As Char
        parameters: []
        return:
          type: System.Char
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Mode*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Controle
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Controle
      language: CSharp
      name:
        CSharp: Controle
        VB: Controle
      nameWithType:
        CSharp: TrameRMC.Controle
        VB: TrameRMC.Controle
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Controle
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Controle
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRMC.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Controle
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRMC.cs
        startLine: 26
      syntax:
        content:
          CSharp: public string Controle { get; set; }
          VB: Public Property Controle As String
        parameters: []
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Controle*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeHeure(System.DateTime)
      commentId: M:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeHeure(System.DateTime)
      language: CSharp
      name:
        CSharp: NormalizeHeure(DateTime)
        VB: NormalizeHeure(DateTime)
      nameWithType:
        CSharp: TrameRMC.NormalizeHeure(DateTime)
        VB: TrameRMC.NormalizeHeure(DateTime)
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeHeure(System.DateTime)
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeHeure(System.DateTime)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRMC.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: NormalizeHeure
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRMC.cs
        startLine: 27
      syntax:
        content:
          CSharp: public string NormalizeHeure(DateTime date)
          VB: Public Function NormalizeHeure(date As Date) As String
        parameters:
        - id: date
          type: System.DateTime
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeHeure*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeDate(System.DateTime)
      commentId: M:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeDate(System.DateTime)
      language: CSharp
      name:
        CSharp: NormalizeDate(DateTime)
        VB: NormalizeDate(DateTime)
      nameWithType:
        CSharp: TrameRMC.NormalizeDate(DateTime)
        VB: TrameRMC.NormalizeDate(DateTime)
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeDate(System.DateTime)
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeDate(System.DateTime)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRMC.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: NormalizeDate
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRMC.cs
        startLine: 32
      syntax:
        content:
          CSharp: public string NormalizeDate(DateTime date)
          VB: Public Function NormalizeDate(date As Date) As String
        parameters:
        - id: date
          type: System.DateTime
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeDate*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Checksum(System.String)
      commentId: M:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Checksum(System.String)
      language: CSharp
      name:
        CSharp: Checksum(String)
        VB: Checksum(String)
      nameWithType:
        CSharp: TrameRMC.Checksum(String)
        VB: TrameRMC.Checksum(String)
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Checksum(System.String)
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Checksum(System.String)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRMC.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Checksum
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRMC.cs
        startLine: 38
      syntax:
        content:
          CSharp: public string Checksum(string trame)
          VB: Public Function Checksum(trame As String) As String
        parameters:
        - id: trame
          type: System.String
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Checksum*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.ToString
      commentId: M:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: TrameRMC.ToString()
        VB: TrameRMC.ToString()
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.ToString()
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.ToString()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRMC.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: ToString
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRMC.cs
        startLine: 48
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.ToString*
      overridden: System.Object.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA
    commentId: T:SimpleSimulator.AquitisionCommunication.Trame.TrameRSA
    language: CSharp
    name:
      CSharp: TrameRSA
      VB: TrameRSA
    nameWithType:
      CSharp: TrameRSA
      VB: TrameRSA
    qualifiedName:
      CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA
      VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA
    type: Class
    assemblies:
    - SimpleSimulator
    namespace: SimpleSimulator.AquitisionCommunication.Trame
    source:
      remote:
        path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRSA.cs
        branch: main
        repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
      id: TrameRSA
      path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRSA.cs
      startLine: 18
    syntax:
      content:
        CSharp: public class TrameRSA
        VB: Public Class TrameRSA
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.TrameType
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.TrameType
      language: CSharp
      name:
        CSharp: TrameType
        VB: TrameType
      nameWithType:
        CSharp: TrameRSA.TrameType
        VB: TrameRSA.TrameType
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.TrameType
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.TrameType
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRSA.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: TrameType
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRSA.cs
        startLine: 20
      syntax:
        content:
          CSharp: public string TrameType { get; set; }
          VB: Public Property TrameType As String
        parameters: []
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.TrameType*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreT
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreT
      language: CSharp
      name:
        CSharp: BarreT
        VB: BarreT
      nameWithType:
        CSharp: TrameRSA.BarreT
        VB: TrameRSA.BarreT
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreT
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreT
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRSA.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: BarreT
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRSA.cs
        startLine: 22
      syntax:
        content:
          CSharp: public float BarreT { get; set; }
          VB: Public Property BarreT As Single
        parameters: []
        return:
          type: System.Single
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreT*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatT
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatT
      language: CSharp
      name:
        CSharp: EtatT
        VB: EtatT
      nameWithType:
        CSharp: TrameRSA.EtatT
        VB: TrameRSA.EtatT
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatT
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatT
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRSA.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: EtatT
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRSA.cs
        startLine: 23
      syntax:
        content:
          CSharp: public string EtatT { get; set; }
          VB: Public Property EtatT As String
        parameters: []
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatT*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreB
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreB
      language: CSharp
      name:
        CSharp: BarreB
        VB: BarreB
      nameWithType:
        CSharp: TrameRSA.BarreB
        VB: TrameRSA.BarreB
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreB
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreB
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRSA.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: BarreB
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRSA.cs
        startLine: 24
      syntax:
        content:
          CSharp: public float BarreB { get; set; }
          VB: Public Property BarreB As Single
        parameters: []
        return:
          type: System.Single
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreB*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatB
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatB
      language: CSharp
      name:
        CSharp: EtatB
        VB: EtatB
      nameWithType:
        CSharp: TrameRSA.EtatB
        VB: TrameRSA.EtatB
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatB
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatB
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRSA.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: EtatB
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRSA.cs
        startLine: 25
      syntax:
        content:
          CSharp: public string EtatB { get; set; }
          VB: Public Property EtatB As String
        parameters: []
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatB*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Controle
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Controle
      language: CSharp
      name:
        CSharp: Controle
        VB: Controle
      nameWithType:
        CSharp: TrameRSA.Controle
        VB: TrameRSA.Controle
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Controle
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Controle
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRSA.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Controle
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRSA.cs
        startLine: 26
      syntax:
        content:
          CSharp: public string Controle { get; set; }
          VB: Public Property Controle As String
        parameters: []
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Controle*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Checksum(System.String)
      commentId: M:SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Checksum(System.String)
      language: CSharp
      name:
        CSharp: Checksum(String)
        VB: Checksum(String)
      nameWithType:
        CSharp: TrameRSA.Checksum(String)
        VB: TrameRSA.Checksum(String)
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Checksum(System.String)
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Checksum(System.String)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRSA.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Checksum
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRSA.cs
        startLine: 27
      syntax:
        content:
          CSharp: public string Checksum(string trame)
          VB: Public Function Checksum(trame As String) As String
        parameters:
        - id: trame
          type: System.String
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Checksum*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.ToString
      commentId: M:SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: TrameRSA.ToString()
        VB: TrameRSA.ToString()
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.ToString()
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.ToString()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRSA.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: ToString
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameRSA.cs
        startLine: 37
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.ToString*
      overridden: System.Object.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM
    commentId: T:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM
    language: CSharp
    name:
      CSharp: TrameVDM
      VB: TrameVDM
    nameWithType:
      CSharp: TrameVDM
      VB: TrameVDM
    qualifiedName:
      CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM
      VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM
    type: Class
    assemblies:
    - SimpleSimulator
    namespace: SimpleSimulator.AquitisionCommunication.Trame
    source:
      remote:
        path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVDM.cs
        branch: main
        repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
      id: TrameVDM
      path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVDM.cs
      startLine: 21
    syntax:
      content:
        CSharp: public class TrameVDM
        VB: Public Class TrameVDM
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.TrameType
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.TrameType
      language: CSharp
      name:
        CSharp: TrameType
        VB: TrameType
      nameWithType:
        CSharp: TrameVDM.TrameType
        VB: TrameVDM.TrameType
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.TrameType
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.TrameType
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVDM.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: TrameType
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVDM.cs
        startLine: 23
      syntax:
        content:
          CSharp: public string TrameType { get; set; }
          VB: Public Property TrameType As String
        parameters: []
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.TrameType*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Heure
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Heure
      language: CSharp
      name:
        CSharp: Heure
        VB: Heure
      nameWithType:
        CSharp: TrameVDM.Heure
        VB: TrameVDM.Heure
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Heure
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Heure
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVDM.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Heure
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVDM.cs
        startLine: 24
      syntax:
        content:
          CSharp: public DateTime Heure { get; set; }
          VB: Public Property Heure As Date
        parameters: []
        return:
          type: System.DateTime
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Heure*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Etat
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Etat
      language: CSharp
      name:
        CSharp: Etat
        VB: Etat
      nameWithType:
        CSharp: TrameVDM.Etat
        VB: TrameVDM.Etat
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Etat
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Etat
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVDM.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Etat
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVDM.cs
        startLine: 25
      syntax:
        content:
          CSharp: public string Etat { get; set; }
          VB: Public Property Etat As String
        parameters: []
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Etat*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Latitude
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Latitude
      language: CSharp
      name:
        CSharp: Latitude
        VB: Latitude
      nameWithType:
        CSharp: TrameVDM.Latitude
        VB: TrameVDM.Latitude
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Latitude
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Latitude
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVDM.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Latitude
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVDM.cs
        startLine: 26
      syntax:
        content:
          CSharp: public float Latitude { get; set; }
          VB: Public Property Latitude As Single
        parameters: []
        return:
          type: System.Single
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Latitude*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLatitude
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLatitude
      language: CSharp
      name:
        CSharp: IndicateurLatitude
        VB: IndicateurLatitude
      nameWithType:
        CSharp: TrameVDM.IndicateurLatitude
        VB: TrameVDM.IndicateurLatitude
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLatitude
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLatitude
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVDM.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: IndicateurLatitude
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVDM.cs
        startLine: 27
      syntax:
        content:
          CSharp: public char IndicateurLatitude { get; set; }
          VB: Public Property IndicateurLatitude As Char
        parameters: []
        return:
          type: System.Char
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLatitude*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Longitude
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Longitude
      language: CSharp
      name:
        CSharp: Longitude
        VB: Longitude
      nameWithType:
        CSharp: TrameVDM.Longitude
        VB: TrameVDM.Longitude
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Longitude
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Longitude
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVDM.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Longitude
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVDM.cs
        startLine: 28
      syntax:
        content:
          CSharp: public float Longitude { get; set; }
          VB: Public Property Longitude As Single
        parameters: []
        return:
          type: System.Single
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Longitude*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLongitude
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLongitude
      language: CSharp
      name:
        CSharp: IndicateurLongitude
        VB: IndicateurLongitude
      nameWithType:
        CSharp: TrameVDM.IndicateurLongitude
        VB: TrameVDM.IndicateurLongitude
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLongitude
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLongitude
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVDM.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: IndicateurLongitude
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVDM.cs
        startLine: 29
      syntax:
        content:
          CSharp: public char IndicateurLongitude { get; set; }
          VB: Public Property IndicateurLongitude As Char
        parameters: []
        return:
          type: System.Char
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLongitude*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Vitesse
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Vitesse
      language: CSharp
      name:
        CSharp: Vitesse
        VB: Vitesse
      nameWithType:
        CSharp: TrameVDM.Vitesse
        VB: TrameVDM.Vitesse
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Vitesse
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Vitesse
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVDM.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Vitesse
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVDM.cs
        startLine: 30
      syntax:
        content:
          CSharp: public float Vitesse { get; set; }
          VB: Public Property Vitesse As Single
        parameters: []
        return:
          type: System.Single
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Vitesse*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Road
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Road
      language: CSharp
      name:
        CSharp: Road
        VB: Road
      nameWithType:
        CSharp: TrameVDM.Road
        VB: TrameVDM.Road
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Road
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Road
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVDM.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Road
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVDM.cs
        startLine: 31
      syntax:
        content:
          CSharp: public float Road { get; set; }
          VB: Public Property Road As Single
        parameters: []
        return:
          type: System.Single
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Road*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Date
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Date
      language: CSharp
      name:
        CSharp: Date
        VB: Date
      nameWithType:
        CSharp: TrameVDM.Date
        VB: TrameVDM.Date
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Date
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Date
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVDM.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Date
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVDM.cs
        startLine: 32
      syntax:
        content:
          CSharp: public DateTime Date { get; set; }
          VB: Public Property Date As Date
        parameters: []
        return:
          type: System.DateTime
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Date*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Magneto
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Magneto
      language: CSharp
      name:
        CSharp: Magneto
        VB: Magneto
      nameWithType:
        CSharp: TrameVDM.Magneto
        VB: TrameVDM.Magneto
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Magneto
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Magneto
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVDM.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Magneto
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVDM.cs
        startLine: 33
      syntax:
        content:
          CSharp: public float Magneto { get; set; }
          VB: Public Property Magneto As Single
        parameters: []
        return:
          type: System.Single
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Magneto*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Sens
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Sens
      language: CSharp
      name:
        CSharp: Sens
        VB: Sens
      nameWithType:
        CSharp: TrameVDM.Sens
        VB: TrameVDM.Sens
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Sens
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Sens
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVDM.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Sens
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVDM.cs
        startLine: 34
      syntax:
        content:
          CSharp: public char Sens { get; set; }
          VB: Public Property Sens As Char
        parameters: []
        return:
          type: System.Char
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Sens*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Mode
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Mode
      language: CSharp
      name:
        CSharp: Mode
        VB: Mode
      nameWithType:
        CSharp: TrameVDM.Mode
        VB: TrameVDM.Mode
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Mode
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Mode
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVDM.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Mode
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVDM.cs
        startLine: 35
      syntax:
        content:
          CSharp: public char Mode { get; set; }
          VB: Public Property Mode As Char
        parameters: []
        return:
          type: System.Char
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Mode*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Controle
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Controle
      language: CSharp
      name:
        CSharp: Controle
        VB: Controle
      nameWithType:
        CSharp: TrameVDM.Controle
        VB: TrameVDM.Controle
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Controle
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Controle
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVDM.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Controle
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVDM.cs
        startLine: 36
      syntax:
        content:
          CSharp: public string Controle { get; set; }
          VB: Public Property Controle As String
        parameters: []
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Controle*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeHeure(System.DateTime)
      commentId: M:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeHeure(System.DateTime)
      language: CSharp
      name:
        CSharp: NormalizeHeure(DateTime)
        VB: NormalizeHeure(DateTime)
      nameWithType:
        CSharp: TrameVDM.NormalizeHeure(DateTime)
        VB: TrameVDM.NormalizeHeure(DateTime)
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeHeure(System.DateTime)
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeHeure(System.DateTime)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVDM.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: NormalizeHeure
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVDM.cs
        startLine: 38
      syntax:
        content:
          CSharp: public string NormalizeHeure(DateTime date)
          VB: Public Function NormalizeHeure(date As Date) As String
        parameters:
        - id: date
          type: System.DateTime
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeHeure*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeDate(System.DateTime)
      commentId: M:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeDate(System.DateTime)
      language: CSharp
      name:
        CSharp: NormalizeDate(DateTime)
        VB: NormalizeDate(DateTime)
      nameWithType:
        CSharp: TrameVDM.NormalizeDate(DateTime)
        VB: TrameVDM.NormalizeDate(DateTime)
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeDate(System.DateTime)
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeDate(System.DateTime)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVDM.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: NormalizeDate
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVDM.cs
        startLine: 43
      syntax:
        content:
          CSharp: public string NormalizeDate(DateTime date)
          VB: Public Function NormalizeDate(date As Date) As String
        parameters:
        - id: date
          type: System.DateTime
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeDate*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Checksum(System.String)
      commentId: M:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Checksum(System.String)
      language: CSharp
      name:
        CSharp: Checksum(String)
        VB: Checksum(String)
      nameWithType:
        CSharp: TrameVDM.Checksum(String)
        VB: TrameVDM.Checksum(String)
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Checksum(System.String)
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Checksum(System.String)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVDM.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Checksum
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVDM.cs
        startLine: 48
      syntax:
        content:
          CSharp: public string Checksum(string trame)
          VB: Public Function Checksum(trame As String) As String
        parameters:
        - id: trame
          type: System.String
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Checksum*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.ToString
      commentId: M:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: TrameVDM.ToString()
        VB: TrameVDM.ToString()
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.ToString()
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.ToString()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVDM.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: ToString
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVDM.cs
        startLine: 58
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.ToString*
      overridden: System.Object.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW
    commentId: T:SimpleSimulator.AquitisionCommunication.Trame.TrameVHW
    language: CSharp
    name:
      CSharp: TrameVHW
      VB: TrameVHW
    nameWithType:
      CSharp: TrameVHW
      VB: TrameVHW
    qualifiedName:
      CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW
      VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW
    type: Class
    assemblies:
    - SimpleSimulator
    namespace: SimpleSimulator.AquitisionCommunication.Trame
    source:
      remote:
        path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVHW.cs
        branch: main
        repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
      id: TrameVHW
      path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVHW.cs
      startLine: 24
    syntax:
      content:
        CSharp: public class TrameVHW
        VB: Public Class TrameVHW
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.TrameType
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.TrameType
      language: CSharp
      name:
        CSharp: TrameType
        VB: TrameType
      nameWithType:
        CSharp: TrameVHW.TrameType
        VB: TrameVHW.TrameType
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.TrameType
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.TrameType
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVHW.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: TrameType
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVHW.cs
        startLine: 26
      syntax:
        content:
          CSharp: public string TrameType { get; set; }
          VB: Public Property TrameType As String
        parameters: []
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.TrameType*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapDegres
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapDegres
      language: CSharp
      name:
        CSharp: CapDegres
        VB: CapDegres
      nameWithType:
        CSharp: TrameVHW.CapDegres
        VB: TrameVHW.CapDegres
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapDegres
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapDegres
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVHW.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: CapDegres
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVHW.cs
        startLine: 28
      syntax:
        content:
          CSharp: public float CapDegres { get; set; }
          VB: Public Property CapDegres As Single
        parameters: []
        return:
          type: System.Single
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapDegres*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapMagne
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapMagne
      language: CSharp
      name:
        CSharp: CapMagne
        VB: CapMagne
      nameWithType:
        CSharp: TrameVHW.CapMagne
        VB: TrameVHW.CapMagne
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapMagne
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapMagne
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVHW.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: CapMagne
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVHW.cs
        startLine: 29
      syntax:
        content:
          CSharp: public float CapMagne { get; set; }
          VB: Public Property CapMagne As Single
        parameters: []
        return:
          type: System.Single
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapMagne*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauNoeud
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauNoeud
      language: CSharp
      name:
        CSharp: VitBateauNoeud
        VB: VitBateauNoeud
      nameWithType:
        CSharp: TrameVHW.VitBateauNoeud
        VB: TrameVHW.VitBateauNoeud
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauNoeud
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauNoeud
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVHW.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: VitBateauNoeud
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVHW.cs
        startLine: 30
      syntax:
        content:
          CSharp: public float VitBateauNoeud { get; set; }
          VB: Public Property VitBateauNoeud As Single
        parameters: []
        return:
          type: System.Single
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauNoeud*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauKm
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauKm
      language: CSharp
      name:
        CSharp: VitBateauKm
        VB: VitBateauKm
      nameWithType:
        CSharp: TrameVHW.VitBateauKm
        VB: TrameVHW.VitBateauKm
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauKm
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauKm
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVHW.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: VitBateauKm
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVHW.cs
        startLine: 31
      syntax:
        content:
          CSharp: public float VitBateauKm { get; set; }
          VB: Public Property VitBateauKm As Single
        parameters: []
        return:
          type: System.Single
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauKm*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Controle
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Controle
      language: CSharp
      name:
        CSharp: Controle
        VB: Controle
      nameWithType:
        CSharp: TrameVHW.Controle
        VB: TrameVHW.Controle
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Controle
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Controle
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVHW.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Controle
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVHW.cs
        startLine: 32
      syntax:
        content:
          CSharp: public string Controle { get; set; }
          VB: Public Property Controle As String
        parameters: []
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Controle*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Checksum(System.String)
      commentId: M:SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Checksum(System.String)
      language: CSharp
      name:
        CSharp: Checksum(String)
        VB: Checksum(String)
      nameWithType:
        CSharp: TrameVHW.Checksum(String)
        VB: TrameVHW.Checksum(String)
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Checksum(System.String)
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Checksum(System.String)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVHW.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Checksum
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVHW.cs
        startLine: 34
      syntax:
        content:
          CSharp: public string Checksum(string trame)
          VB: Public Function Checksum(trame As String) As String
        parameters:
        - id: trame
          type: System.String
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Checksum*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.ToString
      commentId: M:SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: TrameVHW.ToString()
        VB: TrameVHW.ToString()
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.ToString()
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.ToString()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVHW.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: ToString
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameVHW.cs
        startLine: 44
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.ToString*
      overridden: System.Object.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR
    commentId: T:SimpleSimulator.AquitisionCommunication.Trame.TrameXDR
    language: CSharp
    name:
      CSharp: TrameXDR
      VB: TrameXDR
    nameWithType:
      CSharp: TrameXDR
      VB: TrameXDR
    qualifiedName:
      CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR
      VB: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR
    type: Class
    assemblies:
    - SimpleSimulator
    namespace: SimpleSimulator.AquitisionCommunication.Trame
    source:
      remote:
        path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameXDR.cs
        branch: main
        repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
      id: TrameXDR
      path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameXDR.cs
      startLine: 22
    syntax:
      content:
        CSharp: public class TrameXDR
        VB: Public Class TrameXDR
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.TrameType
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.TrameType
      language: CSharp
      name:
        CSharp: TrameType
        VB: TrameType
      nameWithType:
        CSharp: TrameXDR.TrameType
        VB: TrameXDR.TrameType
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.TrameType
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.TrameType
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameXDR.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: TrameType
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameXDR.cs
        startLine: 24
      syntax:
        content:
          CSharp: public string TrameType { get; set; }
          VB: Public Property TrameType As String
        parameters: []
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.TrameType*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.XDRSubs
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.XDRSubs
      language: CSharp
      name:
        CSharp: XDRSubs
        VB: XDRSubs
      nameWithType:
        CSharp: TrameXDR.XDRSubs
        VB: TrameXDR.XDRSubs
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.XDRSubs
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.XDRSubs
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameXDR.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: XDRSubs
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameXDR.cs
        startLine: 25
      syntax:
        content:
          CSharp: public List<XDRSub> XDRSubs { get; set; }
          VB: Public Property XDRSubs As List(Of XDRSub)
        parameters: []
        return:
          type: System.Collections.Generic.List{SimpleSimulator.AquitisionCommunication.Trame.XDRSub}
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.XDRSubs*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Controle
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Controle
      language: CSharp
      name:
        CSharp: Controle
        VB: Controle
      nameWithType:
        CSharp: TrameXDR.Controle
        VB: TrameXDR.Controle
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Controle
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Controle
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameXDR.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Controle
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameXDR.cs
        startLine: 26
      syntax:
        content:
          CSharp: public string Controle { get; set; }
          VB: Public Property Controle As String
        parameters: []
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Controle*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Checksum(System.String)
      commentId: M:SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Checksum(System.String)
      language: CSharp
      name:
        CSharp: Checksum(String)
        VB: Checksum(String)
      nameWithType:
        CSharp: TrameXDR.Checksum(String)
        VB: TrameXDR.Checksum(String)
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Checksum(System.String)
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Checksum(System.String)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameXDR.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Checksum
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameXDR.cs
        startLine: 28
      syntax:
        content:
          CSharp: public string Checksum(string trame)
          VB: Public Function Checksum(trame As String) As String
        parameters:
        - id: trame
          type: System.String
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Checksum*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.ToString
      commentId: M:SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: TrameXDR.ToString()
        VB: TrameXDR.ToString()
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.ToString()
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.ToString()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameXDR.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: ToString
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/TrameXDR.cs
        startLine: 38
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.ToString*
      overridden: System.Object.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: SimpleSimulator.AquitisionCommunication.Trame.XDRSub
    commentId: T:SimpleSimulator.AquitisionCommunication.Trame.XDRSub
    language: CSharp
    name:
      CSharp: XDRSub
      VB: XDRSub
    nameWithType:
      CSharp: XDRSub
      VB: XDRSub
    qualifiedName:
      CSharp: SimpleSimulator.AquitisionCommunication.Trame.XDRSub
      VB: SimpleSimulator.AquitisionCommunication.Trame.XDRSub
    type: Class
    assemblies:
    - SimpleSimulator
    namespace: SimpleSimulator.AquitisionCommunication.Trame
    source:
      remote:
        path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/XDRSub.cs
        branch: main
        repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
      id: XDRSub
      path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/XDRSub.cs
      startLine: 9
    syntax:
      content:
        CSharp: public class XDRSub
        VB: Public Class XDRSub
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerType
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerType
      language: CSharp
      name:
        CSharp: TransducerType
        VB: TransducerType
      nameWithType:
        CSharp: XDRSub.TransducerType
        VB: XDRSub.TransducerType
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerType
        VB: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerType
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/XDRSub.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: TransducerType
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/XDRSub.cs
        startLine: 11
      syntax:
        content:
          CSharp: public char TransducerType { get; set; }
          VB: Public Property TransducerType As Char
        parameters: []
        return:
          type: System.Char
      overload: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerType*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.MesurementData
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.XDRSub.MesurementData
      language: CSharp
      name:
        CSharp: MesurementData
        VB: MesurementData
      nameWithType:
        CSharp: XDRSub.MesurementData
        VB: XDRSub.MesurementData
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.MesurementData
        VB: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.MesurementData
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/XDRSub.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: MesurementData
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/XDRSub.cs
        startLine: 12
      syntax:
        content:
          CSharp: public float MesurementData { get; set; }
          VB: Public Property MesurementData As Single
        parameters: []
        return:
          type: System.Single
      overload: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.MesurementData*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.UnitsMeasure
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.XDRSub.UnitsMeasure
      language: CSharp
      name:
        CSharp: UnitsMeasure
        VB: UnitsMeasure
      nameWithType:
        CSharp: XDRSub.UnitsMeasure
        VB: XDRSub.UnitsMeasure
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.UnitsMeasure
        VB: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.UnitsMeasure
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/XDRSub.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: UnitsMeasure
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/XDRSub.cs
        startLine: 13
      syntax:
        content:
          CSharp: public string UnitsMeasure { get; set; }
          VB: Public Property UnitsMeasure As String
        parameters: []
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.UnitsMeasure*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerName
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerName
      language: CSharp
      name:
        CSharp: TransducerName
        VB: TransducerName
      nameWithType:
        CSharp: XDRSub.TransducerName
        VB: XDRSub.TransducerName
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerName
        VB: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerName
      type: Property
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/XDRSub.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: TransducerName
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/XDRSub.cs
        startLine: 14
      syntax:
        content:
          CSharp: public string TransducerName { get; set; }
          VB: Public Property TransducerName As String
        parameters: []
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerName*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.ToString
      commentId: M:SimpleSimulator.AquitisionCommunication.Trame.XDRSub.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: XDRSub.ToString()
        VB: XDRSub.ToString()
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.ToString()
        VB: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.ToString()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/XDRSub.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: ToString
        path: ../SimpleSimulator/SimpleSimulator/Model/AquitisionCommunication/Trame/XDRSub.cs
        startLine: 16
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.ToString*
      overridden: System.Object.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
- id: Model
  commentId: N:Model
  language: CSharp
  name:
    CSharp: Model
    VB: Model
  nameWithType:
    CSharp: Model
    VB: Model
  qualifiedName:
    CSharp: Model
    VB: Model
  type: Namespace
  assemblies:
  - SimpleSimulator
  modifiers: {}
  items:
  - id: Model.BoatInfo
    commentId: T:Model.BoatInfo
    language: CSharp
    name:
      CSharp: BoatInfo
      VB: BoatInfo
    nameWithType:
      CSharp: BoatInfo
      VB: BoatInfo
    qualifiedName:
      CSharp: Model.BoatInfo
      VB: Model.BoatInfo
    type: Enum
    assemblies:
    - SimpleSimulator
    namespace: Model
    source:
      remote:
        path: SimpleSimulator/SimpleSimulator/Model/BoatInfo.cs
        branch: main
        repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
      id: BoatInfo
      path: ../SimpleSimulator/SimpleSimulator/Model/BoatInfo.cs
      startLine: 8
    syntax:
      content:
        CSharp: public enum BoatInfo
        VB: Public Enum BoatInfo
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Model.BoatInfo.Longitude
      commentId: F:Model.BoatInfo.Longitude
      language: CSharp
      name:
        CSharp: Longitude
        VB: Longitude
      nameWithType:
        CSharp: BoatInfo.Longitude
        VB: BoatInfo.Longitude
      qualifiedName:
        CSharp: Model.BoatInfo.Longitude
        VB: Model.BoatInfo.Longitude
      type: Field
      assemblies:
      - SimpleSimulator
      namespace: Model
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/BoatInfo.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Longitude
        path: ../SimpleSimulator/SimpleSimulator/Model/BoatInfo.cs
        startLine: 10
      syntax:
        content:
          CSharp: Longitude = 0
          VB: Longitude = 0
        return:
          type: Model.BoatInfo
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Model.BoatInfo.Latitude
      commentId: F:Model.BoatInfo.Latitude
      language: CSharp
      name:
        CSharp: Latitude
        VB: Latitude
      nameWithType:
        CSharp: BoatInfo.Latitude
        VB: BoatInfo.Latitude
      qualifiedName:
        CSharp: Model.BoatInfo.Latitude
        VB: Model.BoatInfo.Latitude
      type: Field
      assemblies:
      - SimpleSimulator
      namespace: Model
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/BoatInfo.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Latitude
        path: ../SimpleSimulator/SimpleSimulator/Model/BoatInfo.cs
        startLine: 11
      syntax:
        content:
          CSharp: Latitude = 1
          VB: Latitude = 1
        return:
          type: Model.BoatInfo
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Model.BoatInfo.Cap
      commentId: F:Model.BoatInfo.Cap
      language: CSharp
      name:
        CSharp: Cap
        VB: Cap
      nameWithType:
        CSharp: BoatInfo.Cap
        VB: BoatInfo.Cap
      qualifiedName:
        CSharp: Model.BoatInfo.Cap
        VB: Model.BoatInfo.Cap
      type: Field
      assemblies:
      - SimpleSimulator
      namespace: Model
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/BoatInfo.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Cap
        path: ../SimpleSimulator/SimpleSimulator/Model/BoatInfo.cs
        startLine: 12
      syntax:
        content:
          CSharp: Cap = 2
          VB: Cap = 2
        return:
          type: Model.BoatInfo
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Model.BoatInfo.COG
      commentId: F:Model.BoatInfo.COG
      language: CSharp
      name:
        CSharp: COG
        VB: COG
      nameWithType:
        CSharp: BoatInfo.COG
        VB: BoatInfo.COG
      qualifiedName:
        CSharp: Model.BoatInfo.COG
        VB: Model.BoatInfo.COG
      type: Field
      assemblies:
      - SimpleSimulator
      namespace: Model
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/BoatInfo.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: COG
        path: ../SimpleSimulator/SimpleSimulator/Model/BoatInfo.cs
        startLine: 13
      syntax:
        content:
          CSharp: COG = 3
          VB: COG = 3
        return:
          type: Model.BoatInfo
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Model.BoatInfo.SOG
      commentId: F:Model.BoatInfo.SOG
      language: CSharp
      name:
        CSharp: SOG
        VB: SOG
      nameWithType:
        CSharp: BoatInfo.SOG
        VB: BoatInfo.SOG
      qualifiedName:
        CSharp: Model.BoatInfo.SOG
        VB: Model.BoatInfo.SOG
      type: Field
      assemblies:
      - SimpleSimulator
      namespace: Model
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/BoatInfo.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: SOG
        path: ../SimpleSimulator/SimpleSimulator/Model/BoatInfo.cs
        startLine: 14
      syntax:
        content:
          CSharp: SOG = 4
          VB: SOG = 4
        return:
          type: Model.BoatInfo
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Model.RaceModel
    commentId: T:Model.RaceModel
    language: CSharp
    name:
      CSharp: RaceModel
      VB: RaceModel
    nameWithType:
      CSharp: RaceModel
      VB: RaceModel
    qualifiedName:
      CSharp: Model.RaceModel
      VB: Model.RaceModel
    type: Class
    assemblies:
    - SimpleSimulator
    namespace: Model
    source:
      remote:
        path: SimpleSimulator/SimpleSimulator/Model/Model.cs
        branch: main
        repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
      id: RaceModel
      path: ../SimpleSimulator/SimpleSimulator/Model/Model.cs
      startLine: 6
    syntax:
      content:
        CSharp: public class RaceModel
        VB: Public Class RaceModel
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Model.RaceModel.#ctor
      commentId: M:Model.RaceModel.#ctor
      language: CSharp
      name:
        CSharp: RaceModel()
        VB: RaceModel()
      nameWithType:
        CSharp: RaceModel.RaceModel()
        VB: RaceModel.RaceModel()
      qualifiedName:
        CSharp: Model.RaceModel.RaceModel()
        VB: Model.RaceModel.RaceModel()
      type: Constructor
      assemblies:
      - SimpleSimulator
      namespace: Model
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Model.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: .ctor
        path: ../SimpleSimulator/SimpleSimulator/Model/Model.cs
        startLine: 8
      syntax:
        content:
          CSharp: public RaceModel()
          VB: Public Sub New
      overload: Model.RaceModel.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.RaceModel.#ctor(System.String)
      commentId: M:Model.RaceModel.#ctor(System.String)
      language: CSharp
      name:
        CSharp: RaceModel(String)
        VB: RaceModel(String)
      nameWithType:
        CSharp: RaceModel.RaceModel(String)
        VB: RaceModel.RaceModel(String)
      qualifiedName:
        CSharp: Model.RaceModel.RaceModel(System.String)
        VB: Model.RaceModel.RaceModel(System.String)
      type: Constructor
      assemblies:
      - SimpleSimulator
      namespace: Model
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Model.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: .ctor
        path: ../SimpleSimulator/SimpleSimulator/Model/Model.cs
        startLine: 22
      syntax:
        content:
          CSharp: public RaceModel(string path)
          VB: Public Sub New(path As String)
        parameters:
        - id: path
          type: System.String
      overload: Model.RaceModel.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.RaceModel.GetRace
      commentId: M:Model.RaceModel.GetRace
      language: CSharp
      name:
        CSharp: GetRace()
        VB: GetRace()
      nameWithType:
        CSharp: RaceModel.GetRace()
        VB: RaceModel.GetRace()
      qualifiedName:
        CSharp: Model.RaceModel.GetRace()
        VB: Model.RaceModel.GetRace()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: Model
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Model.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetRace
        path: ../SimpleSimulator/SimpleSimulator/Model/Model.cs
        startLine: 43
      syntax:
        content:
          CSharp: public Race GetRace()
          VB: Public Function GetRace As Race
        return:
          type: PRace.Race
      overload: Model.RaceModel.GetRace*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.RaceModel.AskMode
      commentId: M:Model.RaceModel.AskMode
      language: CSharp
      name:
        CSharp: AskMode()
        VB: AskMode()
      nameWithType:
        CSharp: RaceModel.AskMode()
        VB: RaceModel.AskMode()
      qualifiedName:
        CSharp: Model.RaceModel.AskMode()
        VB: Model.RaceModel.AskMode()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: Model
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Model.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: AskMode
        path: ../SimpleSimulator/SimpleSimulator/Model/Model.cs
        startLine: 48
      syntax:
        content:
          CSharp: public void AskMode()
          VB: Public Sub AskMode
      overload: Model.RaceModel.AskMode*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.RaceModel.AskForSavePath
      commentId: M:Model.RaceModel.AskForSavePath
      language: CSharp
      name:
        CSharp: AskForSavePath()
        VB: AskForSavePath()
      nameWithType:
        CSharp: RaceModel.AskForSavePath()
        VB: RaceModel.AskForSavePath()
      qualifiedName:
        CSharp: Model.RaceModel.AskForSavePath()
        VB: Model.RaceModel.AskForSavePath()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: Model
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Model.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: AskForSavePath
        path: ../SimpleSimulator/SimpleSimulator/Model/Model.cs
        startLine: 52
      syntax:
        content:
          CSharp: public void AskForSavePath()
          VB: Public Sub AskForSavePath
      overload: Model.RaceModel.AskForSavePath*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.RaceModel.Save
      commentId: M:Model.RaceModel.Save
      language: CSharp
      name:
        CSharp: Save()
        VB: Save()
      nameWithType:
        CSharp: RaceModel.Save()
        VB: RaceModel.Save()
      qualifiedName:
        CSharp: Model.RaceModel.Save()
        VB: Model.RaceModel.Save()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: Model
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Model.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Save
        path: ../SimpleSimulator/SimpleSimulator/Model/Model.cs
        startLine: 57
      syntax:
        content:
          CSharp: public void Save()
          VB: Public Sub Save
      overload: Model.RaceModel.Save*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.RaceModel.Run
      commentId: M:Model.RaceModel.Run
      language: CSharp
      name:
        CSharp: Run()
        VB: Run()
      nameWithType:
        CSharp: RaceModel.Run()
        VB: RaceModel.Run()
      qualifiedName:
        CSharp: Model.RaceModel.Run()
        VB: Model.RaceModel.Run()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: Model
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Model.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Run
        path: ../SimpleSimulator/SimpleSimulator/Model/Model.cs
        startLine: 73
      syntax:
        content:
          CSharp: public void Run()
          VB: Public Sub Run
      overload: Model.RaceModel.Run*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.RaceModel.Pause
      commentId: M:Model.RaceModel.Pause
      language: CSharp
      name:
        CSharp: Pause()
        VB: Pause()
      nameWithType:
        CSharp: RaceModel.Pause()
        VB: RaceModel.Pause()
      qualifiedName:
        CSharp: Model.RaceModel.Pause()
        VB: Model.RaceModel.Pause()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: Model
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Model.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Pause
        path: ../SimpleSimulator/SimpleSimulator/Model/Model.cs
        startLine: 78
      syntax:
        content:
          CSharp: public void Pause()
          VB: Public Sub Pause
      overload: Model.RaceModel.Pause*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.RaceModel.GetBoatStatus
      commentId: M:Model.RaceModel.GetBoatStatus
      language: CSharp
      name:
        CSharp: GetBoatStatus()
        VB: GetBoatStatus()
      nameWithType:
        CSharp: RaceModel.GetBoatStatus()
        VB: RaceModel.GetBoatStatus()
      qualifiedName:
        CSharp: Model.RaceModel.GetBoatStatus()
        VB: Model.RaceModel.GetBoatStatus()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: Model
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Model.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetBoatStatus
        path: ../SimpleSimulator/SimpleSimulator/Model/Model.cs
        startLine: 83
      syntax:
        content:
          CSharp: public Dictionary<BoatInfo, double> GetBoatStatus()
          VB: Public Function GetBoatStatus As Dictionary(Of BoatInfo, Double)
        return:
          type: Dictionary{Model.BoatInfo,System.Double}
      overload: Model.RaceModel.GetBoatStatus*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Environement
  commentId: N:Environement
  language: CSharp
  name:
    CSharp: Environement
    VB: Environement
  nameWithType:
    CSharp: Environement
    VB: Environement
  qualifiedName:
    CSharp: Environement
    VB: Environement
  type: Namespace
  assemblies:
  - SimpleSimulator
  modifiers: {}
  items:
  - id: Environement.Conditions
    commentId: T:Environement.Conditions
    language: CSharp
    name:
      CSharp: Conditions
      VB: Conditions
    nameWithType:
      CSharp: Conditions
      VB: Conditions
    qualifiedName:
      CSharp: Environement.Conditions
      VB: Environement.Conditions
    type: Enum
    assemblies:
    - SimpleSimulator
    namespace: Environement
    source:
      remote:
        path: SimpleSimulator/SimpleSimulator/Model/Environement/Conditions.cs
        branch: main
        repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
      id: Conditions
      path: ../SimpleSimulator/SimpleSimulator/Model/Environement/Conditions.cs
      startLine: 3
    syntax:
      content:
        CSharp: public enum Conditions
        VB: Public Enum Conditions
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Environement.Conditions.WindDirection
      commentId: F:Environement.Conditions.WindDirection
      language: CSharp
      name:
        CSharp: WindDirection
        VB: WindDirection
      nameWithType:
        CSharp: Conditions.WindDirection
        VB: Conditions.WindDirection
      qualifiedName:
        CSharp: Environement.Conditions.WindDirection
        VB: Environement.Conditions.WindDirection
      type: Field
      assemblies:
      - SimpleSimulator
      namespace: Environement
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Environement/Conditions.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: WindDirection
        path: ../SimpleSimulator/SimpleSimulator/Model/Environement/Conditions.cs
        startLine: 5
      syntax:
        content:
          CSharp: WindDirection = 0
          VB: WindDirection = 0
        return:
          type: Environement.Conditions
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Environement.Conditions.WindSpeed
      commentId: F:Environement.Conditions.WindSpeed
      language: CSharp
      name:
        CSharp: WindSpeed
        VB: WindSpeed
      nameWithType:
        CSharp: Conditions.WindSpeed
        VB: Conditions.WindSpeed
      qualifiedName:
        CSharp: Environement.Conditions.WindSpeed
        VB: Environement.Conditions.WindSpeed
      type: Field
      assemblies:
      - SimpleSimulator
      namespace: Environement
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Environement/Conditions.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: WindSpeed
        path: ../SimpleSimulator/SimpleSimulator/Model/Environement/Conditions.cs
        startLine: 6
      syntax:
        content:
          CSharp: WindSpeed = 1
          VB: WindSpeed = 1
        return:
          type: Environement.Conditions
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Environement.Conditions.CurrentDirection
      commentId: F:Environement.Conditions.CurrentDirection
      language: CSharp
      name:
        CSharp: CurrentDirection
        VB: CurrentDirection
      nameWithType:
        CSharp: Conditions.CurrentDirection
        VB: Conditions.CurrentDirection
      qualifiedName:
        CSharp: Environement.Conditions.CurrentDirection
        VB: Environement.Conditions.CurrentDirection
      type: Field
      assemblies:
      - SimpleSimulator
      namespace: Environement
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Environement/Conditions.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: CurrentDirection
        path: ../SimpleSimulator/SimpleSimulator/Model/Environement/Conditions.cs
        startLine: 7
      syntax:
        content:
          CSharp: CurrentDirection = 2
          VB: CurrentDirection = 2
        return:
          type: Environement.Conditions
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Environement.Conditions.CurrentSpeed
      commentId: F:Environement.Conditions.CurrentSpeed
      language: CSharp
      name:
        CSharp: CurrentSpeed
        VB: CurrentSpeed
      nameWithType:
        CSharp: Conditions.CurrentSpeed
        VB: Conditions.CurrentSpeed
      qualifiedName:
        CSharp: Environement.Conditions.CurrentSpeed
        VB: Environement.Conditions.CurrentSpeed
      type: Field
      assemblies:
      - SimpleSimulator
      namespace: Environement
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Environement/Conditions.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: CurrentSpeed
        path: ../SimpleSimulator/SimpleSimulator/Model/Environement/Conditions.cs
        startLine: 8
      syntax:
        content:
          CSharp: CurrentSpeed = 3
          VB: CurrentSpeed = 3
        return:
          type: Environement.Conditions
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Environement.Conditions.WaveDirection
      commentId: F:Environement.Conditions.WaveDirection
      language: CSharp
      name:
        CSharp: WaveDirection
        VB: WaveDirection
      nameWithType:
        CSharp: Conditions.WaveDirection
        VB: Conditions.WaveDirection
      qualifiedName:
        CSharp: Environement.Conditions.WaveDirection
        VB: Environement.Conditions.WaveDirection
      type: Field
      assemblies:
      - SimpleSimulator
      namespace: Environement
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Environement/Conditions.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: WaveDirection
        path: ../SimpleSimulator/SimpleSimulator/Model/Environement/Conditions.cs
        startLine: 9
      syntax:
        content:
          CSharp: WaveDirection = 4
          VB: WaveDirection = 4
        return:
          type: Environement.Conditions
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Environement.Conditions.WaveAmplitude
      commentId: F:Environement.Conditions.WaveAmplitude
      language: CSharp
      name:
        CSharp: WaveAmplitude
        VB: WaveAmplitude
      nameWithType:
        CSharp: Conditions.WaveAmplitude
        VB: Conditions.WaveAmplitude
      qualifiedName:
        CSharp: Environement.Conditions.WaveAmplitude
        VB: Environement.Conditions.WaveAmplitude
      type: Field
      assemblies:
      - SimpleSimulator
      namespace: Environement
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Environement/Conditions.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: WaveAmplitude
        path: ../SimpleSimulator/SimpleSimulator/Model/Environement/Conditions.cs
        startLine: 10
      syntax:
        content:
          CSharp: WaveAmplitude = 5
          VB: WaveAmplitude = 5
        return:
          type: Environement.Conditions
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Environement.Conditions.WaveLength
      commentId: F:Environement.Conditions.WaveLength
      language: CSharp
      name:
        CSharp: WaveLength
        VB: WaveLength
      nameWithType:
        CSharp: Conditions.WaveLength
        VB: Conditions.WaveLength
      qualifiedName:
        CSharp: Environement.Conditions.WaveLength
        VB: Environement.Conditions.WaveLength
      type: Field
      assemblies:
      - SimpleSimulator
      namespace: Environement
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Environement/Conditions.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: WaveLength
        path: ../SimpleSimulator/SimpleSimulator/Model/Environement/Conditions.cs
        startLine: 11
      syntax:
        content:
          CSharp: WaveLength = 6
          VB: WaveLength = 6
        return:
          type: Environement.Conditions
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Environement.Current
    commentId: T:Environement.Current
    language: CSharp
    name:
      CSharp: Current
      VB: Current
    nameWithType:
      CSharp: Current
      VB: Current
    qualifiedName:
      CSharp: Environement.Current
      VB: Environement.Current
    type: Class
    assemblies:
    - SimpleSimulator
    namespace: Environement
    source:
      remote:
        path: SimpleSimulator/SimpleSimulator/Model/Environement/Current.cs
        branch: main
        repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
      id: Current
      path: ../SimpleSimulator/SimpleSimulator/Model/Environement/Current.cs
      startLine: 7
    syntax:
      content:
        CSharp: public class Current
        VB: Public Class Current
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Environement.Current.#ctor
      commentId: M:Environement.Current.#ctor
      language: CSharp
      name:
        CSharp: Current()
        VB: Current()
      nameWithType:
        CSharp: Current.Current()
        VB: Current.Current()
      qualifiedName:
        CSharp: Environement.Current.Current()
        VB: Environement.Current.Current()
      type: Constructor
      assemblies:
      - SimpleSimulator
      namespace: Environement
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Environement/Current.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: .ctor
        path: ../SimpleSimulator/SimpleSimulator/Model/Environement/Current.cs
        startLine: 10
      syntax:
        content:
          CSharp: public Current()
          VB: Public Sub New
      overload: Environement.Current.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Current.Update(System.Single,System.Single)
      commentId: M:Environement.Current.Update(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: Update(Single, Single)
        VB: Update(Single, Single)
      nameWithType:
        CSharp: Current.Update(Single, Single)
        VB: Current.Update(Single, Single)
      qualifiedName:
        CSharp: Environement.Current.Update(System.Single, System.Single)
        VB: Environement.Current.Update(System.Single, System.Single)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: Environement
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Environement/Current.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Update
        path: ../SimpleSimulator/SimpleSimulator/Model/Environement/Current.cs
        startLine: 17
      syntax:
        content:
          CSharp: public void Update(float speed, float direction)
          VB: Public Sub Update(speed As Single, direction As Single)
        parameters:
        - id: speed
          type: System.Single
        - id: direction
          type: System.Single
      overload: Environement.Current.Update*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Current.SetCurrentSpeed(System.Single)
      commentId: M:Environement.Current.SetCurrentSpeed(System.Single)
      language: CSharp
      name:
        CSharp: SetCurrentSpeed(Single)
        VB: SetCurrentSpeed(Single)
      nameWithType:
        CSharp: Current.SetCurrentSpeed(Single)
        VB: Current.SetCurrentSpeed(Single)
      qualifiedName:
        CSharp: Environement.Current.SetCurrentSpeed(System.Single)
        VB: Environement.Current.SetCurrentSpeed(System.Single)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: Environement
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Environement/Current.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: SetCurrentSpeed
        path: ../SimpleSimulator/SimpleSimulator/Model/Environement/Current.cs
        startLine: 23
      syntax:
        content:
          CSharp: public void SetCurrentSpeed(float currentSpeed)
          VB: Public Sub SetCurrentSpeed(currentSpeed As Single)
        parameters:
        - id: currentSpeed
          type: System.Single
      overload: Environement.Current.SetCurrentSpeed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Current.SetCurrentDirection(System.Single)
      commentId: M:Environement.Current.SetCurrentDirection(System.Single)
      language: CSharp
      name:
        CSharp: SetCurrentDirection(Single)
        VB: SetCurrentDirection(Single)
      nameWithType:
        CSharp: Current.SetCurrentDirection(Single)
        VB: Current.SetCurrentDirection(Single)
      qualifiedName:
        CSharp: Environement.Current.SetCurrentDirection(System.Single)
        VB: Environement.Current.SetCurrentDirection(System.Single)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: Environement
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Environement/Current.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: SetCurrentDirection
        path: ../SimpleSimulator/SimpleSimulator/Model/Environement/Current.cs
        startLine: 28
      syntax:
        content:
          CSharp: public void SetCurrentDirection(float cd)
          VB: Public Sub SetCurrentDirection(cd As Single)
        parameters:
        - id: cd
          type: System.Single
      overload: Environement.Current.SetCurrentDirection*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Current.GetCurrentSpeed
      commentId: M:Environement.Current.GetCurrentSpeed
      language: CSharp
      name:
        CSharp: GetCurrentSpeed()
        VB: GetCurrentSpeed()
      nameWithType:
        CSharp: Current.GetCurrentSpeed()
        VB: Current.GetCurrentSpeed()
      qualifiedName:
        CSharp: Environement.Current.GetCurrentSpeed()
        VB: Environement.Current.GetCurrentSpeed()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: Environement
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Environement/Current.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetCurrentSpeed
        path: ../SimpleSimulator/SimpleSimulator/Model/Environement/Current.cs
        startLine: 32
      syntax:
        content:
          CSharp: public float GetCurrentSpeed()
          VB: Public Function GetCurrentSpeed As Single
        return:
          type: System.Single
      overload: Environement.Current.GetCurrentSpeed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Current.GetCurrentDirection
      commentId: M:Environement.Current.GetCurrentDirection
      language: CSharp
      name:
        CSharp: GetCurrentDirection()
        VB: GetCurrentDirection()
      nameWithType:
        CSharp: Current.GetCurrentDirection()
        VB: Current.GetCurrentDirection()
      qualifiedName:
        CSharp: Environement.Current.GetCurrentDirection()
        VB: Environement.Current.GetCurrentDirection()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: Environement
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Environement/Current.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetCurrentDirection
        path: ../SimpleSimulator/SimpleSimulator/Model/Environement/Current.cs
        startLine: 37
      syntax:
        content:
          CSharp: public float GetCurrentDirection()
          VB: Public Function GetCurrentDirection As Single
        return:
          type: System.Single
      overload: Environement.Current.GetCurrentDirection*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Environement.Environment
    commentId: T:Environement.Environment
    language: CSharp
    name:
      CSharp: Environment
      VB: Environment
    nameWithType:
      CSharp: Environment
      VB: Environment
    qualifiedName:
      CSharp: Environement.Environment
      VB: Environement.Environment
    type: Class
    assemblies:
    - SimpleSimulator
    namespace: Environement
    source:
      remote:
        path: SimpleSimulator/SimpleSimulator/Model/Environement/Environment.cs
        branch: main
        repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
      id: Environment
      path: ../SimpleSimulator/SimpleSimulator/Model/Environement/Environment.cs
      startLine: 7
    syntax:
      content:
        CSharp: public class Environment
        VB: Public Class Environment
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Environement.Environment.#ctor
      commentId: M:Environement.Environment.#ctor
      language: CSharp
      name:
        CSharp: Environment()
        VB: Environment()
      nameWithType:
        CSharp: Environment.Environment()
        VB: Environment.Environment()
      qualifiedName:
        CSharp: Environement.Environment.Environment()
        VB: Environement.Environment.Environment()
      type: Constructor
      assemblies:
      - SimpleSimulator
      namespace: Environement
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Environement/Environment.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: .ctor
        path: ../SimpleSimulator/SimpleSimulator/Model/Environement/Environment.cs
        startLine: 9
      syntax:
        content:
          CSharp: public Environment()
          VB: Public Sub New
      overload: Environement.Environment.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Environment.UpdateWind(System.Single,System.Single)
      commentId: M:Environement.Environment.UpdateWind(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: UpdateWind(Single, Single)
        VB: UpdateWind(Single, Single)
      nameWithType:
        CSharp: Environment.UpdateWind(Single, Single)
        VB: Environment.UpdateWind(Single, Single)
      qualifiedName:
        CSharp: Environement.Environment.UpdateWind(System.Single, System.Single)
        VB: Environement.Environment.UpdateWind(System.Single, System.Single)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: Environement
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Environement/Environment.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: UpdateWind
        path: ../SimpleSimulator/SimpleSimulator/Model/Environement/Environment.cs
        startLine: 25
      summary: "\n@param float windSpeed \n@param float direction\n"
      example: []
      syntax:
        content:
          CSharp: public void UpdateWind(float windSpeed, float direction)
          VB: Public Sub UpdateWind(windSpeed As Single, direction As Single)
        parameters:
        - id: windSpeed
          type: System.Single
        - id: direction
          type: System.Single
      overload: Environement.Environment.UpdateWind*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Environment.UpdateWave(System.Single,System.Single,System.Single)
      commentId: M:Environement.Environment.UpdateWave(System.Single,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: UpdateWave(Single, Single, Single)
        VB: UpdateWave(Single, Single, Single)
      nameWithType:
        CSharp: Environment.UpdateWave(Single, Single, Single)
        VB: Environment.UpdateWave(Single, Single, Single)
      qualifiedName:
        CSharp: Environement.Environment.UpdateWave(System.Single, System.Single, System.Single)
        VB: Environement.Environment.UpdateWave(System.Single, System.Single, System.Single)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: Environement
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Environement/Environment.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: UpdateWave
        path: ../SimpleSimulator/SimpleSimulator/Model/Environement/Environment.cs
        startLine: 34
      summary: "\n@param float direction \n@param float amplitude \n@param float wave length\n"
      example: []
      syntax:
        content:
          CSharp: public void UpdateWave(float amplitude, float waveLength, float direction)
          VB: Public Sub UpdateWave(amplitude As Single, waveLength As Single, direction As Single)
        parameters:
        - id: amplitude
          type: System.Single
        - id: waveLength
          type: System.Single
        - id: direction
          type: System.Single
      overload: Environement.Environment.UpdateWave*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Environment.UpdateCurrent(System.Single,System.Single)
      commentId: M:Environement.Environment.UpdateCurrent(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: UpdateCurrent(Single, Single)
        VB: UpdateCurrent(Single, Single)
      nameWithType:
        CSharp: Environment.UpdateCurrent(Single, Single)
        VB: Environment.UpdateCurrent(Single, Single)
      qualifiedName:
        CSharp: Environement.Environment.UpdateCurrent(System.Single, System.Single)
        VB: Environement.Environment.UpdateCurrent(System.Single, System.Single)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: Environement
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Environement/Environment.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: UpdateCurrent
        path: ../SimpleSimulator/SimpleSimulator/Model/Environement/Environment.cs
        startLine: 42
      summary: "\n@param float speed \n@param float direction\n"
      example: []
      syntax:
        content:
          CSharp: public void UpdateCurrent(float speed, float direction)
          VB: Public Sub UpdateCurrent(speed As Single, direction As Single)
        parameters:
        - id: speed
          type: System.Single
        - id: direction
          type: System.Single
      overload: Environement.Environment.UpdateCurrent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Environment.setEnvironment(System.Collections.Generic.Dictionary{Environement.Conditions,System.Single})
      commentId: M:Environement.Environment.setEnvironment(System.Collections.Generic.Dictionary{Environement.Conditions,System.Single})
      language: CSharp
      name:
        CSharp: setEnvironment(Dictionary<Conditions, Single>)
        VB: setEnvironment(Dictionary(Of Conditions, Single))
      nameWithType:
        CSharp: Environment.setEnvironment(Dictionary<Conditions, Single>)
        VB: Environment.setEnvironment(Dictionary(Of Conditions, Single))
      qualifiedName:
        CSharp: Environement.Environment.setEnvironment(System.Collections.Generic.Dictionary<Environement.Conditions, System.Single>)
        VB: Environement.Environment.setEnvironment(System.Collections.Generic.Dictionary(Of Environement.Conditions, System.Single))
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: Environement
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Environement/Environment.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: setEnvironment
        path: ../SimpleSimulator/SimpleSimulator/Model/Environement/Environment.cs
        startLine: 46
      syntax:
        content:
          CSharp: public void setEnvironment(Dictionary<Conditions, float> environment)
          VB: Public Sub setEnvironment(environment As Dictionary(Of Conditions, Single))
        parameters:
        - id: environment
          type: System.Collections.Generic.Dictionary{Environement.Conditions,System.Single}
      overload: Environement.Environment.setEnvironment*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Environment.getEnvState
      commentId: M:Environement.Environment.getEnvState
      language: CSharp
      name:
        CSharp: getEnvState()
        VB: getEnvState()
      nameWithType:
        CSharp: Environment.getEnvState()
        VB: Environment.getEnvState()
      qualifiedName:
        CSharp: Environement.Environment.getEnvState()
        VB: Environement.Environment.getEnvState()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: Environement
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Environement/Environment.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: getEnvState
        path: ../SimpleSimulator/SimpleSimulator/Model/Environement/Environment.cs
        startLine: 79
      syntax:
        content:
          CSharp: public Dictionary<Conditions, float> getEnvState()
          VB: Public Function getEnvState As Dictionary(Of Conditions, Single)
        return:
          type: System.Collections.Generic.Dictionary{Environement.Conditions,System.Single}
      overload: Environement.Environment.getEnvState*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Environement.Wave
    commentId: T:Environement.Wave
    language: CSharp
    name:
      CSharp: Wave
      VB: Wave
    nameWithType:
      CSharp: Wave
      VB: Wave
    qualifiedName:
      CSharp: Environement.Wave
      VB: Environement.Wave
    type: Class
    assemblies:
    - SimpleSimulator
    namespace: Environement
    source:
      remote:
        path: SimpleSimulator/SimpleSimulator/Model/Environement/Wave.cs
        branch: main
        repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
      id: Wave
      path: ../SimpleSimulator/SimpleSimulator/Model/Environement/Wave.cs
      startLine: 7
    syntax:
      content:
        CSharp: public class Wave
        VB: Public Class Wave
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Environement.Wave.#ctor
      commentId: M:Environement.Wave.#ctor
      language: CSharp
      name:
        CSharp: Wave()
        VB: Wave()
      nameWithType:
        CSharp: Wave.Wave()
        VB: Wave.Wave()
      qualifiedName:
        CSharp: Environement.Wave.Wave()
        VB: Environement.Wave.Wave()
      type: Constructor
      assemblies:
      - SimpleSimulator
      namespace: Environement
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Environement/Wave.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: .ctor
        path: ../SimpleSimulator/SimpleSimulator/Model/Environement/Wave.cs
        startLine: 9
      syntax:
        content:
          CSharp: public Wave()
          VB: Public Sub New
      overload: Environement.Wave.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Wave.Update(System.Single,System.Single,System.Single)
      commentId: M:Environement.Wave.Update(System.Single,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: Update(Single, Single, Single)
        VB: Update(Single, Single, Single)
      nameWithType:
        CSharp: Wave.Update(Single, Single, Single)
        VB: Wave.Update(Single, Single, Single)
      qualifiedName:
        CSharp: Environement.Wave.Update(System.Single, System.Single, System.Single)
        VB: Environement.Wave.Update(System.Single, System.Single, System.Single)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: Environement
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Environement/Wave.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Update
        path: ../SimpleSimulator/SimpleSimulator/Model/Environement/Wave.cs
        startLine: 27
      summary: "\n@param direction \n@param amplitude \n@param wave length\n"
      example: []
      syntax:
        content:
          CSharp: public void Update(float direction, float amplitude, float waveLength)
          VB: Public Sub Update(direction As Single, amplitude As Single, waveLength As Single)
        parameters:
        - id: direction
          type: System.Single
        - id: amplitude
          type: System.Single
        - id: waveLength
          type: System.Single
      overload: Environement.Wave.Update*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Wave.SetWaveDirection(System.Single)
      commentId: M:Environement.Wave.SetWaveDirection(System.Single)
      language: CSharp
      name:
        CSharp: SetWaveDirection(Single)
        VB: SetWaveDirection(Single)
      nameWithType:
        CSharp: Wave.SetWaveDirection(Single)
        VB: Wave.SetWaveDirection(Single)
      qualifiedName:
        CSharp: Environement.Wave.SetWaveDirection(System.Single)
        VB: Environement.Wave.SetWaveDirection(System.Single)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: Environement
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Environement/Wave.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: SetWaveDirection
        path: ../SimpleSimulator/SimpleSimulator/Model/Environement/Wave.cs
        startLine: 33
      syntax:
        content:
          CSharp: public void SetWaveDirection(float wd)
          VB: Public Sub SetWaveDirection(wd As Single)
        parameters:
        - id: wd
          type: System.Single
      overload: Environement.Wave.SetWaveDirection*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Wave.SetWaveAmplitude(System.Single)
      commentId: M:Environement.Wave.SetWaveAmplitude(System.Single)
      language: CSharp
      name:
        CSharp: SetWaveAmplitude(Single)
        VB: SetWaveAmplitude(Single)
      nameWithType:
        CSharp: Wave.SetWaveAmplitude(Single)
        VB: Wave.SetWaveAmplitude(Single)
      qualifiedName:
        CSharp: Environement.Wave.SetWaveAmplitude(System.Single)
        VB: Environement.Wave.SetWaveAmplitude(System.Single)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: Environement
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Environement/Wave.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: SetWaveAmplitude
        path: ../SimpleSimulator/SimpleSimulator/Model/Environement/Wave.cs
        startLine: 38
      syntax:
        content:
          CSharp: public void SetWaveAmplitude(float amplitude)
          VB: Public Sub SetWaveAmplitude(amplitude As Single)
        parameters:
        - id: amplitude
          type: System.Single
      overload: Environement.Wave.SetWaveAmplitude*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Wave.SetWaveLength(System.Single)
      commentId: M:Environement.Wave.SetWaveLength(System.Single)
      language: CSharp
      name:
        CSharp: SetWaveLength(Single)
        VB: SetWaveLength(Single)
      nameWithType:
        CSharp: Wave.SetWaveLength(Single)
        VB: Wave.SetWaveLength(Single)
      qualifiedName:
        CSharp: Environement.Wave.SetWaveLength(System.Single)
        VB: Environement.Wave.SetWaveLength(System.Single)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: Environement
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Environement/Wave.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: SetWaveLength
        path: ../SimpleSimulator/SimpleSimulator/Model/Environement/Wave.cs
        startLine: 43
      syntax:
        content:
          CSharp: public void SetWaveLength(float length)
          VB: Public Sub SetWaveLength(length As Single)
        parameters:
        - id: length
          type: System.Single
      overload: Environement.Wave.SetWaveLength*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Wave.GetDirection
      commentId: M:Environement.Wave.GetDirection
      language: CSharp
      name:
        CSharp: GetDirection()
        VB: GetDirection()
      nameWithType:
        CSharp: Wave.GetDirection()
        VB: Wave.GetDirection()
      qualifiedName:
        CSharp: Environement.Wave.GetDirection()
        VB: Environement.Wave.GetDirection()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: Environement
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Environement/Wave.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetDirection
        path: ../SimpleSimulator/SimpleSimulator/Model/Environement/Wave.cs
        startLine: 48
      syntax:
        content:
          CSharp: public float GetDirection()
          VB: Public Function GetDirection As Single
        return:
          type: System.Single
      overload: Environement.Wave.GetDirection*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Wave.GetAmplitude
      commentId: M:Environement.Wave.GetAmplitude
      language: CSharp
      name:
        CSharp: GetAmplitude()
        VB: GetAmplitude()
      nameWithType:
        CSharp: Wave.GetAmplitude()
        VB: Wave.GetAmplitude()
      qualifiedName:
        CSharp: Environement.Wave.GetAmplitude()
        VB: Environement.Wave.GetAmplitude()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: Environement
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Environement/Wave.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetAmplitude
        path: ../SimpleSimulator/SimpleSimulator/Model/Environement/Wave.cs
        startLine: 52
      syntax:
        content:
          CSharp: public float GetAmplitude()
          VB: Public Function GetAmplitude As Single
        return:
          type: System.Single
      overload: Environement.Wave.GetAmplitude*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Wave.GetWaveLength
      commentId: M:Environement.Wave.GetWaveLength
      language: CSharp
      name:
        CSharp: GetWaveLength()
        VB: GetWaveLength()
      nameWithType:
        CSharp: Wave.GetWaveLength()
        VB: Wave.GetWaveLength()
      qualifiedName:
        CSharp: Environement.Wave.GetWaveLength()
        VB: Environement.Wave.GetWaveLength()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: Environement
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Environement/Wave.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetWaveLength
        path: ../SimpleSimulator/SimpleSimulator/Model/Environement/Wave.cs
        startLine: 57
      syntax:
        content:
          CSharp: public float GetWaveLength()
          VB: Public Function GetWaveLength As Single
        return:
          type: System.Single
      overload: Environement.Wave.GetWaveLength*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Environement.Wind
    commentId: T:Environement.Wind
    language: CSharp
    name:
      CSharp: Wind
      VB: Wind
    nameWithType:
      CSharp: Wind
      VB: Wind
    qualifiedName:
      CSharp: Environement.Wind
      VB: Environement.Wind
    type: Class
    assemblies:
    - SimpleSimulator
    namespace: Environement
    source:
      remote:
        path: SimpleSimulator/SimpleSimulator/Model/Environement/Wind.cs
        branch: main
        repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
      id: Wind
      path: ../SimpleSimulator/SimpleSimulator/Model/Environement/Wind.cs
      startLine: 7
    syntax:
      content:
        CSharp: public class Wind
        VB: Public Class Wind
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Environement.Wind.#ctor
      commentId: M:Environement.Wind.#ctor
      language: CSharp
      name:
        CSharp: Wind()
        VB: Wind()
      nameWithType:
        CSharp: Wind.Wind()
        VB: Wind.Wind()
      qualifiedName:
        CSharp: Environement.Wind.Wind()
        VB: Environement.Wind.Wind()
      type: Constructor
      assemblies:
      - SimpleSimulator
      namespace: Environement
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Environement/Wind.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: .ctor
        path: ../SimpleSimulator/SimpleSimulator/Model/Environement/Wind.cs
        startLine: 9
      syntax:
        content:
          CSharp: public Wind()
          VB: Public Sub New
      overload: Environement.Wind.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Wind.Update(System.Single,System.Single)
      commentId: M:Environement.Wind.Update(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: Update(Single, Single)
        VB: Update(Single, Single)
      nameWithType:
        CSharp: Wind.Update(Single, Single)
        VB: Wind.Update(Single, Single)
      qualifiedName:
        CSharp: Environement.Wind.Update(System.Single, System.Single)
        VB: Environement.Wind.Update(System.Single, System.Single)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: Environement
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Environement/Wind.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Update
        path: ../SimpleSimulator/SimpleSimulator/Model/Environement/Wind.cs
        startLine: 20
      summary: "\n@param windSpeed \n@param direction\n"
      example: []
      syntax:
        content:
          CSharp: public void Update(float windSpeed, float direction)
          VB: Public Sub Update(windSpeed As Single, direction As Single)
        parameters:
        - id: windSpeed
          type: System.Single
        - id: direction
          type: System.Single
      overload: Environement.Wind.Update*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Wind.SetWindSpeed(System.Single)
      commentId: M:Environement.Wind.SetWindSpeed(System.Single)
      language: CSharp
      name:
        CSharp: SetWindSpeed(Single)
        VB: SetWindSpeed(Single)
      nameWithType:
        CSharp: Wind.SetWindSpeed(Single)
        VB: Wind.SetWindSpeed(Single)
      qualifiedName:
        CSharp: Environement.Wind.SetWindSpeed(System.Single)
        VB: Environement.Wind.SetWindSpeed(System.Single)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: Environement
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Environement/Wind.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: SetWindSpeed
        path: ../SimpleSimulator/SimpleSimulator/Model/Environement/Wind.cs
        startLine: 25
      syntax:
        content:
          CSharp: public void SetWindSpeed(float windSpeed)
          VB: Public Sub SetWindSpeed(windSpeed As Single)
        parameters:
        - id: windSpeed
          type: System.Single
      overload: Environement.Wind.SetWindSpeed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Wind.SetWindDirection(System.Single)
      commentId: M:Environement.Wind.SetWindDirection(System.Single)
      language: CSharp
      name:
        CSharp: SetWindDirection(Single)
        VB: SetWindDirection(Single)
      nameWithType:
        CSharp: Wind.SetWindDirection(Single)
        VB: Wind.SetWindDirection(Single)
      qualifiedName:
        CSharp: Environement.Wind.SetWindDirection(System.Single)
        VB: Environement.Wind.SetWindDirection(System.Single)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: Environement
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Environement/Wind.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: SetWindDirection
        path: ../SimpleSimulator/SimpleSimulator/Model/Environement/Wind.cs
        startLine: 30
      syntax:
        content:
          CSharp: public void SetWindDirection(float windDirection)
          VB: Public Sub SetWindDirection(windDirection As Single)
        parameters:
        - id: windDirection
          type: System.Single
      overload: Environement.Wind.SetWindDirection*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Wind.GetWindSpeed
      commentId: M:Environement.Wind.GetWindSpeed
      language: CSharp
      name:
        CSharp: GetWindSpeed()
        VB: GetWindSpeed()
      nameWithType:
        CSharp: Wind.GetWindSpeed()
        VB: Wind.GetWindSpeed()
      qualifiedName:
        CSharp: Environement.Wind.GetWindSpeed()
        VB: Environement.Wind.GetWindSpeed()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: Environement
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Environement/Wind.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetWindSpeed
        path: ../SimpleSimulator/SimpleSimulator/Model/Environement/Wind.cs
        startLine: 35
      syntax:
        content:
          CSharp: public float GetWindSpeed()
          VB: Public Function GetWindSpeed As Single
        return:
          type: System.Single
      overload: Environement.Wind.GetWindSpeed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Wind.GetWindDirection
      commentId: M:Environement.Wind.GetWindDirection
      language: CSharp
      name:
        CSharp: GetWindDirection()
        VB: GetWindDirection()
      nameWithType:
        CSharp: Wind.GetWindDirection()
        VB: Wind.GetWindDirection()
      qualifiedName:
        CSharp: Environement.Wind.GetWindDirection()
        VB: Environement.Wind.GetWindDirection()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: Environement
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Environement/Wind.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetWindDirection
        path: ../SimpleSimulator/SimpleSimulator/Model/Environement/Wind.cs
        startLine: 40
      syntax:
        content:
          CSharp: public float GetWindDirection()
          VB: Public Function GetWindDirection As Single
        return:
          type: System.Single
      overload: Environement.Wind.GetWindDirection*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: physicSimulator
  commentId: N:physicSimulator
  language: CSharp
  name:
    CSharp: physicSimulator
    VB: physicSimulator
  nameWithType:
    CSharp: physicSimulator
    VB: physicSimulator
  qualifiedName:
    CSharp: physicSimulator
    VB: physicSimulator
  type: Namespace
  assemblies:
  - SimpleSimulator
  modifiers: {}
  items:
  - id: physicSimulator.physics_simulator
    commentId: T:physicSimulator.physics_simulator
    language: CSharp
    name:
      CSharp: physics_simulator
      VB: physics_simulator
    nameWithType:
      CSharp: physics_simulator
      VB: physics_simulator
    qualifiedName:
      CSharp: physicSimulator.physics_simulator
      VB: physicSimulator.physics_simulator
    type: Class
    assemblies:
    - SimpleSimulator
    namespace: physicSimulator
    source:
      remote:
        path: SimpleSimulator/SimpleSimulator/Model/physic_simulator/physics_simulator.cs
        branch: main
        repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
      id: physics_simulator
      path: ../SimpleSimulator/SimpleSimulator/Model/physic_simulator/physics_simulator.cs
      startLine: 2
    syntax:
      content:
        CSharp: public class physics_simulator
        VB: Public Class physics_simulator
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: physicSimulator.physics_simulator.#ctor(Environement.Environment,PRace.Boat,PRace.Time)
      commentId: M:physicSimulator.physics_simulator.#ctor(Environement.Environment,PRace.Boat,PRace.Time)
      language: CSharp
      name:
        CSharp: physics_simulator(Environment, Boat, Time)
        VB: physics_simulator(Environment, Boat, Time)
      nameWithType:
        CSharp: physics_simulator.physics_simulator(Environment, Boat, Time)
        VB: physics_simulator.physics_simulator(Environment, Boat, Time)
      qualifiedName:
        CSharp: physicSimulator.physics_simulator.physics_simulator(Environement.Environment, PRace.Boat, PRace.Time)
        VB: physicSimulator.physics_simulator.physics_simulator(Environement.Environment, PRace.Boat, PRace.Time)
      type: Constructor
      assemblies:
      - SimpleSimulator
      namespace: physicSimulator
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/physic_simulator/physics_simulator.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: .ctor
        path: ../SimpleSimulator/SimpleSimulator/Model/physic_simulator/physics_simulator.cs
        startLine: 4
      syntax:
        content:
          CSharp: public physics_simulator(Environment env, Boat boat, Time time)
          VB: Public Sub New(env As Environment, boat As Boat, time As Time)
        parameters:
        - id: env
          type: Environement.Environment
        - id: boat
          type: PRace.Boat
        - id: time
          type: PRace.Time
      overload: physicSimulator.physics_simulator.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: physicSimulator.physics_simulator.SetBoat(PRace.Boat)
      commentId: M:physicSimulator.physics_simulator.SetBoat(PRace.Boat)
      language: CSharp
      name:
        CSharp: SetBoat(Boat)
        VB: SetBoat(Boat)
      nameWithType:
        CSharp: physics_simulator.SetBoat(Boat)
        VB: physics_simulator.SetBoat(Boat)
      qualifiedName:
        CSharp: physicSimulator.physics_simulator.SetBoat(PRace.Boat)
        VB: physicSimulator.physics_simulator.SetBoat(PRace.Boat)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: physicSimulator
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/physic_simulator/physics_simulator.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: SetBoat
        path: ../SimpleSimulator/SimpleSimulator/Model/physic_simulator/physics_simulator.cs
        startLine: 27
      syntax:
        content:
          CSharp: public void SetBoat(Boat boat)
          VB: Public Sub SetBoat(boat As Boat)
        parameters:
        - id: boat
          type: PRace.Boat
      overload: physicSimulator.physics_simulator.SetBoat*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: physicSimulator.physics_simulator.MathMod(System.Double,System.Double)
      commentId: M:physicSimulator.physics_simulator.MathMod(System.Double,System.Double)
      language: CSharp
      name:
        CSharp: MathMod(Double, Double)
        VB: MathMod(Double, Double)
      nameWithType:
        CSharp: physics_simulator.MathMod(Double, Double)
        VB: physics_simulator.MathMod(Double, Double)
      qualifiedName:
        CSharp: physicSimulator.physics_simulator.MathMod(System.Double, System.Double)
        VB: physicSimulator.physics_simulator.MathMod(System.Double, System.Double)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: physicSimulator
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/physic_simulator/physics_simulator.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: MathMod
        path: ../SimpleSimulator/SimpleSimulator/Model/physic_simulator/physics_simulator.cs
        startLine: 32
      syntax:
        content:
          CSharp: public double MathMod(double a, double b)
          VB: Public Function MathMod(a As Double, b As Double) As Double
        parameters:
        - id: a
          type: System.Double
        - id: b
          type: System.Double
        return:
          type: System.Double
      overload: physicSimulator.physics_simulator.MathMod*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: physicSimulator.physics_simulator.Move
      commentId: M:physicSimulator.physics_simulator.Move
      language: CSharp
      name:
        CSharp: Move()
        VB: Move()
      nameWithType:
        CSharp: physics_simulator.Move()
        VB: physics_simulator.Move()
      qualifiedName:
        CSharp: physicSimulator.physics_simulator.Move()
        VB: physicSimulator.physics_simulator.Move()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: physicSimulator
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/physic_simulator/physics_simulator.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Move
        path: ../SimpleSimulator/SimpleSimulator/Model/physic_simulator/physics_simulator.cs
        startLine: 43
      syntax:
        content:
          CSharp: public void Move()
          VB: Public Sub Move
      overload: physicSimulator.physics_simulator.Move*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: physicSimulator.physics_simulator.GetCOG
      commentId: M:physicSimulator.physics_simulator.GetCOG
      language: CSharp
      name:
        CSharp: GetCOG()
        VB: GetCOG()
      nameWithType:
        CSharp: physics_simulator.GetCOG()
        VB: physics_simulator.GetCOG()
      qualifiedName:
        CSharp: physicSimulator.physics_simulator.GetCOG()
        VB: physicSimulator.physics_simulator.GetCOG()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: physicSimulator
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/physic_simulator/physics_simulator.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetCOG
        path: ../SimpleSimulator/SimpleSimulator/Model/physic_simulator/physics_simulator.cs
        startLine: 199
      syntax:
        content:
          CSharp: public float GetCOG()
          VB: Public Function GetCOG As Single
        return:
          type: System.Single
      overload: physicSimulator.physics_simulator.GetCOG*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: physicSimulator.physics_simulator.GetSOG
      commentId: M:physicSimulator.physics_simulator.GetSOG
      language: CSharp
      name:
        CSharp: GetSOG()
        VB: GetSOG()
      nameWithType:
        CSharp: physics_simulator.GetSOG()
        VB: physics_simulator.GetSOG()
      qualifiedName:
        CSharp: physicSimulator.physics_simulator.GetSOG()
        VB: physicSimulator.physics_simulator.GetSOG()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: physicSimulator
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/physic_simulator/physics_simulator.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetSOG
        path: ../SimpleSimulator/SimpleSimulator/Model/physic_simulator/physics_simulator.cs
        startLine: 204
      syntax:
        content:
          CSharp: public float GetSOG()
          VB: Public Function GetSOG As Single
        return:
          type: System.Single
      overload: physicSimulator.physics_simulator.GetSOG*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: PRace
  commentId: N:PRace
  language: CSharp
  name:
    CSharp: PRace
    VB: PRace
  nameWithType:
    CSharp: PRace
    VB: PRace
  qualifiedName:
    CSharp: PRace
    VB: PRace
  type: Namespace
  assemblies:
  - SimpleSimulator
  modifiers: {}
  items:
  - id: PRace.Boat
    commentId: T:PRace.Boat
    language: CSharp
    name:
      CSharp: Boat
      VB: Boat
    nameWithType:
      CSharp: Boat
      VB: Boat
    qualifiedName:
      CSharp: PRace.Boat
      VB: PRace.Boat
    type: Class
    assemblies:
    - SimpleSimulator
    namespace: PRace
    source:
      remote:
        path: SimpleSimulator/SimpleSimulator/Model/Race/Boat.cs
        branch: main
        repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
      id: Boat
      path: ../SimpleSimulator/SimpleSimulator/Model/Race/Boat.cs
      startLine: 8
    syntax:
      content:
        CSharp: public class Boat
        VB: Public Class Boat
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PRace.Boat.#ctor
      commentId: M:PRace.Boat.#ctor
      language: CSharp
      name:
        CSharp: Boat()
        VB: Boat()
      nameWithType:
        CSharp: Boat.Boat()
        VB: Boat.Boat()
      qualifiedName:
        CSharp: PRace.Boat.Boat()
        VB: PRace.Boat.Boat()
      type: Constructor
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Boat.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: .ctor
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Boat.cs
        startLine: 10
      syntax:
        content:
          CSharp: public Boat()
          VB: Public Sub New
      overload: PRace.Boat.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Boat.init(System.Int32,System.Collections.Generic.List{PRace.Polaire},PRace.Position)
      commentId: M:PRace.Boat.init(System.Int32,System.Collections.Generic.List{PRace.Polaire},PRace.Position)
      language: CSharp
      name:
        CSharp: init(Int32, List<Polaire>, Position)
        VB: init(Int32, List(Of Polaire), Position)
      nameWithType:
        CSharp: Boat.init(Int32, List<Polaire>, Position)
        VB: Boat.init(Int32, List(Of Polaire), Position)
      qualifiedName:
        CSharp: PRace.Boat.init(System.Int32, System.Collections.Generic.List<PRace.Polaire>, PRace.Position)
        VB: PRace.Boat.init(System.Int32, System.Collections.Generic.List(Of PRace.Polaire), PRace.Position)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Boat.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: init
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Boat.cs
        startLine: 31
      syntax:
        content:
          CSharp: public void init(int id, List<Polaire> polaires, Position pos)
          VB: Public Sub init(id As Integer, polaires As List(Of Polaire), pos As Position)
        parameters:
        - id: id
          type: System.Int32
        - id: polaires
          type: System.Collections.Generic.List{PRace.Polaire}
        - id: pos
          type: PRace.Position
      overload: PRace.Boat.init*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Boat.GetId
      commentId: M:PRace.Boat.GetId
      language: CSharp
      name:
        CSharp: GetId()
        VB: GetId()
      nameWithType:
        CSharp: Boat.GetId()
        VB: Boat.GetId()
      qualifiedName:
        CSharp: PRace.Boat.GetId()
        VB: PRace.Boat.GetId()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Boat.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetId
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Boat.cs
        startLine: 39
      syntax:
        content:
          CSharp: public int GetId()
          VB: Public Function GetId As Integer
        return:
          type: System.Int32
      overload: PRace.Boat.GetId*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Boat.setCap(System.Int32)
      commentId: M:PRace.Boat.setCap(System.Int32)
      language: CSharp
      name:
        CSharp: setCap(Int32)
        VB: setCap(Int32)
      nameWithType:
        CSharp: Boat.setCap(Int32)
        VB: Boat.setCap(Int32)
      qualifiedName:
        CSharp: PRace.Boat.setCap(System.Int32)
        VB: PRace.Boat.setCap(System.Int32)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Boat.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: setCap
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Boat.cs
        startLine: 47
      summary: "\n@param int cap\n"
      example: []
      syntax:
        content:
          CSharp: public void setCap(int cap)
          VB: Public Sub setCap(cap As Integer)
        parameters:
        - id: cap
          type: System.Int32
      overload: PRace.Boat.setCap*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Boat.getCap
      commentId: M:PRace.Boat.getCap
      language: CSharp
      name:
        CSharp: getCap()
        VB: getCap()
      nameWithType:
        CSharp: Boat.getCap()
        VB: Boat.getCap()
      qualifiedName:
        CSharp: PRace.Boat.getCap()
        VB: PRace.Boat.getCap()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Boat.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: getCap
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Boat.cs
        startLine: 51
      syntax:
        content:
          CSharp: public float getCap()
          VB: Public Function getCap As Single
        return:
          type: System.Single
      overload: PRace.Boat.getCap*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Boat.setCap(System.Single)
      commentId: M:PRace.Boat.setCap(System.Single)
      language: CSharp
      name:
        CSharp: setCap(Single)
        VB: setCap(Single)
      nameWithType:
        CSharp: Boat.setCap(Single)
        VB: Boat.setCap(Single)
      qualifiedName:
        CSharp: PRace.Boat.setCap(System.Single)
        VB: PRace.Boat.setCap(System.Single)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Boat.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: setCap
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Boat.cs
        startLine: 56
      syntax:
        content:
          CSharp: public void setCap(float cap)
          VB: Public Sub setCap(cap As Single)
        parameters:
        - id: cap
          type: System.Single
      overload: PRace.Boat.setCap*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Boat.GetCapRegulateurAmure
      commentId: M:PRace.Boat.GetCapRegulateurAmure
      language: CSharp
      name:
        CSharp: GetCapRegulateurAmure()
        VB: GetCapRegulateurAmure()
      nameWithType:
        CSharp: Boat.GetCapRegulateurAmure()
        VB: Boat.GetCapRegulateurAmure()
      qualifiedName:
        CSharp: PRace.Boat.GetCapRegulateurAmure()
        VB: PRace.Boat.GetCapRegulateurAmure()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Boat.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetCapRegulateurAmure
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Boat.cs
        startLine: 61
      syntax:
        content:
          CSharp: public float GetCapRegulateurAmure()
          VB: Public Function GetCapRegulateurAmure As Single
        return:
          type: System.Single
      overload: PRace.Boat.GetCapRegulateurAmure*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Boat.GetPosition
      commentId: M:PRace.Boat.GetPosition
      language: CSharp
      name:
        CSharp: GetPosition()
        VB: GetPosition()
      nameWithType:
        CSharp: Boat.GetPosition()
        VB: Boat.GetPosition()
      qualifiedName:
        CSharp: PRace.Boat.GetPosition()
        VB: PRace.Boat.GetPosition()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Boat.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetPosition
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Boat.cs
        startLine: 66
      syntax:
        content:
          CSharp: public Position GetPosition()
          VB: Public Function GetPosition As Position
        return:
          type: PRace.Position
      overload: PRace.Boat.GetPosition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Boat.switchMode(PRace.ModeCommande)
      commentId: M:PRace.Boat.switchMode(PRace.ModeCommande)
      language: CSharp
      name:
        CSharp: switchMode(ModeCommande)
        VB: switchMode(ModeCommande)
      nameWithType:
        CSharp: Boat.switchMode(ModeCommande)
        VB: Boat.switchMode(ModeCommande)
      qualifiedName:
        CSharp: PRace.Boat.switchMode(PRace.ModeCommande)
        VB: PRace.Boat.switchMode(PRace.ModeCommande)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Boat.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: switchMode
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Boat.cs
        startLine: 74
      summary: "\n@param ModeCommande mode\n"
      example: []
      syntax:
        content:
          CSharp: public void switchMode(ModeCommande mode)
          VB: Public Sub switchMode(mode As ModeCommande)
        parameters:
        - id: mode
          type: PRace.ModeCommande
      overload: PRace.Boat.switchMode*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Boat.IncrementerCap(PRace.ModeCommande,PRace.DegreeIncrement)
      commentId: M:PRace.Boat.IncrementerCap(PRace.ModeCommande,PRace.DegreeIncrement)
      language: CSharp
      name:
        CSharp: IncrementerCap(ModeCommande, DegreeIncrement)
        VB: IncrementerCap(ModeCommande, DegreeIncrement)
      nameWithType:
        CSharp: Boat.IncrementerCap(ModeCommande, DegreeIncrement)
        VB: Boat.IncrementerCap(ModeCommande, DegreeIncrement)
      qualifiedName:
        CSharp: PRace.Boat.IncrementerCap(PRace.ModeCommande, PRace.DegreeIncrement)
        VB: PRace.Boat.IncrementerCap(PRace.ModeCommande, PRace.DegreeIncrement)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Boat.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: IncrementerCap
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Boat.cs
        startLine: 82
      summary: "\n@param ModeCommande modeCommande \n@param DegreeIncrement D\n"
      example: []
      syntax:
        content:
          CSharp: public void IncrementerCap(ModeCommande modeCommande, DegreeIncrement DI)
          VB: Public Sub IncrementerCap(modeCommande As ModeCommande, DI As DegreeIncrement)
        parameters:
        - id: modeCommande
          type: PRace.ModeCommande
        - id: DI
          type: PRace.DegreeIncrement
      overload: PRace.Boat.IncrementerCap*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Boat.setPosition(PRace.Position)
      commentId: M:PRace.Boat.setPosition(PRace.Position)
      language: CSharp
      name:
        CSharp: setPosition(Position)
        VB: setPosition(Position)
      nameWithType:
        CSharp: Boat.setPosition(Position)
        VB: Boat.setPosition(Position)
      qualifiedName:
        CSharp: PRace.Boat.setPosition(PRace.Position)
        VB: PRace.Boat.setPosition(PRace.Position)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Boat.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: setPosition
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Boat.cs
        startLine: 93
      syntax:
        content:
          CSharp: public void setPosition(Position pos)
          VB: Public Sub setPosition(pos As Position)
        parameters:
        - id: pos
          type: PRace.Position
      overload: PRace.Boat.setPosition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Boat.setAcceleration(System.Int32)
      commentId: M:PRace.Boat.setAcceleration(System.Int32)
      language: CSharp
      name:
        CSharp: setAcceleration(Int32)
        VB: setAcceleration(Int32)
      nameWithType:
        CSharp: Boat.setAcceleration(Int32)
        VB: Boat.setAcceleration(Int32)
      qualifiedName:
        CSharp: PRace.Boat.setAcceleration(System.Int32)
        VB: PRace.Boat.setAcceleration(System.Int32)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Boat.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: setAcceleration
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Boat.cs
        startLine: 101
      summary: "\n@param int factor\n"
      example: []
      syntax:
        content:
          CSharp: public void setAcceleration(int factor)
          VB: Public Sub setAcceleration(factor As Integer)
        parameters:
        - id: factor
          type: System.Int32
      overload: PRace.Boat.setAcceleration*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Boat.SetAvailablePolaire(System.Collections.Generic.List{PRace.Polaire})
      commentId: M:PRace.Boat.SetAvailablePolaire(System.Collections.Generic.List{PRace.Polaire})
      language: CSharp
      name:
        CSharp: SetAvailablePolaire(List<Polaire>)
        VB: SetAvailablePolaire(List(Of Polaire))
      nameWithType:
        CSharp: Boat.SetAvailablePolaire(List<Polaire>)
        VB: Boat.SetAvailablePolaire(List(Of Polaire))
      qualifiedName:
        CSharp: PRace.Boat.SetAvailablePolaire(System.Collections.Generic.List<PRace.Polaire>)
        VB: PRace.Boat.SetAvailablePolaire(System.Collections.Generic.List(Of PRace.Polaire))
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Boat.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: SetAvailablePolaire
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Boat.cs
        startLine: 105
      syntax:
        content:
          CSharp: public void SetAvailablePolaire(List<Polaire> listPolaire)
          VB: Public Sub SetAvailablePolaire(listPolaire As List(Of Polaire))
        parameters:
        - id: listPolaire
          type: System.Collections.Generic.List{PRace.Polaire}
      overload: PRace.Boat.SetAvailablePolaire*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Boat.getAvailablePolaire
      commentId: M:PRace.Boat.getAvailablePolaire
      language: CSharp
      name:
        CSharp: getAvailablePolaire()
        VB: getAvailablePolaire()
      nameWithType:
        CSharp: Boat.getAvailablePolaire()
        VB: Boat.getAvailablePolaire()
      qualifiedName:
        CSharp: PRace.Boat.getAvailablePolaire()
        VB: PRace.Boat.getAvailablePolaire()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Boat.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: getAvailablePolaire
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Boat.cs
        startLine: 110
      syntax:
        content:
          CSharp: public List<Polaire> getAvailablePolaire()
          VB: Public Function getAvailablePolaire As List(Of Polaire)
        return:
          type: System.Collections.Generic.List{PRace.Polaire}
      overload: PRace.Boat.getAvailablePolaire*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Boat.SetCurrentPolaire(System.String)
      commentId: M:PRace.Boat.SetCurrentPolaire(System.String)
      language: CSharp
      name:
        CSharp: SetCurrentPolaire(String)
        VB: SetCurrentPolaire(String)
      nameWithType:
        CSharp: Boat.SetCurrentPolaire(String)
        VB: Boat.SetCurrentPolaire(String)
      qualifiedName:
        CSharp: PRace.Boat.SetCurrentPolaire(System.String)
        VB: PRace.Boat.SetCurrentPolaire(System.String)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Boat.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: SetCurrentPolaire
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Boat.cs
        startLine: 115
      syntax:
        content:
          CSharp: public void SetCurrentPolaire(string name)
          VB: Public Sub SetCurrentPolaire(name As String)
        parameters:
        - id: name
          type: System.String
      overload: PRace.Boat.SetCurrentPolaire*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Boat.GetCurrentPolaire
      commentId: M:PRace.Boat.GetCurrentPolaire
      language: CSharp
      name:
        CSharp: GetCurrentPolaire()
        VB: GetCurrentPolaire()
      nameWithType:
        CSharp: Boat.GetCurrentPolaire()
        VB: Boat.GetCurrentPolaire()
      qualifiedName:
        CSharp: PRace.Boat.GetCurrentPolaire()
        VB: PRace.Boat.GetCurrentPolaire()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Boat.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetCurrentPolaire
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Boat.cs
        startLine: 127
      syntax:
        content:
          CSharp: public Polaire GetCurrentPolaire()
          VB: Public Function GetCurrentPolaire As Polaire
        return:
          type: PRace.Polaire
      overload: PRace.Boat.GetCurrentPolaire*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Boat.GetAllPolaire
      commentId: M:PRace.Boat.GetAllPolaire
      language: CSharp
      name:
        CSharp: GetAllPolaire()
        VB: GetAllPolaire()
      nameWithType:
        CSharp: Boat.GetAllPolaire()
        VB: Boat.GetAllPolaire()
      qualifiedName:
        CSharp: PRace.Boat.GetAllPolaire()
        VB: PRace.Boat.GetAllPolaire()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Boat.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetAllPolaire
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Boat.cs
        startLine: 132
      syntax:
        content:
          CSharp: public List<Polaire> GetAllPolaire()
          VB: Public Function GetAllPolaire As List(Of Polaire)
        return:
          type: System.Collections.Generic.List{PRace.Polaire}
      overload: PRace.Boat.GetAllPolaire*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: PRace.Clock
    commentId: T:PRace.Clock
    language: CSharp
    name:
      CSharp: Clock
      VB: Clock
    nameWithType:
      CSharp: Clock
      VB: Clock
    qualifiedName:
      CSharp: PRace.Clock
      VB: PRace.Clock
    type: Class
    assemblies:
    - SimpleSimulator
    namespace: PRace
    source:
      remote:
        path: SimpleSimulator/SimpleSimulator/Model/Race/Clock.cs
        branch: main
        repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
      id: Clock
      path: ../SimpleSimulator/SimpleSimulator/Model/Race/Clock.cs
      startLine: 9
    syntax:
      content:
        CSharp: public class Clock
        VB: Public Class Clock
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PRace.Clock.#ctor(PRace.Race,PRace.Time)
      commentId: M:PRace.Clock.#ctor(PRace.Race,PRace.Time)
      language: CSharp
      name:
        CSharp: Clock(Race, Time)
        VB: Clock(Race, Time)
      nameWithType:
        CSharp: Clock.Clock(Race, Time)
        VB: Clock.Clock(Race, Time)
      qualifiedName:
        CSharp: PRace.Clock.Clock(PRace.Race, PRace.Time)
        VB: PRace.Clock.Clock(PRace.Race, PRace.Time)
      type: Constructor
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Clock.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: .ctor
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Clock.cs
        startLine: 11
      syntax:
        content:
          CSharp: public Clock(Race race, Time accFactor)
          VB: Public Sub New(race As Race, accFactor As Time)
        parameters:
        - id: race
          type: PRace.Race
        - id: accFactor
          type: PRace.Time
      overload: PRace.Clock.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Clock.GetCurrentMoment
      commentId: M:PRace.Clock.GetCurrentMoment
      language: CSharp
      name:
        CSharp: GetCurrentMoment()
        VB: GetCurrentMoment()
      nameWithType:
        CSharp: Clock.GetCurrentMoment()
        VB: Clock.GetCurrentMoment()
      qualifiedName:
        CSharp: PRace.Clock.GetCurrentMoment()
        VB: PRace.Clock.GetCurrentMoment()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Clock.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetCurrentMoment
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Clock.cs
        startLine: 28
      syntax:
        content:
          CSharp: public DateTime GetCurrentMoment()
          VB: Public Function GetCurrentMoment As Date
        return:
          type: System.DateTime
      overload: PRace.Clock.GetCurrentMoment*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Clock.IncrementTime
      commentId: M:PRace.Clock.IncrementTime
      language: CSharp
      name:
        CSharp: IncrementTime()
        VB: IncrementTime()
      nameWithType:
        CSharp: Clock.IncrementTime()
        VB: Clock.IncrementTime()
      qualifiedName:
        CSharp: PRace.Clock.IncrementTime()
        VB: PRace.Clock.IncrementTime()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Clock.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: IncrementTime
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Clock.cs
        startLine: 33
      syntax:
        content:
          CSharp: public void IncrementTime()
          VB: Public Sub IncrementTime
      overload: PRace.Clock.IncrementTime*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Clock.pause
      commentId: M:PRace.Clock.pause
      language: CSharp
      name:
        CSharp: pause()
        VB: pause()
      nameWithType:
        CSharp: Clock.pause()
        VB: Clock.pause()
      qualifiedName:
        CSharp: PRace.Clock.pause()
        VB: PRace.Clock.pause()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Clock.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: pause
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Clock.cs
        startLine: 38
      syntax:
        content:
          CSharp: public void pause()
          VB: Public Sub pause
      overload: PRace.Clock.pause*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Clock.Run
      commentId: M:PRace.Clock.Run
      language: CSharp
      name:
        CSharp: Run()
        VB: Run()
      nameWithType:
        CSharp: Clock.Run()
        VB: Clock.Run()
      qualifiedName:
        CSharp: PRace.Clock.Run()
        VB: PRace.Clock.Run()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Clock.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Run
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Clock.cs
        startLine: 43
      syntax:
        content:
          CSharp: public void Run()
          VB: Public Sub Run
      overload: PRace.Clock.Run*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Clock.nextIteration
      commentId: M:PRace.Clock.nextIteration
      language: CSharp
      name:
        CSharp: nextIteration()
        VB: nextIteration()
      nameWithType:
        CSharp: Clock.nextIteration()
        VB: Clock.nextIteration()
      qualifiedName:
        CSharp: PRace.Clock.nextIteration()
        VB: PRace.Clock.nextIteration()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Clock.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: nextIteration
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Clock.cs
        startLine: 60
      syntax:
        content:
          CSharp: public void nextIteration()
          VB: Public Sub nextIteration
      overload: PRace.Clock.nextIteration*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Clock.waitTick
      commentId: M:PRace.Clock.waitTick
      language: CSharp
      name:
        CSharp: waitTick()
        VB: waitTick()
      nameWithType:
        CSharp: Clock.waitTick()
        VB: Clock.waitTick()
      qualifiedName:
        CSharp: PRace.Clock.waitTick()
        VB: PRace.Clock.waitTick()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Clock.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: waitTick
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Clock.cs
        startLine: 67
      syntax:
        content:
          CSharp: public void waitTick()
          VB: Public Sub waitTick
      overload: PRace.Clock.waitTick*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Clock.cantKeepUp
      commentId: M:PRace.Clock.cantKeepUp
      language: CSharp
      name:
        CSharp: cantKeepUp()
        VB: cantKeepUp()
      nameWithType:
        CSharp: Clock.cantKeepUp()
        VB: Clock.cantKeepUp()
      qualifiedName:
        CSharp: PRace.Clock.cantKeepUp()
        VB: PRace.Clock.cantKeepUp()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Clock.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: cantKeepUp
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Clock.cs
        startLine: 77
      syntax:
        content:
          CSharp: public void cantKeepUp()
          VB: Public Sub cantKeepUp
      overload: PRace.Clock.cantKeepUp*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Clock.SetCurrentMoment(System.DateTime)
      commentId: M:PRace.Clock.SetCurrentMoment(System.DateTime)
      language: CSharp
      name:
        CSharp: SetCurrentMoment(DateTime)
        VB: SetCurrentMoment(DateTime)
      nameWithType:
        CSharp: Clock.SetCurrentMoment(DateTime)
        VB: Clock.SetCurrentMoment(DateTime)
      qualifiedName:
        CSharp: PRace.Clock.SetCurrentMoment(System.DateTime)
        VB: PRace.Clock.SetCurrentMoment(System.DateTime)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Clock.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: SetCurrentMoment
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Clock.cs
        startLine: 82
      syntax:
        content:
          CSharp: public void SetCurrentMoment(DateTime currentMoment)
          VB: Public Sub SetCurrentMoment(currentMoment As Date)
        parameters:
        - id: currentMoment
          type: System.DateTime
      overload: PRace.Clock.SetCurrentMoment*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Clock.GetIsPause
      commentId: M:PRace.Clock.GetIsPause
      language: CSharp
      name:
        CSharp: GetIsPause()
        VB: GetIsPause()
      nameWithType:
        CSharp: Clock.GetIsPause()
        VB: Clock.GetIsPause()
      qualifiedName:
        CSharp: PRace.Clock.GetIsPause()
        VB: PRace.Clock.GetIsPause()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Clock.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetIsPause
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Clock.cs
        startLine: 87
      syntax:
        content:
          CSharp: public bool GetIsPause()
          VB: Public Function GetIsPause As Boolean
        return:
          type: System.Boolean
      overload: PRace.Clock.GetIsPause*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: PRace.Competitor
    commentId: T:PRace.Competitor
    language: CSharp
    name:
      CSharp: Competitor
      VB: Competitor
    nameWithType:
      CSharp: Competitor
      VB: Competitor
    qualifiedName:
      CSharp: PRace.Competitor
      VB: PRace.Competitor
    type: Class
    assemblies:
    - SimpleSimulator
    namespace: PRace
    source:
      remote:
        path: SimpleSimulator/SimpleSimulator/Model/Race/Competitor.cs
        branch: main
        repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
      id: Competitor
      path: ../SimpleSimulator/SimpleSimulator/Model/Race/Competitor.cs
      startLine: 7
    syntax:
      content:
        CSharp: public class Competitor
        VB: Public Class Competitor
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PRace.Competitor.#ctor(System.Int32)
      commentId: M:PRace.Competitor.#ctor(System.Int32)
      language: CSharp
      name:
        CSharp: Competitor(Int32)
        VB: Competitor(Int32)
      nameWithType:
        CSharp: Competitor.Competitor(Int32)
        VB: Competitor.Competitor(Int32)
      qualifiedName:
        CSharp: PRace.Competitor.Competitor(System.Int32)
        VB: PRace.Competitor.Competitor(System.Int32)
      type: Constructor
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Competitor.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: .ctor
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Competitor.cs
        startLine: 9
      syntax:
        content:
          CSharp: public Competitor(int id)
          VB: Public Sub New(id As Integer)
        parameters:
        - id: id
          type: System.Int32
      overload: PRace.Competitor.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Competitor.#ctor(System.Int32,PRace.Position)
      commentId: M:PRace.Competitor.#ctor(System.Int32,PRace.Position)
      language: CSharp
      name:
        CSharp: Competitor(Int32, Position)
        VB: Competitor(Int32, Position)
      nameWithType:
        CSharp: Competitor.Competitor(Int32, Position)
        VB: Competitor.Competitor(Int32, Position)
      qualifiedName:
        CSharp: PRace.Competitor.Competitor(System.Int32, PRace.Position)
        VB: PRace.Competitor.Competitor(System.Int32, PRace.Position)
      type: Constructor
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Competitor.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: .ctor
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Competitor.cs
        startLine: 14
      syntax:
        content:
          CSharp: public Competitor(int id, Position position)
          VB: Public Sub New(id As Integer, position As Position)
        parameters:
        - id: id
          type: System.Int32
        - id: position
          type: PRace.Position
      overload: PRace.Competitor.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Competitor.SetPosition(PRace.Position)
      commentId: M:PRace.Competitor.SetPosition(PRace.Position)
      language: CSharp
      name:
        CSharp: SetPosition(Position)
        VB: SetPosition(Position)
      nameWithType:
        CSharp: Competitor.SetPosition(Position)
        VB: Competitor.SetPosition(Position)
      qualifiedName:
        CSharp: PRace.Competitor.SetPosition(PRace.Position)
        VB: PRace.Competitor.SetPosition(PRace.Position)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Competitor.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: SetPosition
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Competitor.cs
        startLine: 24
      syntax:
        content:
          CSharp: public void SetPosition(Position pos)
          VB: Public Sub SetPosition(pos As Position)
        parameters:
        - id: pos
          type: PRace.Position
      overload: PRace.Competitor.SetPosition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Competitor.GetPosition
      commentId: M:PRace.Competitor.GetPosition
      language: CSharp
      name:
        CSharp: GetPosition()
        VB: GetPosition()
      nameWithType:
        CSharp: Competitor.GetPosition()
        VB: Competitor.GetPosition()
      qualifiedName:
        CSharp: PRace.Competitor.GetPosition()
        VB: PRace.Competitor.GetPosition()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Competitor.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetPosition
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Competitor.cs
        startLine: 28
      syntax:
        content:
          CSharp: public Position GetPosition()
          VB: Public Function GetPosition As Position
        return:
          type: PRace.Position
      overload: PRace.Competitor.GetPosition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Competitor.GetId
      commentId: M:PRace.Competitor.GetId
      language: CSharp
      name:
        CSharp: GetId()
        VB: GetId()
      nameWithType:
        CSharp: Competitor.GetId()
        VB: Competitor.GetId()
      qualifiedName:
        CSharp: PRace.Competitor.GetId()
        VB: PRace.Competitor.GetId()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Competitor.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetId
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Competitor.cs
        startLine: 33
      syntax:
        content:
          CSharp: public int GetId()
          VB: Public Function GetId As Integer
        return:
          type: System.Int32
      overload: PRace.Competitor.GetId*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: PRace.DegreeIncrement
    commentId: T:PRace.DegreeIncrement
    language: CSharp
    name:
      CSharp: DegreeIncrement
      VB: DegreeIncrement
    nameWithType:
      CSharp: DegreeIncrement
      VB: DegreeIncrement
    qualifiedName:
      CSharp: PRace.DegreeIncrement
      VB: PRace.DegreeIncrement
    type: Enum
    assemblies:
    - SimpleSimulator
    namespace: PRace
    source:
      remote:
        path: SimpleSimulator/SimpleSimulator/Model/Race/DegreeIncrement.cs
        branch: main
        repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
      id: DegreeIncrement
      path: ../SimpleSimulator/SimpleSimulator/Model/Race/DegreeIncrement.cs
      startLine: 3
    syntax:
      content:
        CSharp: public enum DegreeIncrement
        VB: Public Enum DegreeIncrement
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: PRace.DegreeIncrement.One
      commentId: F:PRace.DegreeIncrement.One
      language: CSharp
      name:
        CSharp: One
        VB: One
      nameWithType:
        CSharp: DegreeIncrement.One
        VB: DegreeIncrement.One
      qualifiedName:
        CSharp: PRace.DegreeIncrement.One
        VB: PRace.DegreeIncrement.One
      type: Field
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/DegreeIncrement.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: One
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/DegreeIncrement.cs
        startLine: 4
      syntax:
        content:
          CSharp: One = 1
          VB: One = 1
        return:
          type: PRace.DegreeIncrement
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PRace.DegreeIncrement.Ten
      commentId: F:PRace.DegreeIncrement.Ten
      language: CSharp
      name:
        CSharp: Ten
        VB: Ten
      nameWithType:
        CSharp: DegreeIncrement.Ten
        VB: DegreeIncrement.Ten
      qualifiedName:
        CSharp: PRace.DegreeIncrement.Ten
        VB: PRace.DegreeIncrement.Ten
      type: Field
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/DegreeIncrement.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Ten
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/DegreeIncrement.cs
        startLine: 5
      syntax:
        content:
          CSharp: Ten = 10
          VB: Ten = 10
        return:
          type: PRace.DegreeIncrement
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PRace.DegreeIncrement.MinusOne
      commentId: F:PRace.DegreeIncrement.MinusOne
      language: CSharp
      name:
        CSharp: MinusOne
        VB: MinusOne
      nameWithType:
        CSharp: DegreeIncrement.MinusOne
        VB: DegreeIncrement.MinusOne
      qualifiedName:
        CSharp: PRace.DegreeIncrement.MinusOne
        VB: PRace.DegreeIncrement.MinusOne
      type: Field
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/DegreeIncrement.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: MinusOne
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/DegreeIncrement.cs
        startLine: 6
      syntax:
        content:
          CSharp: MinusOne = -1
          VB: MinusOne = -1
        return:
          type: PRace.DegreeIncrement
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PRace.DegreeIncrement.MinusTen
      commentId: F:PRace.DegreeIncrement.MinusTen
      language: CSharp
      name:
        CSharp: MinusTen
        VB: MinusTen
      nameWithType:
        CSharp: DegreeIncrement.MinusTen
        VB: DegreeIncrement.MinusTen
      qualifiedName:
        CSharp: PRace.DegreeIncrement.MinusTen
        VB: PRace.DegreeIncrement.MinusTen
      type: Field
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/DegreeIncrement.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: MinusTen
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/DegreeIncrement.cs
        startLine: 7
      syntax:
        content:
          CSharp: MinusTen = -10
          VB: MinusTen = -10
        return:
          type: PRace.DegreeIncrement
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: PRace.Mode
    commentId: T:PRace.Mode
    language: CSharp
    name:
      CSharp: Mode
      VB: Mode
    nameWithType:
      CSharp: Mode
      VB: Mode
    qualifiedName:
      CSharp: PRace.Mode
      VB: PRace.Mode
    type: Enum
    assemblies:
    - SimpleSimulator
    namespace: PRace
    source:
      remote:
        path: SimpleSimulator/SimpleSimulator/Model/Race/Mode.cs
        branch: main
        repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
      id: Mode
      path: ../SimpleSimulator/SimpleSimulator/Model/Race/Mode.cs
      startLine: 3
    syntax:
      content:
        CSharp: public enum Mode
        VB: Public Enum Mode
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: PRace.Mode.Entrainement
      commentId: F:PRace.Mode.Entrainement
      language: CSharp
      name:
        CSharp: Entrainement
        VB: Entrainement
      nameWithType:
        CSharp: Mode.Entrainement
        VB: Mode.Entrainement
      qualifiedName:
        CSharp: PRace.Mode.Entrainement
        VB: PRace.Mode.Entrainement
      type: Field
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Mode.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Entrainement
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Mode.cs
        startLine: 4
      syntax:
        content:
          CSharp: Entrainement = 0
          VB: Entrainement = 0
        return:
          type: PRace.Mode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PRace.Mode.Asynchrone
      commentId: F:PRace.Mode.Asynchrone
      language: CSharp
      name:
        CSharp: Asynchrone
        VB: Asynchrone
      nameWithType:
        CSharp: Mode.Asynchrone
        VB: Mode.Asynchrone
      qualifiedName:
        CSharp: PRace.Mode.Asynchrone
        VB: PRace.Mode.Asynchrone
      type: Field
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Mode.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Asynchrone
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Mode.cs
        startLine: 5
      syntax:
        content:
          CSharp: Asynchrone = 1
          VB: Asynchrone = 1
        return:
          type: PRace.Mode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PRace.Mode.Synchrone
      commentId: F:PRace.Mode.Synchrone
      language: CSharp
      name:
        CSharp: Synchrone
        VB: Synchrone
      nameWithType:
        CSharp: Mode.Synchrone
        VB: Mode.Synchrone
      qualifiedName:
        CSharp: PRace.Mode.Synchrone
        VB: PRace.Mode.Synchrone
      type: Field
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Mode.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Synchrone
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Mode.cs
        startLine: 6
      syntax:
        content:
          CSharp: Synchrone = 2
          VB: Synchrone = 2
        return:
          type: PRace.Mode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: PRace.ModeCommande
    commentId: T:PRace.ModeCommande
    language: CSharp
    name:
      CSharp: ModeCommande
      VB: ModeCommande
    nameWithType:
      CSharp: ModeCommande
      VB: ModeCommande
    qualifiedName:
      CSharp: PRace.ModeCommande
      VB: PRace.ModeCommande
    type: Enum
    assemblies:
    - SimpleSimulator
    namespace: PRace
    source:
      remote:
        path: SimpleSimulator/SimpleSimulator/Model/Race/ModeCommande.cs
        branch: main
        repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
      id: ModeCommande
      path: ../SimpleSimulator/SimpleSimulator/Model/Race/ModeCommande.cs
      startLine: 2
    syntax:
      content:
        CSharp: public enum ModeCommande
        VB: Public Enum ModeCommande
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: PRace.ModeCommande.cap
      commentId: F:PRace.ModeCommande.cap
      language: CSharp
      name:
        CSharp: cap
        VB: cap
      nameWithType:
        CSharp: ModeCommande.cap
        VB: ModeCommande.cap
      qualifiedName:
        CSharp: PRace.ModeCommande.cap
        VB: PRace.ModeCommande.cap
      type: Field
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/ModeCommande.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: cap
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/ModeCommande.cs
        startLine: 3
      syntax:
        content:
          CSharp: cap = 0
          VB: cap = 0
        return:
          type: PRace.ModeCommande
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PRace.ModeCommande.RegulateurAmure
      commentId: F:PRace.ModeCommande.RegulateurAmure
      language: CSharp
      name:
        CSharp: RegulateurAmure
        VB: RegulateurAmure
      nameWithType:
        CSharp: ModeCommande.RegulateurAmure
        VB: ModeCommande.RegulateurAmure
      qualifiedName:
        CSharp: PRace.ModeCommande.RegulateurAmure
        VB: PRace.ModeCommande.RegulateurAmure
      type: Field
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/ModeCommande.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: RegulateurAmure
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/ModeCommande.cs
        startLine: 4
      syntax:
        content:
          CSharp: RegulateurAmure = 1
          VB: RegulateurAmure = 1
        return:
          type: PRace.ModeCommande
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: PRace.Polaire
    commentId: T:PRace.Polaire
    language: CSharp
    name:
      CSharp: Polaire
      VB: Polaire
    nameWithType:
      CSharp: Polaire
      VB: Polaire
    qualifiedName:
      CSharp: PRace.Polaire
      VB: PRace.Polaire
    type: Class
    assemblies:
    - SimpleSimulator
    namespace: PRace
    source:
      remote:
        path: SimpleSimulator/SimpleSimulator/Model/Race/Polaire.cs
        branch: main
        repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
      id: Polaire
      path: ../SimpleSimulator/SimpleSimulator/Model/Race/Polaire.cs
      startLine: 8
    syntax:
      content:
        CSharp: public class Polaire
        VB: Public Class Polaire
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PRace.Polaire.#ctor(System.String,System.Collections.Generic.Dictionary{System.Single,System.Collections.Generic.Dictionary{System.Single,System.Single}})
      commentId: M:PRace.Polaire.#ctor(System.String,System.Collections.Generic.Dictionary{System.Single,System.Collections.Generic.Dictionary{System.Single,System.Single}})
      language: CSharp
      name:
        CSharp: Polaire(String, Dictionary<Single, Dictionary<Single, Single>>)
        VB: Polaire(String, Dictionary(Of Single, Dictionary(Of Single, Single)))
      nameWithType:
        CSharp: Polaire.Polaire(String, Dictionary<Single, Dictionary<Single, Single>>)
        VB: Polaire.Polaire(String, Dictionary(Of Single, Dictionary(Of Single, Single)))
      qualifiedName:
        CSharp: PRace.Polaire.Polaire(System.String, System.Collections.Generic.Dictionary<System.Single, System.Collections.Generic.Dictionary<System.Single, System.Single>>)
        VB: PRace.Polaire.Polaire(System.String, System.Collections.Generic.Dictionary(Of System.Single, System.Collections.Generic.Dictionary(Of System.Single, System.Single)))
      type: Constructor
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Polaire.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: .ctor
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Polaire.cs
        startLine: 10
      syntax:
        content:
          CSharp: public Polaire(string name, Dictionary<float, Dictionary<float, float>> pol)
          VB: Public Sub New(name As String, pol As Dictionary(Of Single, Dictionary(Of Single, Single)))
        parameters:
        - id: name
          type: System.String
        - id: pol
          type: System.Collections.Generic.Dictionary{System.Single,System.Collections.Generic.Dictionary{System.Single,System.Single}}
      overload: PRace.Polaire.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Polaire.GetNearest(System.Single[],System.Single)
      commentId: M:PRace.Polaire.GetNearest(System.Single[],System.Single)
      language: CSharp
      name:
        CSharp: GetNearest(Single[], Single)
        VB: GetNearest(Single(), Single)
      nameWithType:
        CSharp: Polaire.GetNearest(Single[], Single)
        VB: Polaire.GetNearest(Single(), Single)
      qualifiedName:
        CSharp: PRace.Polaire.GetNearest(System.Single[], System.Single)
        VB: PRace.Polaire.GetNearest(System.Single(), System.Single)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Polaire.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetNearest
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Polaire.cs
        startLine: 22
      syntax:
        content:
          CSharp: public float GetNearest(float[] tab, float val)
          VB: Public Function GetNearest(tab As Single(), val As Single) As Single
        parameters:
        - id: tab
          type: System.Single[]
        - id: val
          type: System.Single
        return:
          type: System.Single
      overload: PRace.Polaire.GetNearest*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Polaire.getSpeed(System.Single,System.Single)
      commentId: M:PRace.Polaire.getSpeed(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: getSpeed(Single, Single)
        VB: getSpeed(Single, Single)
      nameWithType:
        CSharp: Polaire.getSpeed(Single, Single)
        VB: Polaire.getSpeed(Single, Single)
      qualifiedName:
        CSharp: PRace.Polaire.getSpeed(System.Single, System.Single)
        VB: PRace.Polaire.getSpeed(System.Single, System.Single)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Polaire.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: getSpeed
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Polaire.cs
        startLine: 53
      summary: "\n@param int WindSpeed \n@param int angle\n"
      example: []
      syntax:
        content:
          CSharp: public float getSpeed(float angle, float WindSpeed)
          VB: Public Function getSpeed(angle As Single, WindSpeed As Single) As Single
        parameters:
        - id: angle
          type: System.Single
        - id: WindSpeed
          type: System.Single
        return:
          type: System.Single
      overload: PRace.Polaire.getSpeed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Polaire.setName(System.String)
      commentId: M:PRace.Polaire.setName(System.String)
      language: CSharp
      name:
        CSharp: setName(String)
        VB: setName(String)
      nameWithType:
        CSharp: Polaire.setName(String)
        VB: Polaire.setName(String)
      qualifiedName:
        CSharp: PRace.Polaire.setName(System.String)
        VB: PRace.Polaire.setName(System.String)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Polaire.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: setName
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Polaire.cs
        startLine: 78
      syntax:
        content:
          CSharp: public void setName(string name)
          VB: Public Sub setName(name As String)
        parameters:
        - id: name
          type: System.String
      overload: PRace.Polaire.setName*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Polaire.getName
      commentId: M:PRace.Polaire.getName
      language: CSharp
      name:
        CSharp: getName()
        VB: getName()
      nameWithType:
        CSharp: Polaire.getName()
        VB: Polaire.getName()
      qualifiedName:
        CSharp: PRace.Polaire.getName()
        VB: PRace.Polaire.getName()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Polaire.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: getName
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Polaire.cs
        startLine: 83
      syntax:
        content:
          CSharp: public string getName()
          VB: Public Function getName As String
        return:
          type: System.String
      overload: PRace.Polaire.getName*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: PRace.Position
    commentId: T:PRace.Position
    language: CSharp
    name:
      CSharp: Position
      VB: Position
    nameWithType:
      CSharp: Position
      VB: Position
    qualifiedName:
      CSharp: PRace.Position
      VB: PRace.Position
    type: Class
    assemblies:
    - SimpleSimulator
    namespace: PRace
    source:
      remote:
        path: SimpleSimulator/SimpleSimulator/Model/Race/Position.cs
        branch: main
        repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
      id: Position
      path: ../SimpleSimulator/SimpleSimulator/Model/Race/Position.cs
      startLine: 8
    syntax:
      content:
        CSharp: public class Position
        VB: Public Class Position
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PRace.Position.#ctor(System.Double,System.Double)
      commentId: M:PRace.Position.#ctor(System.Double,System.Double)
      language: CSharp
      name:
        CSharp: Position(Double, Double)
        VB: Position(Double, Double)
      nameWithType:
        CSharp: Position.Position(Double, Double)
        VB: Position.Position(Double, Double)
      qualifiedName:
        CSharp: PRace.Position.Position(System.Double, System.Double)
        VB: PRace.Position.Position(System.Double, System.Double)
      type: Constructor
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Position.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: .ctor
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Position.cs
        startLine: 10
      syntax:
        content:
          CSharp: public Position(double longitude, double latitude)
          VB: Public Sub New(longitude As Double, latitude As Double)
        parameters:
        - id: longitude
          type: System.Double
        - id: latitude
          type: System.Double
      overload: PRace.Position.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Position.Update(System.Double,System.Double)
      commentId: M:PRace.Position.Update(System.Double,System.Double)
      language: CSharp
      name:
        CSharp: Update(Double, Double)
        VB: Update(Double, Double)
      nameWithType:
        CSharp: Position.Update(Double, Double)
        VB: Position.Update(Double, Double)
      qualifiedName:
        CSharp: PRace.Position.Update(System.Double, System.Double)
        VB: PRace.Position.Update(System.Double, System.Double)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Position.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Update
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Position.cs
        startLine: 26
      summary: "\n@param float latitude \n@param float longitude\n"
      example: []
      syntax:
        content:
          CSharp: public void Update(double longitude, double latitude)
          VB: Public Sub Update(longitude As Double, latitude As Double)
        parameters:
        - id: longitude
          type: System.Double
        - id: latitude
          type: System.Double
      overload: PRace.Position.Update*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Position.GetLongitude
      commentId: M:PRace.Position.GetLongitude
      language: CSharp
      name:
        CSharp: GetLongitude()
        VB: GetLongitude()
      nameWithType:
        CSharp: Position.GetLongitude()
        VB: Position.GetLongitude()
      qualifiedName:
        CSharp: PRace.Position.GetLongitude()
        VB: PRace.Position.GetLongitude()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Position.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetLongitude
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Position.cs
        startLine: 31
      syntax:
        content:
          CSharp: public double GetLongitude()
          VB: Public Function GetLongitude As Double
        return:
          type: System.Double
      overload: PRace.Position.GetLongitude*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Position.GetLatitude
      commentId: M:PRace.Position.GetLatitude
      language: CSharp
      name:
        CSharp: GetLatitude()
        VB: GetLatitude()
      nameWithType:
        CSharp: Position.GetLatitude()
        VB: Position.GetLatitude()
      qualifiedName:
        CSharp: PRace.Position.GetLatitude()
        VB: PRace.Position.GetLatitude()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Position.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetLatitude
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Position.cs
        startLine: 36
      syntax:
        content:
          CSharp: public double GetLatitude()
          VB: Public Function GetLatitude As Double
        return:
          type: System.Double
      overload: PRace.Position.GetLatitude*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Position.GetLatitudeAngle
      commentId: M:PRace.Position.GetLatitudeAngle
      language: CSharp
      name:
        CSharp: GetLatitudeAngle()
        VB: GetLatitudeAngle()
      nameWithType:
        CSharp: Position.GetLatitudeAngle()
        VB: Position.GetLatitudeAngle()
      qualifiedName:
        CSharp: PRace.Position.GetLatitudeAngle()
        VB: PRace.Position.GetLatitudeAngle()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Position.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetLatitudeAngle
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Position.cs
        startLine: 41
      syntax:
        content:
          CSharp: public double GetLatitudeAngle()
          VB: Public Function GetLatitudeAngle As Double
        return:
          type: System.Double
      overload: PRace.Position.GetLatitudeAngle*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Position.GetLongitudeAngle
      commentId: M:PRace.Position.GetLongitudeAngle
      language: CSharp
      name:
        CSharp: GetLongitudeAngle()
        VB: GetLongitudeAngle()
      nameWithType:
        CSharp: Position.GetLongitudeAngle()
        VB: Position.GetLongitudeAngle()
      qualifiedName:
        CSharp: PRace.Position.GetLongitudeAngle()
        VB: PRace.Position.GetLongitudeAngle()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Position.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetLongitudeAngle
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Position.cs
        startLine: 46
      syntax:
        content:
          CSharp: public double GetLongitudeAngle()
          VB: Public Function GetLongitudeAngle As Double
        return:
          type: System.Double
      overload: PRace.Position.GetLongitudeAngle*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Position.ToString
      commentId: M:PRace.Position.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: Position.ToString()
        VB: Position.ToString()
      qualifiedName:
        CSharp: PRace.Position.ToString()
        VB: PRace.Position.ToString()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Position.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: ToString
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Position.cs
        startLine: 51
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: PRace.Position.ToString*
      overridden: System.Object.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: PRace.Position.Equals(System.Object)
      commentId: M:PRace.Position.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: Position.Equals(Object)
        VB: Position.Equals(Object)
      qualifiedName:
        CSharp: PRace.Position.Equals(System.Object)
        VB: PRace.Position.Equals(System.Object)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Position.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Equals
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Position.cs
        startLine: 57
      syntax:
        content:
          CSharp: public override bool Equals(object o)
          VB: Public Overrides Function Equals(o As Object) As Boolean
        parameters:
        - id: o
          type: System.Object
        return:
          type: System.Boolean
      overload: PRace.Position.Equals*
      overridden: System.Object.Equals(System.Object)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: PRace.Race
    commentId: T:PRace.Race
    language: CSharp
    name:
      CSharp: Race
      VB: Race
    nameWithType:
      CSharp: Race
      VB: Race
    qualifiedName:
      CSharp: PRace.Race
      VB: PRace.Race
    type: Class
    assemblies:
    - SimpleSimulator
    namespace: PRace
    source:
      remote:
        path: SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
        branch: main
        repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
      id: Race
      path: ../SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
      startLine: 8
    syntax:
      content:
        CSharp: public class Race
        VB: Public Class Race
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PRace.Race.#ctor(PRace.Mode,AquitisionCommunication.RaceSave.JsonRace)
      commentId: M:PRace.Race.#ctor(PRace.Mode,AquitisionCommunication.RaceSave.JsonRace)
      language: CSharp
      name:
        CSharp: Race(Mode, RaceSave.JsonRace)
        VB: Race(Mode, RaceSave.JsonRace)
      nameWithType:
        CSharp: Race.Race(Mode, RaceSave.JsonRace)
        VB: Race.Race(Mode, RaceSave.JsonRace)
      qualifiedName:
        CSharp: PRace.Race.Race(PRace.Mode, AquitisionCommunication.RaceSave.JsonRace)
        VB: PRace.Race.Race(PRace.Mode, AquitisionCommunication.RaceSave.JsonRace)
      type: Constructor
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: .ctor
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
        startLine: 10
      syntax:
        content:
          CSharp: public Race(Mode mode, RaceSave.JsonRace jrace = null)
          VB: Public Sub New(mode As Mode, jrace As RaceSave.JsonRace = Nothing)
        parameters:
        - id: mode
          type: PRace.Mode
        - id: jrace
          type: AquitisionCommunication.RaceSave.JsonRace
      overload: PRace.Race.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.GetId
      commentId: M:PRace.Race.GetId
      language: CSharp
      name:
        CSharp: GetId()
        VB: GetId()
      nameWithType:
        CSharp: Race.GetId()
        VB: Race.GetId()
      qualifiedName:
        CSharp: PRace.Race.GetId()
        VB: PRace.Race.GetId()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetId
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
        startLine: 95
      syntax:
        content:
          CSharp: public int GetId()
          VB: Public Function GetId As Integer
        return:
          type: System.Int32
      overload: PRace.Race.GetId*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.GetCurrentInstant
      commentId: M:PRace.Race.GetCurrentInstant
      language: CSharp
      name:
        CSharp: GetCurrentInstant()
        VB: GetCurrentInstant()
      nameWithType:
        CSharp: Race.GetCurrentInstant()
        VB: Race.GetCurrentInstant()
      qualifiedName:
        CSharp: PRace.Race.GetCurrentInstant()
        VB: PRace.Race.GetCurrentInstant()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetCurrentInstant
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
        startLine: 100
      syntax:
        content:
          CSharp: public DateTime GetCurrentInstant()
          VB: Public Function GetCurrentInstant As Date
        return:
          type: System.DateTime
      overload: PRace.Race.GetCurrentInstant*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.GetWayPoint
      commentId: M:PRace.Race.GetWayPoint
      language: CSharp
      name:
        CSharp: GetWayPoint()
        VB: GetWayPoint()
      nameWithType:
        CSharp: Race.GetWayPoint()
        VB: Race.GetWayPoint()
      qualifiedName:
        CSharp: PRace.Race.GetWayPoint()
        VB: PRace.Race.GetWayPoint()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetWayPoint
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
        startLine: 105
      syntax:
        content:
          CSharp: public List<WayPoint> GetWayPoint()
          VB: Public Function GetWayPoint As List(Of WayPoint)
        return:
          type: System.Collections.Generic.List{PRace.WayPoint}
      overload: PRace.Race.GetWayPoint*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.GetEnvironment
      commentId: M:PRace.Race.GetEnvironment
      language: CSharp
      name:
        CSharp: GetEnvironment()
        VB: GetEnvironment()
      nameWithType:
        CSharp: Race.GetEnvironment()
        VB: Race.GetEnvironment()
      qualifiedName:
        CSharp: PRace.Race.GetEnvironment()
        VB: PRace.Race.GetEnvironment()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetEnvironment
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
        startLine: 110
      syntax:
        content:
          CSharp: public Environment GetEnvironment()
          VB: Public Function GetEnvironment As Environment
        return:
          type: Environement.Environment
      overload: PRace.Race.GetEnvironment*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.GetCurrentPolaire
      commentId: M:PRace.Race.GetCurrentPolaire
      language: CSharp
      name:
        CSharp: GetCurrentPolaire()
        VB: GetCurrentPolaire()
      nameWithType:
        CSharp: Race.GetCurrentPolaire()
        VB: Race.GetCurrentPolaire()
      qualifiedName:
        CSharp: PRace.Race.GetCurrentPolaire()
        VB: PRace.Race.GetCurrentPolaire()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetCurrentPolaire
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
        startLine: 115
      syntax:
        content:
          CSharp: public Polaire GetCurrentPolaire()
          VB: Public Function GetCurrentPolaire As Polaire
        return:
          type: PRace.Polaire
      overload: PRace.Race.GetCurrentPolaire*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.GetAllPolaire
      commentId: M:PRace.Race.GetAllPolaire
      language: CSharp
      name:
        CSharp: GetAllPolaire()
        VB: GetAllPolaire()
      nameWithType:
        CSharp: Race.GetAllPolaire()
        VB: Race.GetAllPolaire()
      qualifiedName:
        CSharp: PRace.Race.GetAllPolaire()
        VB: PRace.Race.GetAllPolaire()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetAllPolaire
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
        startLine: 120
      syntax:
        content:
          CSharp: public List<Polaire> GetAllPolaire()
          VB: Public Function GetAllPolaire As List(Of Polaire)
        return:
          type: System.Collections.Generic.List{PRace.Polaire}
      overload: PRace.Race.GetAllPolaire*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.GetBoatId
      commentId: M:PRace.Race.GetBoatId
      language: CSharp
      name:
        CSharp: GetBoatId()
        VB: GetBoatId()
      nameWithType:
        CSharp: Race.GetBoatId()
        VB: Race.GetBoatId()
      qualifiedName:
        CSharp: PRace.Race.GetBoatId()
        VB: PRace.Race.GetBoatId()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetBoatId
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
        startLine: 125
      syntax:
        content:
          CSharp: public int GetBoatId()
          VB: Public Function GetBoatId As Integer
        return:
          type: System.Int32
      overload: PRace.Race.GetBoatId*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.GetBoatCap
      commentId: M:PRace.Race.GetBoatCap
      language: CSharp
      name:
        CSharp: GetBoatCap()
        VB: GetBoatCap()
      nameWithType:
        CSharp: Race.GetBoatCap()
        VB: Race.GetBoatCap()
      qualifiedName:
        CSharp: PRace.Race.GetBoatCap()
        VB: PRace.Race.GetBoatCap()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetBoatCap
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
        startLine: 129
      syntax:
        content:
          CSharp: public float GetBoatCap()
          VB: Public Function GetBoatCap As Single
        return:
          type: System.Single
      overload: PRace.Race.GetBoatCap*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.GetCompetitors
      commentId: M:PRace.Race.GetCompetitors
      language: CSharp
      name:
        CSharp: GetCompetitors()
        VB: GetCompetitors()
      nameWithType:
        CSharp: Race.GetCompetitors()
        VB: Race.GetCompetitors()
      qualifiedName:
        CSharp: PRace.Race.GetCompetitors()
        VB: PRace.Race.GetCompetitors()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetCompetitors
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
        startLine: 134
      syntax:
        content:
          CSharp: public List<Competitor> GetCompetitors()
          VB: Public Function GetCompetitors As List(Of Competitor)
        return:
          type: System.Collections.Generic.List{PRace.Competitor}
      overload: PRace.Race.GetCompetitors*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.SetAccFactor(System.Single)
      commentId: M:PRace.Race.SetAccFactor(System.Single)
      language: CSharp
      name:
        CSharp: SetAccFactor(Single)
        VB: SetAccFactor(Single)
      nameWithType:
        CSharp: Race.SetAccFactor(Single)
        VB: Race.SetAccFactor(Single)
      qualifiedName:
        CSharp: PRace.Race.SetAccFactor(System.Single)
        VB: PRace.Race.SetAccFactor(System.Single)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: SetAccFactor
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
        startLine: 139
      syntax:
        content:
          CSharp: public void SetAccFactor(float acc)
          VB: Public Sub SetAccFactor(acc As Single)
        parameters:
        - id: acc
          type: System.Single
      overload: PRace.Race.SetAccFactor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.GetAccFactor
      commentId: M:PRace.Race.GetAccFactor
      language: CSharp
      name:
        CSharp: GetAccFactor()
        VB: GetAccFactor()
      nameWithType:
        CSharp: Race.GetAccFactor()
        VB: Race.GetAccFactor()
      qualifiedName:
        CSharp: PRace.Race.GetAccFactor()
        VB: PRace.Race.GetAccFactor()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetAccFactor
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
        startLine: 144
      syntax:
        content:
          CSharp: public float GetAccFactor()
          VB: Public Function GetAccFactor As Single
        return:
          type: System.Single
      overload: PRace.Race.GetAccFactor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.SetCompetitors(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{System.Single})
      commentId: M:PRace.Race.SetCompetitors(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{System.Single})
      language: CSharp
      name:
        CSharp: SetCompetitors(List<Int32>, List<Single>, List<Single>)
        VB: SetCompetitors(List(Of Int32), List(Of Single), List(Of Single))
      nameWithType:
        CSharp: Race.SetCompetitors(List<Int32>, List<Single>, List<Single>)
        VB: Race.SetCompetitors(List(Of Int32), List(Of Single), List(Of Single))
      qualifiedName:
        CSharp: PRace.Race.SetCompetitors(System.Collections.Generic.List<System.Int32>, System.Collections.Generic.List<System.Single>, System.Collections.Generic.List<System.Single>)
        VB: PRace.Race.SetCompetitors(System.Collections.Generic.List(Of System.Int32), System.Collections.Generic.List(Of System.Single), System.Collections.Generic.List(Of System.Single))
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: SetCompetitors
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
        startLine: 149
      syntax:
        content:
          CSharp: public void SetCompetitors(List<int> id, List<float> latitude, List<float> longitude)
          VB: Public Sub SetCompetitors(id As List(Of Integer), latitude As List(Of Single), longitude As List(Of Single))
        parameters:
        - id: id
          type: System.Collections.Generic.List{System.Int32}
        - id: latitude
          type: System.Collections.Generic.List{System.Single}
        - id: longitude
          type: System.Collections.Generic.List{System.Single}
      overload: PRace.Race.SetCompetitors*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.GetBoat
      commentId: M:PRace.Race.GetBoat
      language: CSharp
      name:
        CSharp: GetBoat()
        VB: GetBoat()
      nameWithType:
        CSharp: Race.GetBoat()
        VB: Race.GetBoat()
      qualifiedName:
        CSharp: PRace.Race.GetBoat()
        VB: PRace.Race.GetBoat()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetBoat
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
        startLine: 161
      syntax:
        content:
          CSharp: public Boat GetBoat()
          VB: Public Function GetBoat As Boat
        return:
          type: PRace.Boat
      overload: PRace.Race.GetBoat*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.GetPosition
      commentId: M:PRace.Race.GetPosition
      language: CSharp
      name:
        CSharp: GetPosition()
        VB: GetPosition()
      nameWithType:
        CSharp: Race.GetPosition()
        VB: Race.GetPosition()
      qualifiedName:
        CSharp: PRace.Race.GetPosition()
        VB: PRace.Race.GetPosition()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetPosition
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
        startLine: 166
      syntax:
        content:
          CSharp: public (double longitude, double latitude) GetPosition()
          VB: Public Function GetPosition As(longitude As Double, latitude As Double)(Of Double , Double)
        return:
          type: System.ValueTuple{System.Double,System.Double}
      overload: PRace.Race.GetPosition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.SetWayPoint(System.Collections.Generic.List{PRace.WayPoint})
      commentId: M:PRace.Race.SetWayPoint(System.Collections.Generic.List{PRace.WayPoint})
      language: CSharp
      name:
        CSharp: SetWayPoint(List<WayPoint>)
        VB: SetWayPoint(List(Of WayPoint))
      nameWithType:
        CSharp: Race.SetWayPoint(List<WayPoint>)
        VB: Race.SetWayPoint(List(Of WayPoint))
      qualifiedName:
        CSharp: PRace.Race.SetWayPoint(System.Collections.Generic.List<PRace.WayPoint>)
        VB: PRace.Race.SetWayPoint(System.Collections.Generic.List(Of PRace.WayPoint))
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: SetWayPoint
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
        startLine: 175
      summary: "\n@param List WayPoint wayPoints\n"
      example: []
      syntax:
        content:
          CSharp: public void SetWayPoint(List<WayPoint> wayPoints)
          VB: Public Sub SetWayPoint(wayPoints As List(Of WayPoint))
        parameters:
        - id: wayPoints
          type: System.Collections.Generic.List{PRace.WayPoint}
      overload: PRace.Race.SetWayPoint*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.change_Env(System.Collections.Generic.Dictionary{Environement.Conditions,System.Single})
      commentId: M:PRace.Race.change_Env(System.Collections.Generic.Dictionary{Environement.Conditions,System.Single})
      language: CSharp
      name:
        CSharp: change_Env(Dictionary<Conditions, Single>)
        VB: change_Env(Dictionary(Of Conditions, Single))
      nameWithType:
        CSharp: Race.change_Env(Dictionary<Conditions, Single>)
        VB: Race.change_Env(Dictionary(Of Conditions, Single))
      qualifiedName:
        CSharp: PRace.Race.change_Env(System.Collections.Generic.Dictionary<Environement.Conditions, System.Single>)
        VB: PRace.Race.change_Env(System.Collections.Generic.Dictionary(Of Environement.Conditions, System.Single))
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: change_Env
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
        startLine: 182
      summary: "\n@param float env\n"
      example: []
      syntax:
        content:
          CSharp: public void change_Env(Dictionary<Conditions, float> env)
          VB: Public Sub change_Env(env As Dictionary(Of Conditions, Single))
        parameters:
        - id: env
          type: System.Collections.Generic.Dictionary{Environement.Conditions,System.Single}
      overload: PRace.Race.change_Env*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.sendPosition
      commentId: M:PRace.Race.sendPosition
      language: CSharp
      name:
        CSharp: sendPosition()
        VB: sendPosition()
      nameWithType:
        CSharp: Race.sendPosition()
        VB: Race.sendPosition()
      qualifiedName:
        CSharp: PRace.Race.sendPosition()
        VB: PRace.Race.sendPosition()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: sendPosition
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
        startLine: 186
      syntax:
        content:
          CSharp: public void sendPosition()
          VB: Public Sub sendPosition
      overload: PRace.Race.sendPosition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.getMode
      commentId: M:PRace.Race.getMode
      language: CSharp
      name:
        CSharp: getMode()
        VB: getMode()
      nameWithType:
        CSharp: Race.getMode()
        VB: Race.getMode()
      qualifiedName:
        CSharp: PRace.Race.getMode()
        VB: PRace.Race.getMode()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: getMode
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
        startLine: 191
      syntax:
        content:
          CSharp: public Mode getMode()
          VB: Public Function getMode As Mode
        return:
          type: PRace.Mode
      overload: PRace.Race.getMode*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.setacceleratorFactor(System.Int32)
      commentId: M:PRace.Race.setacceleratorFactor(System.Int32)
      language: CSharp
      name:
        CSharp: setacceleratorFactor(Int32)
        VB: setacceleratorFactor(Int32)
      nameWithType:
        CSharp: Race.setacceleratorFactor(Int32)
        VB: Race.setacceleratorFactor(Int32)
      qualifiedName:
        CSharp: PRace.Race.setacceleratorFactor(System.Int32)
        VB: PRace.Race.setacceleratorFactor(System.Int32)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: setacceleratorFactor
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
        startLine: 198
      summary: "\n@param int AccFac\n"
      example: []
      syntax:
        content:
          CSharp: public void setacceleratorFactor(int AccFac)
          VB: Public Sub setacceleratorFactor(AccFac As Integer)
        parameters:
        - id: AccFac
          type: System.Int32
      overload: PRace.Race.setacceleratorFactor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.Pause
      commentId: M:PRace.Race.Pause
      language: CSharp
      name:
        CSharp: Pause()
        VB: Pause()
      nameWithType:
        CSharp: Race.Pause()
        VB: Race.Pause()
      qualifiedName:
        CSharp: PRace.Race.Pause()
        VB: PRace.Race.Pause()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Pause
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
        startLine: 203
      syntax:
        content:
          CSharp: public void Pause()
          VB: Public Sub Pause
      overload: PRace.Race.Pause*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.Run
      commentId: M:PRace.Race.Run
      language: CSharp
      name:
        CSharp: Run()
        VB: Run()
      nameWithType:
        CSharp: Race.Run()
        VB: Race.Run()
      qualifiedName:
        CSharp: PRace.Race.Run()
        VB: PRace.Race.Run()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Run
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
        startLine: 208
      syntax:
        content:
          CSharp: public void Run()
          VB: Public Sub Run
      overload: PRace.Race.Run*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.nextIteration
      commentId: M:PRace.Race.nextIteration
      language: CSharp
      name:
        CSharp: nextIteration()
        VB: nextIteration()
      nameWithType:
        CSharp: Race.nextIteration()
        VB: Race.nextIteration()
      qualifiedName:
        CSharp: PRace.Race.nextIteration()
        VB: PRace.Race.nextIteration()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: nextIteration
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
        startLine: 213
      syntax:
        content:
          CSharp: public void nextIteration()
          VB: Public Sub nextIteration
      overload: PRace.Race.nextIteration*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.GetisPause
      commentId: M:PRace.Race.GetisPause
      language: CSharp
      name:
        CSharp: GetisPause()
        VB: GetisPause()
      nameWithType:
        CSharp: Race.GetisPause()
        VB: Race.GetisPause()
      qualifiedName:
        CSharp: PRace.Race.GetisPause()
        VB: PRace.Race.GetisPause()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetisPause
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
        startLine: 219
      syntax:
        content:
          CSharp: public bool GetisPause()
          VB: Public Function GetisPause As Boolean
        return:
          type: System.Boolean
      overload: PRace.Race.GetisPause*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.GetBoatStatus
      commentId: M:PRace.Race.GetBoatStatus
      language: CSharp
      name:
        CSharp: GetBoatStatus()
        VB: GetBoatStatus()
      nameWithType:
        CSharp: Race.GetBoatStatus()
        VB: Race.GetBoatStatus()
      qualifiedName:
        CSharp: PRace.Race.GetBoatStatus()
        VB: PRace.Race.GetBoatStatus()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetBoatStatus
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Race.cs
        startLine: 224
      syntax:
        content:
          CSharp: public List<double> GetBoatStatus()
          VB: Public Function GetBoatStatus As List(Of Double)
        return:
          type: System.Collections.Generic.List{System.Double}
      overload: PRace.Race.GetBoatStatus*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: PRace.RegulateurAmure
    commentId: T:PRace.RegulateurAmure
    language: CSharp
    name:
      CSharp: RegulateurAmure
      VB: RegulateurAmure
    nameWithType:
      CSharp: RegulateurAmure
      VB: RegulateurAmure
    qualifiedName:
      CSharp: PRace.RegulateurAmure
      VB: PRace.RegulateurAmure
    type: Class
    assemblies:
    - SimpleSimulator
    namespace: PRace
    source:
      remote:
        path: SimpleSimulator/SimpleSimulator/Model/Race/RegulateurAmure.cs
        branch: main
        repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
      id: RegulateurAmure
      path: ../SimpleSimulator/SimpleSimulator/Model/Race/RegulateurAmure.cs
      startLine: 8
    syntax:
      content:
        CSharp: public class RegulateurAmure
        VB: Public Class RegulateurAmure
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PRace.RegulateurAmure.#ctor
      commentId: M:PRace.RegulateurAmure.#ctor
      language: CSharp
      name:
        CSharp: RegulateurAmure()
        VB: RegulateurAmure()
      nameWithType:
        CSharp: RegulateurAmure.RegulateurAmure()
        VB: RegulateurAmure.RegulateurAmure()
      qualifiedName:
        CSharp: PRace.RegulateurAmure.RegulateurAmure()
        VB: PRace.RegulateurAmure.RegulateurAmure()
      type: Constructor
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/RegulateurAmure.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: .ctor
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/RegulateurAmure.cs
        startLine: 10
      syntax:
        content:
          CSharp: public RegulateurAmure()
          VB: Public Sub New
      overload: PRace.RegulateurAmure.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.RegulateurAmure.Update_cap(System.Single)
      commentId: M:PRace.RegulateurAmure.Update_cap(System.Single)
      language: CSharp
      name:
        CSharp: Update_cap(Single)
        VB: Update_cap(Single)
      nameWithType:
        CSharp: RegulateurAmure.Update_cap(Single)
        VB: RegulateurAmure.Update_cap(Single)
      qualifiedName:
        CSharp: PRace.RegulateurAmure.Update_cap(System.Single)
        VB: PRace.RegulateurAmure.Update_cap(System.Single)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/RegulateurAmure.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Update_cap
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/RegulateurAmure.cs
        startLine: 20
      summary: "\n@param MyBoat boat\n"
      example: []
      syntax:
        content:
          CSharp: public void Update_cap(float cap)
          VB: Public Sub Update_cap(cap As Single)
        parameters:
        - id: cap
          type: System.Single
      overload: PRace.RegulateurAmure.Update_cap*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.RegulateurAmure.Get_cap
      commentId: M:PRace.RegulateurAmure.Get_cap
      language: CSharp
      name:
        CSharp: Get_cap()
        VB: Get_cap()
      nameWithType:
        CSharp: RegulateurAmure.Get_cap()
        VB: RegulateurAmure.Get_cap()
      qualifiedName:
        CSharp: PRace.RegulateurAmure.Get_cap()
        VB: PRace.RegulateurAmure.Get_cap()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/RegulateurAmure.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Get_cap
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/RegulateurAmure.cs
        startLine: 24
      syntax:
        content:
          CSharp: public float Get_cap()
          VB: Public Function Get_cap As Single
        return:
          type: System.Single
      overload: PRace.RegulateurAmure.Get_cap*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.RegulateurAmure.SetCap(System.Single)
      commentId: M:PRace.RegulateurAmure.SetCap(System.Single)
      language: CSharp
      name:
        CSharp: SetCap(Single)
        VB: SetCap(Single)
      nameWithType:
        CSharp: RegulateurAmure.SetCap(Single)
        VB: RegulateurAmure.SetCap(Single)
      qualifiedName:
        CSharp: PRace.RegulateurAmure.SetCap(System.Single)
        VB: PRace.RegulateurAmure.SetCap(System.Single)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/RegulateurAmure.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: SetCap
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/RegulateurAmure.cs
        startLine: 30
      syntax:
        content:
          CSharp: public void SetCap(float cap)
          VB: Public Sub SetCap(cap As Single)
        parameters:
        - id: cap
          type: System.Single
      overload: PRace.RegulateurAmure.SetCap*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: PRace.Time
    commentId: T:PRace.Time
    language: CSharp
    name:
      CSharp: Time
      VB: Time
    nameWithType:
      CSharp: Time
      VB: Time
    qualifiedName:
      CSharp: PRace.Time
      VB: PRace.Time
    type: Class
    assemblies:
    - SimpleSimulator
    namespace: PRace
    source:
      remote:
        path: SimpleSimulator/SimpleSimulator/Model/Race/Time.cs
        branch: main
        repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
      id: Time
      path: ../SimpleSimulator/SimpleSimulator/Model/Race/Time.cs
      startLine: 8
    syntax:
      content:
        CSharp: public class Time
        VB: Public Class Time
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PRace.Time.GetAccFactorValue
      commentId: M:PRace.Time.GetAccFactorValue
      language: CSharp
      name:
        CSharp: GetAccFactorValue()
        VB: GetAccFactorValue()
      nameWithType:
        CSharp: Time.GetAccFactorValue()
        VB: Time.GetAccFactorValue()
      qualifiedName:
        CSharp: PRace.Time.GetAccFactorValue()
        VB: PRace.Time.GetAccFactorValue()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Time.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetAccFactorValue
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Time.cs
        startLine: 14
      syntax:
        content:
          CSharp: public float GetAccFactorValue()
          VB: Public Function GetAccFactorValue As Single
        return:
          type: System.Single
      overload: PRace.Time.GetAccFactorValue*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Time.SetAccFactor(System.Single)
      commentId: M:PRace.Time.SetAccFactor(System.Single)
      language: CSharp
      name:
        CSharp: SetAccFactor(Single)
        VB: SetAccFactor(Single)
      nameWithType:
        CSharp: Time.SetAccFactor(Single)
        VB: Time.SetAccFactor(Single)
      qualifiedName:
        CSharp: PRace.Time.SetAccFactor(System.Single)
        VB: PRace.Time.SetAccFactor(System.Single)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Time.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: SetAccFactor
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Time.cs
        startLine: 19
      syntax:
        content:
          CSharp: public void SetAccFactor(float factor)
          VB: Public Sub SetAccFactor(factor As Single)
        parameters:
        - id: factor
          type: System.Single
      overload: PRace.Time.SetAccFactor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Time.GetTickValue
      commentId: M:PRace.Time.GetTickValue
      language: CSharp
      name:
        CSharp: GetTickValue()
        VB: GetTickValue()
      nameWithType:
        CSharp: Time.GetTickValue()
        VB: Time.GetTickValue()
      qualifiedName:
        CSharp: PRace.Time.GetTickValue()
        VB: PRace.Time.GetTickValue()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Time.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetTickValue
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Time.cs
        startLine: 23
      syntax:
        content:
          CSharp: public float GetTickValue()
          VB: Public Function GetTickValue As Single
        return:
          type: System.Single
      overload: PRace.Time.GetTickValue*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Time.SetTick(System.Int32)
      commentId: M:PRace.Time.SetTick(System.Int32)
      language: CSharp
      name:
        CSharp: SetTick(Int32)
        VB: SetTick(Int32)
      nameWithType:
        CSharp: Time.SetTick(Int32)
        VB: Time.SetTick(Int32)
      qualifiedName:
        CSharp: PRace.Time.SetTick(System.Int32)
        VB: PRace.Time.SetTick(System.Int32)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/Time.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: SetTick
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/Time.cs
        startLine: 28
      syntax:
        content:
          CSharp: public void SetTick(int factor)
          VB: Public Sub SetTick(factor As Integer)
        parameters:
        - id: factor
          type: System.Int32
      overload: PRace.Time.SetTick*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: PRace.WayPoint
    commentId: T:PRace.WayPoint
    language: CSharp
    name:
      CSharp: WayPoint
      VB: WayPoint
    nameWithType:
      CSharp: WayPoint
      VB: WayPoint
    qualifiedName:
      CSharp: PRace.WayPoint
      VB: PRace.WayPoint
    type: Class
    assemblies:
    - SimpleSimulator
    namespace: PRace
    source:
      remote:
        path: SimpleSimulator/SimpleSimulator/Model/Race/WayPoint.cs
        branch: main
        repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
      id: WayPoint
      path: ../SimpleSimulator/SimpleSimulator/Model/Race/WayPoint.cs
      startLine: 8
    syntax:
      content:
        CSharp: public class WayPoint
        VB: Public Class WayPoint
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PRace.WayPoint.#ctor(System.Int32,System.String,PRace.Position)
      commentId: M:PRace.WayPoint.#ctor(System.Int32,System.String,PRace.Position)
      language: CSharp
      name:
        CSharp: WayPoint(Int32, String, Position)
        VB: WayPoint(Int32, String, Position)
      nameWithType:
        CSharp: WayPoint.WayPoint(Int32, String, Position)
        VB: WayPoint.WayPoint(Int32, String, Position)
      qualifiedName:
        CSharp: PRace.WayPoint.WayPoint(System.Int32, System.String, PRace.Position)
        VB: PRace.WayPoint.WayPoint(System.Int32, System.String, PRace.Position)
      type: Constructor
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/WayPoint.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: .ctor
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/WayPoint.cs
        startLine: 10
      syntax:
        content:
          CSharp: public WayPoint(int id, string nom, Position position)
          VB: Public Sub New(id As Integer, nom As String, position As Position)
        parameters:
        - id: id
          type: System.Int32
        - id: nom
          type: System.String
        - id: position
          type: PRace.Position
      overload: PRace.WayPoint.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.WayPoint.#ctor(System.Int32,System.String,System.Single,System.Single)
      commentId: M:PRace.WayPoint.#ctor(System.Int32,System.String,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: WayPoint(Int32, String, Single, Single)
        VB: WayPoint(Int32, String, Single, Single)
      nameWithType:
        CSharp: WayPoint.WayPoint(Int32, String, Single, Single)
        VB: WayPoint.WayPoint(Int32, String, Single, Single)
      qualifiedName:
        CSharp: PRace.WayPoint.WayPoint(System.Int32, System.String, System.Single, System.Single)
        VB: PRace.WayPoint.WayPoint(System.Int32, System.String, System.Single, System.Single)
      type: Constructor
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/WayPoint.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: .ctor
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/WayPoint.cs
        startLine: 16
      syntax:
        content:
          CSharp: public WayPoint(int id, string nom, float longitude, float latitude)
          VB: Public Sub New(id As Integer, nom As String, longitude As Single, latitude As Single)
        parameters:
        - id: id
          type: System.Int32
        - id: nom
          type: System.String
        - id: longitude
          type: System.Single
        - id: latitude
          type: System.Single
      overload: PRace.WayPoint.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.WayPoint.GetId
      commentId: M:PRace.WayPoint.GetId
      language: CSharp
      name:
        CSharp: GetId()
        VB: GetId()
      nameWithType:
        CSharp: WayPoint.GetId()
        VB: WayPoint.GetId()
      qualifiedName:
        CSharp: PRace.WayPoint.GetId()
        VB: PRace.WayPoint.GetId()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/WayPoint.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetId
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/WayPoint.cs
        startLine: 29
      syntax:
        content:
          CSharp: public int GetId()
          VB: Public Function GetId As Integer
        return:
          type: System.Int32
      overload: PRace.WayPoint.GetId*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.WayPoint.Getnom
      commentId: M:PRace.WayPoint.Getnom
      language: CSharp
      name:
        CSharp: Getnom()
        VB: Getnom()
      nameWithType:
        CSharp: WayPoint.Getnom()
        VB: WayPoint.Getnom()
      qualifiedName:
        CSharp: PRace.WayPoint.Getnom()
        VB: PRace.WayPoint.Getnom()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/WayPoint.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: Getnom
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/WayPoint.cs
        startLine: 34
      syntax:
        content:
          CSharp: public string Getnom()
          VB: Public Function Getnom As String
        return:
          type: System.String
      overload: PRace.WayPoint.Getnom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.WayPoint.GetPosition
      commentId: M:PRace.WayPoint.GetPosition
      language: CSharp
      name:
        CSharp: GetPosition()
        VB: GetPosition()
      nameWithType:
        CSharp: WayPoint.GetPosition()
        VB: WayPoint.GetPosition()
      qualifiedName:
        CSharp: PRace.WayPoint.GetPosition()
        VB: PRace.WayPoint.GetPosition()
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/WayPoint.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: GetPosition
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/WayPoint.cs
        startLine: 39
      syntax:
        content:
          CSharp: public Position GetPosition()
          VB: Public Function GetPosition As Position
        return:
          type: PRace.Position
      overload: PRace.WayPoint.GetPosition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.WayPoint.SetPosition(PRace.Position)
      commentId: M:PRace.WayPoint.SetPosition(PRace.Position)
      language: CSharp
      name:
        CSharp: SetPosition(Position)
        VB: SetPosition(Position)
      nameWithType:
        CSharp: WayPoint.SetPosition(Position)
        VB: WayPoint.SetPosition(Position)
      qualifiedName:
        CSharp: PRace.WayPoint.SetPosition(PRace.Position)
        VB: PRace.WayPoint.SetPosition(PRace.Position)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/WayPoint.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: SetPosition
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/WayPoint.cs
        startLine: 44
      syntax:
        content:
          CSharp: public void SetPosition(Position pos)
          VB: Public Sub SetPosition(pos As Position)
        parameters:
        - id: pos
          type: PRace.Position
      overload: PRace.WayPoint.SetPosition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.WayPoint.SetPosition(System.Single,System.Single)
      commentId: M:PRace.WayPoint.SetPosition(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: SetPosition(Single, Single)
        VB: SetPosition(Single, Single)
      nameWithType:
        CSharp: WayPoint.SetPosition(Single, Single)
        VB: WayPoint.SetPosition(Single, Single)
      qualifiedName:
        CSharp: PRace.WayPoint.SetPosition(System.Single, System.Single)
        VB: PRace.WayPoint.SetPosition(System.Single, System.Single)
      type: Method
      assemblies:
      - SimpleSimulator
      namespace: PRace
      source:
        remote:
          path: SimpleSimulator/SimpleSimulator/Model/Race/WayPoint.cs
          branch: main
          repo: https://github.com/Le-clan-des-Semi-Croustillant/SRSP-Simple-Simulator.git
        id: SetPosition
        path: ../SimpleSimulator/SimpleSimulator/Model/Race/WayPoint.cs
        startLine: 49
      syntax:
        content:
          CSharp: public void SetPosition(float latitude, float longitude)
          VB: Public Sub SetPosition(latitude As Single, longitude As Single)
        parameters:
        - id: latitude
          type: System.Single
        - id: longitude
          type: System.Single
      overload: PRace.WayPoint.SetPosition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
references:
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  PRace:
    name:
      CSharp:
      - name: PRace
        nameWithType: PRace
        qualifiedName: PRace
      VB:
      - name: PRace
        nameWithType: PRace
        qualifiedName: PRace
    isDefinition: true
    commentId: N:PRace
  PRace.Race:
    name:
      CSharp:
      - id: PRace.Race
        name: Race
        nameWithType: Race
        qualifiedName: PRace.Race
      VB:
      - id: PRace.Race
        name: Race
        nameWithType: Race
        qualifiedName: PRace.Race
    isDefinition: true
    parent: PRace
    commentId: T:PRace.Race
  AquitisionCommunication.Aquisition.#ctor*:
    name:
      CSharp:
      - id: AquitisionCommunication.Aquisition.#ctor*
        name: Aquisition
        nameWithType: Aquisition.Aquisition
        qualifiedName: AquitisionCommunication.Aquisition.Aquisition
      VB:
      - id: AquitisionCommunication.Aquisition.#ctor*
        name: Aquisition
        nameWithType: Aquisition.Aquisition
        qualifiedName: AquitisionCommunication.Aquisition.Aquisition
    isDefinition: true
    commentId: Overload:AquitisionCommunication.Aquisition.#ctor
  PRace.Mode:
    name:
      CSharp:
      - id: PRace.Mode
        name: Mode
        nameWithType: Mode
        qualifiedName: PRace.Mode
      VB:
      - id: PRace.Mode
        name: Mode
        nameWithType: Mode
        qualifiedName: PRace.Mode
    isDefinition: true
    parent: PRace
    commentId: T:PRace.Mode
  AquitisionCommunication.Aquisition.SetUp*:
    name:
      CSharp:
      - id: AquitisionCommunication.Aquisition.SetUp*
        name: SetUp
        nameWithType: Aquisition.SetUp
        qualifiedName: AquitisionCommunication.Aquisition.SetUp
      VB:
      - id: AquitisionCommunication.Aquisition.SetUp*
        name: SetUp
        nameWithType: Aquisition.SetUp
        qualifiedName: AquitisionCommunication.Aquisition.SetUp
    isDefinition: true
    commentId: Overload:AquitisionCommunication.Aquisition.SetUp
  System.Single:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Single
  AquitisionCommunication.Aquisition.change_Env*:
    name:
      CSharp:
      - id: AquitisionCommunication.Aquisition.change_Env*
        name: change_Env
        nameWithType: Aquisition.change_Env
        qualifiedName: AquitisionCommunication.Aquisition.change_Env
      VB:
      - id: AquitisionCommunication.Aquisition.change_Env*
        name: change_Env
        nameWithType: Aquisition.change_Env
        qualifiedName: AquitisionCommunication.Aquisition.change_Env
    isDefinition: true
    commentId: Overload:AquitisionCommunication.Aquisition.change_Env
  AquitisionCommunication.Aquisition.change_competitors*:
    name:
      CSharp:
      - id: AquitisionCommunication.Aquisition.change_competitors*
        name: change_competitors
        nameWithType: Aquisition.change_competitors
        qualifiedName: AquitisionCommunication.Aquisition.change_competitors
      VB:
      - id: AquitisionCommunication.Aquisition.change_competitors*
        name: change_competitors
        nameWithType: Aquisition.change_competitors
        qualifiedName: AquitisionCommunication.Aquisition.change_competitors
    isDefinition: true
    commentId: Overload:AquitisionCommunication.Aquisition.change_competitors
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  System.Double:
    name:
      CSharp:
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      VB:
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Double
  AquitisionCommunication.Aquisition.sentPosition*:
    name:
      CSharp:
      - id: AquitisionCommunication.Aquisition.sentPosition*
        name: sentPosition
        nameWithType: Aquisition.sentPosition
        qualifiedName: AquitisionCommunication.Aquisition.sentPosition
      VB:
      - id: AquitisionCommunication.Aquisition.sentPosition*
        name: sentPosition
        nameWithType: Aquisition.sentPosition
        qualifiedName: AquitisionCommunication.Aquisition.sentPosition
    isDefinition: true
    commentId: Overload:AquitisionCommunication.Aquisition.sentPosition
  AquitisionCommunication.Aquisition:
    name:
      CSharp:
      - id: AquitisionCommunication.Aquisition
        name: Aquisition
        nameWithType: Aquisition
        qualifiedName: AquitisionCommunication.Aquisition
      VB:
      - id: AquitisionCommunication.Aquisition
        name: Aquisition
        nameWithType: Aquisition
        qualifiedName: AquitisionCommunication.Aquisition
    isDefinition: true
    commentId: T:AquitisionCommunication.Aquisition
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  AquitisionCommunication.AquisitionFichierSaveRace.#ctor*:
    name:
      CSharp:
      - id: AquitisionCommunication.AquisitionFichierSaveRace.#ctor*
        name: AquisitionFichierSaveRace
        nameWithType: AquisitionFichierSaveRace.AquisitionFichierSaveRace
        qualifiedName: AquitisionCommunication.AquisitionFichierSaveRace.AquisitionFichierSaveRace
      VB:
      - id: AquitisionCommunication.AquisitionFichierSaveRace.#ctor*
        name: AquisitionFichierSaveRace
        nameWithType: AquisitionFichierSaveRace.AquisitionFichierSaveRace
        qualifiedName: AquitisionCommunication.AquisitionFichierSaveRace.AquisitionFichierSaveRace
    isDefinition: true
    commentId: Overload:AquitisionCommunication.AquisitionFichierSaveRace.#ctor
  AquitisionCommunication.AquisitionFichierSaveRace:
    name:
      CSharp:
      - id: AquitisionCommunication.AquisitionFichierSaveRace
        name: AquisitionFichierSaveRace
        nameWithType: AquisitionFichierSaveRace
        qualifiedName: AquitisionCommunication.AquisitionFichierSaveRace
      VB:
      - id: AquitisionCommunication.AquisitionFichierSaveRace
        name: AquisitionFichierSaveRace
        nameWithType: AquisitionFichierSaveRace
        qualifiedName: AquitisionCommunication.AquisitionFichierSaveRace
    isDefinition: true
    commentId: T:AquitisionCommunication.AquisitionFichierSaveRace
  AquitisionCommunication.AquisitionPolaire.#ctor*:
    name:
      CSharp:
      - id: AquitisionCommunication.AquisitionPolaire.#ctor*
        name: AquisitionPolaire
        nameWithType: AquisitionPolaire.AquisitionPolaire
        qualifiedName: AquitisionCommunication.AquisitionPolaire.AquisitionPolaire
      VB:
      - id: AquitisionCommunication.AquisitionPolaire.#ctor*
        name: AquisitionPolaire
        nameWithType: AquisitionPolaire.AquisitionPolaire
        qualifiedName: AquitisionCommunication.AquisitionPolaire.AquisitionPolaire
    isDefinition: true
    commentId: Overload:AquitisionCommunication.AquisitionPolaire.#ctor
  System.Collections.Generic.Dictionary`2:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.Dictionary`2
  System.Collections.Generic:
    name:
      CSharp:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
        isExternal: true
      VB:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
    isDefinition: true
    commentId: N:System.Collections.Generic
  System.Collections.Generic.Dictionary{System.Single,System.Collections.Generic.Dictionary{System.Single,System.Single}}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.Single,System.Collections.Generic.Dictionary{System.Single,System.Single}}
  AquitisionCommunication.AquisitionPolaire.ReadPolaire*:
    name:
      CSharp:
      - id: AquitisionCommunication.AquisitionPolaire.ReadPolaire*
        name: ReadPolaire
        nameWithType: AquisitionPolaire.ReadPolaire
        qualifiedName: AquitisionCommunication.AquisitionPolaire.ReadPolaire
      VB:
      - id: AquitisionCommunication.AquisitionPolaire.ReadPolaire*
        name: ReadPolaire
        nameWithType: AquisitionPolaire.ReadPolaire
        qualifiedName: AquitisionCommunication.AquisitionPolaire.ReadPolaire
    isDefinition: true
    commentId: Overload:AquitisionCommunication.AquisitionPolaire.ReadPolaire
  System.Collections.Generic.List`1:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.List`1
  ? System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.Single,System.Collections.Generic.Dictionary{System.Single,System.Single}}}
  : name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.Single,System.Collections.Generic.Dictionary{System.Single,System.Single}}}
  System.Collections.Generic.List{System.String}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.String}
  AquitisionCommunication.AquisitionPolaire.ReadMultiplePolaire*:
    name:
      CSharp:
      - id: AquitisionCommunication.AquisitionPolaire.ReadMultiplePolaire*
        name: ReadMultiplePolaire
        nameWithType: AquisitionPolaire.ReadMultiplePolaire
        qualifiedName: AquitisionCommunication.AquisitionPolaire.ReadMultiplePolaire
      VB:
      - id: AquitisionCommunication.AquisitionPolaire.ReadMultiplePolaire*
        name: ReadMultiplePolaire
        nameWithType: AquisitionPolaire.ReadMultiplePolaire
        qualifiedName: AquitisionCommunication.AquisitionPolaire.ReadMultiplePolaire
    isDefinition: true
    commentId: Overload:AquitisionCommunication.AquisitionPolaire.ReadMultiplePolaire
  AquitisionCommunication.AquisitionPolaire:
    name:
      CSharp:
      - id: AquitisionCommunication.AquisitionPolaire
        name: AquisitionPolaire
        nameWithType: AquisitionPolaire
        qualifiedName: AquitisionCommunication.AquisitionPolaire
      VB:
      - id: AquitisionCommunication.AquisitionPolaire
        name: AquisitionPolaire
        nameWithType: AquisitionPolaire
        qualifiedName: AquitisionCommunication.AquisitionPolaire
    isDefinition: true
    commentId: T:AquitisionCommunication.AquisitionPolaire
  AquitisionCommunication.RaceSave.#ctor*:
    name:
      CSharp:
      - id: AquitisionCommunication.RaceSave.#ctor*
        name: RaceSave
        nameWithType: RaceSave.RaceSave
        qualifiedName: AquitisionCommunication.RaceSave.RaceSave
      VB:
      - id: AquitisionCommunication.RaceSave.#ctor*
        name: RaceSave
        nameWithType: RaceSave.RaceSave
        qualifiedName: AquitisionCommunication.RaceSave.RaceSave
    isDefinition: true
    commentId: Overload:AquitisionCommunication.RaceSave.#ctor
  AquitisionCommunication:
    name:
      CSharp:
      - name: AquitisionCommunication
        nameWithType: AquitisionCommunication
        qualifiedName: AquitisionCommunication
      VB:
      - name: AquitisionCommunication
        nameWithType: AquitisionCommunication
        qualifiedName: AquitisionCommunication
    isDefinition: true
    commentId: N:AquitisionCommunication
  AquitisionCommunication.RaceSave.JsonRace:
    name:
      CSharp:
      - id: AquitisionCommunication.RaceSave.JsonRace
        name: RaceSave.JsonRace
        nameWithType: RaceSave.JsonRace
        qualifiedName: AquitisionCommunication.RaceSave.JsonRace
      VB:
      - id: AquitisionCommunication.RaceSave.JsonRace
        name: RaceSave.JsonRace
        nameWithType: RaceSave.JsonRace
        qualifiedName: AquitisionCommunication.RaceSave.JsonRace
    isDefinition: true
    parent: AquitisionCommunication
    commentId: T:AquitisionCommunication.RaceSave.JsonRace
  AquitisionCommunication.RaceSave.GetJsonRace*:
    name:
      CSharp:
      - id: AquitisionCommunication.RaceSave.GetJsonRace*
        name: GetJsonRace
        nameWithType: RaceSave.GetJsonRace
        qualifiedName: AquitisionCommunication.RaceSave.GetJsonRace
      VB:
      - id: AquitisionCommunication.RaceSave.GetJsonRace*
        name: GetJsonRace
        nameWithType: RaceSave.GetJsonRace
        qualifiedName: AquitisionCommunication.RaceSave.GetJsonRace
    isDefinition: true
    commentId: Overload:AquitisionCommunication.RaceSave.GetJsonRace
  AquitisionCommunication.RaceSave.Update*:
    name:
      CSharp:
      - id: AquitisionCommunication.RaceSave.Update*
        name: Update
        nameWithType: RaceSave.Update
        qualifiedName: AquitisionCommunication.RaceSave.Update
      VB:
      - id: AquitisionCommunication.RaceSave.Update*
        name: Update
        nameWithType: RaceSave.Update
        qualifiedName: AquitisionCommunication.RaceSave.Update
    isDefinition: true
    commentId: Overload:AquitisionCommunication.RaceSave.Update
  AquitisionCommunication.RaceSave.loadfile*:
    name:
      CSharp:
      - id: AquitisionCommunication.RaceSave.loadfile*
        name: loadfile
        nameWithType: RaceSave.loadfile
        qualifiedName: AquitisionCommunication.RaceSave.loadfile
      VB:
      - id: AquitisionCommunication.RaceSave.loadfile*
        name: loadfile
        nameWithType: RaceSave.loadfile
        qualifiedName: AquitisionCommunication.RaceSave.loadfile
    isDefinition: true
    commentId: Overload:AquitisionCommunication.RaceSave.loadfile
  AquitisionCommunication.RaceSave.savefile*:
    name:
      CSharp:
      - id: AquitisionCommunication.RaceSave.savefile*
        name: savefile
        nameWithType: RaceSave.savefile
        qualifiedName: AquitisionCommunication.RaceSave.savefile
      VB:
      - id: AquitisionCommunication.RaceSave.savefile*
        name: savefile
        nameWithType: RaceSave.savefile
        qualifiedName: AquitisionCommunication.RaceSave.savefile
    isDefinition: true
    commentId: Overload:AquitisionCommunication.RaceSave.savefile
  AquitisionCommunication.RaceSave:
    name:
      CSharp:
      - id: AquitisionCommunication.RaceSave
        name: RaceSave
        nameWithType: RaceSave
        qualifiedName: AquitisionCommunication.RaceSave
      VB:
      - id: AquitisionCommunication.RaceSave
        name: RaceSave
        nameWithType: RaceSave
        qualifiedName: AquitisionCommunication.RaceSave
    isDefinition: true
    commentId: T:AquitisionCommunication.RaceSave
  AquitisionCommunication.RaceSave.JsonRace.#ctor*:
    name:
      CSharp:
      - id: AquitisionCommunication.RaceSave.JsonRace.#ctor*
        name: JsonRace
        nameWithType: RaceSave.JsonRace.JsonRace
        qualifiedName: AquitisionCommunication.RaceSave.JsonRace.JsonRace
      VB:
      - id: AquitisionCommunication.RaceSave.JsonRace.#ctor*
        name: JsonRace
        nameWithType: RaceSave.JsonRace.JsonRace
        qualifiedName: AquitisionCommunication.RaceSave.JsonRace.JsonRace
    isDefinition: true
    commentId: Overload:AquitisionCommunication.RaceSave.JsonRace.#ctor
  System.DateTime:
    name:
      CSharp:
      - id: System.DateTime
        name: DateTime
        nameWithType: DateTime
        qualifiedName: System.DateTime
        isExternal: true
      VB:
      - id: System.DateTime
        name: DateTime
        nameWithType: DateTime
        qualifiedName: System.DateTime
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.DateTime
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  AquitisionCommunication.RaceSave.JsonRace.Equals*:
    name:
      CSharp:
      - id: AquitisionCommunication.RaceSave.JsonRace.Equals*
        name: Equals
        nameWithType: RaceSave.JsonRace.Equals
        qualifiedName: AquitisionCommunication.RaceSave.JsonRace.Equals
      VB:
      - id: AquitisionCommunication.RaceSave.JsonRace.Equals*
        name: Equals
        nameWithType: RaceSave.JsonRace.Equals
        qualifiedName: AquitisionCommunication.RaceSave.JsonRace.Equals
    isDefinition: true
    commentId: Overload:AquitisionCommunication.RaceSave.JsonRace.Equals
  AquitisionCommunication.Sauvegarde.#ctor*:
    name:
      CSharp:
      - id: AquitisionCommunication.Sauvegarde.#ctor*
        name: Sauvegarde
        nameWithType: Sauvegarde.Sauvegarde
        qualifiedName: AquitisionCommunication.Sauvegarde.Sauvegarde
      VB:
      - id: AquitisionCommunication.Sauvegarde.#ctor*
        name: Sauvegarde
        nameWithType: Sauvegarde.Sauvegarde
        qualifiedName: AquitisionCommunication.Sauvegarde.Sauvegarde
    isDefinition: true
    commentId: Overload:AquitisionCommunication.Sauvegarde.#ctor
  AquitisionCommunication.Sauvegarde:
    name:
      CSharp:
      - id: AquitisionCommunication.Sauvegarde
        name: Sauvegarde
        nameWithType: Sauvegarde
        qualifiedName: AquitisionCommunication.Sauvegarde
      VB:
      - id: AquitisionCommunication.Sauvegarde
        name: Sauvegarde
        nameWithType: Sauvegarde
        qualifiedName: AquitisionCommunication.Sauvegarde
    isDefinition: true
    commentId: T:AquitisionCommunication.Sauvegarde
  System.Net.Sockets:
    name:
      CSharp:
      - name: System.Net.Sockets
        nameWithType: System.Net.Sockets
        qualifiedName: System.Net.Sockets
        isExternal: true
      VB:
      - name: System.Net.Sockets
        nameWithType: System.Net.Sockets
        qualifiedName: System.Net.Sockets
    isDefinition: true
    commentId: N:System.Net.Sockets
  System.Net.Sockets.UdpClient:
    name:
      CSharp:
      - id: System.Net.Sockets.UdpClient
        name: UdpClient
        nameWithType: UdpClient
        qualifiedName: System.Net.Sockets.UdpClient
        isExternal: true
      VB:
      - id: System.Net.Sockets.UdpClient
        name: UdpClient
        nameWithType: UdpClient
        qualifiedName: System.Net.Sockets.UdpClient
        isExternal: true
    isDefinition: true
    parent: System.Net.Sockets
    commentId: T:System.Net.Sockets.UdpClient
  SimpleSimulator.AquitisionCommunication.Trame:
    name:
      CSharp:
      - name: SimpleSimulator.AquitisionCommunication.Trame
        nameWithType: SimpleSimulator.AquitisionCommunication.Trame
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame
      VB:
      - name: SimpleSimulator.AquitisionCommunication.Trame
        nameWithType: SimpleSimulator.AquitisionCommunication.Trame
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame
    isDefinition: true
    commentId: N:SimpleSimulator.AquitisionCommunication.Trame
  SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA
        name: TrameNMEA
        nameWithType: TrameNMEA
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA
        name: TrameNMEA
        nameWithType: TrameNMEA
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA
    isDefinition: true
    parent: SimpleSimulator.AquitisionCommunication.Trame
    commentId: T:SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA
  SimpleSimulator.AquitisionCommunication.Trame.Sender.Send*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.Sender.Send*
        name: Send
        nameWithType: Sender.Send
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.Sender.Send
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.Sender.Send*
        name: Send
        nameWithType: Sender.Send
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.Sender.Send
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.Sender.Send
  SimpleSimulator.AquitisionCommunication.Trame.Sender:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.Sender
        name: Sender
        nameWithType: Sender
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.Sender
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.Sender
        name: Sender
        nameWithType: Sender
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.Sender
    isDefinition: true
    commentId: T:SimpleSimulator.AquitisionCommunication.Trame.Sender
  SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.TrameType*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.TrameType*
        name: TrameType
        nameWithType: TrameMWV.TrameType
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.TrameType
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.TrameType*
        name: TrameType
        nameWithType: TrameMWV.TrameType
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.TrameType
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.TrameType
  SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.AngleVent*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.AngleVent*
        name: AngleVent
        nameWithType: TrameMWV.AngleVent
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.AngleVent
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.AngleVent*
        name: AngleVent
        nameWithType: TrameMWV.AngleVent
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.AngleVent
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.AngleVent
  System.Char:
    name:
      CSharp:
      - id: System.Char
        name: Char
        nameWithType: Char
        qualifiedName: System.Char
        isExternal: true
      VB:
      - id: System.Char
        name: Char
        nameWithType: Char
        qualifiedName: System.Char
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Char
  SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Reference*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Reference*
        name: Reference
        nameWithType: TrameMWV.Reference
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Reference
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Reference*
        name: Reference
        nameWithType: TrameMWV.Reference
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Reference
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Reference
  SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.VitesseVent*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.VitesseVent*
        name: VitesseVent
        nameWithType: TrameMWV.VitesseVent
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.VitesseVent
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.VitesseVent*
        name: VitesseVent
        nameWithType: TrameMWV.VitesseVent
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.VitesseVent
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.VitesseVent
  SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Unite*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Unite*
        name: Unite
        nameWithType: TrameMWV.Unite
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Unite
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Unite*
        name: Unite
        nameWithType: TrameMWV.Unite
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Unite
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Unite
  SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Etat*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Etat*
        name: Etat
        nameWithType: TrameMWV.Etat
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Etat
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Etat*
        name: Etat
        nameWithType: TrameMWV.Etat
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Etat
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Etat
  SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Controle*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Controle*
        name: Controle
        nameWithType: TrameMWV.Controle
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Controle
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Controle*
        name: Controle
        nameWithType: TrameMWV.Controle
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Controle
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Controle
  SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Checksum*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Checksum*
        name: Checksum
        nameWithType: TrameMWV.Checksum
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Checksum
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Checksum*
        name: Checksum
        nameWithType: TrameMWV.Checksum
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Checksum
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Checksum
  SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.ToString*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.ToString*
        name: ToString
        nameWithType: TrameMWV.ToString
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.ToString
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.ToString*
        name: ToString
        nameWithType: TrameMWV.ToString
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.ToString
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.ToString
  SimpleSimulator.AquitisionCommunication.Trame.TrameMWV:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV
        name: TrameMWV
        nameWithType: TrameMWV
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV
        name: TrameMWV
        nameWithType: TrameMWV
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV
    isDefinition: true
    commentId: T:SimpleSimulator.AquitisionCommunication.Trame.TrameMWV
  SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA.ToString*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA.ToString*
        name: ToString
        nameWithType: TrameNMEA.ToString
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA.ToString
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA.ToString*
        name: ToString
        nameWithType: TrameNMEA.ToString
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA.ToString
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA.ToString
  SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.TrameType*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.TrameType*
        name: TrameType
        nameWithType: TrameRMC.TrameType
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.TrameType
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.TrameType*
        name: TrameType
        nameWithType: TrameRMC.TrameType
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.TrameType
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.TrameType
  SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Heure*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Heure*
        name: Heure
        nameWithType: TrameRMC.Heure
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Heure
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Heure*
        name: Heure
        nameWithType: TrameRMC.Heure
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Heure
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Heure
  SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Etat*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Etat*
        name: Etat
        nameWithType: TrameRMC.Etat
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Etat
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Etat*
        name: Etat
        nameWithType: TrameRMC.Etat
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Etat
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Etat
  SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Latitude*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Latitude*
        name: Latitude
        nameWithType: TrameRMC.Latitude
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Latitude
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Latitude*
        name: Latitude
        nameWithType: TrameRMC.Latitude
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Latitude
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Latitude
  SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLatitude*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLatitude*
        name: IndicateurLatitude
        nameWithType: TrameRMC.IndicateurLatitude
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLatitude
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLatitude*
        name: IndicateurLatitude
        nameWithType: TrameRMC.IndicateurLatitude
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLatitude
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLatitude
  SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Longitude*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Longitude*
        name: Longitude
        nameWithType: TrameRMC.Longitude
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Longitude
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Longitude*
        name: Longitude
        nameWithType: TrameRMC.Longitude
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Longitude
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Longitude
  SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLongitude*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLongitude*
        name: IndicateurLongitude
        nameWithType: TrameRMC.IndicateurLongitude
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLongitude
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLongitude*
        name: IndicateurLongitude
        nameWithType: TrameRMC.IndicateurLongitude
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLongitude
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLongitude
  SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Vitesse*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Vitesse*
        name: Vitesse
        nameWithType: TrameRMC.Vitesse
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Vitesse
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Vitesse*
        name: Vitesse
        nameWithType: TrameRMC.Vitesse
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Vitesse
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Vitesse
  SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Road*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Road*
        name: Road
        nameWithType: TrameRMC.Road
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Road
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Road*
        name: Road
        nameWithType: TrameRMC.Road
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Road
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Road
  SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Date*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Date*
        name: Date
        nameWithType: TrameRMC.Date
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Date
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Date*
        name: Date
        nameWithType: TrameRMC.Date
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Date
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Date
  SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Magneto*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Magneto*
        name: Magneto
        nameWithType: TrameRMC.Magneto
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Magneto
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Magneto*
        name: Magneto
        nameWithType: TrameRMC.Magneto
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Magneto
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Magneto
  SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Sens*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Sens*
        name: Sens
        nameWithType: TrameRMC.Sens
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Sens
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Sens*
        name: Sens
        nameWithType: TrameRMC.Sens
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Sens
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Sens
  SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Mode*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Mode*
        name: Mode
        nameWithType: TrameRMC.Mode
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Mode
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Mode*
        name: Mode
        nameWithType: TrameRMC.Mode
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Mode
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Mode
  SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Controle*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Controle*
        name: Controle
        nameWithType: TrameRMC.Controle
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Controle
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Controle*
        name: Controle
        nameWithType: TrameRMC.Controle
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Controle
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Controle
  SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeHeure*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeHeure*
        name: NormalizeHeure
        nameWithType: TrameRMC.NormalizeHeure
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeHeure
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeHeure*
        name: NormalizeHeure
        nameWithType: TrameRMC.NormalizeHeure
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeHeure
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeHeure
  SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeDate*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeDate*
        name: NormalizeDate
        nameWithType: TrameRMC.NormalizeDate
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeDate
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeDate*
        name: NormalizeDate
        nameWithType: TrameRMC.NormalizeDate
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeDate
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeDate
  SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Checksum*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Checksum*
        name: Checksum
        nameWithType: TrameRMC.Checksum
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Checksum
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Checksum*
        name: Checksum
        nameWithType: TrameRMC.Checksum
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Checksum
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Checksum
  SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.ToString*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.ToString*
        name: ToString
        nameWithType: TrameRMC.ToString
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.ToString
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.ToString*
        name: ToString
        nameWithType: TrameRMC.ToString
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.ToString
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.ToString
  SimpleSimulator.AquitisionCommunication.Trame.TrameRMC:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC
        name: TrameRMC
        nameWithType: TrameRMC
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC
        name: TrameRMC
        nameWithType: TrameRMC
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC
    isDefinition: true
    commentId: T:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC
  SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.TrameType*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.TrameType*
        name: TrameType
        nameWithType: TrameRSA.TrameType
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.TrameType
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.TrameType*
        name: TrameType
        nameWithType: TrameRSA.TrameType
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.TrameType
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.TrameType
  SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreT*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreT*
        name: BarreT
        nameWithType: TrameRSA.BarreT
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreT
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreT*
        name: BarreT
        nameWithType: TrameRSA.BarreT
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreT
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreT
  SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatT*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatT*
        name: EtatT
        nameWithType: TrameRSA.EtatT
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatT
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatT*
        name: EtatT
        nameWithType: TrameRSA.EtatT
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatT
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatT
  SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreB*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreB*
        name: BarreB
        nameWithType: TrameRSA.BarreB
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreB
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreB*
        name: BarreB
        nameWithType: TrameRSA.BarreB
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreB
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreB
  SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatB*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatB*
        name: EtatB
        nameWithType: TrameRSA.EtatB
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatB
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatB*
        name: EtatB
        nameWithType: TrameRSA.EtatB
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatB
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatB
  SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Controle*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Controle*
        name: Controle
        nameWithType: TrameRSA.Controle
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Controle
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Controle*
        name: Controle
        nameWithType: TrameRSA.Controle
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Controle
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Controle
  SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Checksum*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Checksum*
        name: Checksum
        nameWithType: TrameRSA.Checksum
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Checksum
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Checksum*
        name: Checksum
        nameWithType: TrameRSA.Checksum
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Checksum
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Checksum
  SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.ToString*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.ToString*
        name: ToString
        nameWithType: TrameRSA.ToString
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.ToString
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.ToString*
        name: ToString
        nameWithType: TrameRSA.ToString
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.ToString
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.ToString
  SimpleSimulator.AquitisionCommunication.Trame.TrameRSA:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA
        name: TrameRSA
        nameWithType: TrameRSA
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA
        name: TrameRSA
        nameWithType: TrameRSA
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA
    isDefinition: true
    commentId: T:SimpleSimulator.AquitisionCommunication.Trame.TrameRSA
  SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.TrameType*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.TrameType*
        name: TrameType
        nameWithType: TrameVDM.TrameType
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.TrameType
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.TrameType*
        name: TrameType
        nameWithType: TrameVDM.TrameType
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.TrameType
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.TrameType
  SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Heure*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Heure*
        name: Heure
        nameWithType: TrameVDM.Heure
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Heure
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Heure*
        name: Heure
        nameWithType: TrameVDM.Heure
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Heure
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Heure
  SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Etat*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Etat*
        name: Etat
        nameWithType: TrameVDM.Etat
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Etat
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Etat*
        name: Etat
        nameWithType: TrameVDM.Etat
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Etat
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Etat
  SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Latitude*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Latitude*
        name: Latitude
        nameWithType: TrameVDM.Latitude
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Latitude
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Latitude*
        name: Latitude
        nameWithType: TrameVDM.Latitude
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Latitude
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Latitude
  SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLatitude*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLatitude*
        name: IndicateurLatitude
        nameWithType: TrameVDM.IndicateurLatitude
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLatitude
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLatitude*
        name: IndicateurLatitude
        nameWithType: TrameVDM.IndicateurLatitude
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLatitude
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLatitude
  SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Longitude*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Longitude*
        name: Longitude
        nameWithType: TrameVDM.Longitude
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Longitude
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Longitude*
        name: Longitude
        nameWithType: TrameVDM.Longitude
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Longitude
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Longitude
  SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLongitude*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLongitude*
        name: IndicateurLongitude
        nameWithType: TrameVDM.IndicateurLongitude
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLongitude
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLongitude*
        name: IndicateurLongitude
        nameWithType: TrameVDM.IndicateurLongitude
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLongitude
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLongitude
  SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Vitesse*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Vitesse*
        name: Vitesse
        nameWithType: TrameVDM.Vitesse
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Vitesse
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Vitesse*
        name: Vitesse
        nameWithType: TrameVDM.Vitesse
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Vitesse
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Vitesse
  SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Road*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Road*
        name: Road
        nameWithType: TrameVDM.Road
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Road
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Road*
        name: Road
        nameWithType: TrameVDM.Road
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Road
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Road
  SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Date*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Date*
        name: Date
        nameWithType: TrameVDM.Date
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Date
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Date*
        name: Date
        nameWithType: TrameVDM.Date
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Date
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Date
  SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Magneto*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Magneto*
        name: Magneto
        nameWithType: TrameVDM.Magneto
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Magneto
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Magneto*
        name: Magneto
        nameWithType: TrameVDM.Magneto
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Magneto
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Magneto
  SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Sens*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Sens*
        name: Sens
        nameWithType: TrameVDM.Sens
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Sens
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Sens*
        name: Sens
        nameWithType: TrameVDM.Sens
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Sens
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Sens
  SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Mode*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Mode*
        name: Mode
        nameWithType: TrameVDM.Mode
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Mode
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Mode*
        name: Mode
        nameWithType: TrameVDM.Mode
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Mode
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Mode
  SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Controle*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Controle*
        name: Controle
        nameWithType: TrameVDM.Controle
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Controle
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Controle*
        name: Controle
        nameWithType: TrameVDM.Controle
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Controle
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Controle
  SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeHeure*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeHeure*
        name: NormalizeHeure
        nameWithType: TrameVDM.NormalizeHeure
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeHeure
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeHeure*
        name: NormalizeHeure
        nameWithType: TrameVDM.NormalizeHeure
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeHeure
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeHeure
  SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeDate*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeDate*
        name: NormalizeDate
        nameWithType: TrameVDM.NormalizeDate
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeDate
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeDate*
        name: NormalizeDate
        nameWithType: TrameVDM.NormalizeDate
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeDate
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeDate
  SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Checksum*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Checksum*
        name: Checksum
        nameWithType: TrameVDM.Checksum
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Checksum
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Checksum*
        name: Checksum
        nameWithType: TrameVDM.Checksum
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Checksum
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Checksum
  SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.ToString*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.ToString*
        name: ToString
        nameWithType: TrameVDM.ToString
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.ToString
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.ToString*
        name: ToString
        nameWithType: TrameVDM.ToString
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.ToString
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.ToString
  SimpleSimulator.AquitisionCommunication.Trame.TrameVDM:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM
        name: TrameVDM
        nameWithType: TrameVDM
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM
        name: TrameVDM
        nameWithType: TrameVDM
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM
    isDefinition: true
    commentId: T:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM
  SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.TrameType*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.TrameType*
        name: TrameType
        nameWithType: TrameVHW.TrameType
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.TrameType
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.TrameType*
        name: TrameType
        nameWithType: TrameVHW.TrameType
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.TrameType
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.TrameType
  SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapDegres*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapDegres*
        name: CapDegres
        nameWithType: TrameVHW.CapDegres
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapDegres
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapDegres*
        name: CapDegres
        nameWithType: TrameVHW.CapDegres
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapDegres
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapDegres
  SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapMagne*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapMagne*
        name: CapMagne
        nameWithType: TrameVHW.CapMagne
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapMagne
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapMagne*
        name: CapMagne
        nameWithType: TrameVHW.CapMagne
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapMagne
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapMagne
  SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauNoeud*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauNoeud*
        name: VitBateauNoeud
        nameWithType: TrameVHW.VitBateauNoeud
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauNoeud
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauNoeud*
        name: VitBateauNoeud
        nameWithType: TrameVHW.VitBateauNoeud
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauNoeud
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauNoeud
  SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauKm*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauKm*
        name: VitBateauKm
        nameWithType: TrameVHW.VitBateauKm
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauKm
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauKm*
        name: VitBateauKm
        nameWithType: TrameVHW.VitBateauKm
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauKm
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauKm
  SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Controle*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Controle*
        name: Controle
        nameWithType: TrameVHW.Controle
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Controle
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Controle*
        name: Controle
        nameWithType: TrameVHW.Controle
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Controle
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Controle
  SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Checksum*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Checksum*
        name: Checksum
        nameWithType: TrameVHW.Checksum
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Checksum
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Checksum*
        name: Checksum
        nameWithType: TrameVHW.Checksum
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Checksum
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Checksum
  SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.ToString*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.ToString*
        name: ToString
        nameWithType: TrameVHW.ToString
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.ToString
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.ToString*
        name: ToString
        nameWithType: TrameVHW.ToString
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.ToString
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.ToString
  SimpleSimulator.AquitisionCommunication.Trame.TrameVHW:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW
        name: TrameVHW
        nameWithType: TrameVHW
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW
        name: TrameVHW
        nameWithType: TrameVHW
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW
    isDefinition: true
    commentId: T:SimpleSimulator.AquitisionCommunication.Trame.TrameVHW
  SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.TrameType*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.TrameType*
        name: TrameType
        nameWithType: TrameXDR.TrameType
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.TrameType
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.TrameType*
        name: TrameType
        nameWithType: TrameXDR.TrameType
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.TrameType
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.TrameType
  System.Collections.Generic.List{SimpleSimulator.AquitisionCommunication.Trame.XDRSub}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: SimpleSimulator.AquitisionCommunication.Trame.XDRSub
        name: XDRSub
        nameWithType: XDRSub
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.XDRSub
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: SimpleSimulator.AquitisionCommunication.Trame.XDRSub
        name: XDRSub
        nameWithType: XDRSub
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.XDRSub
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{SimpleSimulator.AquitisionCommunication.Trame.XDRSub}
  SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.XDRSubs*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.XDRSubs*
        name: XDRSubs
        nameWithType: TrameXDR.XDRSubs
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.XDRSubs
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.XDRSubs*
        name: XDRSubs
        nameWithType: TrameXDR.XDRSubs
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.XDRSubs
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.XDRSubs
  SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Controle*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Controle*
        name: Controle
        nameWithType: TrameXDR.Controle
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Controle
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Controle*
        name: Controle
        nameWithType: TrameXDR.Controle
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Controle
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Controle
  SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Checksum*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Checksum*
        name: Checksum
        nameWithType: TrameXDR.Checksum
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Checksum
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Checksum*
        name: Checksum
        nameWithType: TrameXDR.Checksum
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Checksum
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Checksum
  SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.ToString*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.ToString*
        name: ToString
        nameWithType: TrameXDR.ToString
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.ToString
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.ToString*
        name: ToString
        nameWithType: TrameXDR.ToString
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.ToString
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.ToString
  SimpleSimulator.AquitisionCommunication.Trame.TrameXDR:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR
        name: TrameXDR
        nameWithType: TrameXDR
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR
        name: TrameXDR
        nameWithType: TrameXDR
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR
    isDefinition: true
    commentId: T:SimpleSimulator.AquitisionCommunication.Trame.TrameXDR
  SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerType*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerType*
        name: TransducerType
        nameWithType: XDRSub.TransducerType
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerType
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerType*
        name: TransducerType
        nameWithType: XDRSub.TransducerType
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerType
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerType
  SimpleSimulator.AquitisionCommunication.Trame.XDRSub.MesurementData*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.MesurementData*
        name: MesurementData
        nameWithType: XDRSub.MesurementData
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.MesurementData
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.MesurementData*
        name: MesurementData
        nameWithType: XDRSub.MesurementData
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.MesurementData
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.XDRSub.MesurementData
  SimpleSimulator.AquitisionCommunication.Trame.XDRSub.UnitsMeasure*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.UnitsMeasure*
        name: UnitsMeasure
        nameWithType: XDRSub.UnitsMeasure
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.UnitsMeasure
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.UnitsMeasure*
        name: UnitsMeasure
        nameWithType: XDRSub.UnitsMeasure
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.UnitsMeasure
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.XDRSub.UnitsMeasure
  SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerName*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerName*
        name: TransducerName
        nameWithType: XDRSub.TransducerName
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerName
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerName*
        name: TransducerName
        nameWithType: XDRSub.TransducerName
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerName
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerName
  SimpleSimulator.AquitisionCommunication.Trame.XDRSub.ToString*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.ToString*
        name: ToString
        nameWithType: XDRSub.ToString
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.ToString
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.ToString*
        name: ToString
        nameWithType: XDRSub.ToString
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.ToString
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.XDRSub.ToString
  SimpleSimulator.AquitisionCommunication.Trame.XDRSub:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.XDRSub
        name: XDRSub
        nameWithType: XDRSub
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.XDRSub
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.XDRSub
        name: XDRSub
        nameWithType: XDRSub
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.XDRSub
    isDefinition: true
    commentId: T:SimpleSimulator.AquitisionCommunication.Trame.XDRSub
  Model:
    name:
      CSharp:
      - name: Model
        nameWithType: Model
        qualifiedName: Model
      VB:
      - name: Model
        nameWithType: Model
        qualifiedName: Model
    isDefinition: true
    commentId: N:Model
  Model.BoatInfo:
    name:
      CSharp:
      - id: Model.BoatInfo
        name: BoatInfo
        nameWithType: BoatInfo
        qualifiedName: Model.BoatInfo
      VB:
      - id: Model.BoatInfo
        name: BoatInfo
        nameWithType: BoatInfo
        qualifiedName: Model.BoatInfo
    isDefinition: true
    parent: Model
    commentId: T:Model.BoatInfo
  Model.RaceModel.#ctor*:
    name:
      CSharp:
      - id: Model.RaceModel.#ctor*
        name: RaceModel
        nameWithType: RaceModel.RaceModel
        qualifiedName: Model.RaceModel.RaceModel
      VB:
      - id: Model.RaceModel.#ctor*
        name: RaceModel
        nameWithType: RaceModel.RaceModel
        qualifiedName: Model.RaceModel.RaceModel
    isDefinition: true
    commentId: Overload:Model.RaceModel.#ctor
  Model.RaceModel.GetRace*:
    name:
      CSharp:
      - id: Model.RaceModel.GetRace*
        name: GetRace
        nameWithType: RaceModel.GetRace
        qualifiedName: Model.RaceModel.GetRace
      VB:
      - id: Model.RaceModel.GetRace*
        name: GetRace
        nameWithType: RaceModel.GetRace
        qualifiedName: Model.RaceModel.GetRace
    isDefinition: true
    commentId: Overload:Model.RaceModel.GetRace
  Model.RaceModel.AskMode*:
    name:
      CSharp:
      - id: Model.RaceModel.AskMode*
        name: AskMode
        nameWithType: RaceModel.AskMode
        qualifiedName: Model.RaceModel.AskMode
      VB:
      - id: Model.RaceModel.AskMode*
        name: AskMode
        nameWithType: RaceModel.AskMode
        qualifiedName: Model.RaceModel.AskMode
    isDefinition: true
    commentId: Overload:Model.RaceModel.AskMode
  Model.RaceModel.AskForSavePath*:
    name:
      CSharp:
      - id: Model.RaceModel.AskForSavePath*
        name: AskForSavePath
        nameWithType: RaceModel.AskForSavePath
        qualifiedName: Model.RaceModel.AskForSavePath
      VB:
      - id: Model.RaceModel.AskForSavePath*
        name: AskForSavePath
        nameWithType: RaceModel.AskForSavePath
        qualifiedName: Model.RaceModel.AskForSavePath
    isDefinition: true
    commentId: Overload:Model.RaceModel.AskForSavePath
  Model.RaceModel.Save*:
    name:
      CSharp:
      - id: Model.RaceModel.Save*
        name: Save
        nameWithType: RaceModel.Save
        qualifiedName: Model.RaceModel.Save
      VB:
      - id: Model.RaceModel.Save*
        name: Save
        nameWithType: RaceModel.Save
        qualifiedName: Model.RaceModel.Save
    isDefinition: true
    commentId: Overload:Model.RaceModel.Save
  Model.RaceModel.Run*:
    name:
      CSharp:
      - id: Model.RaceModel.Run*
        name: Run
        nameWithType: RaceModel.Run
        qualifiedName: Model.RaceModel.Run
      VB:
      - id: Model.RaceModel.Run*
        name: Run
        nameWithType: RaceModel.Run
        qualifiedName: Model.RaceModel.Run
    isDefinition: true
    commentId: Overload:Model.RaceModel.Run
  Model.RaceModel.Pause*:
    name:
      CSharp:
      - id: Model.RaceModel.Pause*
        name: Pause
        nameWithType: RaceModel.Pause
        qualifiedName: Model.RaceModel.Pause
      VB:
      - id: Model.RaceModel.Pause*
        name: Pause
        nameWithType: RaceModel.Pause
        qualifiedName: Model.RaceModel.Pause
    isDefinition: true
    commentId: Overload:Model.RaceModel.Pause
  Dictionary`2:
    name:
      CSharp:
      - id: Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:Dictionary`2'
  Dictionary{Model.BoatInfo,System.Double}:
    name:
      CSharp:
      - id: Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Model.BoatInfo
        name: BoatInfo
        nameWithType: BoatInfo
        qualifiedName: Model.BoatInfo
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Model.BoatInfo
        name: BoatInfo
        nameWithType: BoatInfo
        qualifiedName: Model.BoatInfo
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Dictionary`2
    commentId: '!:Dictionary{Model.BoatInfo,System.Double}'
  Model.RaceModel.GetBoatStatus*:
    name:
      CSharp:
      - id: Model.RaceModel.GetBoatStatus*
        name: GetBoatStatus
        nameWithType: RaceModel.GetBoatStatus
        qualifiedName: Model.RaceModel.GetBoatStatus
      VB:
      - id: Model.RaceModel.GetBoatStatus*
        name: GetBoatStatus
        nameWithType: RaceModel.GetBoatStatus
        qualifiedName: Model.RaceModel.GetBoatStatus
    isDefinition: true
    commentId: Overload:Model.RaceModel.GetBoatStatus
  Model.RaceModel:
    name:
      CSharp:
      - id: Model.RaceModel
        name: RaceModel
        nameWithType: RaceModel
        qualifiedName: Model.RaceModel
      VB:
      - id: Model.RaceModel
        name: RaceModel
        nameWithType: RaceModel
        qualifiedName: Model.RaceModel
    isDefinition: true
    commentId: T:Model.RaceModel
  Environement:
    name:
      CSharp:
      - name: Environement
        nameWithType: Environement
        qualifiedName: Environement
      VB:
      - name: Environement
        nameWithType: Environement
        qualifiedName: Environement
    isDefinition: true
    commentId: N:Environement
  Environement.Conditions:
    name:
      CSharp:
      - id: Environement.Conditions
        name: Conditions
        nameWithType: Conditions
        qualifiedName: Environement.Conditions
      VB:
      - id: Environement.Conditions
        name: Conditions
        nameWithType: Conditions
        qualifiedName: Environement.Conditions
    isDefinition: true
    parent: Environement
    commentId: T:Environement.Conditions
  Environement.Current.#ctor*:
    name:
      CSharp:
      - id: Environement.Current.#ctor*
        name: Current
        nameWithType: Current.Current
        qualifiedName: Environement.Current.Current
      VB:
      - id: Environement.Current.#ctor*
        name: Current
        nameWithType: Current.Current
        qualifiedName: Environement.Current.Current
    isDefinition: true
    commentId: Overload:Environement.Current.#ctor
  Environement.Current.Update*:
    name:
      CSharp:
      - id: Environement.Current.Update*
        name: Update
        nameWithType: Current.Update
        qualifiedName: Environement.Current.Update
      VB:
      - id: Environement.Current.Update*
        name: Update
        nameWithType: Current.Update
        qualifiedName: Environement.Current.Update
    isDefinition: true
    commentId: Overload:Environement.Current.Update
  Environement.Current.SetCurrentSpeed*:
    name:
      CSharp:
      - id: Environement.Current.SetCurrentSpeed*
        name: SetCurrentSpeed
        nameWithType: Current.SetCurrentSpeed
        qualifiedName: Environement.Current.SetCurrentSpeed
      VB:
      - id: Environement.Current.SetCurrentSpeed*
        name: SetCurrentSpeed
        nameWithType: Current.SetCurrentSpeed
        qualifiedName: Environement.Current.SetCurrentSpeed
    isDefinition: true
    commentId: Overload:Environement.Current.SetCurrentSpeed
  Environement.Current.SetCurrentDirection*:
    name:
      CSharp:
      - id: Environement.Current.SetCurrentDirection*
        name: SetCurrentDirection
        nameWithType: Current.SetCurrentDirection
        qualifiedName: Environement.Current.SetCurrentDirection
      VB:
      - id: Environement.Current.SetCurrentDirection*
        name: SetCurrentDirection
        nameWithType: Current.SetCurrentDirection
        qualifiedName: Environement.Current.SetCurrentDirection
    isDefinition: true
    commentId: Overload:Environement.Current.SetCurrentDirection
  Environement.Current.GetCurrentSpeed*:
    name:
      CSharp:
      - id: Environement.Current.GetCurrentSpeed*
        name: GetCurrentSpeed
        nameWithType: Current.GetCurrentSpeed
        qualifiedName: Environement.Current.GetCurrentSpeed
      VB:
      - id: Environement.Current.GetCurrentSpeed*
        name: GetCurrentSpeed
        nameWithType: Current.GetCurrentSpeed
        qualifiedName: Environement.Current.GetCurrentSpeed
    isDefinition: true
    commentId: Overload:Environement.Current.GetCurrentSpeed
  Environement.Current.GetCurrentDirection*:
    name:
      CSharp:
      - id: Environement.Current.GetCurrentDirection*
        name: GetCurrentDirection
        nameWithType: Current.GetCurrentDirection
        qualifiedName: Environement.Current.GetCurrentDirection
      VB:
      - id: Environement.Current.GetCurrentDirection*
        name: GetCurrentDirection
        nameWithType: Current.GetCurrentDirection
        qualifiedName: Environement.Current.GetCurrentDirection
    isDefinition: true
    commentId: Overload:Environement.Current.GetCurrentDirection
  Environement.Current:
    name:
      CSharp:
      - id: Environement.Current
        name: Current
        nameWithType: Current
        qualifiedName: Environement.Current
      VB:
      - id: Environement.Current
        name: Current
        nameWithType: Current
        qualifiedName: Environement.Current
    isDefinition: true
    commentId: T:Environement.Current
  Environement.Environment.#ctor*:
    name:
      CSharp:
      - id: Environement.Environment.#ctor*
        name: Environment
        nameWithType: Environment.Environment
        qualifiedName: Environement.Environment.Environment
      VB:
      - id: Environement.Environment.#ctor*
        name: Environment
        nameWithType: Environment.Environment
        qualifiedName: Environement.Environment.Environment
    isDefinition: true
    commentId: Overload:Environement.Environment.#ctor
  Environement.Environment.UpdateWind*:
    name:
      CSharp:
      - id: Environement.Environment.UpdateWind*
        name: UpdateWind
        nameWithType: Environment.UpdateWind
        qualifiedName: Environement.Environment.UpdateWind
      VB:
      - id: Environement.Environment.UpdateWind*
        name: UpdateWind
        nameWithType: Environment.UpdateWind
        qualifiedName: Environement.Environment.UpdateWind
    isDefinition: true
    commentId: Overload:Environement.Environment.UpdateWind
  Environement.Environment.UpdateWave*:
    name:
      CSharp:
      - id: Environement.Environment.UpdateWave*
        name: UpdateWave
        nameWithType: Environment.UpdateWave
        qualifiedName: Environement.Environment.UpdateWave
      VB:
      - id: Environement.Environment.UpdateWave*
        name: UpdateWave
        nameWithType: Environment.UpdateWave
        qualifiedName: Environement.Environment.UpdateWave
    isDefinition: true
    commentId: Overload:Environement.Environment.UpdateWave
  Environement.Environment.UpdateCurrent*:
    name:
      CSharp:
      - id: Environement.Environment.UpdateCurrent*
        name: UpdateCurrent
        nameWithType: Environment.UpdateCurrent
        qualifiedName: Environement.Environment.UpdateCurrent
      VB:
      - id: Environement.Environment.UpdateCurrent*
        name: UpdateCurrent
        nameWithType: Environment.UpdateCurrent
        qualifiedName: Environement.Environment.UpdateCurrent
    isDefinition: true
    commentId: Overload:Environement.Environment.UpdateCurrent
  System.Collections.Generic.Dictionary{Environement.Conditions,System.Single}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Environement.Conditions
        name: Conditions
        nameWithType: Conditions
        qualifiedName: Environement.Conditions
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Environement.Conditions
        name: Conditions
        nameWithType: Conditions
        qualifiedName: Environement.Conditions
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{Environement.Conditions,System.Single}
  Environement.Environment.setEnvironment*:
    name:
      CSharp:
      - id: Environement.Environment.setEnvironment*
        name: setEnvironment
        nameWithType: Environment.setEnvironment
        qualifiedName: Environement.Environment.setEnvironment
      VB:
      - id: Environement.Environment.setEnvironment*
        name: setEnvironment
        nameWithType: Environment.setEnvironment
        qualifiedName: Environement.Environment.setEnvironment
    isDefinition: true
    commentId: Overload:Environement.Environment.setEnvironment
  Environement.Environment.getEnvState*:
    name:
      CSharp:
      - id: Environement.Environment.getEnvState*
        name: getEnvState
        nameWithType: Environment.getEnvState
        qualifiedName: Environement.Environment.getEnvState
      VB:
      - id: Environement.Environment.getEnvState*
        name: getEnvState
        nameWithType: Environment.getEnvState
        qualifiedName: Environement.Environment.getEnvState
    isDefinition: true
    commentId: Overload:Environement.Environment.getEnvState
  Environement.Environment:
    name:
      CSharp:
      - id: Environement.Environment
        name: Environment
        nameWithType: Environment
        qualifiedName: Environement.Environment
      VB:
      - id: Environement.Environment
        name: Environment
        nameWithType: Environment
        qualifiedName: Environement.Environment
    isDefinition: true
    parent: Environement
    commentId: T:Environement.Environment
  Environement.Wave.#ctor*:
    name:
      CSharp:
      - id: Environement.Wave.#ctor*
        name: Wave
        nameWithType: Wave.Wave
        qualifiedName: Environement.Wave.Wave
      VB:
      - id: Environement.Wave.#ctor*
        name: Wave
        nameWithType: Wave.Wave
        qualifiedName: Environement.Wave.Wave
    isDefinition: true
    commentId: Overload:Environement.Wave.#ctor
  Environement.Wave.Update*:
    name:
      CSharp:
      - id: Environement.Wave.Update*
        name: Update
        nameWithType: Wave.Update
        qualifiedName: Environement.Wave.Update
      VB:
      - id: Environement.Wave.Update*
        name: Update
        nameWithType: Wave.Update
        qualifiedName: Environement.Wave.Update
    isDefinition: true
    commentId: Overload:Environement.Wave.Update
  Environement.Wave.SetWaveDirection*:
    name:
      CSharp:
      - id: Environement.Wave.SetWaveDirection*
        name: SetWaveDirection
        nameWithType: Wave.SetWaveDirection
        qualifiedName: Environement.Wave.SetWaveDirection
      VB:
      - id: Environement.Wave.SetWaveDirection*
        name: SetWaveDirection
        nameWithType: Wave.SetWaveDirection
        qualifiedName: Environement.Wave.SetWaveDirection
    isDefinition: true
    commentId: Overload:Environement.Wave.SetWaveDirection
  Environement.Wave.SetWaveAmplitude*:
    name:
      CSharp:
      - id: Environement.Wave.SetWaveAmplitude*
        name: SetWaveAmplitude
        nameWithType: Wave.SetWaveAmplitude
        qualifiedName: Environement.Wave.SetWaveAmplitude
      VB:
      - id: Environement.Wave.SetWaveAmplitude*
        name: SetWaveAmplitude
        nameWithType: Wave.SetWaveAmplitude
        qualifiedName: Environement.Wave.SetWaveAmplitude
    isDefinition: true
    commentId: Overload:Environement.Wave.SetWaveAmplitude
  Environement.Wave.SetWaveLength*:
    name:
      CSharp:
      - id: Environement.Wave.SetWaveLength*
        name: SetWaveLength
        nameWithType: Wave.SetWaveLength
        qualifiedName: Environement.Wave.SetWaveLength
      VB:
      - id: Environement.Wave.SetWaveLength*
        name: SetWaveLength
        nameWithType: Wave.SetWaveLength
        qualifiedName: Environement.Wave.SetWaveLength
    isDefinition: true
    commentId: Overload:Environement.Wave.SetWaveLength
  Environement.Wave.GetDirection*:
    name:
      CSharp:
      - id: Environement.Wave.GetDirection*
        name: GetDirection
        nameWithType: Wave.GetDirection
        qualifiedName: Environement.Wave.GetDirection
      VB:
      - id: Environement.Wave.GetDirection*
        name: GetDirection
        nameWithType: Wave.GetDirection
        qualifiedName: Environement.Wave.GetDirection
    isDefinition: true
    commentId: Overload:Environement.Wave.GetDirection
  Environement.Wave.GetAmplitude*:
    name:
      CSharp:
      - id: Environement.Wave.GetAmplitude*
        name: GetAmplitude
        nameWithType: Wave.GetAmplitude
        qualifiedName: Environement.Wave.GetAmplitude
      VB:
      - id: Environement.Wave.GetAmplitude*
        name: GetAmplitude
        nameWithType: Wave.GetAmplitude
        qualifiedName: Environement.Wave.GetAmplitude
    isDefinition: true
    commentId: Overload:Environement.Wave.GetAmplitude
  Environement.Wave.GetWaveLength*:
    name:
      CSharp:
      - id: Environement.Wave.GetWaveLength*
        name: GetWaveLength
        nameWithType: Wave.GetWaveLength
        qualifiedName: Environement.Wave.GetWaveLength
      VB:
      - id: Environement.Wave.GetWaveLength*
        name: GetWaveLength
        nameWithType: Wave.GetWaveLength
        qualifiedName: Environement.Wave.GetWaveLength
    isDefinition: true
    commentId: Overload:Environement.Wave.GetWaveLength
  Environement.Wave:
    name:
      CSharp:
      - id: Environement.Wave
        name: Wave
        nameWithType: Wave
        qualifiedName: Environement.Wave
      VB:
      - id: Environement.Wave
        name: Wave
        nameWithType: Wave
        qualifiedName: Environement.Wave
    isDefinition: true
    commentId: T:Environement.Wave
  Environement.Wind.#ctor*:
    name:
      CSharp:
      - id: Environement.Wind.#ctor*
        name: Wind
        nameWithType: Wind.Wind
        qualifiedName: Environement.Wind.Wind
      VB:
      - id: Environement.Wind.#ctor*
        name: Wind
        nameWithType: Wind.Wind
        qualifiedName: Environement.Wind.Wind
    isDefinition: true
    commentId: Overload:Environement.Wind.#ctor
  Environement.Wind.Update*:
    name:
      CSharp:
      - id: Environement.Wind.Update*
        name: Update
        nameWithType: Wind.Update
        qualifiedName: Environement.Wind.Update
      VB:
      - id: Environement.Wind.Update*
        name: Update
        nameWithType: Wind.Update
        qualifiedName: Environement.Wind.Update
    isDefinition: true
    commentId: Overload:Environement.Wind.Update
  Environement.Wind.SetWindSpeed*:
    name:
      CSharp:
      - id: Environement.Wind.SetWindSpeed*
        name: SetWindSpeed
        nameWithType: Wind.SetWindSpeed
        qualifiedName: Environement.Wind.SetWindSpeed
      VB:
      - id: Environement.Wind.SetWindSpeed*
        name: SetWindSpeed
        nameWithType: Wind.SetWindSpeed
        qualifiedName: Environement.Wind.SetWindSpeed
    isDefinition: true
    commentId: Overload:Environement.Wind.SetWindSpeed
  Environement.Wind.SetWindDirection*:
    name:
      CSharp:
      - id: Environement.Wind.SetWindDirection*
        name: SetWindDirection
        nameWithType: Wind.SetWindDirection
        qualifiedName: Environement.Wind.SetWindDirection
      VB:
      - id: Environement.Wind.SetWindDirection*
        name: SetWindDirection
        nameWithType: Wind.SetWindDirection
        qualifiedName: Environement.Wind.SetWindDirection
    isDefinition: true
    commentId: Overload:Environement.Wind.SetWindDirection
  Environement.Wind.GetWindSpeed*:
    name:
      CSharp:
      - id: Environement.Wind.GetWindSpeed*
        name: GetWindSpeed
        nameWithType: Wind.GetWindSpeed
        qualifiedName: Environement.Wind.GetWindSpeed
      VB:
      - id: Environement.Wind.GetWindSpeed*
        name: GetWindSpeed
        nameWithType: Wind.GetWindSpeed
        qualifiedName: Environement.Wind.GetWindSpeed
    isDefinition: true
    commentId: Overload:Environement.Wind.GetWindSpeed
  Environement.Wind.GetWindDirection*:
    name:
      CSharp:
      - id: Environement.Wind.GetWindDirection*
        name: GetWindDirection
        nameWithType: Wind.GetWindDirection
        qualifiedName: Environement.Wind.GetWindDirection
      VB:
      - id: Environement.Wind.GetWindDirection*
        name: GetWindDirection
        nameWithType: Wind.GetWindDirection
        qualifiedName: Environement.Wind.GetWindDirection
    isDefinition: true
    commentId: Overload:Environement.Wind.GetWindDirection
  Environement.Wind:
    name:
      CSharp:
      - id: Environement.Wind
        name: Wind
        nameWithType: Wind
        qualifiedName: Environement.Wind
      VB:
      - id: Environement.Wind
        name: Wind
        nameWithType: Wind
        qualifiedName: Environement.Wind
    isDefinition: true
    commentId: T:Environement.Wind
  PRace.Boat:
    name:
      CSharp:
      - id: PRace.Boat
        name: Boat
        nameWithType: Boat
        qualifiedName: PRace.Boat
      VB:
      - id: PRace.Boat
        name: Boat
        nameWithType: Boat
        qualifiedName: PRace.Boat
    isDefinition: true
    parent: PRace
    commentId: T:PRace.Boat
  PRace.Time:
    name:
      CSharp:
      - id: PRace.Time
        name: Time
        nameWithType: Time
        qualifiedName: PRace.Time
      VB:
      - id: PRace.Time
        name: Time
        nameWithType: Time
        qualifiedName: PRace.Time
    isDefinition: true
    parent: PRace
    commentId: T:PRace.Time
  physicSimulator.physics_simulator.#ctor*:
    name:
      CSharp:
      - id: physicSimulator.physics_simulator.#ctor*
        name: physics_simulator
        nameWithType: physics_simulator.physics_simulator
        qualifiedName: physicSimulator.physics_simulator.physics_simulator
      VB:
      - id: physicSimulator.physics_simulator.#ctor*
        name: physics_simulator
        nameWithType: physics_simulator.physics_simulator
        qualifiedName: physicSimulator.physics_simulator.physics_simulator
    isDefinition: true
    commentId: Overload:physicSimulator.physics_simulator.#ctor
  physicSimulator.physics_simulator.SetBoat*:
    name:
      CSharp:
      - id: physicSimulator.physics_simulator.SetBoat*
        name: SetBoat
        nameWithType: physics_simulator.SetBoat
        qualifiedName: physicSimulator.physics_simulator.SetBoat
      VB:
      - id: physicSimulator.physics_simulator.SetBoat*
        name: SetBoat
        nameWithType: physics_simulator.SetBoat
        qualifiedName: physicSimulator.physics_simulator.SetBoat
    isDefinition: true
    commentId: Overload:physicSimulator.physics_simulator.SetBoat
  physicSimulator.physics_simulator.MathMod*:
    name:
      CSharp:
      - id: physicSimulator.physics_simulator.MathMod*
        name: MathMod
        nameWithType: physics_simulator.MathMod
        qualifiedName: physicSimulator.physics_simulator.MathMod
      VB:
      - id: physicSimulator.physics_simulator.MathMod*
        name: MathMod
        nameWithType: physics_simulator.MathMod
        qualifiedName: physicSimulator.physics_simulator.MathMod
    isDefinition: true
    commentId: Overload:physicSimulator.physics_simulator.MathMod
  physicSimulator.physics_simulator.Move*:
    name:
      CSharp:
      - id: physicSimulator.physics_simulator.Move*
        name: Move
        nameWithType: physics_simulator.Move
        qualifiedName: physicSimulator.physics_simulator.Move
      VB:
      - id: physicSimulator.physics_simulator.Move*
        name: Move
        nameWithType: physics_simulator.Move
        qualifiedName: physicSimulator.physics_simulator.Move
    isDefinition: true
    commentId: Overload:physicSimulator.physics_simulator.Move
  physicSimulator.physics_simulator.GetCOG*:
    name:
      CSharp:
      - id: physicSimulator.physics_simulator.GetCOG*
        name: GetCOG
        nameWithType: physics_simulator.GetCOG
        qualifiedName: physicSimulator.physics_simulator.GetCOG
      VB:
      - id: physicSimulator.physics_simulator.GetCOG*
        name: GetCOG
        nameWithType: physics_simulator.GetCOG
        qualifiedName: physicSimulator.physics_simulator.GetCOG
    isDefinition: true
    commentId: Overload:physicSimulator.physics_simulator.GetCOG
  physicSimulator.physics_simulator.GetSOG*:
    name:
      CSharp:
      - id: physicSimulator.physics_simulator.GetSOG*
        name: GetSOG
        nameWithType: physics_simulator.GetSOG
        qualifiedName: physicSimulator.physics_simulator.GetSOG
      VB:
      - id: physicSimulator.physics_simulator.GetSOG*
        name: GetSOG
        nameWithType: physics_simulator.GetSOG
        qualifiedName: physicSimulator.physics_simulator.GetSOG
    isDefinition: true
    commentId: Overload:physicSimulator.physics_simulator.GetSOG
  physicSimulator.physics_simulator:
    name:
      CSharp:
      - id: physicSimulator.physics_simulator
        name: physics_simulator
        nameWithType: physics_simulator
        qualifiedName: physicSimulator.physics_simulator
      VB:
      - id: physicSimulator.physics_simulator
        name: physics_simulator
        nameWithType: physics_simulator
        qualifiedName: physicSimulator.physics_simulator
    isDefinition: true
    commentId: T:physicSimulator.physics_simulator
  physicSimulator:
    name:
      CSharp:
      - name: physicSimulator
        nameWithType: physicSimulator
        qualifiedName: physicSimulator
      VB:
      - name: physicSimulator
        nameWithType: physicSimulator
        qualifiedName: physicSimulator
    isDefinition: true
    commentId: N:physicSimulator
  PRace.Boat.#ctor*:
    name:
      CSharp:
      - id: PRace.Boat.#ctor*
        name: Boat
        nameWithType: Boat.Boat
        qualifiedName: PRace.Boat.Boat
      VB:
      - id: PRace.Boat.#ctor*
        name: Boat
        nameWithType: Boat.Boat
        qualifiedName: PRace.Boat.Boat
    isDefinition: true
    commentId: Overload:PRace.Boat.#ctor
  System.Collections.Generic.List{PRace.Polaire}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: PRace.Polaire
        name: Polaire
        nameWithType: Polaire
        qualifiedName: PRace.Polaire
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: PRace.Polaire
        name: Polaire
        nameWithType: Polaire
        qualifiedName: PRace.Polaire
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{PRace.Polaire}
  PRace.Position:
    name:
      CSharp:
      - id: PRace.Position
        name: Position
        nameWithType: Position
        qualifiedName: PRace.Position
      VB:
      - id: PRace.Position
        name: Position
        nameWithType: Position
        qualifiedName: PRace.Position
    isDefinition: true
    parent: PRace
    commentId: T:PRace.Position
  PRace.Boat.init*:
    name:
      CSharp:
      - id: PRace.Boat.init*
        name: init
        nameWithType: Boat.init
        qualifiedName: PRace.Boat.init
      VB:
      - id: PRace.Boat.init*
        name: init
        nameWithType: Boat.init
        qualifiedName: PRace.Boat.init
    isDefinition: true
    commentId: Overload:PRace.Boat.init
  PRace.Boat.GetId*:
    name:
      CSharp:
      - id: PRace.Boat.GetId*
        name: GetId
        nameWithType: Boat.GetId
        qualifiedName: PRace.Boat.GetId
      VB:
      - id: PRace.Boat.GetId*
        name: GetId
        nameWithType: Boat.GetId
        qualifiedName: PRace.Boat.GetId
    isDefinition: true
    commentId: Overload:PRace.Boat.GetId
  PRace.Boat.setCap*:
    name:
      CSharp:
      - id: PRace.Boat.setCap*
        name: setCap
        nameWithType: Boat.setCap
        qualifiedName: PRace.Boat.setCap
      VB:
      - id: PRace.Boat.setCap*
        name: setCap
        nameWithType: Boat.setCap
        qualifiedName: PRace.Boat.setCap
    isDefinition: true
    commentId: Overload:PRace.Boat.setCap
  PRace.Boat.getCap*:
    name:
      CSharp:
      - id: PRace.Boat.getCap*
        name: getCap
        nameWithType: Boat.getCap
        qualifiedName: PRace.Boat.getCap
      VB:
      - id: PRace.Boat.getCap*
        name: getCap
        nameWithType: Boat.getCap
        qualifiedName: PRace.Boat.getCap
    isDefinition: true
    commentId: Overload:PRace.Boat.getCap
  PRace.Boat.GetCapRegulateurAmure*:
    name:
      CSharp:
      - id: PRace.Boat.GetCapRegulateurAmure*
        name: GetCapRegulateurAmure
        nameWithType: Boat.GetCapRegulateurAmure
        qualifiedName: PRace.Boat.GetCapRegulateurAmure
      VB:
      - id: PRace.Boat.GetCapRegulateurAmure*
        name: GetCapRegulateurAmure
        nameWithType: Boat.GetCapRegulateurAmure
        qualifiedName: PRace.Boat.GetCapRegulateurAmure
    isDefinition: true
    commentId: Overload:PRace.Boat.GetCapRegulateurAmure
  PRace.Boat.GetPosition*:
    name:
      CSharp:
      - id: PRace.Boat.GetPosition*
        name: GetPosition
        nameWithType: Boat.GetPosition
        qualifiedName: PRace.Boat.GetPosition
      VB:
      - id: PRace.Boat.GetPosition*
        name: GetPosition
        nameWithType: Boat.GetPosition
        qualifiedName: PRace.Boat.GetPosition
    isDefinition: true
    commentId: Overload:PRace.Boat.GetPosition
  PRace.ModeCommande:
    name:
      CSharp:
      - id: PRace.ModeCommande
        name: ModeCommande
        nameWithType: ModeCommande
        qualifiedName: PRace.ModeCommande
      VB:
      - id: PRace.ModeCommande
        name: ModeCommande
        nameWithType: ModeCommande
        qualifiedName: PRace.ModeCommande
    isDefinition: true
    parent: PRace
    commentId: T:PRace.ModeCommande
  PRace.Boat.switchMode*:
    name:
      CSharp:
      - id: PRace.Boat.switchMode*
        name: switchMode
        nameWithType: Boat.switchMode
        qualifiedName: PRace.Boat.switchMode
      VB:
      - id: PRace.Boat.switchMode*
        name: switchMode
        nameWithType: Boat.switchMode
        qualifiedName: PRace.Boat.switchMode
    isDefinition: true
    commentId: Overload:PRace.Boat.switchMode
  PRace.DegreeIncrement:
    name:
      CSharp:
      - id: PRace.DegreeIncrement
        name: DegreeIncrement
        nameWithType: DegreeIncrement
        qualifiedName: PRace.DegreeIncrement
      VB:
      - id: PRace.DegreeIncrement
        name: DegreeIncrement
        nameWithType: DegreeIncrement
        qualifiedName: PRace.DegreeIncrement
    isDefinition: true
    parent: PRace
    commentId: T:PRace.DegreeIncrement
  PRace.Boat.IncrementerCap*:
    name:
      CSharp:
      - id: PRace.Boat.IncrementerCap*
        name: IncrementerCap
        nameWithType: Boat.IncrementerCap
        qualifiedName: PRace.Boat.IncrementerCap
      VB:
      - id: PRace.Boat.IncrementerCap*
        name: IncrementerCap
        nameWithType: Boat.IncrementerCap
        qualifiedName: PRace.Boat.IncrementerCap
    isDefinition: true
    commentId: Overload:PRace.Boat.IncrementerCap
  PRace.Boat.setPosition*:
    name:
      CSharp:
      - id: PRace.Boat.setPosition*
        name: setPosition
        nameWithType: Boat.setPosition
        qualifiedName: PRace.Boat.setPosition
      VB:
      - id: PRace.Boat.setPosition*
        name: setPosition
        nameWithType: Boat.setPosition
        qualifiedName: PRace.Boat.setPosition
    isDefinition: true
    commentId: Overload:PRace.Boat.setPosition
  PRace.Boat.setAcceleration*:
    name:
      CSharp:
      - id: PRace.Boat.setAcceleration*
        name: setAcceleration
        nameWithType: Boat.setAcceleration
        qualifiedName: PRace.Boat.setAcceleration
      VB:
      - id: PRace.Boat.setAcceleration*
        name: setAcceleration
        nameWithType: Boat.setAcceleration
        qualifiedName: PRace.Boat.setAcceleration
    isDefinition: true
    commentId: Overload:PRace.Boat.setAcceleration
  PRace.Boat.SetAvailablePolaire*:
    name:
      CSharp:
      - id: PRace.Boat.SetAvailablePolaire*
        name: SetAvailablePolaire
        nameWithType: Boat.SetAvailablePolaire
        qualifiedName: PRace.Boat.SetAvailablePolaire
      VB:
      - id: PRace.Boat.SetAvailablePolaire*
        name: SetAvailablePolaire
        nameWithType: Boat.SetAvailablePolaire
        qualifiedName: PRace.Boat.SetAvailablePolaire
    isDefinition: true
    commentId: Overload:PRace.Boat.SetAvailablePolaire
  PRace.Boat.getAvailablePolaire*:
    name:
      CSharp:
      - id: PRace.Boat.getAvailablePolaire*
        name: getAvailablePolaire
        nameWithType: Boat.getAvailablePolaire
        qualifiedName: PRace.Boat.getAvailablePolaire
      VB:
      - id: PRace.Boat.getAvailablePolaire*
        name: getAvailablePolaire
        nameWithType: Boat.getAvailablePolaire
        qualifiedName: PRace.Boat.getAvailablePolaire
    isDefinition: true
    commentId: Overload:PRace.Boat.getAvailablePolaire
  PRace.Boat.SetCurrentPolaire*:
    name:
      CSharp:
      - id: PRace.Boat.SetCurrentPolaire*
        name: SetCurrentPolaire
        nameWithType: Boat.SetCurrentPolaire
        qualifiedName: PRace.Boat.SetCurrentPolaire
      VB:
      - id: PRace.Boat.SetCurrentPolaire*
        name: SetCurrentPolaire
        nameWithType: Boat.SetCurrentPolaire
        qualifiedName: PRace.Boat.SetCurrentPolaire
    isDefinition: true
    commentId: Overload:PRace.Boat.SetCurrentPolaire
  PRace.Polaire:
    name:
      CSharp:
      - id: PRace.Polaire
        name: Polaire
        nameWithType: Polaire
        qualifiedName: PRace.Polaire
      VB:
      - id: PRace.Polaire
        name: Polaire
        nameWithType: Polaire
        qualifiedName: PRace.Polaire
    isDefinition: true
    parent: PRace
    commentId: T:PRace.Polaire
  PRace.Boat.GetCurrentPolaire*:
    name:
      CSharp:
      - id: PRace.Boat.GetCurrentPolaire*
        name: GetCurrentPolaire
        nameWithType: Boat.GetCurrentPolaire
        qualifiedName: PRace.Boat.GetCurrentPolaire
      VB:
      - id: PRace.Boat.GetCurrentPolaire*
        name: GetCurrentPolaire
        nameWithType: Boat.GetCurrentPolaire
        qualifiedName: PRace.Boat.GetCurrentPolaire
    isDefinition: true
    commentId: Overload:PRace.Boat.GetCurrentPolaire
  PRace.Boat.GetAllPolaire*:
    name:
      CSharp:
      - id: PRace.Boat.GetAllPolaire*
        name: GetAllPolaire
        nameWithType: Boat.GetAllPolaire
        qualifiedName: PRace.Boat.GetAllPolaire
      VB:
      - id: PRace.Boat.GetAllPolaire*
        name: GetAllPolaire
        nameWithType: Boat.GetAllPolaire
        qualifiedName: PRace.Boat.GetAllPolaire
    isDefinition: true
    commentId: Overload:PRace.Boat.GetAllPolaire
  PRace.Clock.#ctor*:
    name:
      CSharp:
      - id: PRace.Clock.#ctor*
        name: Clock
        nameWithType: Clock.Clock
        qualifiedName: PRace.Clock.Clock
      VB:
      - id: PRace.Clock.#ctor*
        name: Clock
        nameWithType: Clock.Clock
        qualifiedName: PRace.Clock.Clock
    isDefinition: true
    commentId: Overload:PRace.Clock.#ctor
  PRace.Clock.GetCurrentMoment*:
    name:
      CSharp:
      - id: PRace.Clock.GetCurrentMoment*
        name: GetCurrentMoment
        nameWithType: Clock.GetCurrentMoment
        qualifiedName: PRace.Clock.GetCurrentMoment
      VB:
      - id: PRace.Clock.GetCurrentMoment*
        name: GetCurrentMoment
        nameWithType: Clock.GetCurrentMoment
        qualifiedName: PRace.Clock.GetCurrentMoment
    isDefinition: true
    commentId: Overload:PRace.Clock.GetCurrentMoment
  PRace.Clock.IncrementTime*:
    name:
      CSharp:
      - id: PRace.Clock.IncrementTime*
        name: IncrementTime
        nameWithType: Clock.IncrementTime
        qualifiedName: PRace.Clock.IncrementTime
      VB:
      - id: PRace.Clock.IncrementTime*
        name: IncrementTime
        nameWithType: Clock.IncrementTime
        qualifiedName: PRace.Clock.IncrementTime
    isDefinition: true
    commentId: Overload:PRace.Clock.IncrementTime
  PRace.Clock.pause*:
    name:
      CSharp:
      - id: PRace.Clock.pause*
        name: pause
        nameWithType: Clock.pause
        qualifiedName: PRace.Clock.pause
      VB:
      - id: PRace.Clock.pause*
        name: pause
        nameWithType: Clock.pause
        qualifiedName: PRace.Clock.pause
    isDefinition: true
    commentId: Overload:PRace.Clock.pause
  PRace.Clock.Run*:
    name:
      CSharp:
      - id: PRace.Clock.Run*
        name: Run
        nameWithType: Clock.Run
        qualifiedName: PRace.Clock.Run
      VB:
      - id: PRace.Clock.Run*
        name: Run
        nameWithType: Clock.Run
        qualifiedName: PRace.Clock.Run
    isDefinition: true
    commentId: Overload:PRace.Clock.Run
  PRace.Clock.nextIteration*:
    name:
      CSharp:
      - id: PRace.Clock.nextIteration*
        name: nextIteration
        nameWithType: Clock.nextIteration
        qualifiedName: PRace.Clock.nextIteration
      VB:
      - id: PRace.Clock.nextIteration*
        name: nextIteration
        nameWithType: Clock.nextIteration
        qualifiedName: PRace.Clock.nextIteration
    isDefinition: true
    commentId: Overload:PRace.Clock.nextIteration
  PRace.Clock.waitTick*:
    name:
      CSharp:
      - id: PRace.Clock.waitTick*
        name: waitTick
        nameWithType: Clock.waitTick
        qualifiedName: PRace.Clock.waitTick
      VB:
      - id: PRace.Clock.waitTick*
        name: waitTick
        nameWithType: Clock.waitTick
        qualifiedName: PRace.Clock.waitTick
    isDefinition: true
    commentId: Overload:PRace.Clock.waitTick
  PRace.Clock.cantKeepUp*:
    name:
      CSharp:
      - id: PRace.Clock.cantKeepUp*
        name: cantKeepUp
        nameWithType: Clock.cantKeepUp
        qualifiedName: PRace.Clock.cantKeepUp
      VB:
      - id: PRace.Clock.cantKeepUp*
        name: cantKeepUp
        nameWithType: Clock.cantKeepUp
        qualifiedName: PRace.Clock.cantKeepUp
    isDefinition: true
    commentId: Overload:PRace.Clock.cantKeepUp
  PRace.Clock.SetCurrentMoment*:
    name:
      CSharp:
      - id: PRace.Clock.SetCurrentMoment*
        name: SetCurrentMoment
        nameWithType: Clock.SetCurrentMoment
        qualifiedName: PRace.Clock.SetCurrentMoment
      VB:
      - id: PRace.Clock.SetCurrentMoment*
        name: SetCurrentMoment
        nameWithType: Clock.SetCurrentMoment
        qualifiedName: PRace.Clock.SetCurrentMoment
    isDefinition: true
    commentId: Overload:PRace.Clock.SetCurrentMoment
  PRace.Clock.GetIsPause*:
    name:
      CSharp:
      - id: PRace.Clock.GetIsPause*
        name: GetIsPause
        nameWithType: Clock.GetIsPause
        qualifiedName: PRace.Clock.GetIsPause
      VB:
      - id: PRace.Clock.GetIsPause*
        name: GetIsPause
        nameWithType: Clock.GetIsPause
        qualifiedName: PRace.Clock.GetIsPause
    isDefinition: true
    commentId: Overload:PRace.Clock.GetIsPause
  PRace.Clock:
    name:
      CSharp:
      - id: PRace.Clock
        name: Clock
        nameWithType: Clock
        qualifiedName: PRace.Clock
      VB:
      - id: PRace.Clock
        name: Clock
        nameWithType: Clock
        qualifiedName: PRace.Clock
    isDefinition: true
    commentId: T:PRace.Clock
  PRace.Competitor.#ctor*:
    name:
      CSharp:
      - id: PRace.Competitor.#ctor*
        name: Competitor
        nameWithType: Competitor.Competitor
        qualifiedName: PRace.Competitor.Competitor
      VB:
      - id: PRace.Competitor.#ctor*
        name: Competitor
        nameWithType: Competitor.Competitor
        qualifiedName: PRace.Competitor.Competitor
    isDefinition: true
    commentId: Overload:PRace.Competitor.#ctor
  PRace.Competitor.SetPosition*:
    name:
      CSharp:
      - id: PRace.Competitor.SetPosition*
        name: SetPosition
        nameWithType: Competitor.SetPosition
        qualifiedName: PRace.Competitor.SetPosition
      VB:
      - id: PRace.Competitor.SetPosition*
        name: SetPosition
        nameWithType: Competitor.SetPosition
        qualifiedName: PRace.Competitor.SetPosition
    isDefinition: true
    commentId: Overload:PRace.Competitor.SetPosition
  PRace.Competitor.GetPosition*:
    name:
      CSharp:
      - id: PRace.Competitor.GetPosition*
        name: GetPosition
        nameWithType: Competitor.GetPosition
        qualifiedName: PRace.Competitor.GetPosition
      VB:
      - id: PRace.Competitor.GetPosition*
        name: GetPosition
        nameWithType: Competitor.GetPosition
        qualifiedName: PRace.Competitor.GetPosition
    isDefinition: true
    commentId: Overload:PRace.Competitor.GetPosition
  PRace.Competitor.GetId*:
    name:
      CSharp:
      - id: PRace.Competitor.GetId*
        name: GetId
        nameWithType: Competitor.GetId
        qualifiedName: PRace.Competitor.GetId
      VB:
      - id: PRace.Competitor.GetId*
        name: GetId
        nameWithType: Competitor.GetId
        qualifiedName: PRace.Competitor.GetId
    isDefinition: true
    commentId: Overload:PRace.Competitor.GetId
  PRace.Competitor:
    name:
      CSharp:
      - id: PRace.Competitor
        name: Competitor
        nameWithType: Competitor
        qualifiedName: PRace.Competitor
      VB:
      - id: PRace.Competitor
        name: Competitor
        nameWithType: Competitor
        qualifiedName: PRace.Competitor
    isDefinition: true
    commentId: T:PRace.Competitor
  PRace.Polaire.#ctor*:
    name:
      CSharp:
      - id: PRace.Polaire.#ctor*
        name: Polaire
        nameWithType: Polaire.Polaire
        qualifiedName: PRace.Polaire.Polaire
      VB:
      - id: PRace.Polaire.#ctor*
        name: Polaire
        nameWithType: Polaire.Polaire
        qualifiedName: PRace.Polaire.Polaire
    isDefinition: true
    commentId: Overload:PRace.Polaire.#ctor
  System.Single[]:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  PRace.Polaire.GetNearest*:
    name:
      CSharp:
      - id: PRace.Polaire.GetNearest*
        name: GetNearest
        nameWithType: Polaire.GetNearest
        qualifiedName: PRace.Polaire.GetNearest
      VB:
      - id: PRace.Polaire.GetNearest*
        name: GetNearest
        nameWithType: Polaire.GetNearest
        qualifiedName: PRace.Polaire.GetNearest
    isDefinition: true
    commentId: Overload:PRace.Polaire.GetNearest
  PRace.Polaire.getSpeed*:
    name:
      CSharp:
      - id: PRace.Polaire.getSpeed*
        name: getSpeed
        nameWithType: Polaire.getSpeed
        qualifiedName: PRace.Polaire.getSpeed
      VB:
      - id: PRace.Polaire.getSpeed*
        name: getSpeed
        nameWithType: Polaire.getSpeed
        qualifiedName: PRace.Polaire.getSpeed
    isDefinition: true
    commentId: Overload:PRace.Polaire.getSpeed
  PRace.Polaire.setName*:
    name:
      CSharp:
      - id: PRace.Polaire.setName*
        name: setName
        nameWithType: Polaire.setName
        qualifiedName: PRace.Polaire.setName
      VB:
      - id: PRace.Polaire.setName*
        name: setName
        nameWithType: Polaire.setName
        qualifiedName: PRace.Polaire.setName
    isDefinition: true
    commentId: Overload:PRace.Polaire.setName
  PRace.Polaire.getName*:
    name:
      CSharp:
      - id: PRace.Polaire.getName*
        name: getName
        nameWithType: Polaire.getName
        qualifiedName: PRace.Polaire.getName
      VB:
      - id: PRace.Polaire.getName*
        name: getName
        nameWithType: Polaire.getName
        qualifiedName: PRace.Polaire.getName
    isDefinition: true
    commentId: Overload:PRace.Polaire.getName
  PRace.Position.#ctor*:
    name:
      CSharp:
      - id: PRace.Position.#ctor*
        name: Position
        nameWithType: Position.Position
        qualifiedName: PRace.Position.Position
      VB:
      - id: PRace.Position.#ctor*
        name: Position
        nameWithType: Position.Position
        qualifiedName: PRace.Position.Position
    isDefinition: true
    commentId: Overload:PRace.Position.#ctor
  PRace.Position.Update*:
    name:
      CSharp:
      - id: PRace.Position.Update*
        name: Update
        nameWithType: Position.Update
        qualifiedName: PRace.Position.Update
      VB:
      - id: PRace.Position.Update*
        name: Update
        nameWithType: Position.Update
        qualifiedName: PRace.Position.Update
    isDefinition: true
    commentId: Overload:PRace.Position.Update
  PRace.Position.GetLongitude*:
    name:
      CSharp:
      - id: PRace.Position.GetLongitude*
        name: GetLongitude
        nameWithType: Position.GetLongitude
        qualifiedName: PRace.Position.GetLongitude
      VB:
      - id: PRace.Position.GetLongitude*
        name: GetLongitude
        nameWithType: Position.GetLongitude
        qualifiedName: PRace.Position.GetLongitude
    isDefinition: true
    commentId: Overload:PRace.Position.GetLongitude
  PRace.Position.GetLatitude*:
    name:
      CSharp:
      - id: PRace.Position.GetLatitude*
        name: GetLatitude
        nameWithType: Position.GetLatitude
        qualifiedName: PRace.Position.GetLatitude
      VB:
      - id: PRace.Position.GetLatitude*
        name: GetLatitude
        nameWithType: Position.GetLatitude
        qualifiedName: PRace.Position.GetLatitude
    isDefinition: true
    commentId: Overload:PRace.Position.GetLatitude
  PRace.Position.GetLatitudeAngle*:
    name:
      CSharp:
      - id: PRace.Position.GetLatitudeAngle*
        name: GetLatitudeAngle
        nameWithType: Position.GetLatitudeAngle
        qualifiedName: PRace.Position.GetLatitudeAngle
      VB:
      - id: PRace.Position.GetLatitudeAngle*
        name: GetLatitudeAngle
        nameWithType: Position.GetLatitudeAngle
        qualifiedName: PRace.Position.GetLatitudeAngle
    isDefinition: true
    commentId: Overload:PRace.Position.GetLatitudeAngle
  PRace.Position.GetLongitudeAngle*:
    name:
      CSharp:
      - id: PRace.Position.GetLongitudeAngle*
        name: GetLongitudeAngle
        nameWithType: Position.GetLongitudeAngle
        qualifiedName: PRace.Position.GetLongitudeAngle
      VB:
      - id: PRace.Position.GetLongitudeAngle*
        name: GetLongitudeAngle
        nameWithType: Position.GetLongitudeAngle
        qualifiedName: PRace.Position.GetLongitudeAngle
    isDefinition: true
    commentId: Overload:PRace.Position.GetLongitudeAngle
  PRace.Position.ToString*:
    name:
      CSharp:
      - id: PRace.Position.ToString*
        name: ToString
        nameWithType: Position.ToString
        qualifiedName: PRace.Position.ToString
      VB:
      - id: PRace.Position.ToString*
        name: ToString
        nameWithType: Position.ToString
        qualifiedName: PRace.Position.ToString
    isDefinition: true
    commentId: Overload:PRace.Position.ToString
  PRace.Position.Equals*:
    name:
      CSharp:
      - id: PRace.Position.Equals*
        name: Equals
        nameWithType: Position.Equals
        qualifiedName: PRace.Position.Equals
      VB:
      - id: PRace.Position.Equals*
        name: Equals
        nameWithType: Position.Equals
        qualifiedName: PRace.Position.Equals
    isDefinition: true
    commentId: Overload:PRace.Position.Equals
  PRace.Race.#ctor*:
    name:
      CSharp:
      - id: PRace.Race.#ctor*
        name: Race
        nameWithType: Race.Race
        qualifiedName: PRace.Race.Race
      VB:
      - id: PRace.Race.#ctor*
        name: Race
        nameWithType: Race.Race
        qualifiedName: PRace.Race.Race
    isDefinition: true
    commentId: Overload:PRace.Race.#ctor
  PRace.Race.GetId*:
    name:
      CSharp:
      - id: PRace.Race.GetId*
        name: GetId
        nameWithType: Race.GetId
        qualifiedName: PRace.Race.GetId
      VB:
      - id: PRace.Race.GetId*
        name: GetId
        nameWithType: Race.GetId
        qualifiedName: PRace.Race.GetId
    isDefinition: true
    commentId: Overload:PRace.Race.GetId
  PRace.Race.GetCurrentInstant*:
    name:
      CSharp:
      - id: PRace.Race.GetCurrentInstant*
        name: GetCurrentInstant
        nameWithType: Race.GetCurrentInstant
        qualifiedName: PRace.Race.GetCurrentInstant
      VB:
      - id: PRace.Race.GetCurrentInstant*
        name: GetCurrentInstant
        nameWithType: Race.GetCurrentInstant
        qualifiedName: PRace.Race.GetCurrentInstant
    isDefinition: true
    commentId: Overload:PRace.Race.GetCurrentInstant
  System.Collections.Generic.List{PRace.WayPoint}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: PRace.WayPoint
        name: WayPoint
        nameWithType: WayPoint
        qualifiedName: PRace.WayPoint
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: PRace.WayPoint
        name: WayPoint
        nameWithType: WayPoint
        qualifiedName: PRace.WayPoint
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{PRace.WayPoint}
  PRace.Race.GetWayPoint*:
    name:
      CSharp:
      - id: PRace.Race.GetWayPoint*
        name: GetWayPoint
        nameWithType: Race.GetWayPoint
        qualifiedName: PRace.Race.GetWayPoint
      VB:
      - id: PRace.Race.GetWayPoint*
        name: GetWayPoint
        nameWithType: Race.GetWayPoint
        qualifiedName: PRace.Race.GetWayPoint
    isDefinition: true
    commentId: Overload:PRace.Race.GetWayPoint
  PRace.Race.GetEnvironment*:
    name:
      CSharp:
      - id: PRace.Race.GetEnvironment*
        name: GetEnvironment
        nameWithType: Race.GetEnvironment
        qualifiedName: PRace.Race.GetEnvironment
      VB:
      - id: PRace.Race.GetEnvironment*
        name: GetEnvironment
        nameWithType: Race.GetEnvironment
        qualifiedName: PRace.Race.GetEnvironment
    isDefinition: true
    commentId: Overload:PRace.Race.GetEnvironment
  PRace.Race.GetCurrentPolaire*:
    name:
      CSharp:
      - id: PRace.Race.GetCurrentPolaire*
        name: GetCurrentPolaire
        nameWithType: Race.GetCurrentPolaire
        qualifiedName: PRace.Race.GetCurrentPolaire
      VB:
      - id: PRace.Race.GetCurrentPolaire*
        name: GetCurrentPolaire
        nameWithType: Race.GetCurrentPolaire
        qualifiedName: PRace.Race.GetCurrentPolaire
    isDefinition: true
    commentId: Overload:PRace.Race.GetCurrentPolaire
  PRace.Race.GetAllPolaire*:
    name:
      CSharp:
      - id: PRace.Race.GetAllPolaire*
        name: GetAllPolaire
        nameWithType: Race.GetAllPolaire
        qualifiedName: PRace.Race.GetAllPolaire
      VB:
      - id: PRace.Race.GetAllPolaire*
        name: GetAllPolaire
        nameWithType: Race.GetAllPolaire
        qualifiedName: PRace.Race.GetAllPolaire
    isDefinition: true
    commentId: Overload:PRace.Race.GetAllPolaire
  PRace.Race.GetBoatId*:
    name:
      CSharp:
      - id: PRace.Race.GetBoatId*
        name: GetBoatId
        nameWithType: Race.GetBoatId
        qualifiedName: PRace.Race.GetBoatId
      VB:
      - id: PRace.Race.GetBoatId*
        name: GetBoatId
        nameWithType: Race.GetBoatId
        qualifiedName: PRace.Race.GetBoatId
    isDefinition: true
    commentId: Overload:PRace.Race.GetBoatId
  PRace.Race.GetBoatCap*:
    name:
      CSharp:
      - id: PRace.Race.GetBoatCap*
        name: GetBoatCap
        nameWithType: Race.GetBoatCap
        qualifiedName: PRace.Race.GetBoatCap
      VB:
      - id: PRace.Race.GetBoatCap*
        name: GetBoatCap
        nameWithType: Race.GetBoatCap
        qualifiedName: PRace.Race.GetBoatCap
    isDefinition: true
    commentId: Overload:PRace.Race.GetBoatCap
  System.Collections.Generic.List{PRace.Competitor}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: PRace.Competitor
        name: Competitor
        nameWithType: Competitor
        qualifiedName: PRace.Competitor
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: PRace.Competitor
        name: Competitor
        nameWithType: Competitor
        qualifiedName: PRace.Competitor
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{PRace.Competitor}
  PRace.Race.GetCompetitors*:
    name:
      CSharp:
      - id: PRace.Race.GetCompetitors*
        name: GetCompetitors
        nameWithType: Race.GetCompetitors
        qualifiedName: PRace.Race.GetCompetitors
      VB:
      - id: PRace.Race.GetCompetitors*
        name: GetCompetitors
        nameWithType: Race.GetCompetitors
        qualifiedName: PRace.Race.GetCompetitors
    isDefinition: true
    commentId: Overload:PRace.Race.GetCompetitors
  PRace.Race.SetAccFactor*:
    name:
      CSharp:
      - id: PRace.Race.SetAccFactor*
        name: SetAccFactor
        nameWithType: Race.SetAccFactor
        qualifiedName: PRace.Race.SetAccFactor
      VB:
      - id: PRace.Race.SetAccFactor*
        name: SetAccFactor
        nameWithType: Race.SetAccFactor
        qualifiedName: PRace.Race.SetAccFactor
    isDefinition: true
    commentId: Overload:PRace.Race.SetAccFactor
  PRace.Race.GetAccFactor*:
    name:
      CSharp:
      - id: PRace.Race.GetAccFactor*
        name: GetAccFactor
        nameWithType: Race.GetAccFactor
        qualifiedName: PRace.Race.GetAccFactor
      VB:
      - id: PRace.Race.GetAccFactor*
        name: GetAccFactor
        nameWithType: Race.GetAccFactor
        qualifiedName: PRace.Race.GetAccFactor
    isDefinition: true
    commentId: Overload:PRace.Race.GetAccFactor
  System.Collections.Generic.List{System.Int32}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.Int32}
  System.Collections.Generic.List{System.Single}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.Single}
  PRace.Race.SetCompetitors*:
    name:
      CSharp:
      - id: PRace.Race.SetCompetitors*
        name: SetCompetitors
        nameWithType: Race.SetCompetitors
        qualifiedName: PRace.Race.SetCompetitors
      VB:
      - id: PRace.Race.SetCompetitors*
        name: SetCompetitors
        nameWithType: Race.SetCompetitors
        qualifiedName: PRace.Race.SetCompetitors
    isDefinition: true
    commentId: Overload:PRace.Race.SetCompetitors
  PRace.Race.GetBoat*:
    name:
      CSharp:
      - id: PRace.Race.GetBoat*
        name: GetBoat
        nameWithType: Race.GetBoat
        qualifiedName: PRace.Race.GetBoat
      VB:
      - id: PRace.Race.GetBoat*
        name: GetBoat
        nameWithType: Race.GetBoat
        qualifiedName: PRace.Race.GetBoat
    isDefinition: true
    commentId: Overload:PRace.Race.GetBoat
  System.ValueTuple`2:
    name:
      CSharp:
      - id: System.ValueTuple`2
        name: (T1, T2)
        nameWithType: (T1, T2)
        qualifiedName: System.ValueTuple
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.ValueTuple`2
        name: (T1, T2)
        nameWithType: (T1, T2)
        qualifiedName: System.ValueTuple
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.ValueTuple`2
  System.ValueTuple{System.Double,System.Double}:
    name:
      CSharp:
      - id: System.ValueTuple`2
        name: (T1, T2)
        nameWithType: (T1, T2)
        qualifiedName: System.ValueTuple
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.ValueTuple`2
        name: (T1, T2)
        nameWithType: (T1, T2)
        qualifiedName: System.ValueTuple
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.ValueTuple`2
    parent: System
    commentId: T:System.ValueTuple{System.Double,System.Double}
  PRace.Race.GetPosition*:
    name:
      CSharp:
      - id: PRace.Race.GetPosition*
        name: GetPosition
        nameWithType: Race.GetPosition
        qualifiedName: PRace.Race.GetPosition
      VB:
      - id: PRace.Race.GetPosition*
        name: GetPosition
        nameWithType: Race.GetPosition
        qualifiedName: PRace.Race.GetPosition
    isDefinition: true
    commentId: Overload:PRace.Race.GetPosition
  PRace.Race.SetWayPoint*:
    name:
      CSharp:
      - id: PRace.Race.SetWayPoint*
        name: SetWayPoint
        nameWithType: Race.SetWayPoint
        qualifiedName: PRace.Race.SetWayPoint
      VB:
      - id: PRace.Race.SetWayPoint*
        name: SetWayPoint
        nameWithType: Race.SetWayPoint
        qualifiedName: PRace.Race.SetWayPoint
    isDefinition: true
    commentId: Overload:PRace.Race.SetWayPoint
  PRace.Race.change_Env*:
    name:
      CSharp:
      - id: PRace.Race.change_Env*
        name: change_Env
        nameWithType: Race.change_Env
        qualifiedName: PRace.Race.change_Env
      VB:
      - id: PRace.Race.change_Env*
        name: change_Env
        nameWithType: Race.change_Env
        qualifiedName: PRace.Race.change_Env
    isDefinition: true
    commentId: Overload:PRace.Race.change_Env
  PRace.Race.sendPosition*:
    name:
      CSharp:
      - id: PRace.Race.sendPosition*
        name: sendPosition
        nameWithType: Race.sendPosition
        qualifiedName: PRace.Race.sendPosition
      VB:
      - id: PRace.Race.sendPosition*
        name: sendPosition
        nameWithType: Race.sendPosition
        qualifiedName: PRace.Race.sendPosition
    isDefinition: true
    commentId: Overload:PRace.Race.sendPosition
  PRace.Race.getMode*:
    name:
      CSharp:
      - id: PRace.Race.getMode*
        name: getMode
        nameWithType: Race.getMode
        qualifiedName: PRace.Race.getMode
      VB:
      - id: PRace.Race.getMode*
        name: getMode
        nameWithType: Race.getMode
        qualifiedName: PRace.Race.getMode
    isDefinition: true
    commentId: Overload:PRace.Race.getMode
  PRace.Race.setacceleratorFactor*:
    name:
      CSharp:
      - id: PRace.Race.setacceleratorFactor*
        name: setacceleratorFactor
        nameWithType: Race.setacceleratorFactor
        qualifiedName: PRace.Race.setacceleratorFactor
      VB:
      - id: PRace.Race.setacceleratorFactor*
        name: setacceleratorFactor
        nameWithType: Race.setacceleratorFactor
        qualifiedName: PRace.Race.setacceleratorFactor
    isDefinition: true
    commentId: Overload:PRace.Race.setacceleratorFactor
  PRace.Race.Pause*:
    name:
      CSharp:
      - id: PRace.Race.Pause*
        name: Pause
        nameWithType: Race.Pause
        qualifiedName: PRace.Race.Pause
      VB:
      - id: PRace.Race.Pause*
        name: Pause
        nameWithType: Race.Pause
        qualifiedName: PRace.Race.Pause
    isDefinition: true
    commentId: Overload:PRace.Race.Pause
  PRace.Race.Run*:
    name:
      CSharp:
      - id: PRace.Race.Run*
        name: Run
        nameWithType: Race.Run
        qualifiedName: PRace.Race.Run
      VB:
      - id: PRace.Race.Run*
        name: Run
        nameWithType: Race.Run
        qualifiedName: PRace.Race.Run
    isDefinition: true
    commentId: Overload:PRace.Race.Run
  PRace.Race.nextIteration*:
    name:
      CSharp:
      - id: PRace.Race.nextIteration*
        name: nextIteration
        nameWithType: Race.nextIteration
        qualifiedName: PRace.Race.nextIteration
      VB:
      - id: PRace.Race.nextIteration*
        name: nextIteration
        nameWithType: Race.nextIteration
        qualifiedName: PRace.Race.nextIteration
    isDefinition: true
    commentId: Overload:PRace.Race.nextIteration
  PRace.Race.GetisPause*:
    name:
      CSharp:
      - id: PRace.Race.GetisPause*
        name: GetisPause
        nameWithType: Race.GetisPause
        qualifiedName: PRace.Race.GetisPause
      VB:
      - id: PRace.Race.GetisPause*
        name: GetisPause
        nameWithType: Race.GetisPause
        qualifiedName: PRace.Race.GetisPause
    isDefinition: true
    commentId: Overload:PRace.Race.GetisPause
  System.Collections.Generic.List{System.Double}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.Double}
  PRace.Race.GetBoatStatus*:
    name:
      CSharp:
      - id: PRace.Race.GetBoatStatus*
        name: GetBoatStatus
        nameWithType: Race.GetBoatStatus
        qualifiedName: PRace.Race.GetBoatStatus
      VB:
      - id: PRace.Race.GetBoatStatus*
        name: GetBoatStatus
        nameWithType: Race.GetBoatStatus
        qualifiedName: PRace.Race.GetBoatStatus
    isDefinition: true
    commentId: Overload:PRace.Race.GetBoatStatus
  PRace.RegulateurAmure.#ctor*:
    name:
      CSharp:
      - id: PRace.RegulateurAmure.#ctor*
        name: RegulateurAmure
        nameWithType: RegulateurAmure.RegulateurAmure
        qualifiedName: PRace.RegulateurAmure.RegulateurAmure
      VB:
      - id: PRace.RegulateurAmure.#ctor*
        name: RegulateurAmure
        nameWithType: RegulateurAmure.RegulateurAmure
        qualifiedName: PRace.RegulateurAmure.RegulateurAmure
    isDefinition: true
    commentId: Overload:PRace.RegulateurAmure.#ctor
  PRace.RegulateurAmure.Update_cap*:
    name:
      CSharp:
      - id: PRace.RegulateurAmure.Update_cap*
        name: Update_cap
        nameWithType: RegulateurAmure.Update_cap
        qualifiedName: PRace.RegulateurAmure.Update_cap
      VB:
      - id: PRace.RegulateurAmure.Update_cap*
        name: Update_cap
        nameWithType: RegulateurAmure.Update_cap
        qualifiedName: PRace.RegulateurAmure.Update_cap
    isDefinition: true
    commentId: Overload:PRace.RegulateurAmure.Update_cap
  PRace.RegulateurAmure.Get_cap*:
    name:
      CSharp:
      - id: PRace.RegulateurAmure.Get_cap*
        name: Get_cap
        nameWithType: RegulateurAmure.Get_cap
        qualifiedName: PRace.RegulateurAmure.Get_cap
      VB:
      - id: PRace.RegulateurAmure.Get_cap*
        name: Get_cap
        nameWithType: RegulateurAmure.Get_cap
        qualifiedName: PRace.RegulateurAmure.Get_cap
    isDefinition: true
    commentId: Overload:PRace.RegulateurAmure.Get_cap
  PRace.RegulateurAmure.SetCap*:
    name:
      CSharp:
      - id: PRace.RegulateurAmure.SetCap*
        name: SetCap
        nameWithType: RegulateurAmure.SetCap
        qualifiedName: PRace.RegulateurAmure.SetCap
      VB:
      - id: PRace.RegulateurAmure.SetCap*
        name: SetCap
        nameWithType: RegulateurAmure.SetCap
        qualifiedName: PRace.RegulateurAmure.SetCap
    isDefinition: true
    commentId: Overload:PRace.RegulateurAmure.SetCap
  PRace.RegulateurAmure:
    name:
      CSharp:
      - id: PRace.RegulateurAmure
        name: RegulateurAmure
        nameWithType: RegulateurAmure
        qualifiedName: PRace.RegulateurAmure
      VB:
      - id: PRace.RegulateurAmure
        name: RegulateurAmure
        nameWithType: RegulateurAmure
        qualifiedName: PRace.RegulateurAmure
    isDefinition: true
    commentId: T:PRace.RegulateurAmure
  PRace.Time.GetAccFactorValue*:
    name:
      CSharp:
      - id: PRace.Time.GetAccFactorValue*
        name: GetAccFactorValue
        nameWithType: Time.GetAccFactorValue
        qualifiedName: PRace.Time.GetAccFactorValue
      VB:
      - id: PRace.Time.GetAccFactorValue*
        name: GetAccFactorValue
        nameWithType: Time.GetAccFactorValue
        qualifiedName: PRace.Time.GetAccFactorValue
    isDefinition: true
    commentId: Overload:PRace.Time.GetAccFactorValue
  PRace.Time.SetAccFactor*:
    name:
      CSharp:
      - id: PRace.Time.SetAccFactor*
        name: SetAccFactor
        nameWithType: Time.SetAccFactor
        qualifiedName: PRace.Time.SetAccFactor
      VB:
      - id: PRace.Time.SetAccFactor*
        name: SetAccFactor
        nameWithType: Time.SetAccFactor
        qualifiedName: PRace.Time.SetAccFactor
    isDefinition: true
    commentId: Overload:PRace.Time.SetAccFactor
  PRace.Time.GetTickValue*:
    name:
      CSharp:
      - id: PRace.Time.GetTickValue*
        name: GetTickValue
        nameWithType: Time.GetTickValue
        qualifiedName: PRace.Time.GetTickValue
      VB:
      - id: PRace.Time.GetTickValue*
        name: GetTickValue
        nameWithType: Time.GetTickValue
        qualifiedName: PRace.Time.GetTickValue
    isDefinition: true
    commentId: Overload:PRace.Time.GetTickValue
  PRace.Time.SetTick*:
    name:
      CSharp:
      - id: PRace.Time.SetTick*
        name: SetTick
        nameWithType: Time.SetTick
        qualifiedName: PRace.Time.SetTick
      VB:
      - id: PRace.Time.SetTick*
        name: SetTick
        nameWithType: Time.SetTick
        qualifiedName: PRace.Time.SetTick
    isDefinition: true
    commentId: Overload:PRace.Time.SetTick
  PRace.WayPoint.#ctor*:
    name:
      CSharp:
      - id: PRace.WayPoint.#ctor*
        name: WayPoint
        nameWithType: WayPoint.WayPoint
        qualifiedName: PRace.WayPoint.WayPoint
      VB:
      - id: PRace.WayPoint.#ctor*
        name: WayPoint
        nameWithType: WayPoint.WayPoint
        qualifiedName: PRace.WayPoint.WayPoint
    isDefinition: true
    commentId: Overload:PRace.WayPoint.#ctor
  PRace.WayPoint.GetId*:
    name:
      CSharp:
      - id: PRace.WayPoint.GetId*
        name: GetId
        nameWithType: WayPoint.GetId
        qualifiedName: PRace.WayPoint.GetId
      VB:
      - id: PRace.WayPoint.GetId*
        name: GetId
        nameWithType: WayPoint.GetId
        qualifiedName: PRace.WayPoint.GetId
    isDefinition: true
    commentId: Overload:PRace.WayPoint.GetId
  PRace.WayPoint.Getnom*:
    name:
      CSharp:
      - id: PRace.WayPoint.Getnom*
        name: Getnom
        nameWithType: WayPoint.Getnom
        qualifiedName: PRace.WayPoint.Getnom
      VB:
      - id: PRace.WayPoint.Getnom*
        name: Getnom
        nameWithType: WayPoint.Getnom
        qualifiedName: PRace.WayPoint.Getnom
    isDefinition: true
    commentId: Overload:PRace.WayPoint.Getnom
  PRace.WayPoint.GetPosition*:
    name:
      CSharp:
      - id: PRace.WayPoint.GetPosition*
        name: GetPosition
        nameWithType: WayPoint.GetPosition
        qualifiedName: PRace.WayPoint.GetPosition
      VB:
      - id: PRace.WayPoint.GetPosition*
        name: GetPosition
        nameWithType: WayPoint.GetPosition
        qualifiedName: PRace.WayPoint.GetPosition
    isDefinition: true
    commentId: Overload:PRace.WayPoint.GetPosition
  PRace.WayPoint.SetPosition*:
    name:
      CSharp:
      - id: PRace.WayPoint.SetPosition*
        name: SetPosition
        nameWithType: WayPoint.SetPosition
        qualifiedName: PRace.WayPoint.SetPosition
      VB:
      - id: PRace.WayPoint.SetPosition*
        name: SetPosition
        nameWithType: WayPoint.SetPosition
        qualifiedName: PRace.WayPoint.SetPosition
    isDefinition: true
    commentId: Overload:PRace.WayPoint.SetPosition
  PRace.WayPoint:
    name:
      CSharp:
      - id: PRace.WayPoint
        name: WayPoint
        nameWithType: WayPoint
        qualifiedName: PRace.WayPoint
      VB:
      - id: PRace.WayPoint
        name: WayPoint
        nameWithType: WayPoint
        qualifiedName: PRace.WayPoint
    isDefinition: true
    commentId: T:PRace.WayPoint
