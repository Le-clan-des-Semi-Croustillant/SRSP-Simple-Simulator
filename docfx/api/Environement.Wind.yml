### YamlMime:ManagedReference
items:
- uid: Environement.Wind
  commentId: T:Environement.Wind
  id: Wind
  parent: Environement
  children:
  - Environement.Wind.#ctor
  - Environement.Wind.GetWindDirection
  - Environement.Wind.GetWindSpeed
  - Environement.Wind.SetWindDirection(System.Single)
  - Environement.Wind.SetWindSpeed(System.Single)
  - Environement.Wind.Update(System.Single,System.Single)
  langs:
  - csharp
  - vb
  name: Wind
  nameWithType: Wind
  fullName: Environement.Wind
  type: Class
  source:
    id: Wind
    path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Wind.cs
    startLine: 11
  assemblies:
  - Assembly-CSharp
  namespace: Environement
  summary: "\nThis class manages the environmental values linked to the wind\n"
  example: []
  syntax:
    content: public class Wind
    content.vb: Public Class Wind
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Environement.Wind.#ctor
  commentId: M:Environement.Wind.#ctor
  id: '#ctor'
  parent: Environement.Wind
  langs:
  - csharp
  - vb
  name: Wind()
  nameWithType: Wind.Wind()
  fullName: Environement.Wind.Wind()
  type: Constructor
  source:
    id: .ctor
    path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Wind.cs
    startLine: 17
  assemblies:
  - Assembly-CSharp
  namespace: Environement
  summary: "\nCreate a Wind instance\n"
  example: []
  syntax:
    content: public Wind()
    content.vb: Public Sub New
  overload: Environement.Wind.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Environement.Wind.Update(System.Single,System.Single)
  commentId: M:Environement.Wind.Update(System.Single,System.Single)
  id: Update(System.Single,System.Single)
  parent: Environement.Wind
  langs:
  - csharp
  - vb
  name: Update(Single, Single)
  nameWithType: Wind.Update(Single, Single)
  fullName: Environement.Wind.Update(System.Single, System.Single)
  type: Method
  source:
    id: Update
    path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Wind.cs
    startLine: 29
  assemblies:
  - Assembly-CSharp
  namespace: Environement
  summary: "\nSet class attribut windSpeed and directionWind according to the inputs windSpeed and direction\n"
  example: []
  syntax:
    content: public void Update(float windSpeed, float direction)
    parameters:
    - id: windSpeed
      type: System.Single
    - id: direction
      type: System.Single
      description: input direction
    content.vb: Public Sub Update(windSpeed As Single, direction As Single)
  overload: Environement.Wind.Update*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Environement.Wind.SetWindSpeed(System.Single)
  commentId: M:Environement.Wind.SetWindSpeed(System.Single)
  id: SetWindSpeed(System.Single)
  parent: Environement.Wind
  langs:
  - csharp
  - vb
  name: SetWindSpeed(Single)
  nameWithType: Wind.SetWindSpeed(Single)
  fullName: Environement.Wind.SetWindSpeed(System.Single)
  type: Method
  source:
    id: SetWindSpeed
    path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Wind.cs
    startLine: 38
  assemblies:
  - Assembly-CSharp
  namespace: Environement
  summary: "\nSet class attribut windSpeed according to the input windSpeed\n"
  example: []
  syntax:
    content: public void SetWindSpeed(float windSpeed)
    parameters:
    - id: windSpeed
      type: System.Single
    content.vb: Public Sub SetWindSpeed(windSpeed As Single)
  overload: Environement.Wind.SetWindSpeed*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Environement.Wind.SetWindDirection(System.Single)
  commentId: M:Environement.Wind.SetWindDirection(System.Single)
  id: SetWindDirection(System.Single)
  parent: Environement.Wind
  langs:
  - csharp
  - vb
  name: SetWindDirection(Single)
  nameWithType: Wind.SetWindDirection(Single)
  fullName: Environement.Wind.SetWindDirection(System.Single)
  type: Method
  source:
    id: SetWindDirection
    path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Wind.cs
    startLine: 47
  assemblies:
  - Assembly-CSharp
  namespace: Environement
  summary: "\nSet class attribut windDirection according to the input windDirection\n"
  example: []
  syntax:
    content: public void SetWindDirection(float windDirection)
    parameters:
    - id: windDirection
      type: System.Single
    content.vb: Public Sub SetWindDirection(windDirection As Single)
  overload: Environement.Wind.SetWindDirection*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Environement.Wind.GetWindSpeed
  commentId: M:Environement.Wind.GetWindSpeed
  id: GetWindSpeed
  parent: Environement.Wind
  langs:
  - csharp
  - vb
  name: GetWindSpeed()
  nameWithType: Wind.GetWindSpeed()
  fullName: Environement.Wind.GetWindSpeed()
  type: Method
  source:
    id: GetWindSpeed
    path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Wind.cs
    startLine: 56
  assemblies:
  - Assembly-CSharp
  namespace: Environement
  summary: "\nreturn windSpeed attribut\n"
  example: []
  syntax:
    content: public float GetWindSpeed()
    return:
      type: System.Single
      description: windSpeed attribut
    content.vb: Public Function GetWindSpeed As Single
  overload: Environement.Wind.GetWindSpeed*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Environement.Wind.GetWindDirection
  commentId: M:Environement.Wind.GetWindDirection
  id: GetWindDirection
  parent: Environement.Wind
  langs:
  - csharp
  - vb
  name: GetWindDirection()
  nameWithType: Wind.GetWindDirection()
  fullName: Environement.Wind.GetWindDirection()
  type: Method
  source:
    id: GetWindDirection
    path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Wind.cs
    startLine: 65
  assemblies:
  - Assembly-CSharp
  namespace: Environement
  summary: "\nreturn directionWind attribut\n"
  example: []
  syntax:
    content: public float GetWindDirection()
    return:
      type: System.Single
      description: directionWind attribut
    content.vb: Public Function GetWindDirection As Single
  overload: Environement.Wind.GetWindDirection*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Environement
  commentId: N:Environement
  name: Environement
  nameWithType: Environement
  fullName: Environement
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Environement.Wind.#ctor*
  commentId: Overload:Environement.Wind.#ctor
  name: Wind
  nameWithType: Wind.Wind
  fullName: Environement.Wind.Wind
- uid: Environement.Wind.Update*
  commentId: Overload:Environement.Wind.Update
  name: Update
  nameWithType: Wind.Update
  fullName: Environement.Wind.Update
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Environement.Wind.SetWindSpeed*
  commentId: Overload:Environement.Wind.SetWindSpeed
  name: SetWindSpeed
  nameWithType: Wind.SetWindSpeed
  fullName: Environement.Wind.SetWindSpeed
- uid: Environement.Wind.SetWindDirection*
  commentId: Overload:Environement.Wind.SetWindDirection
  name: SetWindDirection
  nameWithType: Wind.SetWindDirection
  fullName: Environement.Wind.SetWindDirection
- uid: Environement.Wind.GetWindSpeed*
  commentId: Overload:Environement.Wind.GetWindSpeed
  name: GetWindSpeed
  nameWithType: Wind.GetWindSpeed
  fullName: Environement.Wind.GetWindSpeed
- uid: Environement.Wind.GetWindDirection*
  commentId: Overload:Environement.Wind.GetWindDirection
  name: GetWindDirection
  nameWithType: Wind.GetWindDirection
  fullName: Environement.Wind.GetWindDirection
