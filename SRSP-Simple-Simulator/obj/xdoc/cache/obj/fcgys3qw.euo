id: Assembly-CSharp
language: CSharp
name:
  Default: Assembly-CSharp
qualifiedName:
  Default: Assembly-CSharp
type: Assembly
modifiers: {}
items:
- id: Traductionscript
  commentId: N:Traductionscript
  language: CSharp
  name:
    CSharp: Traductionscript
    VB: Traductionscript
  nameWithType:
    CSharp: Traductionscript
    VB: Traductionscript
  qualifiedName:
    CSharp: Traductionscript
    VB: Traductionscript
  type: Namespace
  assemblies:
  - Assembly-CSharp
  modifiers: {}
  items:
  - id: Traductionscript.WaypointSelectionTrad
    commentId: T:Traductionscript.WaypointSelectionTrad
    language: CSharp
    name:
      CSharp: WaypointSelectionTrad
      VB: WaypointSelectionTrad
    nameWithType:
      CSharp: WaypointSelectionTrad
      VB: WaypointSelectionTrad
    qualifiedName:
      CSharp: Traductionscript.WaypointSelectionTrad
      VB: Traductionscript.WaypointSelectionTrad
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Traductionscript
    source:
      id: WaypointSelectionTrad
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\WaypointSelectionTrad.cs
      startLine: 17
    summary: "\nScript Traduction on the waypoint selection scene\n"
    example: []
    syntax:
      content:
        CSharp: 'public class WaypointSelectionTrad : MonoBehaviour'
        VB: >-
          Public Class WaypointSelectionTrad

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    - UnityEngine.Object
    - UnityEngine.Component
    - UnityEngine.Behaviour
    - UnityEngine.MonoBehaviour
    inheritedMembers:
    - UnityEngine.MonoBehaviour.IsInvoking
    - UnityEngine.MonoBehaviour.CancelInvoke
    - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    - UnityEngine.MonoBehaviour.IsInvoking(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StopAllCoroutines
    - UnityEngine.MonoBehaviour.print(System.Object)
    - UnityEngine.MonoBehaviour.useGUILayout
    - UnityEngine.MonoBehaviour.runInEditMode
    - UnityEngine.Behaviour.enabled
    - UnityEngine.Behaviour.isActiveAndEnabled
    - UnityEngine.Component.GetComponent(System.Type)
    - UnityEngine.Component.GetComponent``1
    - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    - UnityEngine.Component.TryGetComponent``1({T}@)
    - UnityEngine.Component.GetComponent(System.String)
    - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInChildren(System.Type)
    - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentInChildren``1
    - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren(System.Type)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInChildren``1
    - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentInParent(System.Type)
    - UnityEngine.Component.GetComponentInParent``1
    - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInParent(System.Type)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInParent``1
    - UnityEngine.Component.GetComponents(System.Type)
    - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponents``1
    - UnityEngine.Component.CompareTag(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    - UnityEngine.Component.SendMessageUpwards(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,System.Object)
    - UnityEngine.Component.SendMessage(System.String)
    - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    - UnityEngine.Component.BroadcastMessage(System.String)
    - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.transform
    - UnityEngine.Component.gameObject
    - UnityEngine.Component.tag
    - UnityEngine.Object.GetInstanceID
    - UnityEngine.Object.GetHashCode
    - UnityEngine.Object.Equals(System.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Instantiate``1({T})
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    - UnityEngine.Object.Destroy(UnityEngine.Object)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    - UnityEngine.Object.FindObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object)
    - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    - UnityEngine.Object.FindObjectsOfType``1
    - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectOfType``1
    - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    - UnityEngine.Object.ToString
    - UnityEngine.Object.name
    - UnityEngine.Object.hideFlags
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Traductionscript.WaypointSelectionTrad.conf
      commentId: F:Traductionscript.WaypointSelectionTrad.conf
      language: CSharp
      name:
        CSharp: conf
        VB: conf
      nameWithType:
        CSharp: WaypointSelectionTrad.conf
        VB: WaypointSelectionTrad.conf
      qualifiedName:
        CSharp: Traductionscript.WaypointSelectionTrad.conf
        VB: Traductionscript.WaypointSelectionTrad.conf
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: conf
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\WaypointSelectionTrad.cs
        startLine: 19
      syntax:
        content:
          CSharp: public SavedConfigReader.SavedConfig conf
          VB: Public conf As SavedConfigReader.SavedConfig
        return:
          type: SavedConfigReader.SavedConfig
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.WaypointSelectionTrad.currentLanguage
      commentId: F:Traductionscript.WaypointSelectionTrad.currentLanguage
      language: CSharp
      name:
        CSharp: currentLanguage
        VB: currentLanguage
      nameWithType:
        CSharp: WaypointSelectionTrad.currentLanguage
        VB: WaypointSelectionTrad.currentLanguage
      qualifiedName:
        CSharp: Traductionscript.WaypointSelectionTrad.currentLanguage
        VB: Traductionscript.WaypointSelectionTrad.currentLanguage
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: currentLanguage
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\WaypointSelectionTrad.cs
        startLine: 21
      syntax:
        content:
          CSharp: public int currentLanguage
          VB: Public currentLanguage As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.WaypointSelectionTrad.dictionary
      commentId: F:Traductionscript.WaypointSelectionTrad.dictionary
      language: CSharp
      name:
        CSharp: dictionary
        VB: dictionary
      nameWithType:
        CSharp: WaypointSelectionTrad.dictionary
        VB: WaypointSelectionTrad.dictionary
      qualifiedName:
        CSharp: Traductionscript.WaypointSelectionTrad.dictionary
        VB: Traductionscript.WaypointSelectionTrad.dictionary
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: dictionary
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\WaypointSelectionTrad.cs
        startLine: 25
      syntax:
        content:
          CSharp: public TextAsset dictionary
          VB: Public dictionary As TextAsset
        return:
          type: UnityEngine.TextAsset
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.WaypointSelectionTrad.wpSelection
      commentId: F:Traductionscript.WaypointSelectionTrad.wpSelection
      language: CSharp
      name:
        CSharp: wpSelection
        VB: wpSelection
      nameWithType:
        CSharp: WaypointSelectionTrad.wpSelection
        VB: WaypointSelectionTrad.wpSelection
      qualifiedName:
        CSharp: Traductionscript.WaypointSelectionTrad.wpSelection
        VB: Traductionscript.WaypointSelectionTrad.wpSelection
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: wpSelection
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\WaypointSelectionTrad.cs
        startLine: 27
      syntax:
        content:
          CSharp: public string wpSelection
          VB: Public wpSelection As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.WaypointSelectionTrad.ok
      commentId: F:Traductionscript.WaypointSelectionTrad.ok
      language: CSharp
      name:
        CSharp: ok
        VB: ok
      nameWithType:
        CSharp: WaypointSelectionTrad.ok
        VB: WaypointSelectionTrad.ok
      qualifiedName:
        CSharp: Traductionscript.WaypointSelectionTrad.ok
        VB: Traductionscript.WaypointSelectionTrad.ok
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: ok
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\WaypointSelectionTrad.cs
        startLine: 28
      syntax:
        content:
          CSharp: public string ok
          VB: Public ok As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.WaypointSelectionTrad.cancel
      commentId: F:Traductionscript.WaypointSelectionTrad.cancel
      language: CSharp
      name:
        CSharp: cancel
        VB: cancel
      nameWithType:
        CSharp: WaypointSelectionTrad.cancel
        VB: WaypointSelectionTrad.cancel
      qualifiedName:
        CSharp: Traductionscript.WaypointSelectionTrad.cancel
        VB: Traductionscript.WaypointSelectionTrad.cancel
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: cancel
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\WaypointSelectionTrad.cs
        startLine: 29
      syntax:
        content:
          CSharp: public string cancel
          VB: Public cancel As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.WaypointSelectionTrad.textWpSelect
      commentId: F:Traductionscript.WaypointSelectionTrad.textWpSelect
      language: CSharp
      name:
        CSharp: textWpSelect
        VB: textWpSelect
      nameWithType:
        CSharp: WaypointSelectionTrad.textWpSelect
        VB: WaypointSelectionTrad.textWpSelect
      qualifiedName:
        CSharp: Traductionscript.WaypointSelectionTrad.textWpSelect
        VB: Traductionscript.WaypointSelectionTrad.textWpSelect
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textWpSelect
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\WaypointSelectionTrad.cs
        startLine: 31
      syntax:
        content:
          CSharp: public TextMeshProUGUI textWpSelect
          VB: Public textWpSelect As TextMeshProUGUI
        return:
          type: TMPro.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.WaypointSelectionTrad.textOk
      commentId: F:Traductionscript.WaypointSelectionTrad.textOk
      language: CSharp
      name:
        CSharp: textOk
        VB: textOk
      nameWithType:
        CSharp: WaypointSelectionTrad.textOk
        VB: WaypointSelectionTrad.textOk
      qualifiedName:
        CSharp: Traductionscript.WaypointSelectionTrad.textOk
        VB: Traductionscript.WaypointSelectionTrad.textOk
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textOk
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\WaypointSelectionTrad.cs
        startLine: 32
      syntax:
        content:
          CSharp: public TextMeshProUGUI textOk
          VB: Public textOk As TextMeshProUGUI
        return:
          type: TMPro.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.WaypointSelectionTrad.textCancel
      commentId: F:Traductionscript.WaypointSelectionTrad.textCancel
      language: CSharp
      name:
        CSharp: textCancel
        VB: textCancel
      nameWithType:
        CSharp: WaypointSelectionTrad.textCancel
        VB: WaypointSelectionTrad.textCancel
      qualifiedName:
        CSharp: Traductionscript.WaypointSelectionTrad.textCancel
        VB: Traductionscript.WaypointSelectionTrad.textCancel
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textCancel
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\WaypointSelectionTrad.cs
        startLine: 33
      syntax:
        content:
          CSharp: public TextMeshProUGUI textCancel
          VB: Public textCancel As TextMeshProUGUI
        return:
          type: TMPro.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Traductionscript.xmlReader
    commentId: T:Traductionscript.xmlReader
    language: CSharp
    name:
      CSharp: xmlReader
      VB: xmlReader
    nameWithType:
      CSharp: xmlReader
      VB: xmlReader
    qualifiedName:
      CSharp: Traductionscript.xmlReader
      VB: Traductionscript.xmlReader
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Traductionscript
    source:
      id: xmlReader
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
      startLine: 15
    summary: "\nScript Traduction on the Main scene\n"
    example: []
    syntax:
      content:
        CSharp: 'public class xmlReader : MonoBehaviour'
        VB: >-
          Public Class xmlReader

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    - UnityEngine.Object
    - UnityEngine.Component
    - UnityEngine.Behaviour
    - UnityEngine.MonoBehaviour
    inheritedMembers:
    - UnityEngine.MonoBehaviour.IsInvoking
    - UnityEngine.MonoBehaviour.CancelInvoke
    - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    - UnityEngine.MonoBehaviour.IsInvoking(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StopAllCoroutines
    - UnityEngine.MonoBehaviour.print(System.Object)
    - UnityEngine.MonoBehaviour.useGUILayout
    - UnityEngine.MonoBehaviour.runInEditMode
    - UnityEngine.Behaviour.enabled
    - UnityEngine.Behaviour.isActiveAndEnabled
    - UnityEngine.Component.GetComponent(System.Type)
    - UnityEngine.Component.GetComponent``1
    - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    - UnityEngine.Component.TryGetComponent``1({T}@)
    - UnityEngine.Component.GetComponent(System.String)
    - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInChildren(System.Type)
    - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentInChildren``1
    - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren(System.Type)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInChildren``1
    - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentInParent(System.Type)
    - UnityEngine.Component.GetComponentInParent``1
    - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInParent(System.Type)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInParent``1
    - UnityEngine.Component.GetComponents(System.Type)
    - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponents``1
    - UnityEngine.Component.CompareTag(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    - UnityEngine.Component.SendMessageUpwards(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,System.Object)
    - UnityEngine.Component.SendMessage(System.String)
    - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    - UnityEngine.Component.BroadcastMessage(System.String)
    - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.transform
    - UnityEngine.Component.gameObject
    - UnityEngine.Component.tag
    - UnityEngine.Object.GetInstanceID
    - UnityEngine.Object.GetHashCode
    - UnityEngine.Object.Equals(System.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Instantiate``1({T})
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    - UnityEngine.Object.Destroy(UnityEngine.Object)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    - UnityEngine.Object.FindObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object)
    - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    - UnityEngine.Object.FindObjectsOfType``1
    - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectOfType``1
    - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    - UnityEngine.Object.ToString
    - UnityEngine.Object.name
    - UnityEngine.Object.hideFlags
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Traductionscript.xmlReader.dictionary
      commentId: F:Traductionscript.xmlReader.dictionary
      language: CSharp
      name:
        CSharp: dictionary
        VB: dictionary
      nameWithType:
        CSharp: xmlReader.dictionary
        VB: xmlReader.dictionary
      qualifiedName:
        CSharp: Traductionscript.xmlReader.dictionary
        VB: Traductionscript.xmlReader.dictionary
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: dictionary
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 17
      syntax:
        content:
          CSharp: public TextAsset dictionary
          VB: Public dictionary As TextAsset
        return:
          type: UnityEngine.TextAsset
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.languageName
      commentId: F:Traductionscript.xmlReader.languageName
      language: CSharp
      name:
        CSharp: languageName
        VB: languageName
      nameWithType:
        CSharp: xmlReader.languageName
        VB: xmlReader.languageName
      qualifiedName:
        CSharp: Traductionscript.xmlReader.languageName
        VB: Traductionscript.xmlReader.languageName
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: languageName
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 19
      syntax:
        content:
          CSharp: public string languageName
          VB: Public languageName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.currentLanguage
      commentId: F:Traductionscript.xmlReader.currentLanguage
      language: CSharp
      name:
        CSharp: currentLanguage
        VB: currentLanguage
      nameWithType:
        CSharp: xmlReader.currentLanguage
        VB: xmlReader.currentLanguage
      qualifiedName:
        CSharp: Traductionscript.xmlReader.currentLanguage
        VB: Traductionscript.xmlReader.currentLanguage
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: currentLanguage
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 20
      syntax:
        content:
          CSharp: public int currentLanguage
          VB: Public currentLanguage As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.Language
      commentId: F:Traductionscript.xmlReader.Language
      language: CSharp
      name:
        CSharp: Language
        VB: Language
      nameWithType:
        CSharp: xmlReader.Language
        VB: xmlReader.Language
      qualifiedName:
        CSharp: Traductionscript.xmlReader.Language
        VB: Traductionscript.xmlReader.Language
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: Language
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 22
      syntax:
        content:
          CSharp: public string Language
          VB: Public Language As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.Navigation
      commentId: F:Traductionscript.xmlReader.Navigation
      language: CSharp
      name:
        CSharp: Navigation
        VB: Navigation
      nameWithType:
        CSharp: xmlReader.Navigation
        VB: xmlReader.Navigation
      qualifiedName:
        CSharp: Traductionscript.xmlReader.Navigation
        VB: Traductionscript.xmlReader.Navigation
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: Navigation
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 23
      syntax:
        content:
          CSharp: public string Navigation
          VB: Public Navigation As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.Environment
      commentId: F:Traductionscript.xmlReader.Environment
      language: CSharp
      name:
        CSharp: Environment
        VB: Environment
      nameWithType:
        CSharp: xmlReader.Environment
        VB: xmlReader.Environment
      qualifiedName:
        CSharp: Traductionscript.xmlReader.Environment
        VB: Traductionscript.xmlReader.Environment
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: Environment
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 24
      syntax:
        content:
          CSharp: public string Environment
          VB: Public Environment As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.Help
      commentId: F:Traductionscript.xmlReader.Help
      language: CSharp
      name:
        CSharp: Help
        VB: Help
      nameWithType:
        CSharp: xmlReader.Help
        VB: xmlReader.Help
      qualifiedName:
        CSharp: Traductionscript.xmlReader.Help
        VB: Traductionscript.xmlReader.Help
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: Help
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 25
      syntax:
        content:
          CSharp: public string Help
          VB: Public Help As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.AcceletationFactor
      commentId: F:Traductionscript.xmlReader.AcceletationFactor
      language: CSharp
      name:
        CSharp: AcceletationFactor
        VB: AcceletationFactor
      nameWithType:
        CSharp: xmlReader.AcceletationFactor
        VB: xmlReader.AcceletationFactor
      qualifiedName:
        CSharp: Traductionscript.xmlReader.AcceletationFactor
        VB: Traductionscript.xmlReader.AcceletationFactor
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: AcceletationFactor
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 26
      syntax:
        content:
          CSharp: public string AcceletationFactor
          VB: Public AcceletationFactor As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.Save
      commentId: F:Traductionscript.xmlReader.Save
      language: CSharp
      name:
        CSharp: Save
        VB: Save
      nameWithType:
        CSharp: xmlReader.Save
        VB: xmlReader.Save
      qualifiedName:
        CSharp: Traductionscript.xmlReader.Save
        VB: Traductionscript.xmlReader.Save
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: Save
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 28
      syntax:
        content:
          CSharp: public string Save
          VB: Public Save As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.Exit
      commentId: F:Traductionscript.xmlReader.Exit
      language: CSharp
      name:
        CSharp: Exit
        VB: Exit
      nameWithType:
        CSharp: xmlReader.Exit
        VB: xmlReader.Exit
      qualifiedName:
        CSharp: Traductionscript.xmlReader.Exit
        VB: Traductionscript.xmlReader.Exit
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: Exit
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 29
      syntax:
        content:
          CSharp: public string Exit
          VB: Public Exit As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.Wind
      commentId: F:Traductionscript.xmlReader.Wind
      language: CSharp
      name:
        CSharp: Wind
        VB: Wind
      nameWithType:
        CSharp: xmlReader.Wind
        VB: xmlReader.Wind
      qualifiedName:
        CSharp: Traductionscript.xmlReader.Wind
        VB: Traductionscript.xmlReader.Wind
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: Wind
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 30
      syntax:
        content:
          CSharp: public string Wind
          VB: Public Wind As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.Wave
      commentId: F:Traductionscript.xmlReader.Wave
      language: CSharp
      name:
        CSharp: Wave
        VB: Wave
      nameWithType:
        CSharp: xmlReader.Wave
        VB: xmlReader.Wave
      qualifiedName:
        CSharp: Traductionscript.xmlReader.Wave
        VB: Traductionscript.xmlReader.Wave
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: Wave
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 31
      syntax:
        content:
          CSharp: public string Wave
          VB: Public Wave As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.Current
      commentId: F:Traductionscript.xmlReader.Current
      language: CSharp
      name:
        CSharp: Current
        VB: Current
      nameWithType:
        CSharp: xmlReader.Current
        VB: xmlReader.Current
      qualifiedName:
        CSharp: Traductionscript.xmlReader.Current
        VB: Traductionscript.xmlReader.Current
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: Current
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 32
      syntax:
        content:
          CSharp: public string Current
          VB: Public Current As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.Documentation
      commentId: F:Traductionscript.xmlReader.Documentation
      language: CSharp
      name:
        CSharp: Documentation
        VB: Documentation
      nameWithType:
        CSharp: xmlReader.Documentation
        VB: xmlReader.Documentation
      qualifiedName:
        CSharp: Traductionscript.xmlReader.Documentation
        VB: Traductionscript.xmlReader.Documentation
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: Documentation
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 33
      syntax:
        content:
          CSharp: public string Documentation
          VB: Public Documentation As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.HeadingMode
      commentId: F:Traductionscript.xmlReader.HeadingMode
      language: CSharp
      name:
        CSharp: HeadingMode
        VB: HeadingMode
      nameWithType:
        CSharp: xmlReader.HeadingMode
        VB: xmlReader.HeadingMode
      qualifiedName:
        CSharp: Traductionscript.xmlReader.HeadingMode
        VB: Traductionscript.xmlReader.HeadingMode
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: HeadingMode
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 34
      syntax:
        content:
          CSharp: public string HeadingMode
          VB: Public HeadingMode As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.WindMode
      commentId: F:Traductionscript.xmlReader.WindMode
      language: CSharp
      name:
        CSharp: WindMode
        VB: WindMode
      nameWithType:
        CSharp: xmlReader.WindMode
        VB: xmlReader.WindMode
      qualifiedName:
        CSharp: Traductionscript.xmlReader.WindMode
        VB: Traductionscript.xmlReader.WindMode
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: WindMode
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 35
      syntax:
        content:
          CSharp: public string WindMode
          VB: Public WindMode As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.SwitchH
      commentId: F:Traductionscript.xmlReader.SwitchH
      language: CSharp
      name:
        CSharp: SwitchH
        VB: SwitchH
      nameWithType:
        CSharp: xmlReader.SwitchH
        VB: xmlReader.SwitchH
      qualifiedName:
        CSharp: Traductionscript.xmlReader.SwitchH
        VB: Traductionscript.xmlReader.SwitchH
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: SwitchH
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 36
      syntax:
        content:
          CSharp: public string SwitchH
          VB: Public SwitchH As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.SwitchW
      commentId: F:Traductionscript.xmlReader.SwitchW
      language: CSharp
      name:
        CSharp: SwitchW
        VB: SwitchW
      nameWithType:
        CSharp: xmlReader.SwitchW
        VB: xmlReader.SwitchW
      qualifiedName:
        CSharp: Traductionscript.xmlReader.SwitchW
        VB: Traductionscript.xmlReader.SwitchW
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: SwitchW
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 37
      syntax:
        content:
          CSharp: public string SwitchW
          VB: Public SwitchW As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.WindS
      commentId: F:Traductionscript.xmlReader.WindS
      language: CSharp
      name:
        CSharp: WindS
        VB: WindS
      nameWithType:
        CSharp: xmlReader.WindS
        VB: xmlReader.WindS
      qualifiedName:
        CSharp: Traductionscript.xmlReader.WindS
        VB: Traductionscript.xmlReader.WindS
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: WindS
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 38
      syntax:
        content:
          CSharp: public string WindS
          VB: Public WindS As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.WindD
      commentId: F:Traductionscript.xmlReader.WindD
      language: CSharp
      name:
        CSharp: WindD
        VB: WindD
      nameWithType:
        CSharp: xmlReader.WindD
        VB: xmlReader.WindD
      qualifiedName:
        CSharp: Traductionscript.xmlReader.WindD
        VB: Traductionscript.xmlReader.WindD
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: WindD
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 39
      syntax:
        content:
          CSharp: public string WindD
          VB: Public WindD As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.Amplitude
      commentId: F:Traductionscript.xmlReader.Amplitude
      language: CSharp
      name:
        CSharp: Amplitude
        VB: Amplitude
      nameWithType:
        CSharp: xmlReader.Amplitude
        VB: xmlReader.Amplitude
      qualifiedName:
        CSharp: Traductionscript.xmlReader.Amplitude
        VB: Traductionscript.xmlReader.Amplitude
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: Amplitude
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 40
      syntax:
        content:
          CSharp: public string Amplitude
          VB: Public Amplitude As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.Ok
      commentId: F:Traductionscript.xmlReader.Ok
      language: CSharp
      name:
        CSharp: Ok
        VB: Ok
      nameWithType:
        CSharp: xmlReader.Ok
        VB: xmlReader.Ok
      qualifiedName:
        CSharp: Traductionscript.xmlReader.Ok
        VB: Traductionscript.xmlReader.Ok
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: Ok
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 41
      syntax:
        content:
          CSharp: public string Ok
          VB: Public Ok As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.WaveD
      commentId: F:Traductionscript.xmlReader.WaveD
      language: CSharp
      name:
        CSharp: WaveD
        VB: WaveD
      nameWithType:
        CSharp: xmlReader.WaveD
        VB: xmlReader.WaveD
      qualifiedName:
        CSharp: Traductionscript.xmlReader.WaveD
        VB: Traductionscript.xmlReader.WaveD
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: WaveD
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 42
      syntax:
        content:
          CSharp: public string WaveD
          VB: Public WaveD As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.WaveL
      commentId: F:Traductionscript.xmlReader.WaveL
      language: CSharp
      name:
        CSharp: WaveL
        VB: WaveL
      nameWithType:
        CSharp: xmlReader.WaveL
        VB: xmlReader.WaveL
      qualifiedName:
        CSharp: Traductionscript.xmlReader.WaveL
        VB: Traductionscript.xmlReader.WaveL
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: WaveL
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 43
      syntax:
        content:
          CSharp: public string WaveL
          VB: Public WaveL As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.CurrentSetup
      commentId: F:Traductionscript.xmlReader.CurrentSetup
      language: CSharp
      name:
        CSharp: CurrentSetup
        VB: CurrentSetup
      nameWithType:
        CSharp: xmlReader.CurrentSetup
        VB: xmlReader.CurrentSetup
      qualifiedName:
        CSharp: Traductionscript.xmlReader.CurrentSetup
        VB: Traductionscript.xmlReader.CurrentSetup
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: CurrentSetup
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 44
      syntax:
        content:
          CSharp: public string CurrentSetup
          VB: Public CurrentSetup As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.CurrentS
      commentId: F:Traductionscript.xmlReader.CurrentS
      language: CSharp
      name:
        CSharp: CurrentS
        VB: CurrentS
      nameWithType:
        CSharp: xmlReader.CurrentS
        VB: xmlReader.CurrentS
      qualifiedName:
        CSharp: Traductionscript.xmlReader.CurrentS
        VB: Traductionscript.xmlReader.CurrentS
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: CurrentS
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 45
      syntax:
        content:
          CSharp: public string CurrentS
          VB: Public CurrentS As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.CurrentD
      commentId: F:Traductionscript.xmlReader.CurrentD
      language: CSharp
      name:
        CSharp: CurrentD
        VB: CurrentD
      nameWithType:
        CSharp: xmlReader.CurrentD
        VB: xmlReader.CurrentD
      qualifiedName:
        CSharp: Traductionscript.xmlReader.CurrentD
        VB: Traductionscript.xmlReader.CurrentD
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: CurrentD
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 46
      syntax:
        content:
          CSharp: public string CurrentD
          VB: Public CurrentD As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.Polar
      commentId: F:Traductionscript.xmlReader.Polar
      language: CSharp
      name:
        CSharp: Polar
        VB: Polar
      nameWithType:
        CSharp: xmlReader.Polar
        VB: xmlReader.Polar
      qualifiedName:
        CSharp: Traductionscript.xmlReader.Polar
        VB: Traductionscript.xmlReader.Polar
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: Polar
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 47
      syntax:
        content:
          CSharp: public string Polar
          VB: Public Polar As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.SaveFile
      commentId: F:Traductionscript.xmlReader.SaveFile
      language: CSharp
      name:
        CSharp: SaveFile
        VB: SaveFile
      nameWithType:
        CSharp: xmlReader.SaveFile
        VB: xmlReader.SaveFile
      qualifiedName:
        CSharp: Traductionscript.xmlReader.SaveFile
        VB: Traductionscript.xmlReader.SaveFile
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: SaveFile
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 48
      syntax:
        content:
          CSharp: public string SaveFile
          VB: Public SaveFile As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.Nopolar
      commentId: F:Traductionscript.xmlReader.Nopolar
      language: CSharp
      name:
        CSharp: Nopolar
        VB: Nopolar
      nameWithType:
        CSharp: xmlReader.Nopolar
        VB: xmlReader.Nopolar
      qualifiedName:
        CSharp: Traductionscript.xmlReader.Nopolar
        VB: Traductionscript.xmlReader.Nopolar
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: Nopolar
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 49
      syntax:
        content:
          CSharp: public string Nopolar
          VB: Public Nopolar As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.textNavigation
      commentId: F:Traductionscript.xmlReader.textNavigation
      language: CSharp
      name:
        CSharp: textNavigation
        VB: textNavigation
      nameWithType:
        CSharp: xmlReader.textNavigation
        VB: xmlReader.textNavigation
      qualifiedName:
        CSharp: Traductionscript.xmlReader.textNavigation
        VB: Traductionscript.xmlReader.textNavigation
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textNavigation
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 51
      syntax:
        content:
          CSharp: public TextMeshProUGUI textNavigation
          VB: Public textNavigation As TextMeshProUGUI
        return:
          type: TMPro.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.textEnvironment
      commentId: F:Traductionscript.xmlReader.textEnvironment
      language: CSharp
      name:
        CSharp: textEnvironment
        VB: textEnvironment
      nameWithType:
        CSharp: xmlReader.textEnvironment
        VB: xmlReader.textEnvironment
      qualifiedName:
        CSharp: Traductionscript.xmlReader.textEnvironment
        VB: Traductionscript.xmlReader.textEnvironment
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textEnvironment
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 52
      syntax:
        content:
          CSharp: public TextMeshProUGUI textEnvironment
          VB: Public textEnvironment As TextMeshProUGUI
        return:
          type: TMPro.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.textHelp
      commentId: F:Traductionscript.xmlReader.textHelp
      language: CSharp
      name:
        CSharp: textHelp
        VB: textHelp
      nameWithType:
        CSharp: xmlReader.textHelp
        VB: xmlReader.textHelp
      qualifiedName:
        CSharp: Traductionscript.xmlReader.textHelp
        VB: Traductionscript.xmlReader.textHelp
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textHelp
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 53
      syntax:
        content:
          CSharp: public TextMeshProUGUI textHelp
          VB: Public textHelp As TextMeshProUGUI
        return:
          type: TMPro.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.textAcceletationFactor
      commentId: F:Traductionscript.xmlReader.textAcceletationFactor
      language: CSharp
      name:
        CSharp: textAcceletationFactor
        VB: textAcceletationFactor
      nameWithType:
        CSharp: xmlReader.textAcceletationFactor
        VB: xmlReader.textAcceletationFactor
      qualifiedName:
        CSharp: Traductionscript.xmlReader.textAcceletationFactor
        VB: Traductionscript.xmlReader.textAcceletationFactor
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textAcceletationFactor
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 54
      syntax:
        content:
          CSharp: public Text textAcceletationFactor
          VB: Public textAcceletationFactor As Text
        return:
          type: UnityEngine.UI.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.textheadingM
      commentId: F:Traductionscript.xmlReader.textheadingM
      language: CSharp
      name:
        CSharp: textheadingM
        VB: textheadingM
      nameWithType:
        CSharp: xmlReader.textheadingM
        VB: xmlReader.textheadingM
      qualifiedName:
        CSharp: Traductionscript.xmlReader.textheadingM
        VB: Traductionscript.xmlReader.textheadingM
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textheadingM
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 56
      syntax:
        content:
          CSharp: public Text textheadingM
          VB: Public textheadingM As Text
        return:
          type: UnityEngine.UI.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.textwindM
      commentId: F:Traductionscript.xmlReader.textwindM
      language: CSharp
      name:
        CSharp: textwindM
        VB: textwindM
      nameWithType:
        CSharp: xmlReader.textwindM
        VB: xmlReader.textwindM
      qualifiedName:
        CSharp: Traductionscript.xmlReader.textwindM
        VB: Traductionscript.xmlReader.textwindM
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textwindM
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 57
      syntax:
        content:
          CSharp: public Text textwindM
          VB: Public textwindM As Text
        return:
          type: UnityEngine.UI.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.textSwitchH
      commentId: F:Traductionscript.xmlReader.textSwitchH
      language: CSharp
      name:
        CSharp: textSwitchH
        VB: textSwitchH
      nameWithType:
        CSharp: xmlReader.textSwitchH
        VB: xmlReader.textSwitchH
      qualifiedName:
        CSharp: Traductionscript.xmlReader.textSwitchH
        VB: Traductionscript.xmlReader.textSwitchH
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textSwitchH
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 58
      syntax:
        content:
          CSharp: public TextMeshProUGUI textSwitchH
          VB: Public textSwitchH As TextMeshProUGUI
        return:
          type: TMPro.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.textSwitchW
      commentId: F:Traductionscript.xmlReader.textSwitchW
      language: CSharp
      name:
        CSharp: textSwitchW
        VB: textSwitchW
      nameWithType:
        CSharp: xmlReader.textSwitchW
        VB: xmlReader.textSwitchW
      qualifiedName:
        CSharp: Traductionscript.xmlReader.textSwitchW
        VB: Traductionscript.xmlReader.textSwitchW
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textSwitchW
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 59
      syntax:
        content:
          CSharp: public TextMeshProUGUI textSwitchW
          VB: Public textSwitchW As TextMeshProUGUI
        return:
          type: TMPro.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.textsave
      commentId: F:Traductionscript.xmlReader.textsave
      language: CSharp
      name:
        CSharp: textsave
        VB: textsave
      nameWithType:
        CSharp: xmlReader.textsave
        VB: xmlReader.textsave
      qualifiedName:
        CSharp: Traductionscript.xmlReader.textsave
        VB: Traductionscript.xmlReader.textsave
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textsave
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 60
      syntax:
        content:
          CSharp: public TextMeshProUGUI textsave
          VB: Public textsave As TextMeshProUGUI
        return:
          type: TMPro.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.textsave1
      commentId: F:Traductionscript.xmlReader.textsave1
      language: CSharp
      name:
        CSharp: textsave1
        VB: textsave1
      nameWithType:
        CSharp: xmlReader.textsave1
        VB: xmlReader.textsave1
      qualifiedName:
        CSharp: Traductionscript.xmlReader.textsave1
        VB: Traductionscript.xmlReader.textsave1
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textsave1
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 61
      syntax:
        content:
          CSharp: public TextMeshProUGUI textsave1
          VB: Public textsave1 As TextMeshProUGUI
        return:
          type: TMPro.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.textexit
      commentId: F:Traductionscript.xmlReader.textexit
      language: CSharp
      name:
        CSharp: textexit
        VB: textexit
      nameWithType:
        CSharp: xmlReader.textexit
        VB: xmlReader.textexit
      qualifiedName:
        CSharp: Traductionscript.xmlReader.textexit
        VB: Traductionscript.xmlReader.textexit
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textexit
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 62
      syntax:
        content:
          CSharp: public TextMeshProUGUI textexit
          VB: Public textexit As TextMeshProUGUI
        return:
          type: TMPro.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.textwind
      commentId: F:Traductionscript.xmlReader.textwind
      language: CSharp
      name:
        CSharp: textwind
        VB: textwind
      nameWithType:
        CSharp: xmlReader.textwind
        VB: xmlReader.textwind
      qualifiedName:
        CSharp: Traductionscript.xmlReader.textwind
        VB: Traductionscript.xmlReader.textwind
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textwind
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 63
      syntax:
        content:
          CSharp: public TextMeshProUGUI textwind
          VB: Public textwind As TextMeshProUGUI
        return:
          type: TMPro.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.textwave
      commentId: F:Traductionscript.xmlReader.textwave
      language: CSharp
      name:
        CSharp: textwave
        VB: textwave
      nameWithType:
        CSharp: xmlReader.textwave
        VB: xmlReader.textwave
      qualifiedName:
        CSharp: Traductionscript.xmlReader.textwave
        VB: Traductionscript.xmlReader.textwave
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textwave
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 64
      syntax:
        content:
          CSharp: public TextMeshProUGUI textwave
          VB: Public textwave As TextMeshProUGUI
        return:
          type: TMPro.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.textcurrent
      commentId: F:Traductionscript.xmlReader.textcurrent
      language: CSharp
      name:
        CSharp: textcurrent
        VB: textcurrent
      nameWithType:
        CSharp: xmlReader.textcurrent
        VB: xmlReader.textcurrent
      qualifiedName:
        CSharp: Traductionscript.xmlReader.textcurrent
        VB: Traductionscript.xmlReader.textcurrent
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textcurrent
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 65
      syntax:
        content:
          CSharp: public TextMeshProUGUI textcurrent
          VB: Public textcurrent As TextMeshProUGUI
        return:
          type: TMPro.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.textWindset
      commentId: F:Traductionscript.xmlReader.textWindset
      language: CSharp
      name:
        CSharp: textWindset
        VB: textWindset
      nameWithType:
        CSharp: xmlReader.textWindset
        VB: xmlReader.textWindset
      qualifiedName:
        CSharp: Traductionscript.xmlReader.textWindset
        VB: Traductionscript.xmlReader.textWindset
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textWindset
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 67
      syntax:
        content:
          CSharp: public TextMeshProUGUI textWindset
          VB: Public textWindset As TextMeshProUGUI
        return:
          type: TMPro.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.textWindS
      commentId: F:Traductionscript.xmlReader.textWindS
      language: CSharp
      name:
        CSharp: textWindS
        VB: textWindS
      nameWithType:
        CSharp: xmlReader.textWindS
        VB: xmlReader.textWindS
      qualifiedName:
        CSharp: Traductionscript.xmlReader.textWindS
        VB: Traductionscript.xmlReader.textWindS
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textWindS
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 68
      syntax:
        content:
          CSharp: public TextMeshProUGUI textWindS
          VB: Public textWindS As TextMeshProUGUI
        return:
          type: TMPro.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.textWindD
      commentId: F:Traductionscript.xmlReader.textWindD
      language: CSharp
      name:
        CSharp: textWindD
        VB: textWindD
      nameWithType:
        CSharp: xmlReader.textWindD
        VB: xmlReader.textWindD
      qualifiedName:
        CSharp: Traductionscript.xmlReader.textWindD
        VB: Traductionscript.xmlReader.textWindD
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textWindD
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 69
      syntax:
        content:
          CSharp: public TextMeshProUGUI textWindD
          VB: Public textWindD As TextMeshProUGUI
        return:
          type: TMPro.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.textWaveset
      commentId: F:Traductionscript.xmlReader.textWaveset
      language: CSharp
      name:
        CSharp: textWaveset
        VB: textWaveset
      nameWithType:
        CSharp: xmlReader.textWaveset
        VB: xmlReader.textWaveset
      qualifiedName:
        CSharp: Traductionscript.xmlReader.textWaveset
        VB: Traductionscript.xmlReader.textWaveset
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textWaveset
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 70
      syntax:
        content:
          CSharp: public TextMeshProUGUI textWaveset
          VB: Public textWaveset As TextMeshProUGUI
        return:
          type: TMPro.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.textAmpl
      commentId: F:Traductionscript.xmlReader.textAmpl
      language: CSharp
      name:
        CSharp: textAmpl
        VB: textAmpl
      nameWithType:
        CSharp: xmlReader.textAmpl
        VB: xmlReader.textAmpl
      qualifiedName:
        CSharp: Traductionscript.xmlReader.textAmpl
        VB: Traductionscript.xmlReader.textAmpl
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textAmpl
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 71
      syntax:
        content:
          CSharp: public TextMeshProUGUI textAmpl
          VB: Public textAmpl As TextMeshProUGUI
        return:
          type: TMPro.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.textWaveD
      commentId: F:Traductionscript.xmlReader.textWaveD
      language: CSharp
      name:
        CSharp: textWaveD
        VB: textWaveD
      nameWithType:
        CSharp: xmlReader.textWaveD
        VB: xmlReader.textWaveD
      qualifiedName:
        CSharp: Traductionscript.xmlReader.textWaveD
        VB: Traductionscript.xmlReader.textWaveD
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textWaveD
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 72
      syntax:
        content:
          CSharp: public TextMeshProUGUI textWaveD
          VB: Public textWaveD As TextMeshProUGUI
        return:
          type: TMPro.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.textWaveL
      commentId: F:Traductionscript.xmlReader.textWaveL
      language: CSharp
      name:
        CSharp: textWaveL
        VB: textWaveL
      nameWithType:
        CSharp: xmlReader.textWaveL
        VB: xmlReader.textWaveL
      qualifiedName:
        CSharp: Traductionscript.xmlReader.textWaveL
        VB: Traductionscript.xmlReader.textWaveL
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textWaveL
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 73
      syntax:
        content:
          CSharp: public TextMeshProUGUI textWaveL
          VB: Public textWaveL As TextMeshProUGUI
        return:
          type: TMPro.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.textCurrentset
      commentId: F:Traductionscript.xmlReader.textCurrentset
      language: CSharp
      name:
        CSharp: textCurrentset
        VB: textCurrentset
      nameWithType:
        CSharp: xmlReader.textCurrentset
        VB: xmlReader.textCurrentset
      qualifiedName:
        CSharp: Traductionscript.xmlReader.textCurrentset
        VB: Traductionscript.xmlReader.textCurrentset
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textCurrentset
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 74
      syntax:
        content:
          CSharp: public TextMeshProUGUI textCurrentset
          VB: Public textCurrentset As TextMeshProUGUI
        return:
          type: TMPro.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.textCurrentS
      commentId: F:Traductionscript.xmlReader.textCurrentS
      language: CSharp
      name:
        CSharp: textCurrentS
        VB: textCurrentS
      nameWithType:
        CSharp: xmlReader.textCurrentS
        VB: xmlReader.textCurrentS
      qualifiedName:
        CSharp: Traductionscript.xmlReader.textCurrentS
        VB: Traductionscript.xmlReader.textCurrentS
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textCurrentS
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 75
      syntax:
        content:
          CSharp: public TextMeshProUGUI textCurrentS
          VB: Public textCurrentS As TextMeshProUGUI
        return:
          type: TMPro.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.textCurrentD
      commentId: F:Traductionscript.xmlReader.textCurrentD
      language: CSharp
      name:
        CSharp: textCurrentD
        VB: textCurrentD
      nameWithType:
        CSharp: xmlReader.textCurrentD
        VB: xmlReader.textCurrentD
      qualifiedName:
        CSharp: Traductionscript.xmlReader.textCurrentD
        VB: Traductionscript.xmlReader.textCurrentD
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textCurrentD
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 76
      syntax:
        content:
          CSharp: public TextMeshProUGUI textCurrentD
          VB: Public textCurrentD As TextMeshProUGUI
        return:
          type: TMPro.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.textPolar
      commentId: F:Traductionscript.xmlReader.textPolar
      language: CSharp
      name:
        CSharp: textPolar
        VB: textPolar
      nameWithType:
        CSharp: xmlReader.textPolar
        VB: xmlReader.textPolar
      qualifiedName:
        CSharp: Traductionscript.xmlReader.textPolar
        VB: Traductionscript.xmlReader.textPolar
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textPolar
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 78
      syntax:
        content:
          CSharp: public TextMeshProUGUI textPolar
          VB: Public textPolar As TextMeshProUGUI
        return:
          type: TMPro.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.textsaveFile
      commentId: F:Traductionscript.xmlReader.textsaveFile
      language: CSharp
      name:
        CSharp: textsaveFile
        VB: textsaveFile
      nameWithType:
        CSharp: xmlReader.textsaveFile
        VB: xmlReader.textsaveFile
      qualifiedName:
        CSharp: Traductionscript.xmlReader.textsaveFile
        VB: Traductionscript.xmlReader.textsaveFile
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textsaveFile
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 79
      syntax:
        content:
          CSharp: public TextMeshProUGUI textsaveFile
          VB: Public textsaveFile As TextMeshProUGUI
        return:
          type: TMPro.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.textNopolar
      commentId: F:Traductionscript.xmlReader.textNopolar
      language: CSharp
      name:
        CSharp: textNopolar
        VB: textNopolar
      nameWithType:
        CSharp: xmlReader.textNopolar
        VB: xmlReader.textNopolar
      qualifiedName:
        CSharp: Traductionscript.xmlReader.textNopolar
        VB: Traductionscript.xmlReader.textNopolar
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textNopolar
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 80
      syntax:
        content:
          CSharp: public TextMeshProUGUI textNopolar
          VB: Public textNopolar As TextMeshProUGUI
        return:
          type: TMPro.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.selectDropdown
      commentId: F:Traductionscript.xmlReader.selectDropdown
      language: CSharp
      name:
        CSharp: selectDropdown
        VB: selectDropdown
      nameWithType:
        CSharp: xmlReader.selectDropdown
        VB: xmlReader.selectDropdown
      qualifiedName:
        CSharp: Traductionscript.xmlReader.selectDropdown
        VB: Traductionscript.xmlReader.selectDropdown
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: selectDropdown
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 82
      syntax:
        content:
          CSharp: public Dropdown selectDropdown
          VB: Public selectDropdown As Dropdown
        return:
          type: UnityEngine.UI.Dropdown
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.conf
      commentId: F:Traductionscript.xmlReader.conf
      language: CSharp
      name:
        CSharp: conf
        VB: conf
      nameWithType:
        CSharp: xmlReader.conf
        VB: xmlReader.conf
      qualifiedName:
        CSharp: Traductionscript.xmlReader.conf
        VB: Traductionscript.xmlReader.conf
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: conf
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 83
      syntax:
        content:
          CSharp: public SavedConfigReader.SavedConfig conf
          VB: Public conf As SavedConfigReader.SavedConfig
        return:
          type: SavedConfigReader.SavedConfig
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.xmlReader.ValueChangeCheck
      commentId: M:Traductionscript.xmlReader.ValueChangeCheck
      language: CSharp
      name:
        CSharp: ValueChangeCheck()
        VB: ValueChangeCheck()
      nameWithType:
        CSharp: xmlReader.ValueChangeCheck()
        VB: xmlReader.ValueChangeCheck()
      qualifiedName:
        CSharp: Traductionscript.xmlReader.ValueChangeCheck()
        VB: Traductionscript.xmlReader.ValueChangeCheck()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: ValueChangeCheck
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\xmlReader.cs
        startLine: 301
      summary: "\nChange the current language and edit the config.json with it\n"
      example: []
      syntax:
        content:
          CSharp: public void ValueChangeCheck()
          VB: Public Sub ValueChangeCheck
      overload: Traductionscript.xmlReader.ValueChangeCheck*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Traductionscript.MenuTrad
    commentId: T:Traductionscript.MenuTrad
    language: CSharp
    name:
      CSharp: MenuTrad
      VB: MenuTrad
    nameWithType:
      CSharp: MenuTrad
      VB: MenuTrad
    qualifiedName:
      CSharp: Traductionscript.MenuTrad
      VB: Traductionscript.MenuTrad
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Traductionscript
    source:
      id: MenuTrad
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\MenuTrad.cs
      startLine: 14
    summary: "\nScript Traduction on the menu scene\n"
    example: []
    syntax:
      content:
        CSharp: 'public class MenuTrad : MonoBehaviour'
        VB: >-
          Public Class MenuTrad

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    - UnityEngine.Object
    - UnityEngine.Component
    - UnityEngine.Behaviour
    - UnityEngine.MonoBehaviour
    inheritedMembers:
    - UnityEngine.MonoBehaviour.IsInvoking
    - UnityEngine.MonoBehaviour.CancelInvoke
    - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    - UnityEngine.MonoBehaviour.IsInvoking(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StopAllCoroutines
    - UnityEngine.MonoBehaviour.print(System.Object)
    - UnityEngine.MonoBehaviour.useGUILayout
    - UnityEngine.MonoBehaviour.runInEditMode
    - UnityEngine.Behaviour.enabled
    - UnityEngine.Behaviour.isActiveAndEnabled
    - UnityEngine.Component.GetComponent(System.Type)
    - UnityEngine.Component.GetComponent``1
    - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    - UnityEngine.Component.TryGetComponent``1({T}@)
    - UnityEngine.Component.GetComponent(System.String)
    - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInChildren(System.Type)
    - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentInChildren``1
    - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren(System.Type)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInChildren``1
    - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentInParent(System.Type)
    - UnityEngine.Component.GetComponentInParent``1
    - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInParent(System.Type)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInParent``1
    - UnityEngine.Component.GetComponents(System.Type)
    - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponents``1
    - UnityEngine.Component.CompareTag(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    - UnityEngine.Component.SendMessageUpwards(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,System.Object)
    - UnityEngine.Component.SendMessage(System.String)
    - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    - UnityEngine.Component.BroadcastMessage(System.String)
    - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.transform
    - UnityEngine.Component.gameObject
    - UnityEngine.Component.tag
    - UnityEngine.Object.GetInstanceID
    - UnityEngine.Object.GetHashCode
    - UnityEngine.Object.Equals(System.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Instantiate``1({T})
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    - UnityEngine.Object.Destroy(UnityEngine.Object)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    - UnityEngine.Object.FindObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object)
    - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    - UnityEngine.Object.FindObjectsOfType``1
    - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectOfType``1
    - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    - UnityEngine.Object.ToString
    - UnityEngine.Object.name
    - UnityEngine.Object.hideFlags
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Traductionscript.MenuTrad.conf
      commentId: F:Traductionscript.MenuTrad.conf
      language: CSharp
      name:
        CSharp: conf
        VB: conf
      nameWithType:
        CSharp: MenuTrad.conf
        VB: MenuTrad.conf
      qualifiedName:
        CSharp: Traductionscript.MenuTrad.conf
        VB: Traductionscript.MenuTrad.conf
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: conf
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\MenuTrad.cs
        startLine: 16
      syntax:
        content:
          CSharp: public SavedConfigReader.SavedConfig conf
          VB: Public conf As SavedConfigReader.SavedConfig
        return:
          type: SavedConfigReader.SavedConfig
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.MenuTrad.currentLanguage
      commentId: F:Traductionscript.MenuTrad.currentLanguage
      language: CSharp
      name:
        CSharp: currentLanguage
        VB: currentLanguage
      nameWithType:
        CSharp: MenuTrad.currentLanguage
        VB: MenuTrad.currentLanguage
      qualifiedName:
        CSharp: Traductionscript.MenuTrad.currentLanguage
        VB: Traductionscript.MenuTrad.currentLanguage
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: currentLanguage
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\MenuTrad.cs
        startLine: 18
      syntax:
        content:
          CSharp: public int currentLanguage
          VB: Public currentLanguage As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.MenuTrad.menu
      commentId: F:Traductionscript.MenuTrad.menu
      language: CSharp
      name:
        CSharp: menu
        VB: menu
      nameWithType:
        CSharp: MenuTrad.menu
        VB: MenuTrad.menu
      qualifiedName:
        CSharp: Traductionscript.MenuTrad.menu
        VB: Traductionscript.MenuTrad.menu
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: menu
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\MenuTrad.cs
        startLine: 20
      syntax:
        content:
          CSharp: public string menu
          VB: Public menu As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.MenuTrad.continueNav
      commentId: F:Traductionscript.MenuTrad.continueNav
      language: CSharp
      name:
        CSharp: continueNav
        VB: continueNav
      nameWithType:
        CSharp: MenuTrad.continueNav
        VB: MenuTrad.continueNav
      qualifiedName:
        CSharp: Traductionscript.MenuTrad.continueNav
        VB: Traductionscript.MenuTrad.continueNav
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: continueNav
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\MenuTrad.cs
        startLine: 21
      syntax:
        content:
          CSharp: public string continueNav
          VB: Public continueNav As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.MenuTrad.newNav
      commentId: F:Traductionscript.MenuTrad.newNav
      language: CSharp
      name:
        CSharp: newNav
        VB: newNav
      nameWithType:
        CSharp: MenuTrad.newNav
        VB: MenuTrad.newNav
      qualifiedName:
        CSharp: Traductionscript.MenuTrad.newNav
        VB: Traductionscript.MenuTrad.newNav
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: newNav
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\MenuTrad.cs
        startLine: 22
      syntax:
        content:
          CSharp: public string newNav
          VB: Public newNav As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.MenuTrad.configuration
      commentId: F:Traductionscript.MenuTrad.configuration
      language: CSharp
      name:
        CSharp: configuration
        VB: configuration
      nameWithType:
        CSharp: MenuTrad.configuration
        VB: MenuTrad.configuration
      qualifiedName:
        CSharp: Traductionscript.MenuTrad.configuration
        VB: Traductionscript.MenuTrad.configuration
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: configuration
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\MenuTrad.cs
        startLine: 23
      syntax:
        content:
          CSharp: public string configuration
          VB: Public configuration As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.MenuTrad.exit
      commentId: F:Traductionscript.MenuTrad.exit
      language: CSharp
      name:
        CSharp: exit
        VB: exit
      nameWithType:
        CSharp: MenuTrad.exit
        VB: MenuTrad.exit
      qualifiedName:
        CSharp: Traductionscript.MenuTrad.exit
        VB: Traductionscript.MenuTrad.exit
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: exit
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\MenuTrad.cs
        startLine: 24
      syntax:
        content:
          CSharp: public string exit
          VB: Public exit As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.MenuTrad.textMenu
      commentId: F:Traductionscript.MenuTrad.textMenu
      language: CSharp
      name:
        CSharp: textMenu
        VB: textMenu
      nameWithType:
        CSharp: MenuTrad.textMenu
        VB: MenuTrad.textMenu
      qualifiedName:
        CSharp: Traductionscript.MenuTrad.textMenu
        VB: Traductionscript.MenuTrad.textMenu
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textMenu
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\MenuTrad.cs
        startLine: 26
      syntax:
        content:
          CSharp: public Text textMenu
          VB: Public textMenu As Text
        return:
          type: UnityEngine.UI.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.MenuTrad.textContinue
      commentId: F:Traductionscript.MenuTrad.textContinue
      language: CSharp
      name:
        CSharp: textContinue
        VB: textContinue
      nameWithType:
        CSharp: MenuTrad.textContinue
        VB: MenuTrad.textContinue
      qualifiedName:
        CSharp: Traductionscript.MenuTrad.textContinue
        VB: Traductionscript.MenuTrad.textContinue
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textContinue
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\MenuTrad.cs
        startLine: 27
      syntax:
        content:
          CSharp: public Text textContinue
          VB: Public textContinue As Text
        return:
          type: UnityEngine.UI.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.MenuTrad.textNew
      commentId: F:Traductionscript.MenuTrad.textNew
      language: CSharp
      name:
        CSharp: textNew
        VB: textNew
      nameWithType:
        CSharp: MenuTrad.textNew
        VB: MenuTrad.textNew
      qualifiedName:
        CSharp: Traductionscript.MenuTrad.textNew
        VB: Traductionscript.MenuTrad.textNew
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textNew
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\MenuTrad.cs
        startLine: 28
      syntax:
        content:
          CSharp: public Text textNew
          VB: Public textNew As Text
        return:
          type: UnityEngine.UI.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.MenuTrad.textConf
      commentId: F:Traductionscript.MenuTrad.textConf
      language: CSharp
      name:
        CSharp: textConf
        VB: textConf
      nameWithType:
        CSharp: MenuTrad.textConf
        VB: MenuTrad.textConf
      qualifiedName:
        CSharp: Traductionscript.MenuTrad.textConf
        VB: Traductionscript.MenuTrad.textConf
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textConf
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\MenuTrad.cs
        startLine: 29
      syntax:
        content:
          CSharp: public Text textConf
          VB: Public textConf As Text
        return:
          type: UnityEngine.UI.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.MenuTrad.textExit
      commentId: F:Traductionscript.MenuTrad.textExit
      language: CSharp
      name:
        CSharp: textExit
        VB: textExit
      nameWithType:
        CSharp: MenuTrad.textExit
        VB: MenuTrad.textExit
      qualifiedName:
        CSharp: Traductionscript.MenuTrad.textExit
        VB: Traductionscript.MenuTrad.textExit
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textExit
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\MenuTrad.cs
        startLine: 30
      syntax:
        content:
          CSharp: public Text textExit
          VB: Public textExit As Text
        return:
          type: UnityEngine.UI.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.MenuTrad.dictionary
      commentId: F:Traductionscript.MenuTrad.dictionary
      language: CSharp
      name:
        CSharp: dictionary
        VB: dictionary
      nameWithType:
        CSharp: MenuTrad.dictionary
        VB: MenuTrad.dictionary
      qualifiedName:
        CSharp: Traductionscript.MenuTrad.dictionary
        VB: Traductionscript.MenuTrad.dictionary
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: dictionary
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\MenuTrad.cs
        startLine: 34
      syntax:
        content:
          CSharp: public TextAsset dictionary
          VB: Public dictionary As TextAsset
        return:
          type: UnityEngine.TextAsset
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Traductionscript.InitialisationTrad
    commentId: T:Traductionscript.InitialisationTrad
    language: CSharp
    name:
      CSharp: InitialisationTrad
      VB: InitialisationTrad
    nameWithType:
      CSharp: InitialisationTrad
      VB: InitialisationTrad
    qualifiedName:
      CSharp: Traductionscript.InitialisationTrad
      VB: Traductionscript.InitialisationTrad
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Traductionscript
    source:
      id: InitialisationTrad
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\InitialisationTrad.cs
      startLine: 15
    summary: "\nScript Traduction on the initialisation scene\n"
    example: []
    syntax:
      content:
        CSharp: 'public class InitialisationTrad : MonoBehaviour'
        VB: >-
          Public Class InitialisationTrad

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    - UnityEngine.Object
    - UnityEngine.Component
    - UnityEngine.Behaviour
    - UnityEngine.MonoBehaviour
    inheritedMembers:
    - UnityEngine.MonoBehaviour.IsInvoking
    - UnityEngine.MonoBehaviour.CancelInvoke
    - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    - UnityEngine.MonoBehaviour.IsInvoking(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StopAllCoroutines
    - UnityEngine.MonoBehaviour.print(System.Object)
    - UnityEngine.MonoBehaviour.useGUILayout
    - UnityEngine.MonoBehaviour.runInEditMode
    - UnityEngine.Behaviour.enabled
    - UnityEngine.Behaviour.isActiveAndEnabled
    - UnityEngine.Component.GetComponent(System.Type)
    - UnityEngine.Component.GetComponent``1
    - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    - UnityEngine.Component.TryGetComponent``1({T}@)
    - UnityEngine.Component.GetComponent(System.String)
    - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInChildren(System.Type)
    - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentInChildren``1
    - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren(System.Type)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInChildren``1
    - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentInParent(System.Type)
    - UnityEngine.Component.GetComponentInParent``1
    - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInParent(System.Type)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInParent``1
    - UnityEngine.Component.GetComponents(System.Type)
    - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponents``1
    - UnityEngine.Component.CompareTag(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    - UnityEngine.Component.SendMessageUpwards(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,System.Object)
    - UnityEngine.Component.SendMessage(System.String)
    - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    - UnityEngine.Component.BroadcastMessage(System.String)
    - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.transform
    - UnityEngine.Component.gameObject
    - UnityEngine.Component.tag
    - UnityEngine.Object.GetInstanceID
    - UnityEngine.Object.GetHashCode
    - UnityEngine.Object.Equals(System.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Instantiate``1({T})
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    - UnityEngine.Object.Destroy(UnityEngine.Object)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    - UnityEngine.Object.FindObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object)
    - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    - UnityEngine.Object.FindObjectsOfType``1
    - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectOfType``1
    - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    - UnityEngine.Object.ToString
    - UnityEngine.Object.name
    - UnityEngine.Object.hideFlags
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Traductionscript.InitialisationTrad.conf
      commentId: F:Traductionscript.InitialisationTrad.conf
      language: CSharp
      name:
        CSharp: conf
        VB: conf
      nameWithType:
        CSharp: InitialisationTrad.conf
        VB: InitialisationTrad.conf
      qualifiedName:
        CSharp: Traductionscript.InitialisationTrad.conf
        VB: Traductionscript.InitialisationTrad.conf
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: conf
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\InitialisationTrad.cs
        startLine: 17
      syntax:
        content:
          CSharp: public SavedConfigReader.SavedConfig conf
          VB: Public conf As SavedConfigReader.SavedConfig
        return:
          type: SavedConfigReader.SavedConfig
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.InitialisationTrad.currentLanguage
      commentId: F:Traductionscript.InitialisationTrad.currentLanguage
      language: CSharp
      name:
        CSharp: currentLanguage
        VB: currentLanguage
      nameWithType:
        CSharp: InitialisationTrad.currentLanguage
        VB: InitialisationTrad.currentLanguage
      qualifiedName:
        CSharp: Traductionscript.InitialisationTrad.currentLanguage
        VB: Traductionscript.InitialisationTrad.currentLanguage
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: currentLanguage
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\InitialisationTrad.cs
        startLine: 19
      syntax:
        content:
          CSharp: public int currentLanguage
          VB: Public currentLanguage As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.InitialisationTrad.dictionary
      commentId: F:Traductionscript.InitialisationTrad.dictionary
      language: CSharp
      name:
        CSharp: dictionary
        VB: dictionary
      nameWithType:
        CSharp: InitialisationTrad.dictionary
        VB: InitialisationTrad.dictionary
      qualifiedName:
        CSharp: Traductionscript.InitialisationTrad.dictionary
        VB: Traductionscript.InitialisationTrad.dictionary
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: dictionary
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\InitialisationTrad.cs
        startLine: 23
      syntax:
        content:
          CSharp: public TextAsset dictionary
          VB: Public dictionary As TextAsset
        return:
          type: UnityEngine.TextAsset
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.InitialisationTrad.question
      commentId: F:Traductionscript.InitialisationTrad.question
      language: CSharp
      name:
        CSharp: question
        VB: question
      nameWithType:
        CSharp: InitialisationTrad.question
        VB: InitialisationTrad.question
      qualifiedName:
        CSharp: Traductionscript.InitialisationTrad.question
        VB: Traductionscript.InitialisationTrad.question
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: question
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\InitialisationTrad.cs
        startLine: 25
      syntax:
        content:
          CSharp: public string question
          VB: Public question As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.InitialisationTrad.onqtvlm
      commentId: F:Traductionscript.InitialisationTrad.onqtvlm
      language: CSharp
      name:
        CSharp: onqtvlm
        VB: onqtvlm
      nameWithType:
        CSharp: InitialisationTrad.onqtvlm
        VB: InitialisationTrad.onqtvlm
      qualifiedName:
        CSharp: Traductionscript.InitialisationTrad.onqtvlm
        VB: Traductionscript.InitialisationTrad.onqtvlm
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: onqtvlm
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\InitialisationTrad.cs
        startLine: 26
      syntax:
        content:
          CSharp: public string onqtvlm
          VB: Public onqtvlm As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.InitialisationTrad.yes
      commentId: F:Traductionscript.InitialisationTrad.yes
      language: CSharp
      name:
        CSharp: yes
        VB: yes
      nameWithType:
        CSharp: InitialisationTrad.yes
        VB: InitialisationTrad.yes
      qualifiedName:
        CSharp: Traductionscript.InitialisationTrad.yes
        VB: Traductionscript.InitialisationTrad.yes
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: yes
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\InitialisationTrad.cs
        startLine: 27
      syntax:
        content:
          CSharp: public string yes
          VB: Public yes As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.InitialisationTrad.no
      commentId: F:Traductionscript.InitialisationTrad.no
      language: CSharp
      name:
        CSharp: no
        VB: no
      nameWithType:
        CSharp: InitialisationTrad.no
        VB: InitialisationTrad.no
      qualifiedName:
        CSharp: Traductionscript.InitialisationTrad.no
        VB: Traductionscript.InitialisationTrad.no
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: no
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\InitialisationTrad.cs
        startLine: 28
      syntax:
        content:
          CSharp: public string no
          VB: Public no As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.InitialisationTrad.textQuestion
      commentId: F:Traductionscript.InitialisationTrad.textQuestion
      language: CSharp
      name:
        CSharp: textQuestion
        VB: textQuestion
      nameWithType:
        CSharp: InitialisationTrad.textQuestion
        VB: InitialisationTrad.textQuestion
      qualifiedName:
        CSharp: Traductionscript.InitialisationTrad.textQuestion
        VB: Traductionscript.InitialisationTrad.textQuestion
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textQuestion
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\InitialisationTrad.cs
        startLine: 30
      syntax:
        content:
          CSharp: public Text textQuestion
          VB: Public textQuestion As Text
        return:
          type: UnityEngine.UI.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.InitialisationTrad.textOnQTVLM
      commentId: F:Traductionscript.InitialisationTrad.textOnQTVLM
      language: CSharp
      name:
        CSharp: textOnQTVLM
        VB: textOnQTVLM
      nameWithType:
        CSharp: InitialisationTrad.textOnQTVLM
        VB: InitialisationTrad.textOnQTVLM
      qualifiedName:
        CSharp: Traductionscript.InitialisationTrad.textOnQTVLM
        VB: Traductionscript.InitialisationTrad.textOnQTVLM
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textOnQTVLM
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\InitialisationTrad.cs
        startLine: 31
      syntax:
        content:
          CSharp: public Text textOnQTVLM
          VB: Public textOnQTVLM As Text
        return:
          type: UnityEngine.UI.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.InitialisationTrad.textYes
      commentId: F:Traductionscript.InitialisationTrad.textYes
      language: CSharp
      name:
        CSharp: textYes
        VB: textYes
      nameWithType:
        CSharp: InitialisationTrad.textYes
        VB: InitialisationTrad.textYes
      qualifiedName:
        CSharp: Traductionscript.InitialisationTrad.textYes
        VB: Traductionscript.InitialisationTrad.textYes
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textYes
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\InitialisationTrad.cs
        startLine: 32
      syntax:
        content:
          CSharp: public Text textYes
          VB: Public textYes As Text
        return:
          type: UnityEngine.UI.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.InitialisationTrad.textNo
      commentId: F:Traductionscript.InitialisationTrad.textNo
      language: CSharp
      name:
        CSharp: textNo
        VB: textNo
      nameWithType:
        CSharp: InitialisationTrad.textNo
        VB: InitialisationTrad.textNo
      qualifiedName:
        CSharp: Traductionscript.InitialisationTrad.textNo
        VB: Traductionscript.InitialisationTrad.textNo
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textNo
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\InitialisationTrad.cs
        startLine: 33
      syntax:
        content:
          CSharp: public Text textNo
          VB: Public textNo As Text
        return:
          type: UnityEngine.UI.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Traductionscript.ConfigTrad
    commentId: T:Traductionscript.ConfigTrad
    language: CSharp
    name:
      CSharp: ConfigTrad
      VB: ConfigTrad
    nameWithType:
      CSharp: ConfigTrad
      VB: ConfigTrad
    qualifiedName:
      CSharp: Traductionscript.ConfigTrad
      VB: Traductionscript.ConfigTrad
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Traductionscript
    source:
      id: ConfigTrad
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\ConfigTrad.cs
      startLine: 14
    syntax:
      content:
        CSharp: 'public class ConfigTrad : MonoBehaviour'
        VB: >-
          Public Class ConfigTrad

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    - UnityEngine.Object
    - UnityEngine.Component
    - UnityEngine.Behaviour
    - UnityEngine.MonoBehaviour
    inheritedMembers:
    - UnityEngine.MonoBehaviour.IsInvoking
    - UnityEngine.MonoBehaviour.CancelInvoke
    - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    - UnityEngine.MonoBehaviour.IsInvoking(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StopAllCoroutines
    - UnityEngine.MonoBehaviour.print(System.Object)
    - UnityEngine.MonoBehaviour.useGUILayout
    - UnityEngine.MonoBehaviour.runInEditMode
    - UnityEngine.Behaviour.enabled
    - UnityEngine.Behaviour.isActiveAndEnabled
    - UnityEngine.Component.GetComponent(System.Type)
    - UnityEngine.Component.GetComponent``1
    - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    - UnityEngine.Component.TryGetComponent``1({T}@)
    - UnityEngine.Component.GetComponent(System.String)
    - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInChildren(System.Type)
    - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentInChildren``1
    - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren(System.Type)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInChildren``1
    - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentInParent(System.Type)
    - UnityEngine.Component.GetComponentInParent``1
    - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInParent(System.Type)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInParent``1
    - UnityEngine.Component.GetComponents(System.Type)
    - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponents``1
    - UnityEngine.Component.CompareTag(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    - UnityEngine.Component.SendMessageUpwards(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,System.Object)
    - UnityEngine.Component.SendMessage(System.String)
    - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    - UnityEngine.Component.BroadcastMessage(System.String)
    - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.transform
    - UnityEngine.Component.gameObject
    - UnityEngine.Component.tag
    - UnityEngine.Object.GetInstanceID
    - UnityEngine.Object.GetHashCode
    - UnityEngine.Object.Equals(System.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Instantiate``1({T})
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    - UnityEngine.Object.Destroy(UnityEngine.Object)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    - UnityEngine.Object.FindObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object)
    - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    - UnityEngine.Object.FindObjectsOfType``1
    - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectOfType``1
    - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    - UnityEngine.Object.ToString
    - UnityEngine.Object.name
    - UnityEngine.Object.hideFlags
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Traductionscript.ConfigTrad.conf
      commentId: F:Traductionscript.ConfigTrad.conf
      language: CSharp
      name:
        CSharp: conf
        VB: conf
      nameWithType:
        CSharp: ConfigTrad.conf
        VB: ConfigTrad.conf
      qualifiedName:
        CSharp: Traductionscript.ConfigTrad.conf
        VB: Traductionscript.ConfigTrad.conf
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: conf
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\ConfigTrad.cs
        startLine: 19
      summary: "\nScript Traduction on the configuration scene\n"
      example: []
      syntax:
        content:
          CSharp: public SavedConfigReader.SavedConfig conf
          VB: Public conf As SavedConfigReader.SavedConfig
        return:
          type: SavedConfigReader.SavedConfig
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.ConfigTrad.currentLanguage
      commentId: F:Traductionscript.ConfigTrad.currentLanguage
      language: CSharp
      name:
        CSharp: currentLanguage
        VB: currentLanguage
      nameWithType:
        CSharp: ConfigTrad.currentLanguage
        VB: ConfigTrad.currentLanguage
      qualifiedName:
        CSharp: Traductionscript.ConfigTrad.currentLanguage
        VB: Traductionscript.ConfigTrad.currentLanguage
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: currentLanguage
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\ConfigTrad.cs
        startLine: 21
      syntax:
        content:
          CSharp: public int currentLanguage
          VB: Public currentLanguage As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.ConfigTrad.dictionary
      commentId: F:Traductionscript.ConfigTrad.dictionary
      language: CSharp
      name:
        CSharp: dictionary
        VB: dictionary
      nameWithType:
        CSharp: ConfigTrad.dictionary
        VB: ConfigTrad.dictionary
      qualifiedName:
        CSharp: Traductionscript.ConfigTrad.dictionary
        VB: Traductionscript.ConfigTrad.dictionary
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: dictionary
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\ConfigTrad.cs
        startLine: 25
      syntax:
        content:
          CSharp: public TextAsset dictionary
          VB: Public dictionary As TextAsset
        return:
          type: UnityEngine.TextAsset
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.ConfigTrad.save
      commentId: F:Traductionscript.ConfigTrad.save
      language: CSharp
      name:
        CSharp: save
        VB: save
      nameWithType:
        CSharp: ConfigTrad.save
        VB: ConfigTrad.save
      qualifiedName:
        CSharp: Traductionscript.ConfigTrad.save
        VB: Traductionscript.ConfigTrad.save
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: save
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\ConfigTrad.cs
        startLine: 27
      syntax:
        content:
          CSharp: public string save
          VB: Public save As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.ConfigTrad.verify
      commentId: F:Traductionscript.ConfigTrad.verify
      language: CSharp
      name:
        CSharp: verify
        VB: verify
      nameWithType:
        CSharp: ConfigTrad.verify
        VB: ConfigTrad.verify
      qualifiedName:
        CSharp: Traductionscript.ConfigTrad.verify
        VB: Traductionscript.ConfigTrad.verify
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: verify
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\ConfigTrad.cs
        startLine: 28
      syntax:
        content:
          CSharp: public string verify
          VB: Public verify As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.ConfigTrad.back
      commentId: F:Traductionscript.ConfigTrad.back
      language: CSharp
      name:
        CSharp: back
        VB: back
      nameWithType:
        CSharp: ConfigTrad.back
        VB: ConfigTrad.back
      qualifiedName:
        CSharp: Traductionscript.ConfigTrad.back
        VB: Traductionscript.ConfigTrad.back
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: back
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\ConfigTrad.cs
        startLine: 29
      syntax:
        content:
          CSharp: public string back
          VB: Public back As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.ConfigTrad.configuration
      commentId: F:Traductionscript.ConfigTrad.configuration
      language: CSharp
      name:
        CSharp: configuration
        VB: configuration
      nameWithType:
        CSharp: ConfigTrad.configuration
        VB: ConfigTrad.configuration
      qualifiedName:
        CSharp: Traductionscript.ConfigTrad.configuration
        VB: Traductionscript.ConfigTrad.configuration
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: configuration
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\ConfigTrad.cs
        startLine: 30
      syntax:
        content:
          CSharp: public string configuration
          VB: Public configuration As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.ConfigTrad.textSave
      commentId: F:Traductionscript.ConfigTrad.textSave
      language: CSharp
      name:
        CSharp: textSave
        VB: textSave
      nameWithType:
        CSharp: ConfigTrad.textSave
        VB: ConfigTrad.textSave
      qualifiedName:
        CSharp: Traductionscript.ConfigTrad.textSave
        VB: Traductionscript.ConfigTrad.textSave
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textSave
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\ConfigTrad.cs
        startLine: 32
      syntax:
        content:
          CSharp: public Text textSave
          VB: Public textSave As Text
        return:
          type: UnityEngine.UI.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.ConfigTrad.textVerify
      commentId: F:Traductionscript.ConfigTrad.textVerify
      language: CSharp
      name:
        CSharp: textVerify
        VB: textVerify
      nameWithType:
        CSharp: ConfigTrad.textVerify
        VB: ConfigTrad.textVerify
      qualifiedName:
        CSharp: Traductionscript.ConfigTrad.textVerify
        VB: Traductionscript.ConfigTrad.textVerify
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textVerify
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\ConfigTrad.cs
        startLine: 33
      syntax:
        content:
          CSharp: public Text textVerify
          VB: Public textVerify As Text
        return:
          type: UnityEngine.UI.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.ConfigTrad.textSave1
      commentId: F:Traductionscript.ConfigTrad.textSave1
      language: CSharp
      name:
        CSharp: textSave1
        VB: textSave1
      nameWithType:
        CSharp: ConfigTrad.textSave1
        VB: ConfigTrad.textSave1
      qualifiedName:
        CSharp: Traductionscript.ConfigTrad.textSave1
        VB: Traductionscript.ConfigTrad.textSave1
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textSave1
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\ConfigTrad.cs
        startLine: 34
      syntax:
        content:
          CSharp: public Text textSave1
          VB: Public textSave1 As Text
        return:
          type: UnityEngine.UI.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.ConfigTrad.textVerify1
      commentId: F:Traductionscript.ConfigTrad.textVerify1
      language: CSharp
      name:
        CSharp: textVerify1
        VB: textVerify1
      nameWithType:
        CSharp: ConfigTrad.textVerify1
        VB: ConfigTrad.textVerify1
      qualifiedName:
        CSharp: Traductionscript.ConfigTrad.textVerify1
        VB: Traductionscript.ConfigTrad.textVerify1
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textVerify1
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\ConfigTrad.cs
        startLine: 35
      syntax:
        content:
          CSharp: public Text textVerify1
          VB: Public textVerify1 As Text
        return:
          type: UnityEngine.UI.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.ConfigTrad.textBack
      commentId: F:Traductionscript.ConfigTrad.textBack
      language: CSharp
      name:
        CSharp: textBack
        VB: textBack
      nameWithType:
        CSharp: ConfigTrad.textBack
        VB: ConfigTrad.textBack
      qualifiedName:
        CSharp: Traductionscript.ConfigTrad.textBack
        VB: Traductionscript.ConfigTrad.textBack
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textBack
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\ConfigTrad.cs
        startLine: 36
      syntax:
        content:
          CSharp: public Text textBack
          VB: Public textBack As Text
        return:
          type: UnityEngine.UI.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.ConfigTrad.textConfig
      commentId: F:Traductionscript.ConfigTrad.textConfig
      language: CSharp
      name:
        CSharp: textConfig
        VB: textConfig
      nameWithType:
        CSharp: ConfigTrad.textConfig
        VB: ConfigTrad.textConfig
      qualifiedName:
        CSharp: Traductionscript.ConfigTrad.textConfig
        VB: Traductionscript.ConfigTrad.textConfig
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textConfig
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\ConfigTrad.cs
        startLine: 37
      syntax:
        content:
          CSharp: public TextMeshProUGUI textConfig
          VB: Public textConfig As TextMeshProUGUI
        return:
          type: TMPro.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Traductionscript.ModeTrad
    commentId: T:Traductionscript.ModeTrad
    language: CSharp
    name:
      CSharp: ModeTrad
      VB: ModeTrad
    nameWithType:
      CSharp: ModeTrad
      VB: ModeTrad
    qualifiedName:
      CSharp: Traductionscript.ModeTrad
      VB: Traductionscript.ModeTrad
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Traductionscript
    source:
      id: ModeTrad
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\ModeTrad.cs
      startLine: 14
    summary: "\nScript Traduction on the mode selection scene\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ModeTrad : MonoBehaviour'
        VB: >-
          Public Class ModeTrad

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    - UnityEngine.Object
    - UnityEngine.Component
    - UnityEngine.Behaviour
    - UnityEngine.MonoBehaviour
    inheritedMembers:
    - UnityEngine.MonoBehaviour.IsInvoking
    - UnityEngine.MonoBehaviour.CancelInvoke
    - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    - UnityEngine.MonoBehaviour.IsInvoking(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StopAllCoroutines
    - UnityEngine.MonoBehaviour.print(System.Object)
    - UnityEngine.MonoBehaviour.useGUILayout
    - UnityEngine.MonoBehaviour.runInEditMode
    - UnityEngine.Behaviour.enabled
    - UnityEngine.Behaviour.isActiveAndEnabled
    - UnityEngine.Component.GetComponent(System.Type)
    - UnityEngine.Component.GetComponent``1
    - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    - UnityEngine.Component.TryGetComponent``1({T}@)
    - UnityEngine.Component.GetComponent(System.String)
    - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInChildren(System.Type)
    - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentInChildren``1
    - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren(System.Type)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInChildren``1
    - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentInParent(System.Type)
    - UnityEngine.Component.GetComponentInParent``1
    - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInParent(System.Type)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInParent``1
    - UnityEngine.Component.GetComponents(System.Type)
    - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponents``1
    - UnityEngine.Component.CompareTag(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    - UnityEngine.Component.SendMessageUpwards(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,System.Object)
    - UnityEngine.Component.SendMessage(System.String)
    - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    - UnityEngine.Component.BroadcastMessage(System.String)
    - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.transform
    - UnityEngine.Component.gameObject
    - UnityEngine.Component.tag
    - UnityEngine.Object.GetInstanceID
    - UnityEngine.Object.GetHashCode
    - UnityEngine.Object.Equals(System.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Instantiate``1({T})
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    - UnityEngine.Object.Destroy(UnityEngine.Object)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    - UnityEngine.Object.FindObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object)
    - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    - UnityEngine.Object.FindObjectsOfType``1
    - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectOfType``1
    - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    - UnityEngine.Object.ToString
    - UnityEngine.Object.name
    - UnityEngine.Object.hideFlags
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Traductionscript.ModeTrad.conf
      commentId: F:Traductionscript.ModeTrad.conf
      language: CSharp
      name:
        CSharp: conf
        VB: conf
      nameWithType:
        CSharp: ModeTrad.conf
        VB: ModeTrad.conf
      qualifiedName:
        CSharp: Traductionscript.ModeTrad.conf
        VB: Traductionscript.ModeTrad.conf
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: conf
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\ModeTrad.cs
        startLine: 16
      syntax:
        content:
          CSharp: public SavedConfigReader.SavedConfig conf
          VB: Public conf As SavedConfigReader.SavedConfig
        return:
          type: SavedConfigReader.SavedConfig
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.ModeTrad.currentLanguage
      commentId: F:Traductionscript.ModeTrad.currentLanguage
      language: CSharp
      name:
        CSharp: currentLanguage
        VB: currentLanguage
      nameWithType:
        CSharp: ModeTrad.currentLanguage
        VB: ModeTrad.currentLanguage
      qualifiedName:
        CSharp: Traductionscript.ModeTrad.currentLanguage
        VB: Traductionscript.ModeTrad.currentLanguage
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: currentLanguage
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\ModeTrad.cs
        startLine: 18
      syntax:
        content:
          CSharp: public int currentLanguage
          VB: Public currentLanguage As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.ModeTrad.modeSelection
      commentId: F:Traductionscript.ModeTrad.modeSelection
      language: CSharp
      name:
        CSharp: modeSelection
        VB: modeSelection
      nameWithType:
        CSharp: ModeTrad.modeSelection
        VB: ModeTrad.modeSelection
      qualifiedName:
        CSharp: Traductionscript.ModeTrad.modeSelection
        VB: Traductionscript.ModeTrad.modeSelection
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: modeSelection
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\ModeTrad.cs
        startLine: 20
      syntax:
        content:
          CSharp: public string modeSelection
          VB: Public modeSelection As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.ModeTrad.training
      commentId: F:Traductionscript.ModeTrad.training
      language: CSharp
      name:
        CSharp: training
        VB: training
      nameWithType:
        CSharp: ModeTrad.training
        VB: ModeTrad.training
      qualifiedName:
        CSharp: Traductionscript.ModeTrad.training
        VB: Traductionscript.ModeTrad.training
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: training
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\ModeTrad.cs
        startLine: 21
      syntax:
        content:
          CSharp: public string training
          VB: Public training As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.ModeTrad.asynchronus
      commentId: F:Traductionscript.ModeTrad.asynchronus
      language: CSharp
      name:
        CSharp: asynchronus
        VB: asynchronus
      nameWithType:
        CSharp: ModeTrad.asynchronus
        VB: ModeTrad.asynchronus
      qualifiedName:
        CSharp: Traductionscript.ModeTrad.asynchronus
        VB: Traductionscript.ModeTrad.asynchronus
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: asynchronus
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\ModeTrad.cs
        startLine: 22
      syntax:
        content:
          CSharp: public string asynchronus
          VB: Public asynchronus As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.ModeTrad.synchronus
      commentId: F:Traductionscript.ModeTrad.synchronus
      language: CSharp
      name:
        CSharp: synchronus
        VB: synchronus
      nameWithType:
        CSharp: ModeTrad.synchronus
        VB: ModeTrad.synchronus
      qualifiedName:
        CSharp: Traductionscript.ModeTrad.synchronus
        VB: Traductionscript.ModeTrad.synchronus
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: synchronus
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\ModeTrad.cs
        startLine: 23
      syntax:
        content:
          CSharp: public string synchronus
          VB: Public synchronus As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.ModeTrad.cancel
      commentId: F:Traductionscript.ModeTrad.cancel
      language: CSharp
      name:
        CSharp: cancel
        VB: cancel
      nameWithType:
        CSharp: ModeTrad.cancel
        VB: ModeTrad.cancel
      qualifiedName:
        CSharp: Traductionscript.ModeTrad.cancel
        VB: Traductionscript.ModeTrad.cancel
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: cancel
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\ModeTrad.cs
        startLine: 24
      syntax:
        content:
          CSharp: public string cancel
          VB: Public cancel As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.ModeTrad.textMode
      commentId: F:Traductionscript.ModeTrad.textMode
      language: CSharp
      name:
        CSharp: textMode
        VB: textMode
      nameWithType:
        CSharp: ModeTrad.textMode
        VB: ModeTrad.textMode
      qualifiedName:
        CSharp: Traductionscript.ModeTrad.textMode
        VB: Traductionscript.ModeTrad.textMode
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textMode
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\ModeTrad.cs
        startLine: 26
      syntax:
        content:
          CSharp: public Text textMode
          VB: Public textMode As Text
        return:
          type: UnityEngine.UI.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.ModeTrad.textTrain
      commentId: F:Traductionscript.ModeTrad.textTrain
      language: CSharp
      name:
        CSharp: textTrain
        VB: textTrain
      nameWithType:
        CSharp: ModeTrad.textTrain
        VB: ModeTrad.textTrain
      qualifiedName:
        CSharp: Traductionscript.ModeTrad.textTrain
        VB: Traductionscript.ModeTrad.textTrain
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textTrain
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\ModeTrad.cs
        startLine: 27
      syntax:
        content:
          CSharp: public Text textTrain
          VB: Public textTrain As Text
        return:
          type: UnityEngine.UI.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.ModeTrad.textAsyn
      commentId: F:Traductionscript.ModeTrad.textAsyn
      language: CSharp
      name:
        CSharp: textAsyn
        VB: textAsyn
      nameWithType:
        CSharp: ModeTrad.textAsyn
        VB: ModeTrad.textAsyn
      qualifiedName:
        CSharp: Traductionscript.ModeTrad.textAsyn
        VB: Traductionscript.ModeTrad.textAsyn
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textAsyn
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\ModeTrad.cs
        startLine: 28
      syntax:
        content:
          CSharp: public Text textAsyn
          VB: Public textAsyn As Text
        return:
          type: UnityEngine.UI.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.ModeTrad.textSyn
      commentId: F:Traductionscript.ModeTrad.textSyn
      language: CSharp
      name:
        CSharp: textSyn
        VB: textSyn
      nameWithType:
        CSharp: ModeTrad.textSyn
        VB: ModeTrad.textSyn
      qualifiedName:
        CSharp: Traductionscript.ModeTrad.textSyn
        VB: Traductionscript.ModeTrad.textSyn
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textSyn
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\ModeTrad.cs
        startLine: 29
      syntax:
        content:
          CSharp: public Text textSyn
          VB: Public textSyn As Text
        return:
          type: UnityEngine.UI.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.ModeTrad.textCancel
      commentId: F:Traductionscript.ModeTrad.textCancel
      language: CSharp
      name:
        CSharp: textCancel
        VB: textCancel
      nameWithType:
        CSharp: ModeTrad.textCancel
        VB: ModeTrad.textCancel
      qualifiedName:
        CSharp: Traductionscript.ModeTrad.textCancel
        VB: Traductionscript.ModeTrad.textCancel
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textCancel
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\ModeTrad.cs
        startLine: 30
      syntax:
        content:
          CSharp: public Text textCancel
          VB: Public textCancel As Text
        return:
          type: UnityEngine.UI.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.ModeTrad.dictionary
      commentId: F:Traductionscript.ModeTrad.dictionary
      language: CSharp
      name:
        CSharp: dictionary
        VB: dictionary
      nameWithType:
        CSharp: ModeTrad.dictionary
        VB: ModeTrad.dictionary
      qualifiedName:
        CSharp: Traductionscript.ModeTrad.dictionary
        VB: Traductionscript.ModeTrad.dictionary
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: dictionary
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\ModeTrad.cs
        startLine: 34
      syntax:
        content:
          CSharp: public TextAsset dictionary
          VB: Public dictionary As TextAsset
        return:
          type: UnityEngine.TextAsset
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Traductionscript.SavesSelectionTrad
    commentId: T:Traductionscript.SavesSelectionTrad
    language: CSharp
    name:
      CSharp: SavesSelectionTrad
      VB: SavesSelectionTrad
    nameWithType:
      CSharp: SavesSelectionTrad
      VB: SavesSelectionTrad
    qualifiedName:
      CSharp: Traductionscript.SavesSelectionTrad
      VB: Traductionscript.SavesSelectionTrad
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Traductionscript
    source:
      id: SavesSelectionTrad
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\SavesSelectionTrad.cs
      startLine: 17
    summary: "\nScript Traduction on the save selection scene\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SavesSelectionTrad : MonoBehaviour'
        VB: >-
          Public Class SavesSelectionTrad

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    - UnityEngine.Object
    - UnityEngine.Component
    - UnityEngine.Behaviour
    - UnityEngine.MonoBehaviour
    inheritedMembers:
    - UnityEngine.MonoBehaviour.IsInvoking
    - UnityEngine.MonoBehaviour.CancelInvoke
    - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    - UnityEngine.MonoBehaviour.IsInvoking(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StopAllCoroutines
    - UnityEngine.MonoBehaviour.print(System.Object)
    - UnityEngine.MonoBehaviour.useGUILayout
    - UnityEngine.MonoBehaviour.runInEditMode
    - UnityEngine.Behaviour.enabled
    - UnityEngine.Behaviour.isActiveAndEnabled
    - UnityEngine.Component.GetComponent(System.Type)
    - UnityEngine.Component.GetComponent``1
    - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    - UnityEngine.Component.TryGetComponent``1({T}@)
    - UnityEngine.Component.GetComponent(System.String)
    - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInChildren(System.Type)
    - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentInChildren``1
    - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren(System.Type)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInChildren``1
    - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentInParent(System.Type)
    - UnityEngine.Component.GetComponentInParent``1
    - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInParent(System.Type)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInParent``1
    - UnityEngine.Component.GetComponents(System.Type)
    - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponents``1
    - UnityEngine.Component.CompareTag(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    - UnityEngine.Component.SendMessageUpwards(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,System.Object)
    - UnityEngine.Component.SendMessage(System.String)
    - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    - UnityEngine.Component.BroadcastMessage(System.String)
    - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.transform
    - UnityEngine.Component.gameObject
    - UnityEngine.Component.tag
    - UnityEngine.Object.GetInstanceID
    - UnityEngine.Object.GetHashCode
    - UnityEngine.Object.Equals(System.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Instantiate``1({T})
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    - UnityEngine.Object.Destroy(UnityEngine.Object)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    - UnityEngine.Object.FindObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object)
    - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    - UnityEngine.Object.FindObjectsOfType``1
    - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectOfType``1
    - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    - UnityEngine.Object.ToString
    - UnityEngine.Object.name
    - UnityEngine.Object.hideFlags
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Traductionscript.SavesSelectionTrad.conf
      commentId: F:Traductionscript.SavesSelectionTrad.conf
      language: CSharp
      name:
        CSharp: conf
        VB: conf
      nameWithType:
        CSharp: SavesSelectionTrad.conf
        VB: SavesSelectionTrad.conf
      qualifiedName:
        CSharp: Traductionscript.SavesSelectionTrad.conf
        VB: Traductionscript.SavesSelectionTrad.conf
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: conf
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\SavesSelectionTrad.cs
        startLine: 19
      syntax:
        content:
          CSharp: public SavedConfigReader.SavedConfig conf
          VB: Public conf As SavedConfigReader.SavedConfig
        return:
          type: SavedConfigReader.SavedConfig
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.SavesSelectionTrad.currentLanguage
      commentId: F:Traductionscript.SavesSelectionTrad.currentLanguage
      language: CSharp
      name:
        CSharp: currentLanguage
        VB: currentLanguage
      nameWithType:
        CSharp: SavesSelectionTrad.currentLanguage
        VB: SavesSelectionTrad.currentLanguage
      qualifiedName:
        CSharp: Traductionscript.SavesSelectionTrad.currentLanguage
        VB: Traductionscript.SavesSelectionTrad.currentLanguage
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: currentLanguage
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\SavesSelectionTrad.cs
        startLine: 21
      syntax:
        content:
          CSharp: public int currentLanguage
          VB: Public currentLanguage As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.SavesSelectionTrad.dictionary
      commentId: F:Traductionscript.SavesSelectionTrad.dictionary
      language: CSharp
      name:
        CSharp: dictionary
        VB: dictionary
      nameWithType:
        CSharp: SavesSelectionTrad.dictionary
        VB: SavesSelectionTrad.dictionary
      qualifiedName:
        CSharp: Traductionscript.SavesSelectionTrad.dictionary
        VB: Traductionscript.SavesSelectionTrad.dictionary
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: dictionary
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\SavesSelectionTrad.cs
        startLine: 25
      syntax:
        content:
          CSharp: public TextAsset dictionary
          VB: Public dictionary As TextAsset
        return:
          type: UnityEngine.TextAsset
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.SavesSelectionTrad.saveSelection
      commentId: F:Traductionscript.SavesSelectionTrad.saveSelection
      language: CSharp
      name:
        CSharp: saveSelection
        VB: saveSelection
      nameWithType:
        CSharp: SavesSelectionTrad.saveSelection
        VB: SavesSelectionTrad.saveSelection
      qualifiedName:
        CSharp: Traductionscript.SavesSelectionTrad.saveSelection
        VB: Traductionscript.SavesSelectionTrad.saveSelection
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: saveSelection
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\SavesSelectionTrad.cs
        startLine: 27
      syntax:
        content:
          CSharp: public string saveSelection
          VB: Public saveSelection As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.SavesSelectionTrad.ok
      commentId: F:Traductionscript.SavesSelectionTrad.ok
      language: CSharp
      name:
        CSharp: ok
        VB: ok
      nameWithType:
        CSharp: SavesSelectionTrad.ok
        VB: SavesSelectionTrad.ok
      qualifiedName:
        CSharp: Traductionscript.SavesSelectionTrad.ok
        VB: Traductionscript.SavesSelectionTrad.ok
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: ok
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\SavesSelectionTrad.cs
        startLine: 28
      syntax:
        content:
          CSharp: public string ok
          VB: Public ok As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.SavesSelectionTrad.cancel
      commentId: F:Traductionscript.SavesSelectionTrad.cancel
      language: CSharp
      name:
        CSharp: cancel
        VB: cancel
      nameWithType:
        CSharp: SavesSelectionTrad.cancel
        VB: SavesSelectionTrad.cancel
      qualifiedName:
        CSharp: Traductionscript.SavesSelectionTrad.cancel
        VB: Traductionscript.SavesSelectionTrad.cancel
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: cancel
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\SavesSelectionTrad.cs
        startLine: 29
      syntax:
        content:
          CSharp: public string cancel
          VB: Public cancel As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.SavesSelectionTrad.textSaveSelect
      commentId: F:Traductionscript.SavesSelectionTrad.textSaveSelect
      language: CSharp
      name:
        CSharp: textSaveSelect
        VB: textSaveSelect
      nameWithType:
        CSharp: SavesSelectionTrad.textSaveSelect
        VB: SavesSelectionTrad.textSaveSelect
      qualifiedName:
        CSharp: Traductionscript.SavesSelectionTrad.textSaveSelect
        VB: Traductionscript.SavesSelectionTrad.textSaveSelect
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textSaveSelect
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\SavesSelectionTrad.cs
        startLine: 31
      syntax:
        content:
          CSharp: public TextMeshProUGUI textSaveSelect
          VB: Public textSaveSelect As TextMeshProUGUI
        return:
          type: TMPro.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.SavesSelectionTrad.textOk
      commentId: F:Traductionscript.SavesSelectionTrad.textOk
      language: CSharp
      name:
        CSharp: textOk
        VB: textOk
      nameWithType:
        CSharp: SavesSelectionTrad.textOk
        VB: SavesSelectionTrad.textOk
      qualifiedName:
        CSharp: Traductionscript.SavesSelectionTrad.textOk
        VB: Traductionscript.SavesSelectionTrad.textOk
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textOk
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\SavesSelectionTrad.cs
        startLine: 32
      syntax:
        content:
          CSharp: public TextMeshProUGUI textOk
          VB: Public textOk As TextMeshProUGUI
        return:
          type: TMPro.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.SavesSelectionTrad.textCancel
      commentId: F:Traductionscript.SavesSelectionTrad.textCancel
      language: CSharp
      name:
        CSharp: textCancel
        VB: textCancel
      nameWithType:
        CSharp: SavesSelectionTrad.textCancel
        VB: SavesSelectionTrad.textCancel
      qualifiedName:
        CSharp: Traductionscript.SavesSelectionTrad.textCancel
        VB: Traductionscript.SavesSelectionTrad.textCancel
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textCancel
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\SavesSelectionTrad.cs
        startLine: 33
      syntax:
        content:
          CSharp: public TextMeshProUGUI textCancel
          VB: Public textCancel As TextMeshProUGUI
        return:
          type: TMPro.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Traductionscript.BoatSelectTrad
    commentId: T:Traductionscript.BoatSelectTrad
    language: CSharp
    name:
      CSharp: BoatSelectTrad
      VB: BoatSelectTrad
    nameWithType:
      CSharp: BoatSelectTrad
      VB: BoatSelectTrad
    qualifiedName:
      CSharp: Traductionscript.BoatSelectTrad
      VB: Traductionscript.BoatSelectTrad
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Traductionscript
    source:
      id: BoatSelectTrad
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\BoatSelectTrad.cs
      startLine: 18
    summary: "\nScript Traduction on the boat selection scene\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BoatSelectTrad : MonoBehaviour'
        VB: >-
          Public Class BoatSelectTrad

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    - UnityEngine.Object
    - UnityEngine.Component
    - UnityEngine.Behaviour
    - UnityEngine.MonoBehaviour
    inheritedMembers:
    - UnityEngine.MonoBehaviour.IsInvoking
    - UnityEngine.MonoBehaviour.CancelInvoke
    - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    - UnityEngine.MonoBehaviour.IsInvoking(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StopAllCoroutines
    - UnityEngine.MonoBehaviour.print(System.Object)
    - UnityEngine.MonoBehaviour.useGUILayout
    - UnityEngine.MonoBehaviour.runInEditMode
    - UnityEngine.Behaviour.enabled
    - UnityEngine.Behaviour.isActiveAndEnabled
    - UnityEngine.Component.GetComponent(System.Type)
    - UnityEngine.Component.GetComponent``1
    - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    - UnityEngine.Component.TryGetComponent``1({T}@)
    - UnityEngine.Component.GetComponent(System.String)
    - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInChildren(System.Type)
    - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentInChildren``1
    - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren(System.Type)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInChildren``1
    - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentInParent(System.Type)
    - UnityEngine.Component.GetComponentInParent``1
    - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInParent(System.Type)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInParent``1
    - UnityEngine.Component.GetComponents(System.Type)
    - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponents``1
    - UnityEngine.Component.CompareTag(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    - UnityEngine.Component.SendMessageUpwards(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,System.Object)
    - UnityEngine.Component.SendMessage(System.String)
    - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    - UnityEngine.Component.BroadcastMessage(System.String)
    - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.transform
    - UnityEngine.Component.gameObject
    - UnityEngine.Component.tag
    - UnityEngine.Object.GetInstanceID
    - UnityEngine.Object.GetHashCode
    - UnityEngine.Object.Equals(System.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Instantiate``1({T})
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    - UnityEngine.Object.Destroy(UnityEngine.Object)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    - UnityEngine.Object.FindObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object)
    - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    - UnityEngine.Object.FindObjectsOfType``1
    - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectOfType``1
    - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    - UnityEngine.Object.ToString
    - UnityEngine.Object.name
    - UnityEngine.Object.hideFlags
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Traductionscript.BoatSelectTrad.conf
      commentId: F:Traductionscript.BoatSelectTrad.conf
      language: CSharp
      name:
        CSharp: conf
        VB: conf
      nameWithType:
        CSharp: BoatSelectTrad.conf
        VB: BoatSelectTrad.conf
      qualifiedName:
        CSharp: Traductionscript.BoatSelectTrad.conf
        VB: Traductionscript.BoatSelectTrad.conf
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: conf
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\BoatSelectTrad.cs
        startLine: 20
      syntax:
        content:
          CSharp: public SavedConfigReader.SavedConfig conf
          VB: Public conf As SavedConfigReader.SavedConfig
        return:
          type: SavedConfigReader.SavedConfig
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.BoatSelectTrad.currentLanguage
      commentId: F:Traductionscript.BoatSelectTrad.currentLanguage
      language: CSharp
      name:
        CSharp: currentLanguage
        VB: currentLanguage
      nameWithType:
        CSharp: BoatSelectTrad.currentLanguage
        VB: BoatSelectTrad.currentLanguage
      qualifiedName:
        CSharp: Traductionscript.BoatSelectTrad.currentLanguage
        VB: Traductionscript.BoatSelectTrad.currentLanguage
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: currentLanguage
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\BoatSelectTrad.cs
        startLine: 22
      syntax:
        content:
          CSharp: public int currentLanguage
          VB: Public currentLanguage As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.BoatSelectTrad.boatSelection
      commentId: F:Traductionscript.BoatSelectTrad.boatSelection
      language: CSharp
      name:
        CSharp: boatSelection
        VB: boatSelection
      nameWithType:
        CSharp: BoatSelectTrad.boatSelection
        VB: BoatSelectTrad.boatSelection
      qualifiedName:
        CSharp: Traductionscript.BoatSelectTrad.boatSelection
        VB: Traductionscript.BoatSelectTrad.boatSelection
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: boatSelection
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\BoatSelectTrad.cs
        startLine: 23
      syntax:
        content:
          CSharp: public string boatSelection
          VB: Public boatSelection As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.BoatSelectTrad.refresh
      commentId: F:Traductionscript.BoatSelectTrad.refresh
      language: CSharp
      name:
        CSharp: refresh
        VB: refresh
      nameWithType:
        CSharp: BoatSelectTrad.refresh
        VB: BoatSelectTrad.refresh
      qualifiedName:
        CSharp: Traductionscript.BoatSelectTrad.refresh
        VB: Traductionscript.BoatSelectTrad.refresh
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: refresh
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\BoatSelectTrad.cs
        startLine: 24
      syntax:
        content:
          CSharp: public string refresh
          VB: Public refresh As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.BoatSelectTrad.cancel
      commentId: F:Traductionscript.BoatSelectTrad.cancel
      language: CSharp
      name:
        CSharp: cancel
        VB: cancel
      nameWithType:
        CSharp: BoatSelectTrad.cancel
        VB: BoatSelectTrad.cancel
      qualifiedName:
        CSharp: Traductionscript.BoatSelectTrad.cancel
        VB: Traductionscript.BoatSelectTrad.cancel
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: cancel
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\BoatSelectTrad.cs
        startLine: 25
      syntax:
        content:
          CSharp: public string cancel
          VB: Public cancel As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.BoatSelectTrad.textBoatSelect
      commentId: F:Traductionscript.BoatSelectTrad.textBoatSelect
      language: CSharp
      name:
        CSharp: textBoatSelect
        VB: textBoatSelect
      nameWithType:
        CSharp: BoatSelectTrad.textBoatSelect
        VB: BoatSelectTrad.textBoatSelect
      qualifiedName:
        CSharp: Traductionscript.BoatSelectTrad.textBoatSelect
        VB: Traductionscript.BoatSelectTrad.textBoatSelect
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textBoatSelect
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\BoatSelectTrad.cs
        startLine: 27
      syntax:
        content:
          CSharp: public TextMeshProUGUI textBoatSelect
          VB: Public textBoatSelect As TextMeshProUGUI
        return:
          type: TMPro.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.BoatSelectTrad.textRefresh
      commentId: F:Traductionscript.BoatSelectTrad.textRefresh
      language: CSharp
      name:
        CSharp: textRefresh
        VB: textRefresh
      nameWithType:
        CSharp: BoatSelectTrad.textRefresh
        VB: BoatSelectTrad.textRefresh
      qualifiedName:
        CSharp: Traductionscript.BoatSelectTrad.textRefresh
        VB: Traductionscript.BoatSelectTrad.textRefresh
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textRefresh
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\BoatSelectTrad.cs
        startLine: 28
      syntax:
        content:
          CSharp: public TextMeshProUGUI textRefresh
          VB: Public textRefresh As TextMeshProUGUI
        return:
          type: TMPro.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.BoatSelectTrad.textCancel
      commentId: F:Traductionscript.BoatSelectTrad.textCancel
      language: CSharp
      name:
        CSharp: textCancel
        VB: textCancel
      nameWithType:
        CSharp: BoatSelectTrad.textCancel
        VB: BoatSelectTrad.textCancel
      qualifiedName:
        CSharp: Traductionscript.BoatSelectTrad.textCancel
        VB: Traductionscript.BoatSelectTrad.textCancel
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: textCancel
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\BoatSelectTrad.cs
        startLine: 29
      syntax:
        content:
          CSharp: public TextMeshProUGUI textCancel
          VB: Public textCancel As TextMeshProUGUI
        return:
          type: TMPro.TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Traductionscript.BoatSelectTrad.dictionary
      commentId: F:Traductionscript.BoatSelectTrad.dictionary
      language: CSharp
      name:
        CSharp: dictionary
        VB: dictionary
      nameWithType:
        CSharp: BoatSelectTrad.dictionary
        VB: BoatSelectTrad.dictionary
      qualifiedName:
        CSharp: Traductionscript.BoatSelectTrad.dictionary
        VB: Traductionscript.BoatSelectTrad.dictionary
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Traductionscript
      source:
        id: dictionary
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\TraductionScript\BoatSelectTrad.cs
        startLine: 33
      syntax:
        content:
          CSharp: public TextAsset dictionary
          VB: Public dictionary As TextAsset
        return:
          type: UnityEngine.TextAsset
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: PRace
  commentId: N:PRace
  language: CSharp
  name:
    CSharp: PRace
    VB: PRace
  nameWithType:
    CSharp: PRace
    VB: PRace
  qualifiedName:
    CSharp: PRace
    VB: PRace
  type: Namespace
  assemblies:
  - Assembly-CSharp
  modifiers: {}
  items:
  - id: PRace.Time
    commentId: T:PRace.Time
    language: CSharp
    name:
      CSharp: Time
      VB: Time
    nameWithType:
      CSharp: Time
      VB: Time
    qualifiedName:
      CSharp: PRace.Time
      VB: PRace.Time
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: PRace
    source:
      id: Time
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Time.cs
      startLine: 11
    summary: "\nThis class contains the compression factor and the tick duration of the simulation\n"
    example: []
    syntax:
      content:
        CSharp: public class Time
        VB: Public Class Time
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PRace.Time.GetAccFactorValue
      commentId: M:PRace.Time.GetAccFactorValue
      language: CSharp
      name:
        CSharp: GetAccFactorValue()
        VB: GetAccFactorValue()
      nameWithType:
        CSharp: Time.GetAccFactorValue()
        VB: Time.GetAccFactorValue()
      qualifiedName:
        CSharp: PRace.Time.GetAccFactorValue()
        VB: PRace.Time.GetAccFactorValue()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: GetAccFactorValue
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Time.cs
        startLine: 17
      syntax:
        content:
          CSharp: public float GetAccFactorValue()
          VB: Public Function GetAccFactorValue As Single
        return:
          type: System.Single
      overload: PRace.Time.GetAccFactorValue*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Time.SetAccFactor(System.Single)
      commentId: M:PRace.Time.SetAccFactor(System.Single)
      language: CSharp
      name:
        CSharp: SetAccFactor(Single)
        VB: SetAccFactor(Single)
      nameWithType:
        CSharp: Time.SetAccFactor(Single)
        VB: Time.SetAccFactor(Single)
      qualifiedName:
        CSharp: PRace.Time.SetAccFactor(System.Single)
        VB: PRace.Time.SetAccFactor(System.Single)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: SetAccFactor
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Time.cs
        startLine: 22
      syntax:
        content:
          CSharp: public void SetAccFactor(float factor)
          VB: Public Sub SetAccFactor(factor As Single)
        parameters:
        - id: factor
          type: System.Single
      overload: PRace.Time.SetAccFactor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Time.GetTickValue
      commentId: M:PRace.Time.GetTickValue
      language: CSharp
      name:
        CSharp: GetTickValue()
        VB: GetTickValue()
      nameWithType:
        CSharp: Time.GetTickValue()
        VB: Time.GetTickValue()
      qualifiedName:
        CSharp: PRace.Time.GetTickValue()
        VB: PRace.Time.GetTickValue()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: GetTickValue
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Time.cs
        startLine: 27
      syntax:
        content:
          CSharp: public float GetTickValue()
          VB: Public Function GetTickValue As Single
        return:
          type: System.Single
      overload: PRace.Time.GetTickValue*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Time.SetTick(System.Int32)
      commentId: M:PRace.Time.SetTick(System.Int32)
      language: CSharp
      name:
        CSharp: SetTick(Int32)
        VB: SetTick(Int32)
      nameWithType:
        CSharp: Time.SetTick(Int32)
        VB: Time.SetTick(Int32)
      qualifiedName:
        CSharp: PRace.Time.SetTick(System.Int32)
        VB: PRace.Time.SetTick(System.Int32)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: SetTick
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Time.cs
        startLine: 32
      syntax:
        content:
          CSharp: public void SetTick(int factor)
          VB: Public Sub SetTick(factor As Integer)
        parameters:
        - id: factor
          type: System.Int32
      overload: PRace.Time.SetTick*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: PRace.Polaire
    commentId: T:PRace.Polaire
    language: CSharp
    name:
      CSharp: Polaire
      VB: Polaire
    nameWithType:
      CSharp: Polaire
      VB: Polaire
    qualifiedName:
      CSharp: PRace.Polaire
      VB: PRace.Polaire
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: PRace
    source:
      id: Polaire
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Polaire.cs
      startLine: 11
    summary: "\nThis class repesent a polar\n"
    example: []
    syntax:
      content:
        CSharp: public class Polaire
        VB: Public Class Polaire
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PRace.Polaire.#ctor(System.String,System.Collections.Generic.Dictionary{System.Single,System.Collections.Generic.Dictionary{System.Single,System.Single}},System.String)
      commentId: M:PRace.Polaire.#ctor(System.String,System.Collections.Generic.Dictionary{System.Single,System.Collections.Generic.Dictionary{System.Single,System.Single}},System.String)
      language: CSharp
      name:
        CSharp: Polaire(String, Dictionary<Single, Dictionary<Single, Single>>, String)
        VB: Polaire(String, Dictionary(Of Single, Dictionary(Of Single, Single)), String)
      nameWithType:
        CSharp: Polaire.Polaire(String, Dictionary<Single, Dictionary<Single, Single>>, String)
        VB: Polaire.Polaire(String, Dictionary(Of Single, Dictionary(Of Single, Single)), String)
      qualifiedName:
        CSharp: PRace.Polaire.Polaire(System.String, System.Collections.Generic.Dictionary<System.Single, System.Collections.Generic.Dictionary<System.Single, System.Single>>, System.String)
        VB: PRace.Polaire.Polaire(System.String, System.Collections.Generic.Dictionary(Of System.Single, System.Collections.Generic.Dictionary(Of System.Single, System.Single)), System.String)
      type: Constructor
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: .ctor
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Polaire.cs
        startLine: 19
      summary: "\nCreate an Polaire instance\n"
      example: []
      syntax:
        content:
          CSharp: public Polaire(string name, Dictionary<float, Dictionary<float, float>> pol, string path)
          VB: Public Sub New(name As String, pol As Dictionary(Of Single, Dictionary(Of Single, Single)), path As String)
        parameters:
        - id: name
          type: System.String
          description: used to set the attribut &apos;name&apos;
        - id: pol
          type: System.Collections.Generic.Dictionary{System.Single,System.Collections.Generic.Dictionary{System.Single,System.Single}}
          description: 'used to set the attribut &apos;pol&apos; '
        - id: path
          type: System.String
          description: useed to set the attribut &apos;path&apos;
      overload: PRace.Polaire.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Polaire.GetNearest(System.Single[],System.Single)
      commentId: M:PRace.Polaire.GetNearest(System.Single[],System.Single)
      language: CSharp
      name:
        CSharp: GetNearest(Single[], Single)
        VB: GetNearest(Single(), Single)
      nameWithType:
        CSharp: Polaire.GetNearest(Single[], Single)
        VB: Polaire.GetNearest(Single(), Single)
      qualifiedName:
        CSharp: PRace.Polaire.GetNearest(System.Single[], System.Single)
        VB: PRace.Polaire.GetNearest(System.Single(), System.Single)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: GetNearest
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Polaire.cs
        startLine: 39
      summary: "\nSearch the value closest to val in the table\n"
      example: []
      syntax:
        content:
          CSharp: public float GetNearest(float[] tab, float val)
          VB: Public Function GetNearest(tab As Single(), val As Single) As Single
        parameters:
        - id: tab
          type: System.Single[]
          description: table to search in
        - id: val
          type: System.Single
          description: value to approach
        return:
          type: System.Single
          description: return the value closest to val in the table
      overload: PRace.Polaire.GetNearest*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Polaire.getSpeed(System.Single,System.Single)
      commentId: M:PRace.Polaire.getSpeed(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: getSpeed(Single, Single)
        VB: getSpeed(Single, Single)
      nameWithType:
        CSharp: Polaire.getSpeed(Single, Single)
        VB: Polaire.getSpeed(Single, Single)
      qualifiedName:
        CSharp: PRace.Polaire.getSpeed(System.Single, System.Single)
        VB: PRace.Polaire.getSpeed(System.Single, System.Single)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: getSpeed
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Polaire.cs
        startLine: 72
      summary: "\nSearch the speed induced by an wind speed and angle. Search the closest value to angle and then WindSpeed in the attribut &apos;polar&apos; (Dictionary(float, Dictionary(float,float))).\n"
      example: []
      syntax:
        content:
          CSharp: public float getSpeed(float angle, float WindSpeed)
          VB: Public Function getSpeed(angle As Single, WindSpeed As Single) As Single
        parameters:
        - id: angle
          type: System.Single
          description: ''
        - id: WindSpeed
          type: System.Single
          description: ''
        return:
          type: System.Single
          description: return the speed induce by an wind speed and angle
      overload: PRace.Polaire.getSpeed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Polaire.setName(System.String)
      commentId: M:PRace.Polaire.setName(System.String)
      language: CSharp
      name:
        CSharp: setName(String)
        VB: setName(String)
      nameWithType:
        CSharp: Polaire.setName(String)
        VB: Polaire.setName(String)
      qualifiedName:
        CSharp: PRace.Polaire.setName(System.String)
        VB: PRace.Polaire.setName(System.String)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: setName
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Polaire.cs
        startLine: 103
      syntax:
        content:
          CSharp: public void setName(string name)
          VB: Public Sub setName(name As String)
        parameters:
        - id: name
          type: System.String
      overload: PRace.Polaire.setName*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Polaire.getName
      commentId: M:PRace.Polaire.getName
      language: CSharp
      name:
        CSharp: getName()
        VB: getName()
      nameWithType:
        CSharp: Polaire.getName()
        VB: Polaire.getName()
      qualifiedName:
        CSharp: PRace.Polaire.getName()
        VB: PRace.Polaire.getName()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: getName
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Polaire.cs
        startLine: 108
      syntax:
        content:
          CSharp: public string getName()
          VB: Public Function getName As String
        return:
          type: System.String
      overload: PRace.Polaire.getName*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Polaire.setPath(System.String)
      commentId: M:PRace.Polaire.setPath(System.String)
      language: CSharp
      name:
        CSharp: setPath(String)
        VB: setPath(String)
      nameWithType:
        CSharp: Polaire.setPath(String)
        VB: Polaire.setPath(String)
      qualifiedName:
        CSharp: PRace.Polaire.setPath(System.String)
        VB: PRace.Polaire.setPath(System.String)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: setPath
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Polaire.cs
        startLine: 113
      syntax:
        content:
          CSharp: public void setPath(string path)
          VB: Public Sub setPath(path As String)
        parameters:
        - id: path
          type: System.String
      overload: PRace.Polaire.setPath*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Polaire.getPath
      commentId: M:PRace.Polaire.getPath
      language: CSharp
      name:
        CSharp: getPath()
        VB: getPath()
      nameWithType:
        CSharp: Polaire.getPath()
        VB: Polaire.getPath()
      qualifiedName:
        CSharp: PRace.Polaire.getPath()
        VB: PRace.Polaire.getPath()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: getPath
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Polaire.cs
        startLine: 118
      syntax:
        content:
          CSharp: public string getPath()
          VB: Public Function getPath As String
        return:
          type: System.String
      overload: PRace.Polaire.getPath*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: PRace.ModeCommande
    commentId: T:PRace.ModeCommande
    language: CSharp
    name:
      CSharp: ModeCommande
      VB: ModeCommande
    nameWithType:
      CSharp: ModeCommande
      VB: ModeCommande
    qualifiedName:
      CSharp: PRace.ModeCommande
      VB: PRace.ModeCommande
    type: Enum
    assemblies:
    - Assembly-CSharp
    namespace: PRace
    source:
      id: ModeCommande
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\ModeCommande.cs
      startLine: 5
    summary: "\nEnunerate commande mode available\n"
    example: []
    syntax:
      content:
        CSharp: public enum ModeCommande
        VB: Public Enum ModeCommande
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: PRace.ModeCommande.cap
      commentId: F:PRace.ModeCommande.cap
      language: CSharp
      name:
        CSharp: cap
        VB: cap
      nameWithType:
        CSharp: ModeCommande.cap
        VB: ModeCommande.cap
      qualifiedName:
        CSharp: PRace.ModeCommande.cap
        VB: PRace.ModeCommande.cap
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: cap
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\ModeCommande.cs
        startLine: 6
      syntax:
        content:
          CSharp: cap = 0
          VB: cap = 0
        return:
          type: PRace.ModeCommande
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PRace.ModeCommande.RegulateurAmure
      commentId: F:PRace.ModeCommande.RegulateurAmure
      language: CSharp
      name:
        CSharp: RegulateurAmure
        VB: RegulateurAmure
      nameWithType:
        CSharp: ModeCommande.RegulateurAmure
        VB: ModeCommande.RegulateurAmure
      qualifiedName:
        CSharp: PRace.ModeCommande.RegulateurAmure
        VB: PRace.ModeCommande.RegulateurAmure
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: RegulateurAmure
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\ModeCommande.cs
        startLine: 7
      syntax:
        content:
          CSharp: RegulateurAmure = 1
          VB: RegulateurAmure = 1
        return:
          type: PRace.ModeCommande
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: PRace.Competitor
    commentId: T:PRace.Competitor
    language: CSharp
    name:
      CSharp: Competitor
      VB: Competitor
    nameWithType:
      CSharp: Competitor
      VB: Competitor
    qualifiedName:
      CSharp: PRace.Competitor
      VB: PRace.Competitor
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: PRace
    source:
      id: Competitor
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Competitor.cs
      startLine: 7
    syntax:
      content:
        CSharp: public class Competitor
        VB: Public Class Competitor
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PRace.Competitor.#ctor(System.Int32)
      commentId: M:PRace.Competitor.#ctor(System.Int32)
      language: CSharp
      name:
        CSharp: Competitor(Int32)
        VB: Competitor(Int32)
      nameWithType:
        CSharp: Competitor.Competitor(Int32)
        VB: Competitor.Competitor(Int32)
      qualifiedName:
        CSharp: PRace.Competitor.Competitor(System.Int32)
        VB: PRace.Competitor.Competitor(System.Int32)
      type: Constructor
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: .ctor
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Competitor.cs
        startLine: 9
      syntax:
        content:
          CSharp: public Competitor(int id)
          VB: Public Sub New(id As Integer)
        parameters:
        - id: id
          type: System.Int32
      overload: PRace.Competitor.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Competitor.#ctor(System.Int32,PRace.Position)
      commentId: M:PRace.Competitor.#ctor(System.Int32,PRace.Position)
      language: CSharp
      name:
        CSharp: Competitor(Int32, Position)
        VB: Competitor(Int32, Position)
      nameWithType:
        CSharp: Competitor.Competitor(Int32, Position)
        VB: Competitor.Competitor(Int32, Position)
      qualifiedName:
        CSharp: PRace.Competitor.Competitor(System.Int32, PRace.Position)
        VB: PRace.Competitor.Competitor(System.Int32, PRace.Position)
      type: Constructor
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: .ctor
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Competitor.cs
        startLine: 14
      syntax:
        content:
          CSharp: public Competitor(int id, Position position)
          VB: Public Sub New(id As Integer, position As Position)
        parameters:
        - id: id
          type: System.Int32
        - id: position
          type: PRace.Position
      overload: PRace.Competitor.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Competitor.SetPosition(PRace.Position)
      commentId: M:PRace.Competitor.SetPosition(PRace.Position)
      language: CSharp
      name:
        CSharp: SetPosition(Position)
        VB: SetPosition(Position)
      nameWithType:
        CSharp: Competitor.SetPosition(Position)
        VB: Competitor.SetPosition(Position)
      qualifiedName:
        CSharp: PRace.Competitor.SetPosition(PRace.Position)
        VB: PRace.Competitor.SetPosition(PRace.Position)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: SetPosition
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Competitor.cs
        startLine: 24
      syntax:
        content:
          CSharp: public void SetPosition(Position pos)
          VB: Public Sub SetPosition(pos As Position)
        parameters:
        - id: pos
          type: PRace.Position
      overload: PRace.Competitor.SetPosition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Competitor.GetPosition
      commentId: M:PRace.Competitor.GetPosition
      language: CSharp
      name:
        CSharp: GetPosition()
        VB: GetPosition()
      nameWithType:
        CSharp: Competitor.GetPosition()
        VB: Competitor.GetPosition()
      qualifiedName:
        CSharp: PRace.Competitor.GetPosition()
        VB: PRace.Competitor.GetPosition()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: GetPosition
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Competitor.cs
        startLine: 28
      syntax:
        content:
          CSharp: public Position GetPosition()
          VB: Public Function GetPosition As Position
        return:
          type: PRace.Position
      overload: PRace.Competitor.GetPosition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Competitor.GetId
      commentId: M:PRace.Competitor.GetId
      language: CSharp
      name:
        CSharp: GetId()
        VB: GetId()
      nameWithType:
        CSharp: Competitor.GetId()
        VB: Competitor.GetId()
      qualifiedName:
        CSharp: PRace.Competitor.GetId()
        VB: PRace.Competitor.GetId()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: GetId
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Competitor.cs
        startLine: 33
      syntax:
        content:
          CSharp: public int GetId()
          VB: Public Function GetId As Integer
        return:
          type: System.Int32
      overload: PRace.Competitor.GetId*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: PRace.Position
    commentId: T:PRace.Position
    language: CSharp
    name:
      CSharp: Position
      VB: Position
    nameWithType:
      CSharp: Position
      VB: Position
    qualifiedName:
      CSharp: PRace.Position
      VB: PRace.Position
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: PRace
    source:
      id: Position
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Position.cs
      startLine: 12
    summary: "\nThis class represent a position on the globe using latitude and longitude\n"
    example: []
    syntax:
      content:
        CSharp: public class Position
        VB: Public Class Position
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PRace.Position.#ctor(System.Double,System.Double)
      commentId: M:PRace.Position.#ctor(System.Double,System.Double)
      language: CSharp
      name:
        CSharp: Position(Double, Double)
        VB: Position(Double, Double)
      nameWithType:
        CSharp: Position.Position(Double, Double)
        VB: Position.Position(Double, Double)
      qualifiedName:
        CSharp: PRace.Position.Position(System.Double, System.Double)
        VB: PRace.Position.Position(System.Double, System.Double)
      type: Constructor
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: .ctor
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Position.cs
        startLine: 19
      summary: "\ncreate an instance of Position\n"
      example: []
      syntax:
        content:
          CSharp: public Position(double longitude, double latitude)
          VB: Public Sub New(longitude As Double, latitude As Double)
        parameters:
        - id: longitude
          type: System.Double
          description: the longitude in radiant
        - id: latitude
          type: System.Double
          description: the latitude in radiant
      overload: PRace.Position.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Position.Update(System.Double,System.Double)
      commentId: M:PRace.Position.Update(System.Double,System.Double)
      language: CSharp
      name:
        CSharp: Update(Double, Double)
        VB: Update(Double, Double)
      nameWithType:
        CSharp: Position.Update(Double, Double)
        VB: Position.Update(Double, Double)
      qualifiedName:
        CSharp: PRace.Position.Update(System.Double, System.Double)
        VB: PRace.Position.Update(System.Double, System.Double)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: Update
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Position.cs
        startLine: 55
      summary: "\nUpdate the &apos;longitude&apos; and &apos;latitude&apos; attributs\n"
      example: []
      syntax:
        content:
          CSharp: public void Update(double longitude, double latitude)
          VB: Public Sub Update(longitude As Double, latitude As Double)
        parameters:
        - id: longitude
          type: System.Double
          description: the longitude in radiant
        - id: latitude
          type: System.Double
          description: the latitude in radiant
      overload: PRace.Position.Update*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Position.GetCoordLat
      commentId: M:PRace.Position.GetCoordLat
      language: CSharp
      name:
        CSharp: GetCoordLat()
        VB: GetCoordLat()
      nameWithType:
        CSharp: Position.GetCoordLat()
        VB: Position.GetCoordLat()
      qualifiedName:
        CSharp: PRace.Position.GetCoordLat()
        VB: PRace.Position.GetCoordLat()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: GetCoordLat
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Position.cs
        startLine: 64
      summary: "\nCreate a <xref href=\"PRace.Position.Coords\" data-throw-if-not-resolved=\"false\"></xref> corresponding to the latitude attribut\n"
      example: []
      syntax:
        content:
          CSharp: public Position.Coords GetCoordLat()
          VB: Public Function GetCoordLat As Position.Coords
        return:
          type: PRace.Position.Coords
          description: return a <xref href="PRace.Position.Coords" data-throw-if-not-resolved="false"></xref> corresponding to the latitude attribut
      overload: PRace.Position.GetCoordLat*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        PRace.Position.Coords: 
    - id: PRace.Position.GetCoordLong
      commentId: M:PRace.Position.GetCoordLong
      language: CSharp
      name:
        CSharp: GetCoordLong()
        VB: GetCoordLong()
      nameWithType:
        CSharp: Position.GetCoordLong()
        VB: Position.GetCoordLong()
      qualifiedName:
        CSharp: PRace.Position.GetCoordLong()
        VB: PRace.Position.GetCoordLong()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: GetCoordLong
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Position.cs
        startLine: 93
      summary: "\nCreate a <xref href=\"PRace.Position.Coords\" data-throw-if-not-resolved=\"false\"></xref> corresponding to the longitude attribut\n"
      example: []
      syntax:
        content:
          CSharp: public Position.Coords GetCoordLong()
          VB: Public Function GetCoordLong As Position.Coords
        return:
          type: PRace.Position.Coords
          description: return a <xref href="PRace.Position.Coords" data-throw-if-not-resolved="false"></xref> corresponding to the longitude attribut
      overload: PRace.Position.GetCoordLong*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        PRace.Position.Coords: 
    - id: PRace.Position.GetLongitude
      commentId: M:PRace.Position.GetLongitude
      language: CSharp
      name:
        CSharp: GetLongitude()
        VB: GetLongitude()
      nameWithType:
        CSharp: Position.GetLongitude()
        VB: Position.GetLongitude()
      qualifiedName:
        CSharp: PRace.Position.GetLongitude()
        VB: PRace.Position.GetLongitude()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: GetLongitude
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Position.cs
        startLine: 123
      summary: "\nreturn the value of the longitude in radiant\n"
      example: []
      syntax:
        content:
          CSharp: public double GetLongitude()
          VB: Public Function GetLongitude As Double
        return:
          type: System.Double
          description: return the value of the longitude in radiant
      overload: PRace.Position.GetLongitude*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Position.GetLatitude
      commentId: M:PRace.Position.GetLatitude
      language: CSharp
      name:
        CSharp: GetLatitude()
        VB: GetLatitude()
      nameWithType:
        CSharp: Position.GetLatitude()
        VB: Position.GetLatitude()
      qualifiedName:
        CSharp: PRace.Position.GetLatitude()
        VB: PRace.Position.GetLatitude()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: GetLatitude
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Position.cs
        startLine: 132
      summary: "\nreturn the value of the latitude in radiant\n"
      example: []
      syntax:
        content:
          CSharp: public double GetLatitude()
          VB: Public Function GetLatitude As Double
        return:
          type: System.Double
          description: return the value of the latitude in radiant
      overload: PRace.Position.GetLatitude*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Position.GetLatitudeAngle
      commentId: M:PRace.Position.GetLatitudeAngle
      language: CSharp
      name:
        CSharp: GetLatitudeAngle()
        VB: GetLatitudeAngle()
      nameWithType:
        CSharp: Position.GetLatitudeAngle()
        VB: Position.GetLatitudeAngle()
      qualifiedName:
        CSharp: PRace.Position.GetLatitudeAngle()
        VB: PRace.Position.GetLatitudeAngle()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: GetLatitudeAngle
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Position.cs
        startLine: 141
      summary: "\nreturn the value of the longitude in degre\n"
      example: []
      syntax:
        content:
          CSharp: public double GetLatitudeAngle()
          VB: Public Function GetLatitudeAngle As Double
        return:
          type: System.Double
          description: return the value of the longitude in degre
      overload: PRace.Position.GetLatitudeAngle*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Position.GetLongitudeAngle
      commentId: M:PRace.Position.GetLongitudeAngle
      language: CSharp
      name:
        CSharp: GetLongitudeAngle()
        VB: GetLongitudeAngle()
      nameWithType:
        CSharp: Position.GetLongitudeAngle()
        VB: Position.GetLongitudeAngle()
      qualifiedName:
        CSharp: PRace.Position.GetLongitudeAngle()
        VB: PRace.Position.GetLongitudeAngle()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: GetLongitudeAngle
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Position.cs
        startLine: 150
      summary: "\nreturn the value of the latitude in degre\n"
      example: []
      syntax:
        content:
          CSharp: public double GetLongitudeAngle()
          VB: Public Function GetLongitudeAngle As Double
        return:
          type: System.Double
          description: return the value of the latitude in degre
      overload: PRace.Position.GetLongitudeAngle*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Position.ToString
      commentId: M:PRace.Position.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: Position.ToString()
        VB: Position.ToString()
      qualifiedName:
        CSharp: PRace.Position.ToString()
        VB: PRace.Position.ToString()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: ToString
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Position.cs
        startLine: 155
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: PRace.Position.ToString*
      overridden: System.Object.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: PRace.Position.Equals(System.Object)
      commentId: M:PRace.Position.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: Position.Equals(Object)
        VB: Position.Equals(Object)
      qualifiedName:
        CSharp: PRace.Position.Equals(System.Object)
        VB: PRace.Position.Equals(System.Object)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: Equals
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Position.cs
        startLine: 161
      syntax:
        content:
          CSharp: public override bool Equals(object o)
          VB: Public Overrides Function Equals(o As Object) As Boolean
        parameters:
        - id: o
          type: System.Object
        return:
          type: System.Boolean
      overload: PRace.Position.Equals*
      overridden: System.Object.Equals(System.Object)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: PRace.Position.Coords
    commentId: T:PRace.Position.Coords
    language: CSharp
    name:
      CSharp: Position.Coords
      VB: Position.Coords
    nameWithType:
      CSharp: Position.Coords
      VB: Position.Coords
    qualifiedName:
      CSharp: PRace.Position.Coords
      VB: PRace.Position.Coords
    type: Struct
    assemblies:
    - Assembly-CSharp
    namespace: PRace
    source:
      id: Coords
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Position.cs
      startLine: 31
    summary: "\nstruct representing a latitude or a longitude in degre, minute, second\n"
    example: []
    syntax:
      content:
        CSharp: public struct Coords
        VB: Public Structure Coords
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: PRace.Position.Coords.#ctor(System.Char,System.Int32,System.Int32,System.Int32)
      commentId: M:PRace.Position.Coords.#ctor(System.Char,System.Int32,System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: Coords(Char, Int32, Int32, Int32)
        VB: Coords(Char, Int32, Int32, Int32)
      nameWithType:
        CSharp: Position.Coords.Coords(Char, Int32, Int32, Int32)
        VB: Position.Coords.Coords(Char, Int32, Int32, Int32)
      qualifiedName:
        CSharp: PRace.Position.Coords.Coords(System.Char, System.Int32, System.Int32, System.Int32)
        VB: PRace.Position.Coords.Coords(System.Char, System.Int32, System.Int32, System.Int32)
      type: Constructor
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: .ctor
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Position.cs
        startLine: 33
      syntax:
        content:
          CSharp: public Coords(char pos, int degre, int min, int sec)
          VB: Public Sub New(pos As Char, degre As Integer, min As Integer, sec As Integer)
        parameters:
        - id: pos
          type: System.Char
        - id: degre
          type: System.Int32
        - id: min
          type: System.Int32
        - id: sec
          type: System.Int32
      overload: PRace.Position.Coords.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Position.Coords.pos
      commentId: P:PRace.Position.Coords.pos
      language: CSharp
      name:
        CSharp: pos
        VB: pos
      nameWithType:
        CSharp: Position.Coords.pos
        VB: Position.Coords.pos
      qualifiedName:
        CSharp: PRace.Position.Coords.pos
        VB: PRace.Position.Coords.pos
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: pos
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Position.cs
        startLine: 41
      syntax:
        content:
          CSharp: public readonly char pos { get; }
          VB: Public ReadOnly Property pos As Char
        parameters: []
        return:
          type: System.Char
      overload: PRace.Position.Coords.pos*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: PRace.Position.Coords.degre
      commentId: P:PRace.Position.Coords.degre
      language: CSharp
      name:
        CSharp: degre
        VB: degre
      nameWithType:
        CSharp: Position.Coords.degre
        VB: Position.Coords.degre
      qualifiedName:
        CSharp: PRace.Position.Coords.degre
        VB: PRace.Position.Coords.degre
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: degre
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Position.cs
        startLine: 42
      syntax:
        content:
          CSharp: public readonly int degre { get; }
          VB: Public ReadOnly Property degre As Integer
        parameters: []
        return:
          type: System.Int32
      overload: PRace.Position.Coords.degre*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: PRace.Position.Coords.min
      commentId: P:PRace.Position.Coords.min
      language: CSharp
      name:
        CSharp: min
        VB: min
      nameWithType:
        CSharp: Position.Coords.min
        VB: Position.Coords.min
      qualifiedName:
        CSharp: PRace.Position.Coords.min
        VB: PRace.Position.Coords.min
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: min
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Position.cs
        startLine: 43
      syntax:
        content:
          CSharp: public readonly int min { get; }
          VB: Public ReadOnly Property min As Integer
        parameters: []
        return:
          type: System.Int32
      overload: PRace.Position.Coords.min*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: PRace.Position.Coords.sec
      commentId: P:PRace.Position.Coords.sec
      language: CSharp
      name:
        CSharp: sec
        VB: sec
      nameWithType:
        CSharp: Position.Coords.sec
        VB: Position.Coords.sec
      qualifiedName:
        CSharp: PRace.Position.Coords.sec
        VB: PRace.Position.Coords.sec
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: sec
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Position.cs
        startLine: 44
      syntax:
        content:
          CSharp: public readonly int sec { get; }
          VB: Public ReadOnly Property sec As Integer
        parameters: []
        return:
          type: System.Int32
      overload: PRace.Position.Coords.sec*
      modifiers:
        CSharp:
        - public
        - readonly
        - get
        VB:
        - Public
        - ReadOnly
    - id: PRace.Position.Coords.ToString
      commentId: M:PRace.Position.Coords.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: Position.Coords.ToString()
        VB: Position.Coords.ToString()
      qualifiedName:
        CSharp: PRace.Position.Coords.ToString()
        VB: PRace.Position.Coords.ToString()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: ToString
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Position.cs
        startLine: 46
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: PRace.Position.Coords.ToString*
      overridden: System.ValueType.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: PRace.Boat
    commentId: T:PRace.Boat
    language: CSharp
    name:
      CSharp: Boat
      VB: Boat
    nameWithType:
      CSharp: Boat
      VB: Boat
    qualifiedName:
      CSharp: PRace.Boat
      VB: PRace.Boat
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: PRace
    source:
      id: Boat
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Boat.cs
      startLine: 13
    summary: "\nThis represent a boat\n"
    example: []
    syntax:
      content:
        CSharp: public class Boat
        VB: Public Class Boat
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PRace.Boat.#ctor
      commentId: M:PRace.Boat.#ctor
      language: CSharp
      name:
        CSharp: Boat()
        VB: Boat()
      nameWithType:
        CSharp: Boat.Boat()
        VB: Boat.Boat()
      qualifiedName:
        CSharp: PRace.Boat.Boat()
        VB: PRace.Boat.Boat()
      type: Constructor
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: .ctor
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Boat.cs
        startLine: 18
      summary: "\ncreate au boat instance\n"
      example: []
      syntax:
        content:
          CSharp: public Boat()
          VB: Public Sub New
      overload: PRace.Boat.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Boat.#ctor(Communication.DataProcessing.Json.BoatType)
      commentId: M:PRace.Boat.#ctor(Communication.DataProcessing.Json.BoatType)
      language: CSharp
      name:
        CSharp: Boat(BoatType)
        VB: Boat(BoatType)
      nameWithType:
        CSharp: Boat.Boat(BoatType)
        VB: Boat.Boat(BoatType)
      qualifiedName:
        CSharp: PRace.Boat.Boat(Communication.DataProcessing.Json.BoatType)
        VB: PRace.Boat.Boat(Communication.DataProcessing.Json.BoatType)
      type: Constructor
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: .ctor
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Boat.cs
        startLine: 28
      summary: "\ncreate au boat instance based on the the input boat type\n"
      example: []
      syntax:
        content:
          CSharp: public Boat(BoatType selectedBoatType)
          VB: Public Sub New(selectedBoatType As BoatType)
        parameters:
        - id: selectedBoatType
          type: Communication.DataProcessing.Json.BoatType
          description: ''
      overload: PRace.Boat.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Boat.init(System.Int32,System.Collections.Generic.List{PRace.Polaire},PRace.Position,PRace.Race)
      commentId: M:PRace.Boat.init(System.Int32,System.Collections.Generic.List{PRace.Polaire},PRace.Position,PRace.Race)
      language: CSharp
      name:
        CSharp: init(Int32, List<Polaire>, Position, Race)
        VB: init(Int32, List(Of Polaire), Position, Race)
      nameWithType:
        CSharp: Boat.init(Int32, List<Polaire>, Position, Race)
        VB: Boat.init(Int32, List(Of Polaire), Position, Race)
      qualifiedName:
        CSharp: PRace.Boat.init(System.Int32, System.Collections.Generic.List<PRace.Polaire>, PRace.Position, PRace.Race)
        VB: PRace.Boat.init(System.Int32, System.Collections.Generic.List(Of PRace.Polaire), PRace.Position, PRace.Race)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: init
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Boat.cs
        startLine: 55
      summary: "\nInitialise the &apos;allPolaire&apos;, id and pos attribut\n"
      example: []
      syntax:
        content:
          CSharp: public void init(int id, List<Polaire> polaires, Position pos, Race race)
          VB: Public Sub init(id As Integer, polaires As List(Of Polaire), pos As Position, race As Race)
        parameters:
        - id: id
          type: System.Int32
          description: ''
        - id: polaires
          type: System.Collections.Generic.List{PRace.Polaire}
          description: ''
        - id: pos
          type: PRace.Position
          description: ''
        - id: race
          type: PRace.Race
      overload: PRace.Boat.init*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Boat.GetId
      commentId: M:PRace.Boat.GetId
      language: CSharp
      name:
        CSharp: GetId()
        VB: GetId()
      nameWithType:
        CSharp: Boat.GetId()
        VB: Boat.GetId()
      qualifiedName:
        CSharp: PRace.Boat.GetId()
        VB: PRace.Boat.GetId()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: GetId
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Boat.cs
        startLine: 64
      syntax:
        content:
          CSharp: public int GetId()
          VB: Public Function GetId As Integer
        return:
          type: System.Int32
      overload: PRace.Boat.GetId*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Boat.getCap
      commentId: M:PRace.Boat.getCap
      language: CSharp
      name:
        CSharp: getCap()
        VB: getCap()
      nameWithType:
        CSharp: Boat.getCap()
        VB: Boat.getCap()
      qualifiedName:
        CSharp: PRace.Boat.getCap()
        VB: PRace.Boat.getCap()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: getCap
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Boat.cs
        startLine: 71
      syntax:
        content:
          CSharp: public float getCap()
          VB: Public Function getCap As Single
        return:
          type: System.Single
      overload: PRace.Boat.getCap*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Boat.setCap(System.Single)
      commentId: M:PRace.Boat.setCap(System.Single)
      language: CSharp
      name:
        CSharp: setCap(Single)
        VB: setCap(Single)
      nameWithType:
        CSharp: Boat.setCap(Single)
        VB: Boat.setCap(Single)
      qualifiedName:
        CSharp: PRace.Boat.setCap(System.Single)
        VB: PRace.Boat.setCap(System.Single)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: setCap
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Boat.cs
        startLine: 80
      summary: "\nset the boat heading\n"
      example: []
      syntax:
        content:
          CSharp: public void setCap(float cap)
          VB: Public Sub setCap(cap As Single)
        parameters:
        - id: cap
          type: System.Single
          description: this value as to be in radient
      overload: PRace.Boat.setCap*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Boat.getCapRad
      commentId: M:PRace.Boat.getCapRad
      language: CSharp
      name:
        CSharp: getCapRad()
        VB: getCapRad()
      nameWithType:
        CSharp: Boat.getCapRad()
        VB: Boat.getCapRad()
      qualifiedName:
        CSharp: PRace.Boat.getCapRad()
        VB: PRace.Boat.getCapRad()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: getCapRad
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Boat.cs
        startLine: 85
      syntax:
        content:
          CSharp: public float getCapRad()
          VB: Public Function getCapRad As Single
        return:
          type: System.Single
      overload: PRace.Boat.getCapRad*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Boat.setCapRad(System.Single)
      commentId: M:PRace.Boat.setCapRad(System.Single)
      language: CSharp
      name:
        CSharp: setCapRad(Single)
        VB: setCapRad(Single)
      nameWithType:
        CSharp: Boat.setCapRad(Single)
        VB: Boat.setCapRad(Single)
      qualifiedName:
        CSharp: PRace.Boat.setCapRad(System.Single)
        VB: PRace.Boat.setCapRad(System.Single)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: setCapRad
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Boat.cs
        startLine: 90
      syntax:
        content:
          CSharp: public void setCapRad(float cap)
          VB: Public Sub setCapRad(cap As Single)
        parameters:
        - id: cap
          type: System.Single
      overload: PRace.Boat.setCapRad*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Boat.GetCapRegulateurAmure
      commentId: M:PRace.Boat.GetCapRegulateurAmure
      language: CSharp
      name:
        CSharp: GetCapRegulateurAmure()
        VB: GetCapRegulateurAmure()
      nameWithType:
        CSharp: Boat.GetCapRegulateurAmure()
        VB: Boat.GetCapRegulateurAmure()
      qualifiedName:
        CSharp: PRace.Boat.GetCapRegulateurAmure()
        VB: PRace.Boat.GetCapRegulateurAmure()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: GetCapRegulateurAmure
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Boat.cs
        startLine: 100
      summary: "\nreturn the value of the cap of the attribut &apos;regulateurAmure&apos;\n"
      example: []
      syntax:
        content:
          CSharp: public float GetCapRegulateurAmure()
          VB: Public Function GetCapRegulateurAmure As Single
        return:
          type: System.Single
          description: the angle is in randiant
      overload: PRace.Boat.GetCapRegulateurAmure*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Boat.GetPosition
      commentId: M:PRace.Boat.GetPosition
      language: CSharp
      name:
        CSharp: GetPosition()
        VB: GetPosition()
      nameWithType:
        CSharp: Boat.GetPosition()
        VB: Boat.GetPosition()
      qualifiedName:
        CSharp: PRace.Boat.GetPosition()
        VB: PRace.Boat.GetPosition()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: GetPosition
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Boat.cs
        startLine: 105
      syntax:
        content:
          CSharp: public Position GetPosition()
          VB: Public Function GetPosition As Position
        return:
          type: PRace.Position
      overload: PRace.Boat.GetPosition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Boat.SetModeCommande(PRace.ModeCommande)
      commentId: M:PRace.Boat.SetModeCommande(PRace.ModeCommande)
      language: CSharp
      name:
        CSharp: SetModeCommande(ModeCommande)
        VB: SetModeCommande(ModeCommande)
      nameWithType:
        CSharp: Boat.SetModeCommande(ModeCommande)
        VB: Boat.SetModeCommande(ModeCommande)
      qualifiedName:
        CSharp: PRace.Boat.SetModeCommande(PRace.ModeCommande)
        VB: PRace.Boat.SetModeCommande(PRace.ModeCommande)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: SetModeCommande
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Boat.cs
        startLine: 111
      syntax:
        content:
          CSharp: public void SetModeCommande(ModeCommande commande)
          VB: Public Sub SetModeCommande(commande As ModeCommande)
        parameters:
        - id: commande
          type: PRace.ModeCommande
      overload: PRace.Boat.SetModeCommande*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Boat.switchCommande
      commentId: M:PRace.Boat.switchCommande
      language: CSharp
      name:
        CSharp: switchCommande()
        VB: switchCommande()
      nameWithType:
        CSharp: Boat.switchCommande()
        VB: Boat.switchCommande()
      qualifiedName:
        CSharp: PRace.Boat.switchCommande()
        VB: PRace.Boat.switchCommande()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: switchCommande
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Boat.cs
        startLine: 127
      summary: "\nIf the attrubit commande is &apos;cap&apos; switch to &apos;RegulateurAmure&apos;.\nIf the attrubit commande is &apos;RegulateurAmure&apos; switch to &apos;cap&apos;.\n"
      example: []
      syntax:
        content:
          CSharp: public void switchCommande()
          VB: Public Sub switchCommande
      overload: PRace.Boat.switchCommande*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Boat.GetModeCommande
      commentId: M:PRace.Boat.GetModeCommande
      language: CSharp
      name:
        CSharp: GetModeCommande()
        VB: GetModeCommande()
      nameWithType:
        CSharp: Boat.GetModeCommande()
        VB: Boat.GetModeCommande()
      qualifiedName:
        CSharp: PRace.Boat.GetModeCommande()
        VB: PRace.Boat.GetModeCommande()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: GetModeCommande
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Boat.cs
        startLine: 146
      syntax:
        content:
          CSharp: public ModeCommande GetModeCommande()
          VB: Public Function GetModeCommande As ModeCommande
        return:
          type: PRace.ModeCommande
      overload: PRace.Boat.GetModeCommande*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Boat.UpdateCap(Environement.Environment)
      commentId: M:PRace.Boat.UpdateCap(Environement.Environment)
      language: CSharp
      name:
        CSharp: UpdateCap(Environment)
        VB: UpdateCap(Environment)
      nameWithType:
        CSharp: Boat.UpdateCap(Environment)
        VB: Boat.UpdateCap(Environment)
      qualifiedName:
        CSharp: PRace.Boat.UpdateCap(Environement.Environment)
        VB: PRace.Boat.UpdateCap(Environement.Environment)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: UpdateCap
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Boat.cs
        startLine: 156
      summary: "\nIf the attrubit commande is &apos;RegulateurAmure&apos; change the heading of the boat (attribut cap)\nto keep the windward course set in regulateurAmure\n"
      example: []
      syntax:
        content:
          CSharp: public void UpdateCap(Environment env)
          VB: Public Sub UpdateCap(env As Environment)
        parameters:
        - id: env
          type: Environement.Environment
          description: ''
      overload: PRace.Boat.UpdateCap*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Boat.setPosition(PRace.Position)
      commentId: M:PRace.Boat.setPosition(PRace.Position)
      language: CSharp
      name:
        CSharp: setPosition(Position)
        VB: setPosition(Position)
      nameWithType:
        CSharp: Boat.setPosition(Position)
        VB: Boat.setPosition(Position)
      qualifiedName:
        CSharp: PRace.Boat.setPosition(PRace.Position)
        VB: PRace.Boat.setPosition(PRace.Position)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: setPosition
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Boat.cs
        startLine: 170
      syntax:
        content:
          CSharp: public void setPosition(Position pos)
          VB: Public Sub setPosition(pos As Position)
        parameters:
        - id: pos
          type: PRace.Position
      overload: PRace.Boat.setPosition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Boat.SetAvailablePolaire(System.Collections.Generic.List{PRace.Polaire})
      commentId: M:PRace.Boat.SetAvailablePolaire(System.Collections.Generic.List{PRace.Polaire})
      language: CSharp
      name:
        CSharp: SetAvailablePolaire(List<Polaire>)
        VB: SetAvailablePolaire(List(Of Polaire))
      nameWithType:
        CSharp: Boat.SetAvailablePolaire(List<Polaire>)
        VB: Boat.SetAvailablePolaire(List(Of Polaire))
      qualifiedName:
        CSharp: PRace.Boat.SetAvailablePolaire(System.Collections.Generic.List<PRace.Polaire>)
        VB: PRace.Boat.SetAvailablePolaire(System.Collections.Generic.List(Of PRace.Polaire))
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: SetAvailablePolaire
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Boat.cs
        startLine: 180
      summary: "\nset &apos;allPolaire&apos; attribut\n"
      example: []
      syntax:
        content:
          CSharp: public void SetAvailablePolaire(List<Polaire> listPolaire)
          VB: Public Sub SetAvailablePolaire(listPolaire As List(Of Polaire))
        parameters:
        - id: listPolaire
          type: System.Collections.Generic.List{PRace.Polaire}
          description: ''
      overload: PRace.Boat.SetAvailablePolaire*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Boat.getAvailablePolaire
      commentId: M:PRace.Boat.getAvailablePolaire
      language: CSharp
      name:
        CSharp: getAvailablePolaire()
        VB: getAvailablePolaire()
      nameWithType:
        CSharp: Boat.getAvailablePolaire()
        VB: Boat.getAvailablePolaire()
      qualifiedName:
        CSharp: PRace.Boat.getAvailablePolaire()
        VB: PRace.Boat.getAvailablePolaire()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: getAvailablePolaire
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Boat.cs
        startLine: 189
      summary: "\ngetter for &apos;allPolaire&apos; attribut\n"
      example: []
      syntax:
        content:
          CSharp: public List<Polaire> getAvailablePolaire()
          VB: Public Function getAvailablePolaire As List(Of Polaire)
        return:
          type: System.Collections.Generic.List{PRace.Polaire}
          description: ''
      overload: PRace.Boat.getAvailablePolaire*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Boat.IncrementCap(PRace.ModeCommande,PRace.DegreeIncrement)
      commentId: M:PRace.Boat.IncrementCap(PRace.ModeCommande,PRace.DegreeIncrement)
      language: CSharp
      name:
        CSharp: IncrementCap(ModeCommande, DegreeIncrement)
        VB: IncrementCap(ModeCommande, DegreeIncrement)
      nameWithType:
        CSharp: Boat.IncrementCap(ModeCommande, DegreeIncrement)
        VB: Boat.IncrementCap(ModeCommande, DegreeIncrement)
      qualifiedName:
        CSharp: PRace.Boat.IncrementCap(PRace.ModeCommande, PRace.DegreeIncrement)
        VB: PRace.Boat.IncrementCap(PRace.ModeCommande, PRace.DegreeIncrement)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: IncrementCap
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Boat.cs
        startLine: 199
      summary: "\nIncrement the cap of the active mode (&apos;commande&apos; attribut)\n"
      example: []
      syntax:
        content:
          CSharp: public void IncrementCap(ModeCommande commande, DegreeIncrement degre)
          VB: Public Sub IncrementCap(commande As ModeCommande, degre As DegreeIncrement)
        parameters:
        - id: commande
          type: PRace.ModeCommande
          description: ''
        - id: degre
          type: PRace.DegreeIncrement
          description: ''
      overload: PRace.Boat.IncrementCap*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Boat.SetCurrentPolaire(System.String)
      commentId: M:PRace.Boat.SetCurrentPolaire(System.String)
      language: CSharp
      name:
        CSharp: SetCurrentPolaire(String)
        VB: SetCurrentPolaire(String)
      nameWithType:
        CSharp: Boat.SetCurrentPolaire(String)
        VB: Boat.SetCurrentPolaire(String)
      qualifiedName:
        CSharp: PRace.Boat.SetCurrentPolaire(System.String)
        VB: PRace.Boat.SetCurrentPolaire(System.String)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: SetCurrentPolaire
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Boat.cs
        startLine: 219
      summary: "\nIf a polar with the attribut name corresponding to the input name exist in the attribut &apos;allPolaire&apos;,\nset it as the current polar (&apos;currentPolaire&apos; attribut)\n"
      example: []
      syntax:
        content:
          CSharp: public void SetCurrentPolaire(string name)
          VB: Public Sub SetCurrentPolaire(name As String)
        parameters:
        - id: name
          type: System.String
          description: ''
      overload: PRace.Boat.SetCurrentPolaire*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Boat.GetCurrentPolaire
      commentId: M:PRace.Boat.GetCurrentPolaire
      language: CSharp
      name:
        CSharp: GetCurrentPolaire()
        VB: GetCurrentPolaire()
      nameWithType:
        CSharp: Boat.GetCurrentPolaire()
        VB: Boat.GetCurrentPolaire()
      qualifiedName:
        CSharp: PRace.Boat.GetCurrentPolaire()
        VB: PRace.Boat.GetCurrentPolaire()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: GetCurrentPolaire
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Boat.cs
        startLine: 231
      syntax:
        content:
          CSharp: public Polaire GetCurrentPolaire()
          VB: Public Function GetCurrentPolaire As Polaire
        return:
          type: PRace.Polaire
      overload: PRace.Boat.GetCurrentPolaire*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Boat.GetAllureCap
      commentId: M:PRace.Boat.GetAllureCap
      language: CSharp
      name:
        CSharp: GetAllureCap()
        VB: GetAllureCap()
      nameWithType:
        CSharp: Boat.GetAllureCap()
        VB: Boat.GetAllureCap()
      qualifiedName:
        CSharp: PRace.Boat.GetAllureCap()
        VB: PRace.Boat.GetAllureCap()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: GetAllureCap
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Boat.cs
        startLine: 236
      syntax:
        content:
          CSharp: public float GetAllureCap()
          VB: Public Function GetAllureCap As Single
        return:
          type: System.Single
      overload: PRace.Boat.GetAllureCap*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Boat.setNullCurrentPolar
      commentId: M:PRace.Boat.setNullCurrentPolar
      language: CSharp
      name:
        CSharp: setNullCurrentPolar()
        VB: setNullCurrentPolar()
      nameWithType:
        CSharp: Boat.setNullCurrentPolar()
        VB: Boat.setNullCurrentPolar()
      qualifiedName:
        CSharp: PRace.Boat.setNullCurrentPolar()
        VB: PRace.Boat.setNullCurrentPolar()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: setNullCurrentPolar
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Boat.cs
        startLine: 244
      summary: "\nSet the attribut &apos;currentPolaire&apos; to null\n"
      example: []
      syntax:
        content:
          CSharp: public void setNullCurrentPolar()
          VB: Public Sub setNullCurrentPolar
      overload: PRace.Boat.setNullCurrentPolar*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: PRace.WayPoint
    commentId: T:PRace.WayPoint
    language: CSharp
    name:
      CSharp: WayPoint
      VB: WayPoint
    nameWithType:
      CSharp: WayPoint
      VB: WayPoint
    qualifiedName:
      CSharp: PRace.WayPoint
      VB: PRace.WayPoint
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: PRace
    source:
      id: WayPoint
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\WayPoint.cs
      startLine: 11
    summary: "\nThis class represents a waypoint of the course\n"
    example: []
    syntax:
      content:
        CSharp: public class WayPoint
        VB: Public Class WayPoint
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PRace.WayPoint.#ctor(System.Int32,System.String,PRace.Position)
      commentId: M:PRace.WayPoint.#ctor(System.Int32,System.String,PRace.Position)
      language: CSharp
      name:
        CSharp: WayPoint(Int32, String, Position)
        VB: WayPoint(Int32, String, Position)
      nameWithType:
        CSharp: WayPoint.WayPoint(Int32, String, Position)
        VB: WayPoint.WayPoint(Int32, String, Position)
      qualifiedName:
        CSharp: PRace.WayPoint.WayPoint(System.Int32, System.String, PRace.Position)
        VB: PRace.WayPoint.WayPoint(System.Int32, System.String, PRace.Position)
      type: Constructor
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: .ctor
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\WayPoint.cs
        startLine: 13
      syntax:
        content:
          CSharp: public WayPoint(int id, string nom, Position position)
          VB: Public Sub New(id As Integer, nom As String, position As Position)
        parameters:
        - id: id
          type: System.Int32
        - id: nom
          type: System.String
        - id: position
          type: PRace.Position
      overload: PRace.WayPoint.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.WayPoint.#ctor(System.Int32,System.String,System.Single,System.Single)
      commentId: M:PRace.WayPoint.#ctor(System.Int32,System.String,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: WayPoint(Int32, String, Single, Single)
        VB: WayPoint(Int32, String, Single, Single)
      nameWithType:
        CSharp: WayPoint.WayPoint(Int32, String, Single, Single)
        VB: WayPoint.WayPoint(Int32, String, Single, Single)
      qualifiedName:
        CSharp: PRace.WayPoint.WayPoint(System.Int32, System.String, System.Single, System.Single)
        VB: PRace.WayPoint.WayPoint(System.Int32, System.String, System.Single, System.Single)
      type: Constructor
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: .ctor
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\WayPoint.cs
        startLine: 19
      syntax:
        content:
          CSharp: public WayPoint(int id, string nom, float longitude, float latitude)
          VB: Public Sub New(id As Integer, nom As String, longitude As Single, latitude As Single)
        parameters:
        - id: id
          type: System.Int32
        - id: nom
          type: System.String
        - id: longitude
          type: System.Single
        - id: latitude
          type: System.Single
      overload: PRace.WayPoint.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.WayPoint.GetId
      commentId: M:PRace.WayPoint.GetId
      language: CSharp
      name:
        CSharp: GetId()
        VB: GetId()
      nameWithType:
        CSharp: WayPoint.GetId()
        VB: WayPoint.GetId()
      qualifiedName:
        CSharp: PRace.WayPoint.GetId()
        VB: PRace.WayPoint.GetId()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: GetId
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\WayPoint.cs
        startLine: 32
      syntax:
        content:
          CSharp: public int GetId()
          VB: Public Function GetId As Integer
        return:
          type: System.Int32
      overload: PRace.WayPoint.GetId*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.WayPoint.Getnom
      commentId: M:PRace.WayPoint.Getnom
      language: CSharp
      name:
        CSharp: Getnom()
        VB: Getnom()
      nameWithType:
        CSharp: WayPoint.Getnom()
        VB: WayPoint.Getnom()
      qualifiedName:
        CSharp: PRace.WayPoint.Getnom()
        VB: PRace.WayPoint.Getnom()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: Getnom
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\WayPoint.cs
        startLine: 37
      syntax:
        content:
          CSharp: public string Getnom()
          VB: Public Function Getnom As String
        return:
          type: System.String
      overload: PRace.WayPoint.Getnom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.WayPoint.GetPosition
      commentId: M:PRace.WayPoint.GetPosition
      language: CSharp
      name:
        CSharp: GetPosition()
        VB: GetPosition()
      nameWithType:
        CSharp: WayPoint.GetPosition()
        VB: WayPoint.GetPosition()
      qualifiedName:
        CSharp: PRace.WayPoint.GetPosition()
        VB: PRace.WayPoint.GetPosition()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: GetPosition
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\WayPoint.cs
        startLine: 42
      syntax:
        content:
          CSharp: public Position GetPosition()
          VB: Public Function GetPosition As Position
        return:
          type: PRace.Position
      overload: PRace.WayPoint.GetPosition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.WayPoint.SetPosition(PRace.Position)
      commentId: M:PRace.WayPoint.SetPosition(PRace.Position)
      language: CSharp
      name:
        CSharp: SetPosition(Position)
        VB: SetPosition(Position)
      nameWithType:
        CSharp: WayPoint.SetPosition(Position)
        VB: WayPoint.SetPosition(Position)
      qualifiedName:
        CSharp: PRace.WayPoint.SetPosition(PRace.Position)
        VB: PRace.WayPoint.SetPosition(PRace.Position)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: SetPosition
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\WayPoint.cs
        startLine: 47
      syntax:
        content:
          CSharp: public void SetPosition(Position pos)
          VB: Public Sub SetPosition(pos As Position)
        parameters:
        - id: pos
          type: PRace.Position
      overload: PRace.WayPoint.SetPosition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.WayPoint.SetPosition(System.Single,System.Single)
      commentId: M:PRace.WayPoint.SetPosition(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: SetPosition(Single, Single)
        VB: SetPosition(Single, Single)
      nameWithType:
        CSharp: WayPoint.SetPosition(Single, Single)
        VB: WayPoint.SetPosition(Single, Single)
      qualifiedName:
        CSharp: PRace.WayPoint.SetPosition(System.Single, System.Single)
        VB: PRace.WayPoint.SetPosition(System.Single, System.Single)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: SetPosition
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\WayPoint.cs
        startLine: 52
      syntax:
        content:
          CSharp: public void SetPosition(float latitude, float longitude)
          VB: Public Sub SetPosition(latitude As Single, longitude As Single)
        parameters:
        - id: latitude
          type: System.Single
        - id: longitude
          type: System.Single
      overload: PRace.WayPoint.SetPosition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: PRace.DegreeIncrement
    commentId: T:PRace.DegreeIncrement
    language: CSharp
    name:
      CSharp: DegreeIncrement
      VB: DegreeIncrement
    nameWithType:
      CSharp: DegreeIncrement
      VB: DegreeIncrement
    qualifiedName:
      CSharp: PRace.DegreeIncrement
      VB: PRace.DegreeIncrement
    type: Enum
    assemblies:
    - Assembly-CSharp
    namespace: PRace
    source:
      id: DegreeIncrement
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\DegreeIncrement.cs
      startLine: 6
    summary: "\nEnumerate tha available degre of cap incrementation\n"
    example: []
    syntax:
      content:
        CSharp: public enum DegreeIncrement
        VB: Public Enum DegreeIncrement
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: PRace.DegreeIncrement.One
      commentId: F:PRace.DegreeIncrement.One
      language: CSharp
      name:
        CSharp: One
        VB: One
      nameWithType:
        CSharp: DegreeIncrement.One
        VB: DegreeIncrement.One
      qualifiedName:
        CSharp: PRace.DegreeIncrement.One
        VB: PRace.DegreeIncrement.One
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: One
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\DegreeIncrement.cs
        startLine: 7
      syntax:
        content:
          CSharp: One = 1
          VB: One = 1
        return:
          type: PRace.DegreeIncrement
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PRace.DegreeIncrement.Ten
      commentId: F:PRace.DegreeIncrement.Ten
      language: CSharp
      name:
        CSharp: Ten
        VB: Ten
      nameWithType:
        CSharp: DegreeIncrement.Ten
        VB: DegreeIncrement.Ten
      qualifiedName:
        CSharp: PRace.DegreeIncrement.Ten
        VB: PRace.DegreeIncrement.Ten
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: Ten
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\DegreeIncrement.cs
        startLine: 8
      syntax:
        content:
          CSharp: Ten = 10
          VB: Ten = 10
        return:
          type: PRace.DegreeIncrement
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PRace.DegreeIncrement.MinusOne
      commentId: F:PRace.DegreeIncrement.MinusOne
      language: CSharp
      name:
        CSharp: MinusOne
        VB: MinusOne
      nameWithType:
        CSharp: DegreeIncrement.MinusOne
        VB: DegreeIncrement.MinusOne
      qualifiedName:
        CSharp: PRace.DegreeIncrement.MinusOne
        VB: PRace.DegreeIncrement.MinusOne
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: MinusOne
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\DegreeIncrement.cs
        startLine: 9
      syntax:
        content:
          CSharp: MinusOne = -1
          VB: MinusOne = -1
        return:
          type: PRace.DegreeIncrement
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PRace.DegreeIncrement.MinusTen
      commentId: F:PRace.DegreeIncrement.MinusTen
      language: CSharp
      name:
        CSharp: MinusTen
        VB: MinusTen
      nameWithType:
        CSharp: DegreeIncrement.MinusTen
        VB: DegreeIncrement.MinusTen
      qualifiedName:
        CSharp: PRace.DegreeIncrement.MinusTen
        VB: PRace.DegreeIncrement.MinusTen
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: MinusTen
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\DegreeIncrement.cs
        startLine: 10
      syntax:
        content:
          CSharp: MinusTen = -10
          VB: MinusTen = -10
        return:
          type: PRace.DegreeIncrement
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: PRace.Mode
    commentId: T:PRace.Mode
    language: CSharp
    name:
      CSharp: Mode
      VB: Mode
    nameWithType:
      CSharp: Mode
      VB: Mode
    qualifiedName:
      CSharp: PRace.Mode
      VB: PRace.Mode
    type: Enum
    assemblies:
    - Assembly-CSharp
    namespace: PRace
    source:
      id: Mode
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Mode.cs
      startLine: 6
    summary: "\nEnumerate the available race mode \n"
    example: []
    syntax:
      content:
        CSharp: public enum Mode
        VB: Public Enum Mode
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: PRace.Mode.Entrainement
      commentId: F:PRace.Mode.Entrainement
      language: CSharp
      name:
        CSharp: Entrainement
        VB: Entrainement
      nameWithType:
        CSharp: Mode.Entrainement
        VB: Mode.Entrainement
      qualifiedName:
        CSharp: PRace.Mode.Entrainement
        VB: PRace.Mode.Entrainement
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: Entrainement
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Mode.cs
        startLine: 7
      syntax:
        content:
          CSharp: Entrainement = 0
          VB: Entrainement = 0
        return:
          type: PRace.Mode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PRace.Mode.Asynchrone
      commentId: F:PRace.Mode.Asynchrone
      language: CSharp
      name:
        CSharp: Asynchrone
        VB: Asynchrone
      nameWithType:
        CSharp: Mode.Asynchrone
        VB: Mode.Asynchrone
      qualifiedName:
        CSharp: PRace.Mode.Asynchrone
        VB: PRace.Mode.Asynchrone
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: Asynchrone
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Mode.cs
        startLine: 8
      syntax:
        content:
          CSharp: Asynchrone = 1
          VB: Asynchrone = 1
        return:
          type: PRace.Mode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: PRace.Mode.Synchrone
      commentId: F:PRace.Mode.Synchrone
      language: CSharp
      name:
        CSharp: Synchrone
        VB: Synchrone
      nameWithType:
        CSharp: Mode.Synchrone
        VB: Mode.Synchrone
      qualifiedName:
        CSharp: PRace.Mode.Synchrone
        VB: PRace.Mode.Synchrone
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: Synchrone
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Mode.cs
        startLine: 9
      syntax:
        content:
          CSharp: Synchrone = 2
          VB: Synchrone = 2
        return:
          type: PRace.Mode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: PRace.RegulateurAmure
    commentId: T:PRace.RegulateurAmure
    language: CSharp
    name:
      CSharp: RegulateurAmure
      VB: RegulateurAmure
    nameWithType:
      CSharp: RegulateurAmure
      VB: RegulateurAmure
    qualifiedName:
      CSharp: PRace.RegulateurAmure
      VB: PRace.RegulateurAmure
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: PRace
    source:
      id: RegulateurAmure
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\RegulateurAmure.cs
      startLine: 11
    summary: "\nThis class maintains the cap in regard of wind during wind mode(<xref href=\"PRace.ModeCommande.RegulateurAmure\" data-throw-if-not-resolved=\"false\"></xref>\n"
    example: []
    syntax:
      content:
        CSharp: public class RegulateurAmure
        VB: Public Class RegulateurAmure
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PRace.RegulateurAmure.#ctor(PRace.Boat)
      commentId: M:PRace.RegulateurAmure.#ctor(PRace.Boat)
      language: CSharp
      name:
        CSharp: RegulateurAmure(Boat)
        VB: RegulateurAmure(Boat)
      nameWithType:
        CSharp: RegulateurAmure.RegulateurAmure(Boat)
        VB: RegulateurAmure.RegulateurAmure(Boat)
      qualifiedName:
        CSharp: PRace.RegulateurAmure.RegulateurAmure(PRace.Boat)
        VB: PRace.RegulateurAmure.RegulateurAmure(PRace.Boat)
      type: Constructor
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: .ctor
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\RegulateurAmure.cs
        startLine: 17
      summary: "\ncreate an instance of RegulateurAmure\n"
      example: []
      syntax:
        content:
          CSharp: public RegulateurAmure(Boat boat)
          VB: Public Sub New(boat As Boat)
        parameters:
        - id: boat
          type: PRace.Boat
          description: The <xref href="PRace.Boat" data-throw-if-not-resolved="false"></xref> whose course must be maintained
      overload: PRace.RegulateurAmure.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        PRace.Boat: 
    - id: PRace.RegulateurAmure.Update_cap(Environement.Environment)
      commentId: M:PRace.RegulateurAmure.Update_cap(Environement.Environment)
      language: CSharp
      name:
        CSharp: Update_cap(Environment)
        VB: Update_cap(Environment)
      nameWithType:
        CSharp: RegulateurAmure.Update_cap(Environment)
        VB: RegulateurAmure.Update_cap(Environment)
      qualifiedName:
        CSharp: PRace.RegulateurAmure.Update_cap(Environement.Environment)
        VB: PRace.RegulateurAmure.Update_cap(Environement.Environment)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: Update_cap
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\RegulateurAmure.cs
        startLine: 29
      summary: "\nUpdate the heading of the boat in regard of the wind\n"
      example: []
      syntax:
        content:
          CSharp: public void Update_cap(Environment env)
          VB: Public Sub Update_cap(env As Environment)
        parameters:
        - id: env
          type: Environement.Environment
          description: Enviromnentale conditions
      overload: PRace.RegulateurAmure.Update_cap*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.RegulateurAmure.Get_cap
      commentId: M:PRace.RegulateurAmure.Get_cap
      language: CSharp
      name:
        CSharp: Get_cap()
        VB: Get_cap()
      nameWithType:
        CSharp: RegulateurAmure.Get_cap()
        VB: RegulateurAmure.Get_cap()
      qualifiedName:
        CSharp: PRace.RegulateurAmure.Get_cap()
        VB: PRace.RegulateurAmure.Get_cap()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: Get_cap
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\RegulateurAmure.cs
        startLine: 35
      syntax:
        content:
          CSharp: public float Get_cap()
          VB: Public Function Get_cap As Single
        return:
          type: System.Single
      overload: PRace.RegulateurAmure.Get_cap*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.RegulateurAmure.SetCap(System.Single)
      commentId: M:PRace.RegulateurAmure.SetCap(System.Single)
      language: CSharp
      name:
        CSharp: SetCap(Single)
        VB: SetCap(Single)
      nameWithType:
        CSharp: RegulateurAmure.SetCap(Single)
        VB: RegulateurAmure.SetCap(Single)
      qualifiedName:
        CSharp: PRace.RegulateurAmure.SetCap(System.Single)
        VB: PRace.RegulateurAmure.SetCap(System.Single)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: SetCap
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\RegulateurAmure.cs
        startLine: 41
      syntax:
        content:
          CSharp: public void SetCap(float cap)
          VB: Public Sub SetCap(cap As Single)
        parameters:
        - id: cap
          type: System.Single
      overload: PRace.RegulateurAmure.SetCap*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    references:
      PRace.ModeCommande.RegulateurAmure: 
  - id: PRace.Clock
    commentId: T:PRace.Clock
    language: CSharp
    name:
      CSharp: Clock
      VB: Clock
    nameWithType:
      CSharp: Clock
      VB: Clock
    qualifiedName:
      CSharp: PRace.Clock
      VB: PRace.Clock
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: PRace
    source:
      id: Clock
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Clock.cs
      startLine: 14
    summary: "\nThis class manage inner clock of the simulation.\nIt contain and manage the current time of the simutation and lanch the next iteration based in the tick speed\n"
    example: []
    syntax:
      content:
        CSharp: public class Clock
        VB: Public Class Clock
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PRace.Clock.#ctor(PRace.Race,PRace.Time)
      commentId: M:PRace.Clock.#ctor(PRace.Race,PRace.Time)
      language: CSharp
      name:
        CSharp: Clock(Race, Time)
        VB: Clock(Race, Time)
      nameWithType:
        CSharp: Clock.Clock(Race, Time)
        VB: Clock.Clock(Race, Time)
      qualifiedName:
        CSharp: PRace.Clock.Clock(PRace.Race, PRace.Time)
        VB: PRace.Clock.Clock(PRace.Race, PRace.Time)
      type: Constructor
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: .ctor
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Clock.cs
        startLine: 21
      summary: "\nCreate an instance of clock\n"
      example: []
      syntax:
        content:
          CSharp: public Clock(Race race, Time accFactor)
          VB: Public Sub New(race As Race, accFactor As Time)
        parameters:
        - id: race
          type: PRace.Race
          description: 'the affiliated race '
        - id: accFactor
          type: PRace.Time
          description: the acceleration factor of the race
      overload: PRace.Clock.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Clock.GetCurrentMoment
      commentId: M:PRace.Clock.GetCurrentMoment
      language: CSharp
      name:
        CSharp: GetCurrentMoment()
        VB: GetCurrentMoment()
      nameWithType:
        CSharp: Clock.GetCurrentMoment()
        VB: Clock.GetCurrentMoment()
      qualifiedName:
        CSharp: PRace.Clock.GetCurrentMoment()
        VB: PRace.Clock.GetCurrentMoment()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: GetCurrentMoment
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Clock.cs
        startLine: 39
      syntax:
        content:
          CSharp: public DateTime GetCurrentMoment()
          VB: Public Function GetCurrentMoment As Date
        return:
          type: System.DateTime
      overload: PRace.Clock.GetCurrentMoment*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Clock.IncrementTime
      commentId: M:PRace.Clock.IncrementTime
      language: CSharp
      name:
        CSharp: IncrementTime()
        VB: IncrementTime()
      nameWithType:
        CSharp: Clock.IncrementTime()
        VB: Clock.IncrementTime()
      qualifiedName:
        CSharp: PRace.Clock.IncrementTime()
        VB: PRace.Clock.IncrementTime()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: IncrementTime
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Clock.cs
        startLine: 47
      summary: "\nCalculate the time corresponding to the next iteration and set it value to &apos;currentMoment&apos; attribut\n"
      example: []
      syntax:
        content:
          CSharp: public void IncrementTime()
          VB: Public Sub IncrementTime
      overload: PRace.Clock.IncrementTime*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Clock.pause
      commentId: M:PRace.Clock.pause
      language: CSharp
      name:
        CSharp: pause()
        VB: pause()
      nameWithType:
        CSharp: Clock.pause()
        VB: Clock.pause()
      qualifiedName:
        CSharp: PRace.Clock.pause()
        VB: PRace.Clock.pause()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: pause
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Clock.cs
        startLine: 58
      summary: "\nPauses the inner clock\n"
      example: []
      syntax:
        content:
          CSharp: public void pause()
          VB: Public Sub pause
      overload: PRace.Clock.pause*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Clock.Run
      commentId: M:PRace.Clock.Run
      language: CSharp
      name:
        CSharp: Run()
        VB: Run()
      nameWithType:
        CSharp: Clock.Run()
        VB: Clock.Run()
      qualifiedName:
        CSharp: PRace.Clock.Run()
        VB: PRace.Clock.Run()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: Run
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Clock.cs
        startLine: 66
      summary: "\nRun the inner clock\n"
      example: []
      syntax:
        content:
          CSharp: public void Run()
          VB: Public Sub Run
      overload: PRace.Clock.Run*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Clock.nextIteration
      commentId: M:PRace.Clock.nextIteration
      language: CSharp
      name:
        CSharp: nextIteration()
        VB: nextIteration()
      nameWithType:
        CSharp: Clock.nextIteration()
        VB: Clock.nextIteration()
      qualifiedName:
        CSharp: PRace.Clock.nextIteration()
        VB: PRace.Clock.nextIteration()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: nextIteration
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Clock.cs
        startLine: 90
      summary: "\nLanch the next iteration of the race (&apos;race&apos; attribut)\n"
      example: []
      syntax:
        content:
          CSharp: public void nextIteration()
          VB: Public Sub nextIteration
      overload: PRace.Clock.nextIteration*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Clock.waitTick
      commentId: M:PRace.Clock.waitTick
      language: CSharp
      name:
        CSharp: waitTick()
        VB: waitTick()
      nameWithType:
        CSharp: Clock.waitTick()
        VB: Clock.waitTick()
      qualifiedName:
        CSharp: PRace.Clock.waitTick()
        VB: PRace.Clock.waitTick()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: waitTick
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Clock.cs
        startLine: 109
      summary: "\nWait a tick dutation. This duration is set in the attribut &apos;tick&apos; of the attribut &apos;accFactor&apos;\n"
      example: []
      syntax:
        content:
          CSharp: public void waitTick()
          VB: Public Sub waitTick
      overload: PRace.Clock.waitTick*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Clock.cantKeepUp
      commentId: M:PRace.Clock.cantKeepUp
      language: CSharp
      name:
        CSharp: cantKeepUp()
        VB: cantKeepUp()
      nameWithType:
        CSharp: Clock.cantKeepUp()
        VB: Clock.cantKeepUp()
      qualifiedName:
        CSharp: PRace.Clock.cantKeepUp()
        VB: PRace.Clock.cantKeepUp()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: cantKeepUp
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Clock.cs
        startLine: 125
      summary: "\nThis fonction is used to signal that the system can&apos;t keep up\n"
      example: []
      syntax:
        content:
          CSharp: public void cantKeepUp()
          VB: Public Sub cantKeepUp
      overload: PRace.Clock.cantKeepUp*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Clock.SetCurrentMoment(System.DateTime)
      commentId: M:PRace.Clock.SetCurrentMoment(System.DateTime)
      language: CSharp
      name:
        CSharp: SetCurrentMoment(DateTime)
        VB: SetCurrentMoment(DateTime)
      nameWithType:
        CSharp: Clock.SetCurrentMoment(DateTime)
        VB: Clock.SetCurrentMoment(DateTime)
      qualifiedName:
        CSharp: PRace.Clock.SetCurrentMoment(System.DateTime)
        VB: PRace.Clock.SetCurrentMoment(System.DateTime)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: SetCurrentMoment
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Clock.cs
        startLine: 130
      syntax:
        content:
          CSharp: public void SetCurrentMoment(DateTime currentMoment)
          VB: Public Sub SetCurrentMoment(currentMoment As Date)
        parameters:
        - id: currentMoment
          type: System.DateTime
      overload: PRace.Clock.SetCurrentMoment*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Clock.GetIsPause
      commentId: M:PRace.Clock.GetIsPause
      language: CSharp
      name:
        CSharp: GetIsPause()
        VB: GetIsPause()
      nameWithType:
        CSharp: Clock.GetIsPause()
        VB: Clock.GetIsPause()
      qualifiedName:
        CSharp: PRace.Clock.GetIsPause()
        VB: PRace.Clock.GetIsPause()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: GetIsPause
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Clock.cs
        startLine: 139
      summary: "\nRetrun if the clock is in a pause state or not\n"
      example: []
      syntax:
        content:
          CSharp: public bool GetIsPause()
          VB: Public Function GetIsPause As Boolean
        return:
          type: System.Boolean
          description: true if the system is in pause else false
      overload: PRace.Clock.GetIsPause*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: PRace.Race
    commentId: T:PRace.Race
    language: CSharp
    name:
      CSharp: Race
      VB: Race
    nameWithType:
      CSharp: Race
      VB: Race
    qualifiedName:
      CSharp: PRace.Race
      VB: PRace.Race
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: PRace
    source:
      id: Race
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Race.cs
      startLine: 14
    summary: "\nThis class represent a race\n"
    example: []
    syntax:
      content:
        CSharp: public class Race
        VB: Public Class Race
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: PRace.Race.#ctor(Model.RaceModel,AquitisionCommunication.RaceSave.JsonRace,System.Int32,System.String,System.Int32,System.String)
      commentId: M:PRace.Race.#ctor(Model.RaceModel,AquitisionCommunication.RaceSave.JsonRace,System.Int32,System.String,System.Int32,System.String)
      language: CSharp
      name:
        CSharp: Race(RaceModel, RaceSave.JsonRace, Int32, String, Int32, String)
        VB: Race(RaceModel, RaceSave.JsonRace, Int32, String, Int32, String)
      nameWithType:
        CSharp: Race.Race(RaceModel, RaceSave.JsonRace, Int32, String, Int32, String)
        VB: Race.Race(RaceModel, RaceSave.JsonRace, Int32, String, Int32, String)
      qualifiedName:
        CSharp: PRace.Race.Race(Model.RaceModel, AquitisionCommunication.RaceSave.JsonRace, System.Int32, System.String, System.Int32, System.String)
        VB: PRace.Race.Race(Model.RaceModel, AquitisionCommunication.RaceSave.JsonRace, System.Int32, System.String, System.Int32, System.String)
      type: Constructor
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: .ctor
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Race.cs
        startLine: 25
      summary: "\nCreate an instance of a race\n"
      example: []
      syntax:
        content:
          CSharp: public Race(RaceModel model, RaceSave.JsonRace jrace, int portQTVLM, string ipQTVLM, int portRM, string ipRM)
          VB: Public Sub New(model As RaceModel, jrace As RaceSave.JsonRace, portQTVLM As Integer, ipQTVLM As String, portRM As Integer, ipRM As String)
        parameters:
        - id: model
          type: Model.RaceModel
          description: The <xref href="Model.RaceModel" data-throw-if-not-resolved="false"></xref> of the simultator
        - id: jrace
          type: AquitisionCommunication.RaceSave.JsonRace
          description: The <xref href="AquitisionCommunication.RaceSave.JsonRace" data-throw-if-not-resolved="false"></xref> to use as a save to load the race
        - id: portQTVLM
          type: System.Int32
          description: port to us to connecte to QTVLM
        - id: ipQTVLM
          type: System.String
          description: IP to us to connecte to QTVLM
        - id: portRM
          type: System.Int32
          description: port to us to connecte to the Race Manager
        - id: ipRM
          type: System.String
          description: IP to us to connecte to The Race Manager
      overload: PRace.Race.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        Model.RaceModel: 
        AquitisionCommunication.RaceSave.JsonRace: 
    - id: PRace.Race.#ctor(Model.RaceModel,Communication.DataProcessing.Json.BoatType,PRace.Mode,System.Int32,System.String,System.Int32,System.String)
      commentId: M:PRace.Race.#ctor(Model.RaceModel,Communication.DataProcessing.Json.BoatType,PRace.Mode,System.Int32,System.String,System.Int32,System.String)
      language: CSharp
      name:
        CSharp: Race(RaceModel, BoatType, Mode, Int32, String, Int32, String)
        VB: Race(RaceModel, BoatType, Mode, Int32, String, Int32, String)
      nameWithType:
        CSharp: Race.Race(RaceModel, BoatType, Mode, Int32, String, Int32, String)
        VB: Race.Race(RaceModel, BoatType, Mode, Int32, String, Int32, String)
      qualifiedName:
        CSharp: PRace.Race.Race(Model.RaceModel, Communication.DataProcessing.Json.BoatType, PRace.Mode, System.Int32, System.String, System.Int32, System.String)
        VB: PRace.Race.Race(Model.RaceModel, Communication.DataProcessing.Json.BoatType, PRace.Mode, System.Int32, System.String, System.Int32, System.String)
      type: Constructor
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: .ctor
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Race.cs
        startLine: 56
      summary: "\nCreate an instance of a race\n"
      example: []
      syntax:
        content:
          CSharp: public Race(RaceModel model, BoatType selectedBoatType, Mode mode, int portQTVLM, string ipQTVLM, int portRM, string ipRM)
          VB: Public Sub New(model As RaceModel, selectedBoatType As BoatType, mode As Mode, portQTVLM As Integer, ipQTVLM As String, portRM As Integer, ipRM As String)
        parameters:
        - id: model
          type: Model.RaceModel
          description: The <xref href="Model.RaceModel" data-throw-if-not-resolved="false"></xref> of the simultator
        - id: selectedBoatType
          type: Communication.DataProcessing.Json.BoatType
          description: The <xref href="Communication.DataProcessing.Json.BoatType" data-throw-if-not-resolved="false"></xref> to use as model to create the &apos;boat&apos; attribut
        - id: mode
          type: PRace.Mode
          description: The <xref href="PRace.Mode" data-throw-if-not-resolved="false"></xref> of the race
        - id: portQTVLM
          type: System.Int32
          description: port to us to connecte to QTVLM
        - id: ipQTVLM
          type: System.String
          description: IP to us to connecte to QTVLM
        - id: portRM
          type: System.Int32
          description: port to us to connecte to the Race Manager
        - id: ipRM
          type: System.String
          description: IP to us to connecte to The Race Manager
      overload: PRace.Race.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        Model.RaceModel: 
        Communication.DataProcessing.Json.BoatType: 
        PRace.Mode: 
    - id: PRace.Race.GetId
      commentId: M:PRace.Race.GetId
      language: CSharp
      name:
        CSharp: GetId()
        VB: GetId()
      nameWithType:
        CSharp: Race.GetId()
        VB: Race.GetId()
      qualifiedName:
        CSharp: PRace.Race.GetId()
        VB: PRace.Race.GetId()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: GetId
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Race.cs
        startLine: 172
      syntax:
        content:
          CSharp: public int GetId()
          VB: Public Function GetId As Integer
        return:
          type: System.Int32
      overload: PRace.Race.GetId*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.GetCurrentInstant
      commentId: M:PRace.Race.GetCurrentInstant
      language: CSharp
      name:
        CSharp: GetCurrentInstant()
        VB: GetCurrentInstant()
      nameWithType:
        CSharp: Race.GetCurrentInstant()
        VB: Race.GetCurrentInstant()
      qualifiedName:
        CSharp: PRace.Race.GetCurrentInstant()
        VB: PRace.Race.GetCurrentInstant()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: GetCurrentInstant
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Race.cs
        startLine: 181
      summary: "\nReturn the time of the inner time of the simulation\n"
      example: []
      syntax:
        content:
          CSharp: public DateTime GetCurrentInstant()
          VB: Public Function GetCurrentInstant As Date
        return:
          type: System.DateTime
          description: Return the time of the inner time of the simulation
      overload: PRace.Race.GetCurrentInstant*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.GetWayPoint
      commentId: M:PRace.Race.GetWayPoint
      language: CSharp
      name:
        CSharp: GetWayPoint()
        VB: GetWayPoint()
      nameWithType:
        CSharp: Race.GetWayPoint()
        VB: Race.GetWayPoint()
      qualifiedName:
        CSharp: PRace.Race.GetWayPoint()
        VB: PRace.Race.GetWayPoint()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: GetWayPoint
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Race.cs
        startLine: 186
      syntax:
        content:
          CSharp: public List<WayPoint> GetWayPoint()
          VB: Public Function GetWayPoint As List(Of WayPoint)
        return:
          type: System.Collections.Generic.List{PRace.WayPoint}
      overload: PRace.Race.GetWayPoint*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.SetBoatCap(System.Single)
      commentId: M:PRace.Race.SetBoatCap(System.Single)
      language: CSharp
      name:
        CSharp: SetBoatCap(Single)
        VB: SetBoatCap(Single)
      nameWithType:
        CSharp: Race.SetBoatCap(Single)
        VB: Race.SetBoatCap(Single)
      qualifiedName:
        CSharp: PRace.Race.SetBoatCap(System.Single)
        VB: PRace.Race.SetBoatCap(System.Single)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: SetBoatCap
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Race.cs
        startLine: 195
      summary: "\nSet the cap of the attribut &apos;boat&apos; modulo 360\n"
      example: []
      syntax:
        content:
          CSharp: public void SetBoatCap(float cap)
          VB: Public Sub SetBoatCap(cap As Single)
        parameters:
        - id: cap
          type: System.Single
          description: cap in degre
      overload: PRace.Race.SetBoatCap*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.GetEnvironment
      commentId: M:PRace.Race.GetEnvironment
      language: CSharp
      name:
        CSharp: GetEnvironment()
        VB: GetEnvironment()
      nameWithType:
        CSharp: Race.GetEnvironment()
        VB: Race.GetEnvironment()
      qualifiedName:
        CSharp: PRace.Race.GetEnvironment()
        VB: PRace.Race.GetEnvironment()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: GetEnvironment
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Race.cs
        startLine: 201
      syntax:
        content:
          CSharp: public Environment GetEnvironment()
          VB: Public Function GetEnvironment As Environment
        return:
          type: Environement.Environment
      overload: PRace.Race.GetEnvironment*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.GetCurrentPolaire
      commentId: M:PRace.Race.GetCurrentPolaire
      language: CSharp
      name:
        CSharp: GetCurrentPolaire()
        VB: GetCurrentPolaire()
      nameWithType:
        CSharp: Race.GetCurrentPolaire()
        VB: Race.GetCurrentPolaire()
      qualifiedName:
        CSharp: PRace.Race.GetCurrentPolaire()
        VB: PRace.Race.GetCurrentPolaire()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: GetCurrentPolaire
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Race.cs
        startLine: 210
      summary: "\nCall the fonction <xref href=\"PRace.Boat.GetCurrentPolaire\" data-throw-if-not-resolved=\"false\"></xref> and return its value\n"
      example: []
      syntax:
        content:
          CSharp: public Polaire GetCurrentPolaire()
          VB: Public Function GetCurrentPolaire As Polaire
        return:
          type: PRace.Polaire
          description: return the polar currently used by the boat
      overload: PRace.Race.GetCurrentPolaire*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        PRace.Boat.GetCurrentPolaire: 
    - id: PRace.Race.GetAllPolaire
      commentId: M:PRace.Race.GetAllPolaire
      language: CSharp
      name:
        CSharp: GetAllPolaire()
        VB: GetAllPolaire()
      nameWithType:
        CSharp: Race.GetAllPolaire()
        VB: Race.GetAllPolaire()
      qualifiedName:
        CSharp: PRace.Race.GetAllPolaire()
        VB: PRace.Race.GetAllPolaire()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: GetAllPolaire
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Race.cs
        startLine: 219
      summary: "\nCall the fonction <xref href=\"PRace.Boat.getAvailablePolaire\" data-throw-if-not-resolved=\"false\"></xref> and return its value\n"
      example: []
      syntax:
        content:
          CSharp: public List<Polaire> GetAllPolaire()
          VB: Public Function GetAllPolaire As List(Of Polaire)
        return:
          type: System.Collections.Generic.List{PRace.Polaire}
          description: return all polars of the boat attribut
      overload: PRace.Race.GetAllPolaire*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        PRace.Boat.getAvailablePolaire: 
    - id: PRace.Race.GetBoatId
      commentId: M:PRace.Race.GetBoatId
      language: CSharp
      name:
        CSharp: GetBoatId()
        VB: GetBoatId()
      nameWithType:
        CSharp: Race.GetBoatId()
        VB: Race.GetBoatId()
      qualifiedName:
        CSharp: PRace.Race.GetBoatId()
        VB: PRace.Race.GetBoatId()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: GetBoatId
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Race.cs
        startLine: 228
      summary: "\nCall the fonction <xref href=\"PRace.Boat.GetId\" data-throw-if-not-resolved=\"false\"></xref> and return its value\n"
      example: []
      syntax:
        content:
          CSharp: public int GetBoatId()
          VB: Public Function GetBoatId As Integer
        return:
          type: System.Int32
          description: return the boat id
      overload: PRace.Race.GetBoatId*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        PRace.Boat.GetId: 
    - id: PRace.Race.GetBoatCap
      commentId: M:PRace.Race.GetBoatCap
      language: CSharp
      name:
        CSharp: GetBoatCap()
        VB: GetBoatCap()
      nameWithType:
        CSharp: Race.GetBoatCap()
        VB: Race.GetBoatCap()
      qualifiedName:
        CSharp: PRace.Race.GetBoatCap()
        VB: PRace.Race.GetBoatCap()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: GetBoatCap
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Race.cs
        startLine: 237
      summary: "\nCall the fonction <xref href=\"PRace.Boat.getCap\" data-throw-if-not-resolved=\"false\"></xref> and return its value\n"
      example: []
      syntax:
        content:
          CSharp: public float GetBoatCap()
          VB: Public Function GetBoatCap As Single
        return:
          type: System.Single
          description: return the boat cap
      overload: PRace.Race.GetBoatCap*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        PRace.Boat.getCap: 
    - id: PRace.Race.GetCompetitors
      commentId: M:PRace.Race.GetCompetitors
      language: CSharp
      name:
        CSharp: GetCompetitors()
        VB: GetCompetitors()
      nameWithType:
        CSharp: Race.GetCompetitors()
        VB: Race.GetCompetitors()
      qualifiedName:
        CSharp: PRace.Race.GetCompetitors()
        VB: PRace.Race.GetCompetitors()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: GetCompetitors
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Race.cs
        startLine: 242
      syntax:
        content:
          CSharp: public List<Competitor> GetCompetitors()
          VB: Public Function GetCompetitors As List(Of Competitor)
        return:
          type: System.Collections.Generic.List{PRace.Competitor}
      overload: PRace.Race.GetCompetitors*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.SetAccFactor(System.Single)
      commentId: M:PRace.Race.SetAccFactor(System.Single)
      language: CSharp
      name:
        CSharp: SetAccFactor(Single)
        VB: SetAccFactor(Single)
      nameWithType:
        CSharp: Race.SetAccFactor(Single)
        VB: Race.SetAccFactor(Single)
      qualifiedName:
        CSharp: PRace.Race.SetAccFactor(System.Single)
        VB: PRace.Race.SetAccFactor(System.Single)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: SetAccFactor
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Race.cs
        startLine: 251
      summary: "\nset the acceleration factor of the simulator\n"
      example: []
      syntax:
        content:
          CSharp: public void SetAccFactor(float acc)
          VB: Public Sub SetAccFactor(acc As Single)
        parameters:
        - id: acc
          type: System.Single
          description: ''
      overload: PRace.Race.SetAccFactor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.GetAccFactor
      commentId: M:PRace.Race.GetAccFactor
      language: CSharp
      name:
        CSharp: GetAccFactor()
        VB: GetAccFactor()
      nameWithType:
        CSharp: Race.GetAccFactor()
        VB: Race.GetAccFactor()
      qualifiedName:
        CSharp: PRace.Race.GetAccFactor()
        VB: PRace.Race.GetAccFactor()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: GetAccFactor
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Race.cs
        startLine: 260
      summary: "\nget the acceleration factor of the simulation\n"
      example: []
      syntax:
        content:
          CSharp: public float GetAccFactor()
          VB: Public Function GetAccFactor As Single
        return:
          type: System.Single
          description: ''
      overload: PRace.Race.GetAccFactor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.SetCompetitors(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{System.Single})
      commentId: M:PRace.Race.SetCompetitors(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{System.Single})
      language: CSharp
      name:
        CSharp: SetCompetitors(List<Int32>, List<Single>, List<Single>)
        VB: SetCompetitors(List(Of Int32), List(Of Single), List(Of Single))
      nameWithType:
        CSharp: Race.SetCompetitors(List<Int32>, List<Single>, List<Single>)
        VB: Race.SetCompetitors(List(Of Int32), List(Of Single), List(Of Single))
      qualifiedName:
        CSharp: PRace.Race.SetCompetitors(System.Collections.Generic.List<System.Int32>, System.Collections.Generic.List<System.Single>, System.Collections.Generic.List<System.Single>)
        VB: PRace.Race.SetCompetitors(System.Collections.Generic.List(Of System.Int32), System.Collections.Generic.List(Of System.Single), System.Collections.Generic.List(Of System.Single))
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: SetCompetitors
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Race.cs
        startLine: 265
      syntax:
        content:
          CSharp: public void SetCompetitors(List<int> id, List<float> latitude, List<float> longitude)
          VB: Public Sub SetCompetitors(id As List(Of Integer), latitude As List(Of Single), longitude As List(Of Single))
        parameters:
        - id: id
          type: System.Collections.Generic.List{System.Int32}
        - id: latitude
          type: System.Collections.Generic.List{System.Single}
        - id: longitude
          type: System.Collections.Generic.List{System.Single}
      overload: PRace.Race.SetCompetitors*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.GetBoat
      commentId: M:PRace.Race.GetBoat
      language: CSharp
      name:
        CSharp: GetBoat()
        VB: GetBoat()
      nameWithType:
        CSharp: Race.GetBoat()
        VB: Race.GetBoat()
      qualifiedName:
        CSharp: PRace.Race.GetBoat()
        VB: PRace.Race.GetBoat()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: GetBoat
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Race.cs
        startLine: 277
      syntax:
        content:
          CSharp: public Boat GetBoat()
          VB: Public Function GetBoat As Boat
        return:
          type: PRace.Boat
      overload: PRace.Race.GetBoat*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.GetPosition
      commentId: M:PRace.Race.GetPosition
      language: CSharp
      name:
        CSharp: GetPosition()
        VB: GetPosition()
      nameWithType:
        CSharp: Race.GetPosition()
        VB: Race.GetPosition()
      qualifiedName:
        CSharp: PRace.Race.GetPosition()
        VB: PRace.Race.GetPosition()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: GetPosition
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Race.cs
        startLine: 286
      summary: "\nreturn the Boat position\n"
      example: []
      syntax:
        content:
          CSharp: public (double longitude, double latitude) GetPosition()
          VB: Public Function GetPosition As(longitude As Double, latitude As Double)(Of Double , Double)
        return:
          type: System.ValueTuple{System.Double,System.Double}
          description: return a double (flaot, float) containing the longitude and the latiude of the boat in radiant
      overload: PRace.Race.GetPosition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.SetWayPoint(System.Collections.Generic.List{PRace.WayPoint})
      commentId: M:PRace.Race.SetWayPoint(System.Collections.Generic.List{PRace.WayPoint})
      language: CSharp
      name:
        CSharp: SetWayPoint(List<WayPoint>)
        VB: SetWayPoint(List(Of WayPoint))
      nameWithType:
        CSharp: Race.SetWayPoint(List<WayPoint>)
        VB: Race.SetWayPoint(List(Of WayPoint))
      qualifiedName:
        CSharp: PRace.Race.SetWayPoint(System.Collections.Generic.List<PRace.WayPoint>)
        VB: PRace.Race.SetWayPoint(System.Collections.Generic.List(Of PRace.WayPoint))
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: SetWayPoint
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Race.cs
        startLine: 293
      syntax:
        content:
          CSharp: public void SetWayPoint(List<WayPoint> wayPoints)
          VB: Public Sub SetWayPoint(wayPoints As List(Of WayPoint))
        parameters:
        - id: wayPoints
          type: System.Collections.Generic.List{PRace.WayPoint}
      overload: PRace.Race.SetWayPoint*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.change_Env(System.Collections.Generic.Dictionary{Environement.Conditions,System.Single})
      commentId: M:PRace.Race.change_Env(System.Collections.Generic.Dictionary{Environement.Conditions,System.Single})
      language: CSharp
      name:
        CSharp: change_Env(Dictionary<Conditions, Single>)
        VB: change_Env(Dictionary(Of Conditions, Single))
      nameWithType:
        CSharp: Race.change_Env(Dictionary<Conditions, Single>)
        VB: Race.change_Env(Dictionary(Of Conditions, Single))
      qualifiedName:
        CSharp: PRace.Race.change_Env(System.Collections.Generic.Dictionary<Environement.Conditions, System.Single>)
        VB: PRace.Race.change_Env(System.Collections.Generic.Dictionary(Of Environement.Conditions, System.Single))
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: change_Env
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Race.cs
        startLine: 301
      summary: "\nCall the fonction <xref href=\"Environement.Environment.setEnvironment(System.Collections.Generic.Dictionary%7bEnvironement.Conditions%2cSystem.Single%7d)\" data-throw-if-not-resolved=\"false\"></xref>\n"
      example: []
      syntax:
        content:
          CSharp: public void change_Env(Dictionary<Conditions, float> env)
          VB: Public Sub change_Env(env As Dictionary(Of Conditions, Single))
        parameters:
        - id: env
          type: System.Collections.Generic.Dictionary{Environement.Conditions,System.Single}
          description: ''
      overload: PRace.Race.change_Env*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        Environement.Environment.setEnvironment(System.Collections.Generic.Dictionary{Environement.Conditions,System.Single}): 
    - id: PRace.Race.sendPosition
      commentId: M:PRace.Race.sendPosition
      language: CSharp
      name:
        CSharp: sendPosition()
        VB: sendPosition()
      nameWithType:
        CSharp: Race.sendPosition()
        VB: Race.sendPosition()
      qualifiedName:
        CSharp: PRace.Race.sendPosition()
        VB: PRace.Race.sendPosition()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: sendPosition
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Race.cs
        startLine: 308
      summary: "\nsend information about the race to QTVLM or OPENCPN\n"
      example: []
      syntax:
        content:
          CSharp: public void sendPosition()
          VB: Public Sub sendPosition
      overload: PRace.Race.sendPosition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.getMode
      commentId: M:PRace.Race.getMode
      language: CSharp
      name:
        CSharp: getMode()
        VB: getMode()
      nameWithType:
        CSharp: Race.getMode()
        VB: Race.getMode()
      qualifiedName:
        CSharp: PRace.Race.getMode()
        VB: PRace.Race.getMode()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: getMode
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Race.cs
        startLine: 313
      syntax:
        content:
          CSharp: public Mode getMode()
          VB: Public Function getMode As Mode
        return:
          type: PRace.Mode
      overload: PRace.Race.getMode*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.setacceleratorFactor(System.Int32)
      commentId: M:PRace.Race.setacceleratorFactor(System.Int32)
      language: CSharp
      name:
        CSharp: setacceleratorFactor(Int32)
        VB: setacceleratorFactor(Int32)
      nameWithType:
        CSharp: Race.setacceleratorFactor(Int32)
        VB: Race.setacceleratorFactor(Int32)
      qualifiedName:
        CSharp: PRace.Race.setacceleratorFactor(System.Int32)
        VB: PRace.Race.setacceleratorFactor(System.Int32)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: setacceleratorFactor
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Race.cs
        startLine: 321
      summary: "\nSet the acceleration factor of the race\n"
      example: []
      syntax:
        content:
          CSharp: public void setacceleratorFactor(int AccFac)
          VB: Public Sub setacceleratorFactor(AccFac As Integer)
        parameters:
        - id: AccFac
          type: System.Int32
          description: ''
      overload: PRace.Race.setacceleratorFactor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.Pause
      commentId: M:PRace.Race.Pause
      language: CSharp
      name:
        CSharp: Pause()
        VB: Pause()
      nameWithType:
        CSharp: Race.Pause()
        VB: Race.Pause()
      qualifiedName:
        CSharp: PRace.Race.Pause()
        VB: PRace.Race.Pause()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: Pause
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Race.cs
        startLine: 329
      summary: "\nPause the inner clock of the race\n"
      remarks: Call <xref href="PRace.Clock.pause" data-throw-if-not-resolved="false"></xref>
      example: []
      syntax:
        content:
          CSharp: public void Pause()
          VB: Public Sub Pause
      overload: PRace.Race.Pause*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        PRace.Clock.pause: 
    - id: PRace.Race.Run
      commentId: M:PRace.Race.Run
      language: CSharp
      name:
        CSharp: Run()
        VB: Run()
      nameWithType:
        CSharp: Race.Run()
        VB: Race.Run()
      qualifiedName:
        CSharp: PRace.Race.Run()
        VB: PRace.Race.Run()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: Run
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Race.cs
        startLine: 338
      summary: "\nRun the inner clock of the race\n"
      remarks: Call <xref href="PRace.Clock.Run" data-throw-if-not-resolved="false"></xref>
      example: []
      syntax:
        content:
          CSharp: public void Run()
          VB: Public Sub Run
      overload: PRace.Race.Run*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        PRace.Clock.Run: 
    - id: PRace.Race.nextIteration
      commentId: M:PRace.Race.nextIteration
      language: CSharp
      name:
        CSharp: nextIteration()
        VB: nextIteration()
      nameWithType:
        CSharp: Race.nextIteration()
        VB: Race.nextIteration()
      qualifiedName:
        CSharp: PRace.Race.nextIteration()
        VB: PRace.Race.nextIteration()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: nextIteration
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Race.cs
        startLine: 349
      summary: "\nDo the next iteration of the race.\nCalculate and apply the physic motion of the boat.\nUptate the heading of the boat for the wind mode.\nSend information about the race to QTVLM\n"
      example: []
      syntax:
        content:
          CSharp: public void nextIteration()
          VB: Public Sub nextIteration
      overload: PRace.Race.nextIteration*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.GetisPause
      commentId: M:PRace.Race.GetisPause
      language: CSharp
      name:
        CSharp: GetisPause()
        VB: GetisPause()
      nameWithType:
        CSharp: Race.GetisPause()
        VB: Race.GetisPause()
      qualifiedName:
        CSharp: PRace.Race.GetisPause()
        VB: PRace.Race.GetisPause()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: GetisPause
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Race.cs
        startLine: 368
      summary: "\nReturn if the race is paused or not\n"
      example: []
      syntax:
        content:
          CSharp: public bool GetisPause()
          VB: Public Function GetisPause As Boolean
        return:
          type: System.Boolean
          description: return true if the race is paused else return false
      overload: PRace.Race.GetisPause*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.GetBoatStatus
      commentId: M:PRace.Race.GetBoatStatus
      language: CSharp
      name:
        CSharp: GetBoatStatus()
        VB: GetBoatStatus()
      nameWithType:
        CSharp: Race.GetBoatStatus()
        VB: Race.GetBoatStatus()
      qualifiedName:
        CSharp: PRace.Race.GetBoatStatus()
        VB: PRace.Race.GetBoatStatus()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: GetBoatStatus
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Race.cs
        startLine: 377
      summary: "\nReturn a list of double summarizing the status of the boat (longitude, latitude, cap, cog, sog, stw, aws, awa)\n"
      example: []
      syntax:
        content:
          CSharp: public List<double> GetBoatStatus()
          VB: Public Function GetBoatStatus As List(Of Double)
        return:
          type: System.Collections.Generic.List{System.Double}
          description: Return a list of double summarizing the status of the boat (longitude, latitude, cap, cog, sog, stw, aws, awa)
      overload: PRace.Race.GetBoatStatus*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.GetAquisition
      commentId: M:PRace.Race.GetAquisition
      language: CSharp
      name:
        CSharp: GetAquisition()
        VB: GetAquisition()
      nameWithType:
        CSharp: Race.GetAquisition()
        VB: Race.GetAquisition()
      qualifiedName:
        CSharp: PRace.Race.GetAquisition()
        VB: PRace.Race.GetAquisition()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: GetAquisition
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Race.cs
        startLine: 392
      syntax:
        content:
          CSharp: public Aquisition GetAquisition()
          VB: Public Function GetAquisition As Aquisition
        return:
          type: AquitisionCommunication.Aquisition
      overload: PRace.Race.GetAquisition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: PRace.Race.getCurrentMoment
      commentId: M:PRace.Race.getCurrentMoment
      language: CSharp
      name:
        CSharp: getCurrentMoment()
        VB: getCurrentMoment()
      nameWithType:
        CSharp: Race.getCurrentMoment()
        VB: Race.getCurrentMoment()
      qualifiedName:
        CSharp: PRace.Race.getCurrentMoment()
        VB: PRace.Race.getCurrentMoment()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: PRace
      source:
        id: getCurrentMoment
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Race\Race.cs
        startLine: 397
      syntax:
        content:
          CSharp: public DateTime getCurrentMoment()
          VB: Public Function getCurrentMoment As Date
        return:
          type: System.DateTime
      overload: PRace.Race.getCurrentMoment*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Communication
  commentId: N:Communication
  language: CSharp
  name:
    CSharp: Communication
    VB: Communication
  nameWithType:
    CSharp: Communication
    VB: Communication
  qualifiedName:
    CSharp: Communication
    VB: Communication
  type: Namespace
  assemblies:
  - Assembly-CSharp
  modifiers: {}
  items:
  - id: Communication.StateObject
    commentId: T:Communication.StateObject
    language: CSharp
    name:
      CSharp: StateObject
      VB: StateObject
    nameWithType:
      CSharp: StateObject
      VB: StateObject
    qualifiedName:
      CSharp: Communication.StateObject
      VB: Communication.StateObject
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Communication
    source:
      id: StateObject
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\Program.cs
      startLine: 25
    syntax:
      content:
        CSharp: public class StateObject
        VB: Public Class StateObject
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Communication.StateObject.workSocket
      commentId: F:Communication.StateObject.workSocket
      language: CSharp
      name:
        CSharp: workSocket
        VB: workSocket
      nameWithType:
        CSharp: StateObject.workSocket
        VB: StateObject.workSocket
      qualifiedName:
        CSharp: Communication.StateObject.workSocket
        VB: Communication.StateObject.workSocket
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Communication
      source:
        id: workSocket
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\Program.cs
        startLine: 28
      syntax:
        content:
          CSharp: public Socket workSocket
          VB: Public workSocket As Socket
        return:
          type: System.Net.Sockets.Socket
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Communication.StateObject.BufferSize
      commentId: F:Communication.StateObject.BufferSize
      language: CSharp
      name:
        CSharp: BufferSize
        VB: BufferSize
      nameWithType:
        CSharp: StateObject.BufferSize
        VB: StateObject.BufferSize
      qualifiedName:
        CSharp: Communication.StateObject.BufferSize
        VB: Communication.StateObject.BufferSize
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Communication
      source:
        id: BufferSize
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\Program.cs
        startLine: 30
      syntax:
        content:
          CSharp: public const int BufferSize = 256
          VB: Public Const BufferSize As Integer = 256
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Communication.StateObject.buffer
      commentId: F:Communication.StateObject.buffer
      language: CSharp
      name:
        CSharp: buffer
        VB: buffer
      nameWithType:
        CSharp: StateObject.buffer
        VB: StateObject.buffer
      qualifiedName:
        CSharp: Communication.StateObject.buffer
        VB: Communication.StateObject.buffer
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Communication
      source:
        id: buffer
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\Program.cs
        startLine: 32
      syntax:
        content:
          CSharp: public byte[] buffer
          VB: Public buffer As Byte()
        return:
          type: System.Byte[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Communication.StateObject.sb
      commentId: F:Communication.StateObject.sb
      language: CSharp
      name:
        CSharp: sb
        VB: sb
      nameWithType:
        CSharp: StateObject.sb
        VB: StateObject.sb
      qualifiedName:
        CSharp: Communication.StateObject.sb
        VB: Communication.StateObject.sb
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Communication
      source:
        id: sb
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\Program.cs
        startLine: 34
      syntax:
        content:
          CSharp: public StringBuilder sb
          VB: Public sb As StringBuilder
        return:
          type: System.Text.StringBuilder
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Communication.AsynchronousClient
    commentId: T:Communication.AsynchronousClient
    language: CSharp
    name:
      CSharp: AsynchronousClient
      VB: AsynchronousClient
    nameWithType:
      CSharp: AsynchronousClient
      VB: AsynchronousClient
    qualifiedName:
      CSharp: Communication.AsynchronousClient
      VB: Communication.AsynchronousClient
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Communication
    source:
      id: AsynchronousClient
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\Program.cs
      startLine: 37
    syntax:
      content:
        CSharp: public class AsynchronousClient
        VB: Public Class AsynchronousClient
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Communication.AsynchronousClient.StartClient(System.String,System.Int32,Communication.DataProcessing.IMessageType)
      commentId: M:Communication.AsynchronousClient.StartClient(System.String,System.Int32,Communication.DataProcessing.IMessageType)
      language: CSharp
      name:
        CSharp: StartClient(String, Int32, IMessageType)
        VB: StartClient(String, Int32, IMessageType)
      nameWithType:
        CSharp: AsynchronousClient.StartClient(String, Int32, IMessageType)
        VB: AsynchronousClient.StartClient(String, Int32, IMessageType)
      qualifiedName:
        CSharp: Communication.AsynchronousClient.StartClient(System.String, System.Int32, Communication.DataProcessing.IMessageType)
        VB: Communication.AsynchronousClient.StartClient(System.String, System.Int32, Communication.DataProcessing.IMessageType)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Communication
      source:
        id: StartClient
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\Program.cs
        startLine: 52
      syntax:
        content:
          CSharp: public static void StartClient(string ip, int port, IMessageType info)
          VB: Public Shared Sub StartClient(ip As String, port As Integer, info As IMessageType)
        parameters:
        - id: ip
          type: System.String
        - id: port
          type: System.Int32
        - id: info
          type: Communication.DataProcessing.IMessageType
      overload: Communication.AsynchronousClient.StartClient*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Communication.AsynchronousClient.Main(System.String[])
      commentId: M:Communication.AsynchronousClient.Main(System.String[])
      language: CSharp
      name:
        CSharp: Main(String[])
        VB: Main(String())
      nameWithType:
        CSharp: AsynchronousClient.Main(String[])
        VB: AsynchronousClient.Main(String())
      qualifiedName:
        CSharp: Communication.AsynchronousClient.Main(System.String[])
        VB: Communication.AsynchronousClient.Main(System.String())
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Communication
      source:
        id: Main
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\Program.cs
        startLine: 270
      syntax:
        content:
          CSharp: public static int Main(string[] args)
          VB: Public Shared Function Main(args As String()) As Integer
        parameters:
        - id: args
          type: System.String[]
        return:
          type: System.Int32
      overload: Communication.AsynchronousClient.Main*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
- id: Communication.DataProcessing
  commentId: N:Communication.DataProcessing
  language: CSharp
  name:
    CSharp: Communication.DataProcessing
    VB: Communication.DataProcessing
  nameWithType:
    CSharp: Communication.DataProcessing
    VB: Communication.DataProcessing
  qualifiedName:
    CSharp: Communication.DataProcessing
    VB: Communication.DataProcessing
  type: Namespace
  assemblies:
  - Assembly-CSharp
  modifiers: {}
  items:
  - id: Communication.DataProcessing.IMessageType
    commentId: T:Communication.DataProcessing.IMessageType
    language: CSharp
    name:
      CSharp: IMessageType
      VB: IMessageType
    nameWithType:
      CSharp: IMessageType
      VB: IMessageType
    qualifiedName:
      CSharp: Communication.DataProcessing.IMessageType
      VB: Communication.DataProcessing.IMessageType
    type: Enum
    assemblies:
    - Assembly-CSharp
    namespace: Communication.DataProcessing
    source:
      id: IMessageType
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\MessageType.cs
      startLine: 5
    summary: "\nType of message send and recive.\n"
    example: []
    syntax:
      content:
        CSharp: public enum IMessageType
        VB: Public Enum IMessageType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Communication.DataProcessing.IMessageType.CONNECTION
      commentId: F:Communication.DataProcessing.IMessageType.CONNECTION
      language: CSharp
      name:
        CSharp: CONNECTION
        VB: CONNECTION
      nameWithType:
        CSharp: IMessageType.CONNECTION
        VB: IMessageType.CONNECTION
      qualifiedName:
        CSharp: Communication.DataProcessing.IMessageType.CONNECTION
        VB: Communication.DataProcessing.IMessageType.CONNECTION
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing
      source:
        id: CONNECTION
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\MessageType.cs
        startLine: 7
      syntax:
        content:
          CSharp: CONNECTION = 0
          VB: CONNECTION = 0
        return:
          type: Communication.DataProcessing.IMessageType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Communication.DataProcessing.IMessageType.DISCONNECTION
      commentId: F:Communication.DataProcessing.IMessageType.DISCONNECTION
      language: CSharp
      name:
        CSharp: DISCONNECTION
        VB: DISCONNECTION
      nameWithType:
        CSharp: IMessageType.DISCONNECTION
        VB: IMessageType.DISCONNECTION
      qualifiedName:
        CSharp: Communication.DataProcessing.IMessageType.DISCONNECTION
        VB: Communication.DataProcessing.IMessageType.DISCONNECTION
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing
      source:
        id: DISCONNECTION
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\MessageType.cs
        startLine: 8
      syntax:
        content:
          CSharp: DISCONNECTION = 1
          VB: DISCONNECTION = 1
        return:
          type: Communication.DataProcessing.IMessageType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Communication.DataProcessing.IMessageType.PLAYERINFO
      commentId: F:Communication.DataProcessing.IMessageType.PLAYERINFO
      language: CSharp
      name:
        CSharp: PLAYERINFO
        VB: PLAYERINFO
      nameWithType:
        CSharp: IMessageType.PLAYERINFO
        VB: IMessageType.PLAYERINFO
      qualifiedName:
        CSharp: Communication.DataProcessing.IMessageType.PLAYERINFO
        VB: Communication.DataProcessing.IMessageType.PLAYERINFO
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing
      source:
        id: PLAYERINFO
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\MessageType.cs
        startLine: 9
      syntax:
        content:
          CSharp: PLAYERINFO = 2
          VB: PLAYERINFO = 2
        return:
          type: Communication.DataProcessing.IMessageType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Communication.DataProcessing.IMessageType.BOATSELECT
      commentId: F:Communication.DataProcessing.IMessageType.BOATSELECT
      language: CSharp
      name:
        CSharp: BOATSELECT
        VB: BOATSELECT
      nameWithType:
        CSharp: IMessageType.BOATSELECT
        VB: IMessageType.BOATSELECT
      qualifiedName:
        CSharp: Communication.DataProcessing.IMessageType.BOATSELECT
        VB: Communication.DataProcessing.IMessageType.BOATSELECT
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing
      source:
        id: BOATSELECT
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\MessageType.cs
        startLine: 10
      syntax:
        content:
          CSharp: BOATSELECT = 3
          VB: BOATSELECT = 3
        return:
          type: Communication.DataProcessing.IMessageType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Communication.DataProcessing.IMessageType.BOATLISTREQUEST
      commentId: F:Communication.DataProcessing.IMessageType.BOATLISTREQUEST
      language: CSharp
      name:
        CSharp: BOATLISTREQUEST
        VB: BOATLISTREQUEST
      nameWithType:
        CSharp: IMessageType.BOATLISTREQUEST
        VB: IMessageType.BOATLISTREQUEST
      qualifiedName:
        CSharp: Communication.DataProcessing.IMessageType.BOATLISTREQUEST
        VB: Communication.DataProcessing.IMessageType.BOATLISTREQUEST
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing
      source:
        id: BOATLISTREQUEST
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\MessageType.cs
        startLine: 11
      syntax:
        content:
          CSharp: BOATLISTREQUEST = 4
          VB: BOATLISTREQUEST = 4
        return:
          type: Communication.DataProcessing.IMessageType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Communication.DataProcessing.IMessageType.ENDRACE
      commentId: F:Communication.DataProcessing.IMessageType.ENDRACE
      language: CSharp
      name:
        CSharp: ENDRACE
        VB: ENDRACE
      nameWithType:
        CSharp: IMessageType.ENDRACE
        VB: IMessageType.ENDRACE
      qualifiedName:
        CSharp: Communication.DataProcessing.IMessageType.ENDRACE
        VB: Communication.DataProcessing.IMessageType.ENDRACE
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing
      source:
        id: ENDRACE
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\MessageType.cs
        startLine: 12
      syntax:
        content:
          CSharp: ENDRACE = 5
          VB: ENDRACE = 5
        return:
          type: Communication.DataProcessing.IMessageType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Communication.DataProcessing.IMessageType.RACELISTUPDATE
      commentId: F:Communication.DataProcessing.IMessageType.RACELISTUPDATE
      language: CSharp
      name:
        CSharp: RACELISTUPDATE
        VB: RACELISTUPDATE
      nameWithType:
        CSharp: IMessageType.RACELISTUPDATE
        VB: IMessageType.RACELISTUPDATE
      qualifiedName:
        CSharp: Communication.DataProcessing.IMessageType.RACELISTUPDATE
        VB: Communication.DataProcessing.IMessageType.RACELISTUPDATE
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing
      source:
        id: RACELISTUPDATE
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\MessageType.cs
        startLine: 13
      syntax:
        content:
          CSharp: RACELISTUPDATE = 6
          VB: RACELISTUPDATE = 6
        return:
          type: Communication.DataProcessing.IMessageType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Communication.DataProcessing.OMessageType
    commentId: T:Communication.DataProcessing.OMessageType
    language: CSharp
    name:
      CSharp: OMessageType
      VB: OMessageType
    nameWithType:
      CSharp: OMessageType
      VB: OMessageType
    qualifiedName:
      CSharp: Communication.DataProcessing.OMessageType
      VB: Communication.DataProcessing.OMessageType
    type: Enum
    assemblies:
    - Assembly-CSharp
    namespace: Communication.DataProcessing
    source:
      id: OMessageType
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\MessageType.cs
      startLine: 16
    syntax:
      content:
        CSharp: public enum OMessageType
        VB: Public Enum OMessageType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Communication.DataProcessing.OMessageType.CONNECTION
      commentId: F:Communication.DataProcessing.OMessageType.CONNECTION
      language: CSharp
      name:
        CSharp: CONNECTION
        VB: CONNECTION
      nameWithType:
        CSharp: OMessageType.CONNECTION
        VB: OMessageType.CONNECTION
      qualifiedName:
        CSharp: Communication.DataProcessing.OMessageType.CONNECTION
        VB: Communication.DataProcessing.OMessageType.CONNECTION
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing
      source:
        id: CONNECTION
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\MessageType.cs
        startLine: 18
      syntax:
        content:
          CSharp: CONNECTION = 0
          VB: CONNECTION = 0
        return:
          type: Communication.DataProcessing.OMessageType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Communication.DataProcessing.OMessageType.DISCONNECTION
      commentId: F:Communication.DataProcessing.OMessageType.DISCONNECTION
      language: CSharp
      name:
        CSharp: DISCONNECTION
        VB: DISCONNECTION
      nameWithType:
        CSharp: OMessageType.DISCONNECTION
        VB: OMessageType.DISCONNECTION
      qualifiedName:
        CSharp: Communication.DataProcessing.OMessageType.DISCONNECTION
        VB: Communication.DataProcessing.OMessageType.DISCONNECTION
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing
      source:
        id: DISCONNECTION
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\MessageType.cs
        startLine: 19
      syntax:
        content:
          CSharp: DISCONNECTION = 1
          VB: DISCONNECTION = 1
        return:
          type: Communication.DataProcessing.OMessageType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Communication.DataProcessing.OMessageType.INITRACE
      commentId: F:Communication.DataProcessing.OMessageType.INITRACE
      language: CSharp
      name:
        CSharp: INITRACE
        VB: INITRACE
      nameWithType:
        CSharp: OMessageType.INITRACE
        VB: OMessageType.INITRACE
      qualifiedName:
        CSharp: Communication.DataProcessing.OMessageType.INITRACE
        VB: Communication.DataProcessing.OMessageType.INITRACE
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing
      source:
        id: INITRACE
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\MessageType.cs
        startLine: 20
      syntax:
        content:
          CSharp: INITRACE = 2
          VB: INITRACE = 2
        return:
          type: Communication.DataProcessing.OMessageType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Communication.DataProcessing.OMessageType.ENVIRONMENTINFO
      commentId: F:Communication.DataProcessing.OMessageType.ENVIRONMENTINFO
      language: CSharp
      name:
        CSharp: ENVIRONMENTINFO
        VB: ENVIRONMENTINFO
      nameWithType:
        CSharp: OMessageType.ENVIRONMENTINFO
        VB: OMessageType.ENVIRONMENTINFO
      qualifiedName:
        CSharp: Communication.DataProcessing.OMessageType.ENVIRONMENTINFO
        VB: Communication.DataProcessing.OMessageType.ENVIRONMENTINFO
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing
      source:
        id: ENVIRONMENTINFO
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\MessageType.cs
        startLine: 21
      syntax:
        content:
          CSharp: ENVIRONMENTINFO = 3
          VB: ENVIRONMENTINFO = 3
        return:
          type: Communication.DataProcessing.OMessageType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Communication.DataProcessing.OMessageType.BOATSELECTED
      commentId: F:Communication.DataProcessing.OMessageType.BOATSELECTED
      language: CSharp
      name:
        CSharp: BOATSELECTED
        VB: BOATSELECTED
      nameWithType:
        CSharp: OMessageType.BOATSELECTED
        VB: OMessageType.BOATSELECTED
      qualifiedName:
        CSharp: Communication.DataProcessing.OMessageType.BOATSELECTED
        VB: Communication.DataProcessing.OMessageType.BOATSELECTED
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing
      source:
        id: BOATSELECTED
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\MessageType.cs
        startLine: 22
      syntax:
        content:
          CSharp: BOATSELECTED = 4
          VB: BOATSELECTED = 4
        return:
          type: Communication.DataProcessing.OMessageType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Communication.DataProcessing.OMessageType.BOATLIST
      commentId: F:Communication.DataProcessing.OMessageType.BOATLIST
      language: CSharp
      name:
        CSharp: BOATLIST
        VB: BOATLIST
      nameWithType:
        CSharp: OMessageType.BOATLIST
        VB: OMessageType.BOATLIST
      qualifiedName:
        CSharp: Communication.DataProcessing.OMessageType.BOATLIST
        VB: Communication.DataProcessing.OMessageType.BOATLIST
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing
      source:
        id: BOATLIST
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\MessageType.cs
        startLine: 23
      syntax:
        content:
          CSharp: BOATLIST = 5
          VB: BOATLIST = 5
        return:
          type: Communication.DataProcessing.OMessageType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Communication.DataProcessing.OMessageType.ENDRACE
      commentId: F:Communication.DataProcessing.OMessageType.ENDRACE
      language: CSharp
      name:
        CSharp: ENDRACE
        VB: ENDRACE
      nameWithType:
        CSharp: OMessageType.ENDRACE
        VB: OMessageType.ENDRACE
      qualifiedName:
        CSharp: Communication.DataProcessing.OMessageType.ENDRACE
        VB: Communication.DataProcessing.OMessageType.ENDRACE
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing
      source:
        id: ENDRACE
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\MessageType.cs
        startLine: 24
      syntax:
        content:
          CSharp: ENDRACE = 6
          VB: ENDRACE = 6
        return:
          type: Communication.DataProcessing.OMessageType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Communication.DataProcessing.OMessageType.RACELIST
      commentId: F:Communication.DataProcessing.OMessageType.RACELIST
      language: CSharp
      name:
        CSharp: RACELIST
        VB: RACELIST
      nameWithType:
        CSharp: OMessageType.RACELIST
        VB: OMessageType.RACELIST
      qualifiedName:
        CSharp: Communication.DataProcessing.OMessageType.RACELIST
        VB: Communication.DataProcessing.OMessageType.RACELIST
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing
      source:
        id: RACELIST
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\MessageType.cs
        startLine: 25
      syntax:
        content:
          CSharp: RACELIST = 7
          VB: RACELIST = 7
        return:
          type: Communication.DataProcessing.OMessageType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
- id: Communication.DataProcessing.Json
  commentId: N:Communication.DataProcessing.Json
  language: CSharp
  name:
    CSharp: Communication.DataProcessing.Json
    VB: Communication.DataProcessing.Json
  nameWithType:
    CSharp: Communication.DataProcessing.Json
    VB: Communication.DataProcessing.Json
  qualifiedName:
    CSharp: Communication.DataProcessing.Json
    VB: Communication.DataProcessing.Json
  type: Namespace
  assemblies:
  - Assembly-CSharp
  modifiers: {}
  items:
  - id: Communication.DataProcessing.Json.BoatType
    commentId: T:Communication.DataProcessing.Json.BoatType
    language: CSharp
    name:
      CSharp: BoatType
      VB: BoatType
    nameWithType:
      CSharp: BoatType
      VB: BoatType
    qualifiedName:
      CSharp: Communication.DataProcessing.Json.BoatType
      VB: Communication.DataProcessing.Json.BoatType
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Communication.DataProcessing.Json
    source:
      id: BoatType
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Json\BoatType.cs
      startLine: 13
    syntax:
      content:
        CSharp: public class BoatType
        VB: Public Class BoatType
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Communication.DataProcessing.Json.BoatType.ID
      commentId: P:Communication.DataProcessing.Json.BoatType.ID
      language: CSharp
      name:
        CSharp: ID
        VB: ID
      nameWithType:
        CSharp: BoatType.ID
        VB: BoatType.ID
      qualifiedName:
        CSharp: Communication.DataProcessing.Json.BoatType.ID
        VB: Communication.DataProcessing.Json.BoatType.ID
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Json
      source:
        id: ID
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Json\BoatType.cs
        startLine: 18
      syntax:
        content:
          CSharp: public long ID { get; set; }
          VB: Public Property ID As Long
        parameters: []
        return:
          type: System.Int64
      overload: Communication.DataProcessing.Json.BoatType.ID*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Communication.DataProcessing.Json.BoatType.Name
      commentId: P:Communication.DataProcessing.Json.BoatType.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: BoatType.Name
        VB: BoatType.Name
      qualifiedName:
        CSharp: Communication.DataProcessing.Json.BoatType.Name
        VB: Communication.DataProcessing.Json.BoatType.Name
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Json
      source:
        id: Name
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Json\BoatType.cs
        startLine: 19
      syntax:
        content:
          CSharp: public string Name { get; set; }
          VB: Public Property Name As String
        parameters: []
        return:
          type: System.String
      overload: Communication.DataProcessing.Json.BoatType.Name*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Communication.DataProcessing.Json.BoatType.HullLength
      commentId: P:Communication.DataProcessing.Json.BoatType.HullLength
      language: CSharp
      name:
        CSharp: HullLength
        VB: HullLength
      nameWithType:
        CSharp: BoatType.HullLength
        VB: BoatType.HullLength
      qualifiedName:
        CSharp: Communication.DataProcessing.Json.BoatType.HullLength
        VB: Communication.DataProcessing.Json.BoatType.HullLength
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Json
      source:
        id: HullLength
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Json\BoatType.cs
        startLine: 20
      syntax:
        content:
          CSharp: public float HullLength { get; set; }
          VB: Public Property HullLength As Single
        parameters: []
        return:
          type: System.Single
      overload: Communication.DataProcessing.Json.BoatType.HullLength*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Communication.DataProcessing.Json.BoatType.OverallLength
      commentId: P:Communication.DataProcessing.Json.BoatType.OverallLength
      language: CSharp
      name:
        CSharp: OverallLength
        VB: OverallLength
      nameWithType:
        CSharp: BoatType.OverallLength
        VB: BoatType.OverallLength
      qualifiedName:
        CSharp: Communication.DataProcessing.Json.BoatType.OverallLength
        VB: Communication.DataProcessing.Json.BoatType.OverallLength
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Json
      source:
        id: OverallLength
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Json\BoatType.cs
        startLine: 21
      syntax:
        content:
          CSharp: public float OverallLength { get; set; }
          VB: Public Property OverallLength As Single
        parameters: []
        return:
          type: System.Single
      overload: Communication.DataProcessing.Json.BoatType.OverallLength*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Communication.DataProcessing.Json.BoatType.HullWidth
      commentId: P:Communication.DataProcessing.Json.BoatType.HullWidth
      language: CSharp
      name:
        CSharp: HullWidth
        VB: HullWidth
      nameWithType:
        CSharp: BoatType.HullWidth
        VB: BoatType.HullWidth
      qualifiedName:
        CSharp: Communication.DataProcessing.Json.BoatType.HullWidth
        VB: Communication.DataProcessing.Json.BoatType.HullWidth
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Json
      source:
        id: HullWidth
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Json\BoatType.cs
        startLine: 22
      syntax:
        content:
          CSharp: public float HullWidth { get; set; }
          VB: Public Property HullWidth As Single
        parameters: []
        return:
          type: System.Single
      overload: Communication.DataProcessing.Json.BoatType.HullWidth*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Communication.DataProcessing.Json.BoatType.OverallWidth
      commentId: P:Communication.DataProcessing.Json.BoatType.OverallWidth
      language: CSharp
      name:
        CSharp: OverallWidth
        VB: OverallWidth
      nameWithType:
        CSharp: BoatType.OverallWidth
        VB: BoatType.OverallWidth
      qualifiedName:
        CSharp: Communication.DataProcessing.Json.BoatType.OverallWidth
        VB: Communication.DataProcessing.Json.BoatType.OverallWidth
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Json
      source:
        id: OverallWidth
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Json\BoatType.cs
        startLine: 23
      syntax:
        content:
          CSharp: public float OverallWidth { get; set; }
          VB: Public Property OverallWidth As Single
        parameters: []
        return:
          type: System.Single
      overload: Communication.DataProcessing.Json.BoatType.OverallWidth*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Communication.DataProcessing.Json.BoatType.Draft
      commentId: P:Communication.DataProcessing.Json.BoatType.Draft
      language: CSharp
      name:
        CSharp: Draft
        VB: Draft
      nameWithType:
        CSharp: BoatType.Draft
        VB: BoatType.Draft
      qualifiedName:
        CSharp: Communication.DataProcessing.Json.BoatType.Draft
        VB: Communication.DataProcessing.Json.BoatType.Draft
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Json
      source:
        id: Draft
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Json\BoatType.cs
        startLine: 24
      syntax:
        content:
          CSharp: public float Draft { get; set; }
          VB: Public Property Draft As Single
        parameters: []
        return:
          type: System.Single
      overload: Communication.DataProcessing.Json.BoatType.Draft*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Communication.DataProcessing.Json.BoatType.AirDraft
      commentId: P:Communication.DataProcessing.Json.BoatType.AirDraft
      language: CSharp
      name:
        CSharp: AirDraft
        VB: AirDraft
      nameWithType:
        CSharp: BoatType.AirDraft
        VB: BoatType.AirDraft
      qualifiedName:
        CSharp: Communication.DataProcessing.Json.BoatType.AirDraft
        VB: Communication.DataProcessing.Json.BoatType.AirDraft
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Json
      source:
        id: AirDraft
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Json\BoatType.cs
        startLine: 25
      syntax:
        content:
          CSharp: public float AirDraft { get; set; }
          VB: Public Property AirDraft As Single
        parameters: []
        return:
          type: System.Single
      overload: Communication.DataProcessing.Json.BoatType.AirDraft*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Communication.DataProcessing.Json.BoatType.Weight
      commentId: P:Communication.DataProcessing.Json.BoatType.Weight
      language: CSharp
      name:
        CSharp: Weight
        VB: Weight
      nameWithType:
        CSharp: BoatType.Weight
        VB: BoatType.Weight
      qualifiedName:
        CSharp: Communication.DataProcessing.Json.BoatType.Weight
        VB: Communication.DataProcessing.Json.BoatType.Weight
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Json
      source:
        id: Weight
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Json\BoatType.cs
        startLine: 26
      syntax:
        content:
          CSharp: public float Weight { get; set; }
          VB: Public Property Weight As Single
        parameters: []
        return:
          type: System.Single
      overload: Communication.DataProcessing.Json.BoatType.Weight*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Communication.DataProcessing.Json.BoatType.PolarFileList
      commentId: P:Communication.DataProcessing.Json.BoatType.PolarFileList
      language: CSharp
      name:
        CSharp: PolarFileList
        VB: PolarFileList
      nameWithType:
        CSharp: BoatType.PolarFileList
        VB: BoatType.PolarFileList
      qualifiedName:
        CSharp: Communication.DataProcessing.Json.BoatType.PolarFileList
        VB: Communication.DataProcessing.Json.BoatType.PolarFileList
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Json
      source:
        id: PolarFileList
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Json\BoatType.cs
        startLine: 27
      syntax:
        content:
          CSharp: public List<Polar> PolarFileList { get; set; }
          VB: Public Property PolarFileList As List(Of Polar)
        parameters: []
        return:
          type: System.Collections.Generic.List{Communication.DataProcessing.Json.Polar}
      overload: Communication.DataProcessing.Json.BoatType.PolarFileList*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Communication.DataProcessing.Json.BoatType.BoatTypesList
      commentId: F:Communication.DataProcessing.Json.BoatType.BoatTypesList
      language: CSharp
      name:
        CSharp: BoatTypesList
        VB: BoatTypesList
      nameWithType:
        CSharp: BoatType.BoatTypesList
        VB: BoatType.BoatTypesList
      qualifiedName:
        CSharp: Communication.DataProcessing.Json.BoatType.BoatTypesList
        VB: Communication.DataProcessing.Json.BoatType.BoatTypesList
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Json
      source:
        id: BoatTypesList
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Json\BoatType.cs
        startLine: 32
      syntax:
        content:
          CSharp: public static List<BoatType> BoatTypesList
          VB: Public Shared BoatTypesList As List(Of BoatType)
        return:
          type: System.Collections.Generic.List{Communication.DataProcessing.Json.BoatType}
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Communication.DataProcessing.Json.JsonParse
    commentId: T:Communication.DataProcessing.Json.JsonParse
    language: CSharp
    name:
      CSharp: JsonParse
      VB: JsonParse
    nameWithType:
      CSharp: JsonParse
      VB: JsonParse
    qualifiedName:
      CSharp: Communication.DataProcessing.Json.JsonParse
      VB: Communication.DataProcessing.Json.JsonParse
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Communication.DataProcessing.Json
    source:
      id: JsonParse
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Json\JsonParse.cs
      startLine: 6
    syntax:
      content:
        CSharp: public class JsonParse
        VB: Public Class JsonParse
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Communication.DataProcessing.Json.JsonParse.JsonDeserialize(System.String)
      commentId: M:Communication.DataProcessing.Json.JsonParse.JsonDeserialize(System.String)
      language: CSharp
      name:
        CSharp: JsonDeserialize(String)
        VB: JsonDeserialize(String)
      nameWithType:
        CSharp: JsonParse.JsonDeserialize(String)
        VB: JsonParse.JsonDeserialize(String)
      qualifiedName:
        CSharp: Communication.DataProcessing.Json.JsonParse.JsonDeserialize(System.String)
        VB: Communication.DataProcessing.Json.JsonParse.JsonDeserialize(System.String)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Json
      source:
        id: JsonDeserialize
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Json\JsonParse.cs
        startLine: 8
      syntax:
        content:
          CSharp: public static dynamic JsonDeserialize(string data)
          VB: Public Shared Function JsonDeserialize(data As String) As Object
        parameters:
        - id: data
          type: System.String
        return:
          type: System.Object
      overload: Communication.DataProcessing.Json.JsonParse.JsonDeserialize*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Communication.DataProcessing.Json.JsonParse.JsonSerialiseConnection(Communication.DataProcessing.IMessageType,System.Int64,System.Int64,System.String,System.String,System.Int32,System.String)
      commentId: M:Communication.DataProcessing.Json.JsonParse.JsonSerialiseConnection(Communication.DataProcessing.IMessageType,System.Int64,System.Int64,System.String,System.String,System.Int32,System.String)
      language: CSharp
      name:
        CSharp: JsonSerialiseConnection(IMessageType, Int64, Int64, String, String, Int32, String)
        VB: JsonSerialiseConnection(IMessageType, Int64, Int64, String, String, Int32, String)
      nameWithType:
        CSharp: JsonParse.JsonSerialiseConnection(IMessageType, Int64, Int64, String, String, Int32, String)
        VB: JsonParse.JsonSerialiseConnection(IMessageType, Int64, Int64, String, String, Int32, String)
      qualifiedName:
        CSharp: Communication.DataProcessing.Json.JsonParse.JsonSerialiseConnection(Communication.DataProcessing.IMessageType, System.Int64, System.Int64, System.String, System.String, System.Int32, System.String)
        VB: Communication.DataProcessing.Json.JsonParse.JsonSerialiseConnection(Communication.DataProcessing.IMessageType, System.Int64, System.Int64, System.String, System.String, System.Int32, System.String)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Json
      source:
        id: JsonSerialiseConnection
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Json\JsonParse.cs
        startLine: 12
      syntax:
        content:
          CSharp: public static string JsonSerialiseConnection(IMessageType TypeMessage, long Id, long IdGame, string NMEA, string Boat, int IdPlayer, string NamePlayer)
          VB: Public Shared Function JsonSerialiseConnection(TypeMessage As IMessageType, Id As Long, IdGame As Long, NMEA As String, Boat As String, IdPlayer As Integer, NamePlayer As String) As String
        parameters:
        - id: TypeMessage
          type: Communication.DataProcessing.IMessageType
        - id: Id
          type: System.Int64
        - id: IdGame
          type: System.Int64
        - id: NMEA
          type: System.String
        - id: Boat
          type: System.String
        - id: IdPlayer
          type: System.Int32
        - id: NamePlayer
          type: System.String
        return:
          type: System.String
      overload: Communication.DataProcessing.Json.JsonParse.JsonSerialiseConnection*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIConnection(Communication.DataProcessing.IMessageType)
      commentId: M:Communication.DataProcessing.Json.JsonParse.JsonSerialiseIConnection(Communication.DataProcessing.IMessageType)
      language: CSharp
      name:
        CSharp: JsonSerialiseIConnection(IMessageType)
        VB: JsonSerialiseIConnection(IMessageType)
      nameWithType:
        CSharp: JsonParse.JsonSerialiseIConnection(IMessageType)
        VB: JsonParse.JsonSerialiseIConnection(IMessageType)
      qualifiedName:
        CSharp: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIConnection(Communication.DataProcessing.IMessageType)
        VB: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIConnection(Communication.DataProcessing.IMessageType)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Json
      source:
        id: JsonSerialiseIConnection
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Json\JsonParse.cs
        startLine: 30
      syntax:
        content:
          CSharp: public static string JsonSerialiseIConnection(IMessageType TypeMessage)
          VB: Public Shared Function JsonSerialiseIConnection(TypeMessage As IMessageType) As String
        parameters:
        - id: TypeMessage
          type: Communication.DataProcessing.IMessageType
        return:
          type: System.String
      overload: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIConnection*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIDisconnection(Communication.DataProcessing.IMessageType)
      commentId: M:Communication.DataProcessing.Json.JsonParse.JsonSerialiseIDisconnection(Communication.DataProcessing.IMessageType)
      language: CSharp
      name:
        CSharp: JsonSerialiseIDisconnection(IMessageType)
        VB: JsonSerialiseIDisconnection(IMessageType)
      nameWithType:
        CSharp: JsonParse.JsonSerialiseIDisconnection(IMessageType)
        VB: JsonParse.JsonSerialiseIDisconnection(IMessageType)
      qualifiedName:
        CSharp: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIDisconnection(Communication.DataProcessing.IMessageType)
        VB: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIDisconnection(Communication.DataProcessing.IMessageType)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Json
      source:
        id: JsonSerialiseIDisconnection
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Json\JsonParse.cs
        startLine: 39
      syntax:
        content:
          CSharp: public static string JsonSerialiseIDisconnection(IMessageType TypeMessage)
          VB: Public Shared Function JsonSerialiseIDisconnection(TypeMessage As IMessageType) As String
        parameters:
        - id: TypeMessage
          type: Communication.DataProcessing.IMessageType
        return:
          type: System.String
      overload: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIDisconnection*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIPlayerInfo(Communication.DataProcessing.IMessageType)
      commentId: M:Communication.DataProcessing.Json.JsonParse.JsonSerialiseIPlayerInfo(Communication.DataProcessing.IMessageType)
      language: CSharp
      name:
        CSharp: JsonSerialiseIPlayerInfo(IMessageType)
        VB: JsonSerialiseIPlayerInfo(IMessageType)
      nameWithType:
        CSharp: JsonParse.JsonSerialiseIPlayerInfo(IMessageType)
        VB: JsonParse.JsonSerialiseIPlayerInfo(IMessageType)
      qualifiedName:
        CSharp: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIPlayerInfo(Communication.DataProcessing.IMessageType)
        VB: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIPlayerInfo(Communication.DataProcessing.IMessageType)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Json
      source:
        id: JsonSerialiseIPlayerInfo
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Json\JsonParse.cs
        startLine: 49
      syntax:
        content:
          CSharp: public static string JsonSerialiseIPlayerInfo(IMessageType TypeMessage)
          VB: Public Shared Function JsonSerialiseIPlayerInfo(TypeMessage As IMessageType) As String
        parameters:
        - id: TypeMessage
          type: Communication.DataProcessing.IMessageType
        return:
          type: System.String
      overload: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIPlayerInfo*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIBoatSelect(Communication.DataProcessing.IMessageType)
      commentId: M:Communication.DataProcessing.Json.JsonParse.JsonSerialiseIBoatSelect(Communication.DataProcessing.IMessageType)
      language: CSharp
      name:
        CSharp: JsonSerialiseIBoatSelect(IMessageType)
        VB: JsonSerialiseIBoatSelect(IMessageType)
      nameWithType:
        CSharp: JsonParse.JsonSerialiseIBoatSelect(IMessageType)
        VB: JsonParse.JsonSerialiseIBoatSelect(IMessageType)
      qualifiedName:
        CSharp: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIBoatSelect(Communication.DataProcessing.IMessageType)
        VB: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIBoatSelect(Communication.DataProcessing.IMessageType)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Json
      source:
        id: JsonSerialiseIBoatSelect
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Json\JsonParse.cs
        startLine: 58
      syntax:
        content:
          CSharp: public static string JsonSerialiseIBoatSelect(IMessageType TypeMessage)
          VB: Public Shared Function JsonSerialiseIBoatSelect(TypeMessage As IMessageType) As String
        parameters:
        - id: TypeMessage
          type: Communication.DataProcessing.IMessageType
        return:
          type: System.String
      overload: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIBoatSelect*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIBoatListRequest(Communication.DataProcessing.IMessageType)
      commentId: M:Communication.DataProcessing.Json.JsonParse.JsonSerialiseIBoatListRequest(Communication.DataProcessing.IMessageType)
      language: CSharp
      name:
        CSharp: JsonSerialiseIBoatListRequest(IMessageType)
        VB: JsonSerialiseIBoatListRequest(IMessageType)
      nameWithType:
        CSharp: JsonParse.JsonSerialiseIBoatListRequest(IMessageType)
        VB: JsonParse.JsonSerialiseIBoatListRequest(IMessageType)
      qualifiedName:
        CSharp: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIBoatListRequest(Communication.DataProcessing.IMessageType)
        VB: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIBoatListRequest(Communication.DataProcessing.IMessageType)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Json
      source:
        id: JsonSerialiseIBoatListRequest
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Json\JsonParse.cs
        startLine: 68
      syntax:
        content:
          CSharp: public static string JsonSerialiseIBoatListRequest(IMessageType TypeMessage)
          VB: Public Shared Function JsonSerialiseIBoatListRequest(TypeMessage As IMessageType) As String
        parameters:
        - id: TypeMessage
          type: Communication.DataProcessing.IMessageType
        return:
          type: System.String
      overload: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIBoatListRequest*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIEndRace(Communication.DataProcessing.IMessageType)
      commentId: M:Communication.DataProcessing.Json.JsonParse.JsonSerialiseIEndRace(Communication.DataProcessing.IMessageType)
      language: CSharp
      name:
        CSharp: JsonSerialiseIEndRace(IMessageType)
        VB: JsonSerialiseIEndRace(IMessageType)
      nameWithType:
        CSharp: JsonParse.JsonSerialiseIEndRace(IMessageType)
        VB: JsonParse.JsonSerialiseIEndRace(IMessageType)
      qualifiedName:
        CSharp: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIEndRace(Communication.DataProcessing.IMessageType)
        VB: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIEndRace(Communication.DataProcessing.IMessageType)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Json
      source:
        id: JsonSerialiseIEndRace
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Json\JsonParse.cs
        startLine: 77
      syntax:
        content:
          CSharp: public static string JsonSerialiseIEndRace(IMessageType TypeMessage)
          VB: Public Shared Function JsonSerialiseIEndRace(TypeMessage As IMessageType) As String
        parameters:
        - id: TypeMessage
          type: Communication.DataProcessing.IMessageType
        return:
          type: System.String
      overload: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIEndRace*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Communication.DataProcessing.Json.JsonParse.JsonSerialiseOConnection
      commentId: M:Communication.DataProcessing.Json.JsonParse.JsonSerialiseOConnection
      language: CSharp
      name:
        CSharp: JsonSerialiseOConnection()
        VB: JsonSerialiseOConnection()
      nameWithType:
        CSharp: JsonParse.JsonSerialiseOConnection()
        VB: JsonParse.JsonSerialiseOConnection()
      qualifiedName:
        CSharp: Communication.DataProcessing.Json.JsonParse.JsonSerialiseOConnection()
        VB: Communication.DataProcessing.Json.JsonParse.JsonSerialiseOConnection()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Json
      source:
        id: JsonSerialiseOConnection
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Json\JsonParse.cs
        startLine: 87
      syntax:
        content:
          CSharp: public static string JsonSerialiseOConnection()
          VB: Public Shared Function JsonSerialiseOConnection As String
        return:
          type: System.String
      overload: Communication.DataProcessing.Json.JsonParse.JsonSerialiseOConnection*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Communication.DataProcessing.Json.JsonParse.JsonSerialiseODisconnection
      commentId: M:Communication.DataProcessing.Json.JsonParse.JsonSerialiseODisconnection
      language: CSharp
      name:
        CSharp: JsonSerialiseODisconnection()
        VB: JsonSerialiseODisconnection()
      nameWithType:
        CSharp: JsonParse.JsonSerialiseODisconnection()
        VB: JsonParse.JsonSerialiseODisconnection()
      qualifiedName:
        CSharp: Communication.DataProcessing.Json.JsonParse.JsonSerialiseODisconnection()
        VB: Communication.DataProcessing.Json.JsonParse.JsonSerialiseODisconnection()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Json
      source:
        id: JsonSerialiseODisconnection
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Json\JsonParse.cs
        startLine: 97
      syntax:
        content:
          CSharp: public static string JsonSerialiseODisconnection()
          VB: Public Shared Function JsonSerialiseODisconnection As String
        return:
          type: System.String
      overload: Communication.DataProcessing.Json.JsonParse.JsonSerialiseODisconnection*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Communication.DataProcessing.Json.JsonParse.JsonSerialiseOInitRace(Communication.DataProcessing.OMessageType)
      commentId: M:Communication.DataProcessing.Json.JsonParse.JsonSerialiseOInitRace(Communication.DataProcessing.OMessageType)
      language: CSharp
      name:
        CSharp: JsonSerialiseOInitRace(OMessageType)
        VB: JsonSerialiseOInitRace(OMessageType)
      nameWithType:
        CSharp: JsonParse.JsonSerialiseOInitRace(OMessageType)
        VB: JsonParse.JsonSerialiseOInitRace(OMessageType)
      qualifiedName:
        CSharp: Communication.DataProcessing.Json.JsonParse.JsonSerialiseOInitRace(Communication.DataProcessing.OMessageType)
        VB: Communication.DataProcessing.Json.JsonParse.JsonSerialiseOInitRace(Communication.DataProcessing.OMessageType)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Json
      source:
        id: JsonSerialiseOInitRace
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Json\JsonParse.cs
        startLine: 107
      syntax:
        content:
          CSharp: public static string JsonSerialiseOInitRace(OMessageType TypeMessage)
          VB: Public Shared Function JsonSerialiseOInitRace(TypeMessage As OMessageType) As String
        parameters:
        - id: TypeMessage
          type: Communication.DataProcessing.OMessageType
        return:
          type: System.String
      overload: Communication.DataProcessing.Json.JsonParse.JsonSerialiseOInitRace*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Communication.DataProcessing.Json.JsonParse.JsonSerialiseOEnvironmentInfo(Communication.DataProcessing.OMessageType)
      commentId: M:Communication.DataProcessing.Json.JsonParse.JsonSerialiseOEnvironmentInfo(Communication.DataProcessing.OMessageType)
      language: CSharp
      name:
        CSharp: JsonSerialiseOEnvironmentInfo(OMessageType)
        VB: JsonSerialiseOEnvironmentInfo(OMessageType)
      nameWithType:
        CSharp: JsonParse.JsonSerialiseOEnvironmentInfo(OMessageType)
        VB: JsonParse.JsonSerialiseOEnvironmentInfo(OMessageType)
      qualifiedName:
        CSharp: Communication.DataProcessing.Json.JsonParse.JsonSerialiseOEnvironmentInfo(Communication.DataProcessing.OMessageType)
        VB: Communication.DataProcessing.Json.JsonParse.JsonSerialiseOEnvironmentInfo(Communication.DataProcessing.OMessageType)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Json
      source:
        id: JsonSerialiseOEnvironmentInfo
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Json\JsonParse.cs
        startLine: 117
      syntax:
        content:
          CSharp: public static string JsonSerialiseOEnvironmentInfo(OMessageType TypeMessage)
          VB: Public Shared Function JsonSerialiseOEnvironmentInfo(TypeMessage As OMessageType) As String
        parameters:
        - id: TypeMessage
          type: Communication.DataProcessing.OMessageType
        return:
          type: System.String
      overload: Communication.DataProcessing.Json.JsonParse.JsonSerialiseOEnvironmentInfo*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Communication.DataProcessing.Json.JsonParse.JsonSerialiseOBoatList
      commentId: M:Communication.DataProcessing.Json.JsonParse.JsonSerialiseOBoatList
      language: CSharp
      name:
        CSharp: JsonSerialiseOBoatList()
        VB: JsonSerialiseOBoatList()
      nameWithType:
        CSharp: JsonParse.JsonSerialiseOBoatList()
        VB: JsonParse.JsonSerialiseOBoatList()
      qualifiedName:
        CSharp: Communication.DataProcessing.Json.JsonParse.JsonSerialiseOBoatList()
        VB: Communication.DataProcessing.Json.JsonParse.JsonSerialiseOBoatList()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Json
      source:
        id: JsonSerialiseOBoatList
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Json\JsonParse.cs
        startLine: 127
      syntax:
        content:
          CSharp: public static string JsonSerialiseOBoatList()
          VB: Public Shared Function JsonSerialiseOBoatList As String
        return:
          type: System.String
      overload: Communication.DataProcessing.Json.JsonParse.JsonSerialiseOBoatList*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Communication.DataProcessing.Json.JsonParse.JsonSerialiseOEndRace
      commentId: M:Communication.DataProcessing.Json.JsonParse.JsonSerialiseOEndRace
      language: CSharp
      name:
        CSharp: JsonSerialiseOEndRace()
        VB: JsonSerialiseOEndRace()
      nameWithType:
        CSharp: JsonParse.JsonSerialiseOEndRace()
        VB: JsonParse.JsonSerialiseOEndRace()
      qualifiedName:
        CSharp: Communication.DataProcessing.Json.JsonParse.JsonSerialiseOEndRace()
        VB: Communication.DataProcessing.Json.JsonParse.JsonSerialiseOEndRace()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Json
      source:
        id: JsonSerialiseOEndRace
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Json\JsonParse.cs
        startLine: 140
      syntax:
        content:
          CSharp: public static string JsonSerialiseOEndRace()
          VB: Public Shared Function JsonSerialiseOEndRace As String
        return:
          type: System.String
      overload: Communication.DataProcessing.Json.JsonParse.JsonSerialiseOEndRace*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Communication.DataProcessing.Json.Polar
    commentId: T:Communication.DataProcessing.Json.Polar
    language: CSharp
    name:
      CSharp: Polar
      VB: Polar
    nameWithType:
      CSharp: Polar
      VB: Polar
    qualifiedName:
      CSharp: Communication.DataProcessing.Json.Polar
      VB: Communication.DataProcessing.Json.Polar
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Communication.DataProcessing.Json
    source:
      id: Polar
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Json\Polar.cs
      startLine: 5
    syntax:
      content:
        CSharp: public class Polar
        VB: Public Class Polar
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Communication.DataProcessing.Json.Polar.Name
      commentId: P:Communication.DataProcessing.Json.Polar.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: Polar.Name
        VB: Polar.Name
      qualifiedName:
        CSharp: Communication.DataProcessing.Json.Polar.Name
        VB: Communication.DataProcessing.Json.Polar.Name
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Json
      source:
        id: Name
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Json\Polar.cs
        startLine: 7
      syntax:
        content:
          CSharp: public string Name { get; set; }
          VB: Public Property Name As String
        parameters: []
        return:
          type: System.String
      overload: Communication.DataProcessing.Json.Polar.Name*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Communication.DataProcessing.Json.Polar.File
      commentId: P:Communication.DataProcessing.Json.Polar.File
      language: CSharp
      name:
        CSharp: File
        VB: File
      nameWithType:
        CSharp: Polar.File
        VB: Polar.File
      qualifiedName:
        CSharp: Communication.DataProcessing.Json.Polar.File
        VB: Communication.DataProcessing.Json.Polar.File
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Json
      source:
        id: File
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Json\Polar.cs
        startLine: 8
      syntax:
        content:
          CSharp: public string File { get; set; }
          VB: Public Property File As String
        parameters: []
        return:
          type: System.String
      overload: Communication.DataProcessing.Json.Polar.File*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Communication.DataProcessing.Json.Polar.ID
      commentId: P:Communication.DataProcessing.Json.Polar.ID
      language: CSharp
      name:
        CSharp: ID
        VB: ID
      nameWithType:
        CSharp: Polar.ID
        VB: Polar.ID
      qualifiedName:
        CSharp: Communication.DataProcessing.Json.Polar.ID
        VB: Communication.DataProcessing.Json.Polar.ID
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Json
      source:
        id: ID
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Json\Polar.cs
        startLine: 9
      syntax:
        content:
          CSharp: public long ID { get; set; }
          VB: Public Property ID As Long
        parameters: []
        return:
          type: System.Int64
      overload: Communication.DataProcessing.Json.Polar.ID*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
  - id: Communication.DataProcessing.Json.PolFile
    commentId: T:Communication.DataProcessing.Json.PolFile
    language: CSharp
    name:
      CSharp: PolFile
      VB: PolFile
    nameWithType:
      CSharp: PolFile
      VB: PolFile
    qualifiedName:
      CSharp: Communication.DataProcessing.Json.PolFile
      VB: Communication.DataProcessing.Json.PolFile
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Communication.DataProcessing.Json
    source:
      id: PolFile
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Json\PolFile.cs
      startLine: 2
    syntax:
      content:
        CSharp: public class PolFile
        VB: Public Class PolFile
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Communication.DataProcessing.Json.PolFile.PolaireFile
      commentId: P:Communication.DataProcessing.Json.PolFile.PolaireFile
      language: CSharp
      name:
        CSharp: PolaireFile
        VB: PolaireFile
      nameWithType:
        CSharp: PolFile.PolaireFile
        VB: PolFile.PolaireFile
      qualifiedName:
        CSharp: Communication.DataProcessing.Json.PolFile.PolaireFile
        VB: Communication.DataProcessing.Json.PolFile.PolaireFile
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Json
      source:
        id: PolaireFile
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Json\PolFile.cs
        startLine: 4
      syntax:
        content:
          CSharp: public string PolaireFile { get; set; }
          VB: Public Property PolaireFile As String
        parameters: []
        return:
          type: System.String
      overload: Communication.DataProcessing.Json.PolFile.PolaireFile*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
- id: Communication.DataProcessing.Files
  commentId: N:Communication.DataProcessing.Files
  language: CSharp
  name:
    CSharp: Communication.DataProcessing.Files
    VB: Communication.DataProcessing.Files
  nameWithType:
    CSharp: Communication.DataProcessing.Files
    VB: Communication.DataProcessing.Files
  qualifiedName:
    CSharp: Communication.DataProcessing.Files
    VB: Communication.DataProcessing.Files
  type: Namespace
  assemblies:
  - Assembly-CSharp
  modifiers: {}
  items:
  - id: Communication.DataProcessing.Files.FileManageData
    commentId: T:Communication.DataProcessing.Files.FileManageData
    language: CSharp
    name:
      CSharp: FileManageData
      VB: FileManageData
    nameWithType:
      CSharp: FileManageData
      VB: FileManageData
    qualifiedName:
      CSharp: Communication.DataProcessing.Files.FileManageData
      VB: Communication.DataProcessing.Files.FileManageData
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Communication.DataProcessing.Files
    source:
      id: FileManageData
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Files\FileManageBoat.cs
      startLine: 10
    summary: "\nManagement of files and folders of the race manager to save information locally\n"
    example: []
    syntax:
      content:
        CSharp: public class FileManageData
        VB: Public Class FileManageData
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Communication.DataProcessing.Files.FileManageData.CreateFilePolaire(System.String,System.Int64,System.String)
      commentId: M:Communication.DataProcessing.Files.FileManageData.CreateFilePolaire(System.String,System.Int64,System.String)
      language: CSharp
      name:
        CSharp: CreateFilePolaire(String, Int64, String)
        VB: CreateFilePolaire(String, Int64, String)
      nameWithType:
        CSharp: FileManageData.CreateFilePolaire(String, Int64, String)
        VB: FileManageData.CreateFilePolaire(String, Int64, String)
      qualifiedName:
        CSharp: Communication.DataProcessing.Files.FileManageData.CreateFilePolaire(System.String, System.Int64, System.String)
        VB: Communication.DataProcessing.Files.FileManageData.CreateFilePolaire(System.String, System.Int64, System.String)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Files
      source:
        id: CreateFilePolaire
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Files\FileManagePolaire.cs
        startLine: 8
      syntax:
        content:
          CSharp: public static void CreateFilePolaire(string Name, long ID, string DataPol)
          VB: Public Shared Sub CreateFilePolaire(Name As String, ID As Long, DataPol As String)
        parameters:
        - id: Name
          type: System.String
        - id: ID
          type: System.Int64
        - id: DataPol
          type: System.String
      overload: Communication.DataProcessing.Files.FileManageData.CreateFilePolaire*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Communication.DataProcessing.Files.FileManageData.SaveData(System.String)
      commentId: M:Communication.DataProcessing.Files.FileManageData.SaveData(System.String)
      language: CSharp
      name:
        CSharp: SaveData(String)
        VB: SaveData(String)
      nameWithType:
        CSharp: FileManageData.SaveData(String)
        VB: FileManageData.SaveData(String)
      qualifiedName:
        CSharp: Communication.DataProcessing.Files.FileManageData.SaveData(System.String)
        VB: Communication.DataProcessing.Files.FileManageData.SaveData(System.String)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Files
      source:
        id: SaveData
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Files\FileManageData.cs
        startLine: 9
      syntax:
        content:
          CSharp: public static void SaveData(string response)
          VB: Public Shared Sub SaveData(response As String)
        parameters:
        - id: response
          type: System.String
      overload: Communication.DataProcessing.Files.FileManageData.SaveData*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Communication.DataProcessing.Files.FileManageData.currentDirectory
      commentId: F:Communication.DataProcessing.Files.FileManageData.currentDirectory
      language: CSharp
      name:
        CSharp: currentDirectory
        VB: currentDirectory
      nameWithType:
        CSharp: FileManageData.currentDirectory
        VB: FileManageData.currentDirectory
      qualifiedName:
        CSharp: Communication.DataProcessing.Files.FileManageData.currentDirectory
        VB: Communication.DataProcessing.Files.FileManageData.currentDirectory
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Files
      source:
        id: currentDirectory
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Files\FileManageLocal.cs
        startLine: 12
      syntax:
        content:
          CSharp: public static string currentDirectory
          VB: Public Shared currentDirectory As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Communication.DataProcessing.Files.FileManageData.pathData
      commentId: F:Communication.DataProcessing.Files.FileManageData.pathData
      language: CSharp
      name:
        CSharp: pathData
        VB: pathData
      nameWithType:
        CSharp: FileManageData.pathData
        VB: FileManageData.pathData
      qualifiedName:
        CSharp: Communication.DataProcessing.Files.FileManageData.pathData
        VB: Communication.DataProcessing.Files.FileManageData.pathData
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Files
      source:
        id: pathData
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Files\FileManageLocal.cs
        startLine: 13
      syntax:
        content:
          CSharp: public static string pathData
          VB: Public Shared pathData As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Communication.DataProcessing.Files.FileManageData.pathDataBoat
      commentId: F:Communication.DataProcessing.Files.FileManageData.pathDataBoat
      language: CSharp
      name:
        CSharp: pathDataBoat
        VB: pathDataBoat
      nameWithType:
        CSharp: FileManageData.pathDataBoat
        VB: FileManageData.pathDataBoat
      qualifiedName:
        CSharp: Communication.DataProcessing.Files.FileManageData.pathDataBoat
        VB: Communication.DataProcessing.Files.FileManageData.pathDataBoat
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Files
      source:
        id: pathDataBoat
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Files\FileManageLocal.cs
        startLine: 14
      syntax:
        content:
          CSharp: public static string pathDataBoat
          VB: Public Shared pathDataBoat As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Communication.DataProcessing.Files.FileManageData.pathDataPol
      commentId: F:Communication.DataProcessing.Files.FileManageData.pathDataPol
      language: CSharp
      name:
        CSharp: pathDataPol
        VB: pathDataPol
      nameWithType:
        CSharp: FileManageData.pathDataPol
        VB: FileManageData.pathDataPol
      qualifiedName:
        CSharp: Communication.DataProcessing.Files.FileManageData.pathDataPol
        VB: Communication.DataProcessing.Files.FileManageData.pathDataPol
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Files
      source:
        id: pathDataPol
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Files\FileManageLocal.cs
        startLine: 15
      syntax:
        content:
          CSharp: public static string pathDataPol
          VB: Public Shared pathDataPol As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Communication.DataProcessing.Files.FileManageData.pathDataRace
      commentId: F:Communication.DataProcessing.Files.FileManageData.pathDataRace
      language: CSharp
      name:
        CSharp: pathDataRace
        VB: pathDataRace
      nameWithType:
        CSharp: FileManageData.pathDataRace
        VB: FileManageData.pathDataRace
      qualifiedName:
        CSharp: Communication.DataProcessing.Files.FileManageData.pathDataRace
        VB: Communication.DataProcessing.Files.FileManageData.pathDataRace
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Files
      source:
        id: pathDataRace
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Files\FileManageLocal.cs
        startLine: 16
      syntax:
        content:
          CSharp: public static string pathDataRace
          VB: Public Shared pathDataRace As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Communication.DataProcessing.Files.FileManageData.pathJsonData
      commentId: F:Communication.DataProcessing.Files.FileManageData.pathJsonData
      language: CSharp
      name:
        CSharp: pathJsonData
        VB: pathJsonData
      nameWithType:
        CSharp: FileManageData.pathJsonData
        VB: FileManageData.pathJsonData
      qualifiedName:
        CSharp: Communication.DataProcessing.Files.FileManageData.pathJsonData
        VB: Communication.DataProcessing.Files.FileManageData.pathJsonData
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Files
      source:
        id: pathJsonData
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Files\FileManageLocal.cs
        startLine: 17
      syntax:
        content:
          CSharp: public static string pathJsonData
          VB: Public Shared pathJsonData As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Communication.DataProcessing.Files.FileManageData.CheckFilesFolderData
      commentId: M:Communication.DataProcessing.Files.FileManageData.CheckFilesFolderData
      language: CSharp
      name:
        CSharp: CheckFilesFolderData()
        VB: CheckFilesFolderData()
      nameWithType:
        CSharp: FileManageData.CheckFilesFolderData()
        VB: FileManageData.CheckFilesFolderData()
      qualifiedName:
        CSharp: Communication.DataProcessing.Files.FileManageData.CheckFilesFolderData()
        VB: Communication.DataProcessing.Files.FileManageData.CheckFilesFolderData()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Files
      source:
        id: CheckFilesFolderData
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Files\FileManageLocal.cs
        startLine: 22
      summary: "\nCheck if directory used by Race Manager exist and create him if don&apos;t exist\n"
      example: []
      syntax:
        content:
          CSharp: public static void CheckFilesFolderData()
          VB: Public Shared Sub CheckFilesFolderData
      overload: Communication.DataProcessing.Files.FileManageData.CheckFilesFolderData*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Communication.DataProcessing.Files.FileManageData.DeleteFile(System.String)
      commentId: M:Communication.DataProcessing.Files.FileManageData.DeleteFile(System.String)
      language: CSharp
      name:
        CSharp: DeleteFile(String)
        VB: DeleteFile(String)
      nameWithType:
        CSharp: FileManageData.DeleteFile(String)
        VB: FileManageData.DeleteFile(String)
      qualifiedName:
        CSharp: Communication.DataProcessing.Files.FileManageData.DeleteFile(System.String)
        VB: Communication.DataProcessing.Files.FileManageData.DeleteFile(System.String)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Files
      source:
        id: DeleteFile
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Files\FileManageLocal.cs
        startLine: 39
      summary: "\nDelete local file with specific path file and update data.json, he is a index of all pol and boat files\n"
      example: []
      syntax:
        content:
          CSharp: public static void DeleteFile(string path)
          VB: Public Shared Sub DeleteFile(path As String)
        parameters:
        - id: path
          type: System.String
          description: complete path of file you want to delete
      overload: Communication.DataProcessing.Files.FileManageData.DeleteFile*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Communication.DataProcessing.Files.FileManageData.ReadFilePath(System.String)
      commentId: M:Communication.DataProcessing.Files.FileManageData.ReadFilePath(System.String)
      language: CSharp
      name:
        CSharp: ReadFilePath(String)
        VB: ReadFilePath(String)
      nameWithType:
        CSharp: FileManageData.ReadFilePath(String)
        VB: FileManageData.ReadFilePath(String)
      qualifiedName:
        CSharp: Communication.DataProcessing.Files.FileManageData.ReadFilePath(System.String)
        VB: Communication.DataProcessing.Files.FileManageData.ReadFilePath(System.String)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Files
      source:
        id: ReadFilePath
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Files\FileManageLocal.cs
        startLine: 74
      syntax:
        content:
          CSharp: public static string ReadFilePath(string path)
          VB: Public Shared Function ReadFilePath(path As String) As String
        parameters:
        - id: path
          type: System.String
        return:
          type: System.String
      overload: Communication.DataProcessing.Files.FileManageData.ReadFilePath*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Communication.DataProcessing.Files.FileManageData.CheckDirectory(System.String)
      commentId: M:Communication.DataProcessing.Files.FileManageData.CheckDirectory(System.String)
      language: CSharp
      name:
        CSharp: CheckDirectory(String)
        VB: CheckDirectory(String)
      nameWithType:
        CSharp: FileManageData.CheckDirectory(String)
        VB: FileManageData.CheckDirectory(String)
      qualifiedName:
        CSharp: Communication.DataProcessing.Files.FileManageData.CheckDirectory(System.String)
        VB: Communication.DataProcessing.Files.FileManageData.CheckDirectory(System.String)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Files
      source:
        id: CheckDirectory
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Files\FileManageLocal.cs
        startLine: 97
      summary: "\nCheck if specific directory exist\n"
      example: []
      syntax:
        content:
          CSharp: public static void CheckDirectory(string path)
          VB: Public Shared Sub CheckDirectory(path As String)
        parameters:
        - id: path
          type: System.String
          description: 'complete path of directory '
      overload: Communication.DataProcessing.Files.FileManageData.CheckDirectory*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Communication.DataProcessing.Files.FileManageData.CreateDirectory(System.String)
      commentId: M:Communication.DataProcessing.Files.FileManageData.CreateDirectory(System.String)
      language: CSharp
      name:
        CSharp: CreateDirectory(String)
        VB: CreateDirectory(String)
      nameWithType:
        CSharp: FileManageData.CreateDirectory(String)
        VB: FileManageData.CreateDirectory(String)
      qualifiedName:
        CSharp: Communication.DataProcessing.Files.FileManageData.CreateDirectory(System.String)
        VB: Communication.DataProcessing.Files.FileManageData.CreateDirectory(System.String)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Files
      source:
        id: CreateDirectory
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Files\FileManageLocal.cs
        startLine: 109
      summary: "\nCreation of directory\n"
      example: []
      syntax:
        content:
          CSharp: public static void CreateDirectory(string path)
          VB: Public Shared Sub CreateDirectory(path As String)
        parameters:
        - id: path
          type: System.String
          description: 'complete path of directory '
      overload: Communication.DataProcessing.Files.FileManageData.CreateDirectory*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Communication.DataProcessing.Files.FileManageData.CreateBoatJson(Communication.DataProcessing.Json.BoatType)
      commentId: M:Communication.DataProcessing.Files.FileManageData.CreateBoatJson(Communication.DataProcessing.Json.BoatType)
      language: CSharp
      name:
        CSharp: CreateBoatJson(BoatType)
        VB: CreateBoatJson(BoatType)
      nameWithType:
        CSharp: FileManageData.CreateBoatJson(BoatType)
        VB: FileManageData.CreateBoatJson(BoatType)
      qualifiedName:
        CSharp: Communication.DataProcessing.Files.FileManageData.CreateBoatJson(Communication.DataProcessing.Json.BoatType)
        VB: Communication.DataProcessing.Files.FileManageData.CreateBoatJson(Communication.DataProcessing.Json.BoatType)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Files
      source:
        id: CreateBoatJson
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Files\FileManageBoat.cs
        startLine: 16
      summary: "\nSave boat of a <xref href=\"Communication.DataProcessing.Json.BoatType\" data-throw-if-not-resolved=\"false\"></xref> on spécific json file\n"
      example: []
      syntax:
        content:
          CSharp: public static void CreateBoatJson(BoatType DataBoat)
          VB: Public Shared Sub CreateBoatJson(DataBoat As BoatType)
        parameters:
        - id: DataBoat
          type: Communication.DataProcessing.Json.BoatType
          description: all information of boat
      overload: Communication.DataProcessing.Files.FileManageData.CreateBoatJson*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Communication.DataProcessing.Json.BoatType: 
    - id: Communication.DataProcessing.Files.FileManageData.UpdateAllBoatTypesList
      commentId: M:Communication.DataProcessing.Files.FileManageData.UpdateAllBoatTypesList
      language: CSharp
      name:
        CSharp: UpdateAllBoatTypesList()
        VB: UpdateAllBoatTypesList()
      nameWithType:
        CSharp: FileManageData.UpdateAllBoatTypesList()
        VB: FileManageData.UpdateAllBoatTypesList()
      qualifiedName:
        CSharp: Communication.DataProcessing.Files.FileManageData.UpdateAllBoatTypesList()
        VB: Communication.DataProcessing.Files.FileManageData.UpdateAllBoatTypesList()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Files
      source:
        id: UpdateAllBoatTypesList
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Files\FileManageBoat.cs
        startLine: 27
      summary: "\nAdd to BoatTypesList all boat already exist on local file\n"
      example: []
      syntax:
        content:
          CSharp: public static void UpdateAllBoatTypesList()
          VB: Public Shared Sub UpdateAllBoatTypesList
      overload: Communication.DataProcessing.Files.FileManageData.UpdateAllBoatTypesList*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Communication.DataProcessing.Files.FileManageData.UpdateBoatTypesList(System.String)
      commentId: M:Communication.DataProcessing.Files.FileManageData.UpdateBoatTypesList(System.String)
      language: CSharp
      name:
        CSharp: UpdateBoatTypesList(String)
        VB: UpdateBoatTypesList(String)
      nameWithType:
        CSharp: FileManageData.UpdateBoatTypesList(String)
        VB: FileManageData.UpdateBoatTypesList(String)
      qualifiedName:
        CSharp: Communication.DataProcessing.Files.FileManageData.UpdateBoatTypesList(System.String)
        VB: Communication.DataProcessing.Files.FileManageData.UpdateBoatTypesList(System.String)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Files
      source:
        id: UpdateBoatTypesList
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Files\FileManageBoat.cs
        startLine: 41
      summary: "\nAdd to BoatTypesList boat already exist on local file\n"
      example: []
      syntax:
        content:
          CSharp: public static void UpdateBoatTypesList(string path)
          VB: Public Shared Sub UpdateBoatTypesList(path As String)
        parameters:
        - id: path
          type: System.String
          description: complete path of file you want to read
      overload: Communication.DataProcessing.Files.FileManageData.UpdateBoatTypesList*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Communication.DataProcessing.Files.FileManageData.ResetAllFiles
      commentId: M:Communication.DataProcessing.Files.FileManageData.ResetAllFiles
      language: CSharp
      name:
        CSharp: ResetAllFiles()
        VB: ResetAllFiles()
      nameWithType:
        CSharp: FileManageData.ResetAllFiles()
        VB: FileManageData.ResetAllFiles()
      qualifiedName:
        CSharp: Communication.DataProcessing.Files.FileManageData.ResetAllFiles()
        VB: Communication.DataProcessing.Files.FileManageData.ResetAllFiles()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Files
      source:
        id: ResetAllFiles
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Files\FileManageBoat.cs
        startLine: 55
      summary: "\nDelete dyrectori of all files and recreate him\n"
      example: []
      syntax:
        content:
          CSharp: public static void ResetAllFiles()
          VB: Public Shared Sub ResetAllFiles
      overload: Communication.DataProcessing.Files.FileManageData.ResetAllFiles*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Communication.DataProcessing.Files.FileManageData.ResetBoatList
      commentId: M:Communication.DataProcessing.Files.FileManageData.ResetBoatList
      language: CSharp
      name:
        CSharp: ResetBoatList()
        VB: ResetBoatList()
      nameWithType:
        CSharp: FileManageData.ResetBoatList()
        VB: FileManageData.ResetBoatList()
      qualifiedName:
        CSharp: Communication.DataProcessing.Files.FileManageData.ResetBoatList()
        VB: Communication.DataProcessing.Files.FileManageData.ResetBoatList()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Files
      source:
        id: ResetBoatList
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Files\FileManageBoat.cs
        startLine: 69
      summary: "\nDelete boat of a <xref href=\"Communication.DataProcessing.Json.BoatType\" data-throw-if-not-resolved=\"false\"></xref>\n"
      example: []
      syntax:
        content:
          CSharp: public static void ResetBoatList()
          VB: Public Shared Sub ResetBoatList
      overload: Communication.DataProcessing.Files.FileManageData.ResetBoatList*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Communication.DataProcessing.Json.BoatType: 
    references:
      Communication.DataProcessing.Json.BoatType: 
  - id: Communication.DataProcessing.Files.FileManageData.WriteInFile
    commentId: T:Communication.DataProcessing.Files.FileManageData.WriteInFile
    language: CSharp
    name:
      CSharp: FileManageData.WriteInFile
      VB: FileManageData.WriteInFile
    nameWithType:
      CSharp: FileManageData.WriteInFile
      VB: FileManageData.WriteInFile
    qualifiedName:
      CSharp: Communication.DataProcessing.Files.FileManageData.WriteInFile
      VB: Communication.DataProcessing.Files.FileManageData.WriteInFile
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Communication.DataProcessing.Files
    source:
      id: WriteInFile
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Files\FileManageLocal.cs
      startLine: 44
    syntax:
      content:
        CSharp: public class WriteInFile
        VB: Public Class WriteInFile
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Communication.DataProcessing.Files.FileManageData.WriteInFile.WriteFilePath(System.String,System.String)
      commentId: M:Communication.DataProcessing.Files.FileManageData.WriteInFile.WriteFilePath(System.String,System.String)
      language: CSharp
      name:
        CSharp: WriteFilePath(String, String)
        VB: WriteFilePath(String, String)
      nameWithType:
        CSharp: FileManageData.WriteInFile.WriteFilePath(String, String)
        VB: FileManageData.WriteInFile.WriteFilePath(String, String)
      qualifiedName:
        CSharp: Communication.DataProcessing.Files.FileManageData.WriteInFile.WriteFilePath(System.String, System.String)
        VB: Communication.DataProcessing.Files.FileManageData.WriteInFile.WriteFilePath(System.String, System.String)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Communication.DataProcessing.Files
      source:
        id: WriteFilePath
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Communication\DataProcessing\Files\FileManageLocal.cs
        startLine: 51
      summary: "\nWrite data on file\n"
      example: []
      syntax:
        content:
          CSharp: public static void WriteFilePath(string path, string message)
          VB: Public Shared Sub WriteFilePath(path As String, message As String)
        parameters:
        - id: path
          type: System.String
          description: complete path of file you want to write on him
        - id: message
          type: System.String
          description: data you want write on file
      overload: Communication.DataProcessing.Files.FileManageData.WriteInFile.WriteFilePath*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
- id: Environement
  commentId: N:Environement
  language: CSharp
  name:
    CSharp: Environement
    VB: Environement
  nameWithType:
    CSharp: Environement
    VB: Environement
  qualifiedName:
    CSharp: Environement
    VB: Environement
  type: Namespace
  assemblies:
  - Assembly-CSharp
  modifiers: {}
  items:
  - id: Environement.Conditions
    commentId: T:Environement.Conditions
    language: CSharp
    name:
      CSharp: Conditions
      VB: Conditions
    nameWithType:
      CSharp: Conditions
      VB: Conditions
    qualifiedName:
      CSharp: Environement.Conditions
      VB: Environement.Conditions
    type: Enum
    assemblies:
    - Assembly-CSharp
    namespace: Environement
    source:
      id: Conditions
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Conditions.cs
      startLine: 6
    summary: "\nEnumeration of the environmental condition available\n"
    example: []
    syntax:
      content:
        CSharp: public enum Conditions
        VB: Public Enum Conditions
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Environement.Conditions.WindDirection
      commentId: F:Environement.Conditions.WindDirection
      language: CSharp
      name:
        CSharp: WindDirection
        VB: WindDirection
      nameWithType:
        CSharp: Conditions.WindDirection
        VB: Conditions.WindDirection
      qualifiedName:
        CSharp: Environement.Conditions.WindDirection
        VB: Environement.Conditions.WindDirection
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Environement
      source:
        id: WindDirection
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Conditions.cs
        startLine: 8
      syntax:
        content:
          CSharp: WindDirection = 0
          VB: WindDirection = 0
        return:
          type: Environement.Conditions
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Environement.Conditions.WindSpeed
      commentId: F:Environement.Conditions.WindSpeed
      language: CSharp
      name:
        CSharp: WindSpeed
        VB: WindSpeed
      nameWithType:
        CSharp: Conditions.WindSpeed
        VB: Conditions.WindSpeed
      qualifiedName:
        CSharp: Environement.Conditions.WindSpeed
        VB: Environement.Conditions.WindSpeed
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Environement
      source:
        id: WindSpeed
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Conditions.cs
        startLine: 9
      syntax:
        content:
          CSharp: WindSpeed = 1
          VB: WindSpeed = 1
        return:
          type: Environement.Conditions
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Environement.Conditions.CurrentDirection
      commentId: F:Environement.Conditions.CurrentDirection
      language: CSharp
      name:
        CSharp: CurrentDirection
        VB: CurrentDirection
      nameWithType:
        CSharp: Conditions.CurrentDirection
        VB: Conditions.CurrentDirection
      qualifiedName:
        CSharp: Environement.Conditions.CurrentDirection
        VB: Environement.Conditions.CurrentDirection
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Environement
      source:
        id: CurrentDirection
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Conditions.cs
        startLine: 10
      syntax:
        content:
          CSharp: CurrentDirection = 2
          VB: CurrentDirection = 2
        return:
          type: Environement.Conditions
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Environement.Conditions.CurrentSpeed
      commentId: F:Environement.Conditions.CurrentSpeed
      language: CSharp
      name:
        CSharp: CurrentSpeed
        VB: CurrentSpeed
      nameWithType:
        CSharp: Conditions.CurrentSpeed
        VB: Conditions.CurrentSpeed
      qualifiedName:
        CSharp: Environement.Conditions.CurrentSpeed
        VB: Environement.Conditions.CurrentSpeed
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Environement
      source:
        id: CurrentSpeed
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Conditions.cs
        startLine: 11
      syntax:
        content:
          CSharp: CurrentSpeed = 3
          VB: CurrentSpeed = 3
        return:
          type: Environement.Conditions
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Environement.Conditions.WaveDirection
      commentId: F:Environement.Conditions.WaveDirection
      language: CSharp
      name:
        CSharp: WaveDirection
        VB: WaveDirection
      nameWithType:
        CSharp: Conditions.WaveDirection
        VB: Conditions.WaveDirection
      qualifiedName:
        CSharp: Environement.Conditions.WaveDirection
        VB: Environement.Conditions.WaveDirection
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Environement
      source:
        id: WaveDirection
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Conditions.cs
        startLine: 12
      syntax:
        content:
          CSharp: WaveDirection = 4
          VB: WaveDirection = 4
        return:
          type: Environement.Conditions
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Environement.Conditions.WaveAmplitude
      commentId: F:Environement.Conditions.WaveAmplitude
      language: CSharp
      name:
        CSharp: WaveAmplitude
        VB: WaveAmplitude
      nameWithType:
        CSharp: Conditions.WaveAmplitude
        VB: Conditions.WaveAmplitude
      qualifiedName:
        CSharp: Environement.Conditions.WaveAmplitude
        VB: Environement.Conditions.WaveAmplitude
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Environement
      source:
        id: WaveAmplitude
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Conditions.cs
        startLine: 13
      syntax:
        content:
          CSharp: WaveAmplitude = 5
          VB: WaveAmplitude = 5
        return:
          type: Environement.Conditions
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Environement.Conditions.WaveLength
      commentId: F:Environement.Conditions.WaveLength
      language: CSharp
      name:
        CSharp: WaveLength
        VB: WaveLength
      nameWithType:
        CSharp: Conditions.WaveLength
        VB: Conditions.WaveLength
      qualifiedName:
        CSharp: Environement.Conditions.WaveLength
        VB: Environement.Conditions.WaveLength
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Environement
      source:
        id: WaveLength
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Conditions.cs
        startLine: 14
      syntax:
        content:
          CSharp: WaveLength = 6
          VB: WaveLength = 6
        return:
          type: Environement.Conditions
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Environement.Wave
    commentId: T:Environement.Wave
    language: CSharp
    name:
      CSharp: Wave
      VB: Wave
    nameWithType:
      CSharp: Wave
      VB: Wave
    qualifiedName:
      CSharp: Environement.Wave
      VB: Environement.Wave
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Environement
    source:
      id: Wave
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Wave.cs
      startLine: 11
    summary: "\nThis class manages the environmental values linked to the waves\n"
    example: []
    syntax:
      content:
        CSharp: public class Wave
        VB: Public Class Wave
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Environement.Wave.#ctor
      commentId: M:Environement.Wave.#ctor
      language: CSharp
      name:
        CSharp: Wave()
        VB: Wave()
      nameWithType:
        CSharp: Wave.Wave()
        VB: Wave.Wave()
      qualifiedName:
        CSharp: Environement.Wave.Wave()
        VB: Environement.Wave.Wave()
      type: Constructor
      assemblies:
      - Assembly-CSharp
      namespace: Environement
      source:
        id: .ctor
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Wave.cs
        startLine: 16
      summary: "\nCreate a Wave instance\n"
      example: []
      syntax:
        content:
          CSharp: public Wave()
          VB: Public Sub New
      overload: Environement.Wave.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Wave.Update(System.Single,System.Single,System.Single)
      commentId: M:Environement.Wave.Update(System.Single,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: Update(Single, Single, Single)
        VB: Update(Single, Single, Single)
      nameWithType:
        CSharp: Wave.Update(Single, Single, Single)
        VB: Wave.Update(Single, Single, Single)
      qualifiedName:
        CSharp: Environement.Wave.Update(System.Single, System.Single, System.Single)
        VB: Environement.Wave.Update(System.Single, System.Single, System.Single)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Environement
      source:
        id: Update
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Wave.cs
        startLine: 35
      summary: "\nSet class attribut direction, amplitude and waveLength according to the inputs parameters\n"
      example: []
      syntax:
        content:
          CSharp: public void Update(float direction, float amplitude, float waveLength)
          VB: Public Sub Update(direction As Single, amplitude As Single, waveLength As Single)
        parameters:
        - id: direction
          type: System.Single
          description: input direction
        - id: amplitude
          type: System.Single
          description: input amplitude
        - id: waveLength
          type: System.Single
          description: input waveLength
      overload: Environement.Wave.Update*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Wave.SetWaveDirection(System.Single)
      commentId: M:Environement.Wave.SetWaveDirection(System.Single)
      language: CSharp
      name:
        CSharp: SetWaveDirection(Single)
        VB: SetWaveDirection(Single)
      nameWithType:
        CSharp: Wave.SetWaveDirection(Single)
        VB: Wave.SetWaveDirection(Single)
      qualifiedName:
        CSharp: Environement.Wave.SetWaveDirection(System.Single)
        VB: Environement.Wave.SetWaveDirection(System.Single)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Environement
      source:
        id: SetWaveDirection
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Wave.cs
        startLine: 45
      summary: "\nSet class attribut direction according to the input parameter\n"
      example: []
      syntax:
        content:
          CSharp: public void SetWaveDirection(float wd)
          VB: Public Sub SetWaveDirection(wd As Single)
        parameters:
        - id: wd
          type: System.Single
          description: input direction
      overload: Environement.Wave.SetWaveDirection*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Wave.SetWaveAmplitude(System.Single)
      commentId: M:Environement.Wave.SetWaveAmplitude(System.Single)
      language: CSharp
      name:
        CSharp: SetWaveAmplitude(Single)
        VB: SetWaveAmplitude(Single)
      nameWithType:
        CSharp: Wave.SetWaveAmplitude(Single)
        VB: Wave.SetWaveAmplitude(Single)
      qualifiedName:
        CSharp: Environement.Wave.SetWaveAmplitude(System.Single)
        VB: Environement.Wave.SetWaveAmplitude(System.Single)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Environement
      source:
        id: SetWaveAmplitude
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Wave.cs
        startLine: 54
      summary: "\nSet class attribut amplitude according to the input parameter\n"
      example: []
      syntax:
        content:
          CSharp: public void SetWaveAmplitude(float amplitude)
          VB: Public Sub SetWaveAmplitude(amplitude As Single)
        parameters:
        - id: amplitude
          type: System.Single
          description: input amplitude
      overload: Environement.Wave.SetWaveAmplitude*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Wave.SetWaveLength(System.Single)
      commentId: M:Environement.Wave.SetWaveLength(System.Single)
      language: CSharp
      name:
        CSharp: SetWaveLength(Single)
        VB: SetWaveLength(Single)
      nameWithType:
        CSharp: Wave.SetWaveLength(Single)
        VB: Wave.SetWaveLength(Single)
      qualifiedName:
        CSharp: Environement.Wave.SetWaveLength(System.Single)
        VB: Environement.Wave.SetWaveLength(System.Single)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Environement
      source:
        id: SetWaveLength
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Wave.cs
        startLine: 63
      summary: "\nSet class attribut waveLength according to the input parameter\n"
      example: []
      syntax:
        content:
          CSharp: public void SetWaveLength(float length)
          VB: Public Sub SetWaveLength(length As Single)
        parameters:
        - id: length
          type: System.Single
          description: input waveLength
      overload: Environement.Wave.SetWaveLength*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Wave.GetDirection
      commentId: M:Environement.Wave.GetDirection
      language: CSharp
      name:
        CSharp: GetDirection()
        VB: GetDirection()
      nameWithType:
        CSharp: Wave.GetDirection()
        VB: Wave.GetDirection()
      qualifiedName:
        CSharp: Environement.Wave.GetDirection()
        VB: Environement.Wave.GetDirection()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Environement
      source:
        id: GetDirection
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Wave.cs
        startLine: 72
      summary: "\nreturn direction attribut\n"
      example: []
      syntax:
        content:
          CSharp: public float GetDirection()
          VB: Public Function GetDirection As Single
        return:
          type: System.Single
          description: direction attribut value
      overload: Environement.Wave.GetDirection*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Wave.GetAmplitude
      commentId: M:Environement.Wave.GetAmplitude
      language: CSharp
      name:
        CSharp: GetAmplitude()
        VB: GetAmplitude()
      nameWithType:
        CSharp: Wave.GetAmplitude()
        VB: Wave.GetAmplitude()
      qualifiedName:
        CSharp: Environement.Wave.GetAmplitude()
        VB: Environement.Wave.GetAmplitude()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Environement
      source:
        id: GetAmplitude
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Wave.cs
        startLine: 80
      summary: "\nreturn amplitude attribut\n"
      example: []
      syntax:
        content:
          CSharp: public float GetAmplitude()
          VB: Public Function GetAmplitude As Single
        return:
          type: System.Single
          description: amplitude attribut value
      overload: Environement.Wave.GetAmplitude*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Wave.GetWaveLength
      commentId: M:Environement.Wave.GetWaveLength
      language: CSharp
      name:
        CSharp: GetWaveLength()
        VB: GetWaveLength()
      nameWithType:
        CSharp: Wave.GetWaveLength()
        VB: Wave.GetWaveLength()
      qualifiedName:
        CSharp: Environement.Wave.GetWaveLength()
        VB: Environement.Wave.GetWaveLength()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Environement
      source:
        id: GetWaveLength
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Wave.cs
        startLine: 89
      summary: "\nreturn waveLength attribut\n"
      example: []
      syntax:
        content:
          CSharp: public float GetWaveLength()
          VB: Public Function GetWaveLength As Single
        return:
          type: System.Single
          description: waveLength attribut value
      overload: Environement.Wave.GetWaveLength*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Environement.Environment
    commentId: T:Environement.Environment
    language: CSharp
    name:
      CSharp: Environment
      VB: Environment
    nameWithType:
      CSharp: Environment
      VB: Environment
    qualifiedName:
      CSharp: Environement.Environment
      VB: Environement.Environment
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Environement
    source:
      id: Environment
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Environment.cs
      startLine: 10
    summary: "\nThe class contains and manages all the envorinmentales values\n"
    example: []
    syntax:
      content:
        CSharp: public class Environment
        VB: Public Class Environment
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Environement.Environment.#ctor
      commentId: M:Environement.Environment.#ctor
      language: CSharp
      name:
        CSharp: Environment()
        VB: Environment()
      nameWithType:
        CSharp: Environment.Environment()
        VB: Environment.Environment()
      qualifiedName:
        CSharp: Environement.Environment.Environment()
        VB: Environement.Environment.Environment()
      type: Constructor
      assemblies:
      - Assembly-CSharp
      namespace: Environement
      source:
        id: .ctor
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Environment.cs
        startLine: 18
      summary: "\nCreate an Environment instance \n"
      remarks: "\nIt creates also instances of <xref href=\"Environement.Current\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Environement.Wave\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Environement.Wind\" data-throw-if-not-resolved=\"false\"></xref> and assigned them to wave, current and wind attribut.\n"
      example: []
      syntax:
        content:
          CSharp: public Environment()
          VB: Public Sub New
      overload: Environement.Environment.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        Environement.Current: 
        Environement.Wave: 
        Environement.Wind: 
    - id: Environement.Environment.UpdateWind(System.Single,System.Single)
      commentId: M:Environement.Environment.UpdateWind(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: UpdateWind(Single, Single)
        VB: UpdateWind(Single, Single)
      nameWithType:
        CSharp: Environment.UpdateWind(Single, Single)
        VB: Environment.UpdateWind(Single, Single)
      qualifiedName:
        CSharp: Environement.Environment.UpdateWind(System.Single, System.Single)
        VB: Environement.Environment.UpdateWind(System.Single, System.Single)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Environement
      source:
        id: UpdateWind
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Environment.cs
        startLine: 34
      summary: "\nUpdate directionWind and windSpeed of wind attribut according to inputs\n"
      example: []
      syntax:
        content:
          CSharp: public void UpdateWind(float windSpeed, float direction)
          VB: Public Sub UpdateWind(windSpeed As Single, direction As Single)
        parameters:
        - id: windSpeed
          type: System.Single
          description: ''
        - id: direction
          type: System.Single
          description: ''
      overload: Environement.Environment.UpdateWind*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Environment.UpdateWave(System.Single,System.Single,System.Single)
      commentId: M:Environement.Environment.UpdateWave(System.Single,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: UpdateWave(Single, Single, Single)
        VB: UpdateWave(Single, Single, Single)
      nameWithType:
        CSharp: Environment.UpdateWave(Single, Single, Single)
        VB: Environment.UpdateWave(Single, Single, Single)
      qualifiedName:
        CSharp: Environement.Environment.UpdateWave(System.Single, System.Single, System.Single)
        VB: Environement.Environment.UpdateWave(System.Single, System.Single, System.Single)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Environement
      source:
        id: UpdateWave
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Environment.cs
        startLine: 44
      summary: "\nUpdate waveLength, amplitude and direction of wave attribut according to inputs\n"
      example: []
      syntax:
        content:
          CSharp: public void UpdateWave(float amplitude, float waveLength, float direction)
          VB: Public Sub UpdateWave(amplitude As Single, waveLength As Single, direction As Single)
        parameters:
        - id: amplitude
          type: System.Single
          description: ''
        - id: waveLength
          type: System.Single
          description: ''
        - id: direction
          type: System.Single
          description: ''
      overload: Environement.Environment.UpdateWave*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Environment.UpdateCurrent(System.Single,System.Single)
      commentId: M:Environement.Environment.UpdateCurrent(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: UpdateCurrent(Single, Single)
        VB: UpdateCurrent(Single, Single)
      nameWithType:
        CSharp: Environment.UpdateCurrent(Single, Single)
        VB: Environment.UpdateCurrent(Single, Single)
      qualifiedName:
        CSharp: Environement.Environment.UpdateCurrent(System.Single, System.Single)
        VB: Environement.Environment.UpdateCurrent(System.Single, System.Single)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Environement
      source:
        id: UpdateCurrent
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Environment.cs
        startLine: 53
      summary: "\nUpdate currentDirection and currentSpeed of current attribut according to inputs\n"
      example: []
      syntax:
        content:
          CSharp: public void UpdateCurrent(float speed, float direction)
          VB: Public Sub UpdateCurrent(speed As Single, direction As Single)
        parameters:
        - id: speed
          type: System.Single
          description: ''
        - id: direction
          type: System.Single
          description: ''
      overload: Environement.Environment.UpdateCurrent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Environment.setEnvironment(System.Collections.Generic.Dictionary{Environement.Conditions,System.Single})
      commentId: M:Environement.Environment.setEnvironment(System.Collections.Generic.Dictionary{Environement.Conditions,System.Single})
      language: CSharp
      name:
        CSharp: setEnvironment(Dictionary<Conditions, Single>)
        VB: setEnvironment(Dictionary(Of Conditions, Single))
      nameWithType:
        CSharp: Environment.setEnvironment(Dictionary<Conditions, Single>)
        VB: Environment.setEnvironment(Dictionary(Of Conditions, Single))
      qualifiedName:
        CSharp: Environement.Environment.setEnvironment(System.Collections.Generic.Dictionary<Environement.Conditions, System.Single>)
        VB: Environement.Environment.setEnvironment(System.Collections.Generic.Dictionary(Of Environement.Conditions, System.Single))
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Environement
      source:
        id: setEnvironment
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Environment.cs
        startLine: 61
      summary: "\nfor all <xref href=\"Environement.Conditions\" data-throw-if-not-resolved=\"false\"></xref> keys in the input dictionary, modifie the correponding environmentale value according to the input\n"
      example: []
      syntax:
        content:
          CSharp: public void setEnvironment(Dictionary<Conditions, float> environment)
          VB: Public Sub setEnvironment(environment As Dictionary(Of Conditions, Single))
        parameters:
        - id: environment
          type: System.Collections.Generic.Dictionary{Environement.Conditions,System.Single}
          description: dictionary containing environmental values to set <xref href="Environement.Conditions" data-throw-if-not-resolved="false"></xref>
      overload: Environement.Environment.setEnvironment*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        Environement.Conditions: 
    - id: Environement.Environment.getEnvState
      commentId: M:Environement.Environment.getEnvState
      language: CSharp
      name:
        CSharp: getEnvState()
        VB: getEnvState()
      nameWithType:
        CSharp: Environment.getEnvState()
        VB: Environment.getEnvState()
      qualifiedName:
        CSharp: Environement.Environment.getEnvState()
        VB: Environement.Environment.getEnvState()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Environement
      source:
        id: getEnvState
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Environment.cs
        startLine: 98
      summary: "\ncreate and return a dictionary containing all environemental as values using <xref href=\"Environement.Conditions\" data-throw-if-not-resolved=\"false\"></xref> as keys\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<Conditions, float> getEnvState()
          VB: Public Function getEnvState As Dictionary(Of Conditions, Single)
        return:
          type: System.Collections.Generic.Dictionary{Environement.Conditions,System.Single}
          description: return a dictionary containing all environemental values
      overload: Environement.Environment.getEnvState*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        Environement.Conditions: 
  - id: Environement.Current
    commentId: T:Environement.Current
    language: CSharp
    name:
      CSharp: Current
      VB: Current
    nameWithType:
      CSharp: Current
      VB: Current
    qualifiedName:
      CSharp: Environement.Current
      VB: Environement.Current
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Environement
    source:
      id: Current
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Current.cs
      startLine: 11
    summary: "\nThis class manages the environmental values linked to the current\n"
    example: []
    syntax:
      content:
        CSharp: public class Current
        VB: Public Class Current
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Environement.Current.#ctor
      commentId: M:Environement.Current.#ctor
      language: CSharp
      name:
        CSharp: Current()
        VB: Current()
      nameWithType:
        CSharp: Current.Current()
        VB: Current.Current()
      qualifiedName:
        CSharp: Environement.Current.Current()
        VB: Environement.Current.Current()
      type: Constructor
      assemblies:
      - Assembly-CSharp
      namespace: Environement
      source:
        id: .ctor
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Current.cs
        startLine: 16
      summary: "\nCreate a Current instance\n"
      example: []
      syntax:
        content:
          CSharp: public Current()
          VB: Public Sub New
      overload: Environement.Current.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Current.Update(System.Single,System.Single)
      commentId: M:Environement.Current.Update(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: Update(Single, Single)
        VB: Update(Single, Single)
      nameWithType:
        CSharp: Current.Update(Single, Single)
        VB: Current.Update(Single, Single)
      qualifiedName:
        CSharp: Environement.Current.Update(System.Single, System.Single)
        VB: Environement.Current.Update(System.Single, System.Single)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Environement
      source:
        id: Update
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Current.cs
        startLine: 28
      summary: "\nSet class attribut currentSpeed and currentDirection according to the inputs speed and direction\n"
      example: []
      syntax:
        content:
          CSharp: public void Update(float speed, float direction)
          VB: Public Sub Update(speed As Single, direction As Single)
        parameters:
        - id: speed
          type: System.Single
          description: input speed
        - id: direction
          type: System.Single
          description: input direction
      overload: Environement.Current.Update*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Current.SetCurrentSpeed(System.Single)
      commentId: M:Environement.Current.SetCurrentSpeed(System.Single)
      language: CSharp
      name:
        CSharp: SetCurrentSpeed(Single)
        VB: SetCurrentSpeed(Single)
      nameWithType:
        CSharp: Current.SetCurrentSpeed(Single)
        VB: Current.SetCurrentSpeed(Single)
      qualifiedName:
        CSharp: Environement.Current.SetCurrentSpeed(System.Single)
        VB: Environement.Current.SetCurrentSpeed(System.Single)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Environement
      source:
        id: SetCurrentSpeed
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Current.cs
        startLine: 38
      summary: "\nSet class attribut currentSpeed according to the input currentSpeed\n"
      example: []
      syntax:
        content:
          CSharp: public void SetCurrentSpeed(float currentSpeed)
          VB: Public Sub SetCurrentSpeed(currentSpeed As Single)
        parameters:
        - id: currentSpeed
          type: System.Single
          description: input speed
      overload: Environement.Current.SetCurrentSpeed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Current.SetCurrentDirection(System.Single)
      commentId: M:Environement.Current.SetCurrentDirection(System.Single)
      language: CSharp
      name:
        CSharp: SetCurrentDirection(Single)
        VB: SetCurrentDirection(Single)
      nameWithType:
        CSharp: Current.SetCurrentDirection(Single)
        VB: Current.SetCurrentDirection(Single)
      qualifiedName:
        CSharp: Environement.Current.SetCurrentDirection(System.Single)
        VB: Environement.Current.SetCurrentDirection(System.Single)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Environement
      source:
        id: SetCurrentDirection
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Current.cs
        startLine: 47
      summary: "\nSet class attribut currentDirection according to the input cd\n"
      example: []
      syntax:
        content:
          CSharp: public void SetCurrentDirection(float cd)
          VB: Public Sub SetCurrentDirection(cd As Single)
        parameters:
        - id: cd
          type: System.Single
          description: input speed
      overload: Environement.Current.SetCurrentDirection*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Current.GetCurrentSpeed
      commentId: M:Environement.Current.GetCurrentSpeed
      language: CSharp
      name:
        CSharp: GetCurrentSpeed()
        VB: GetCurrentSpeed()
      nameWithType:
        CSharp: Current.GetCurrentSpeed()
        VB: Current.GetCurrentSpeed()
      qualifiedName:
        CSharp: Environement.Current.GetCurrentSpeed()
        VB: Environement.Current.GetCurrentSpeed()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Environement
      source:
        id: GetCurrentSpeed
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Current.cs
        startLine: 56
      summary: "\nreturn currentSpeed attribut\n"
      example: []
      syntax:
        content:
          CSharp: public float GetCurrentSpeed()
          VB: Public Function GetCurrentSpeed As Single
        return:
          type: System.Single
          description: currentSpeed attribut
      overload: Environement.Current.GetCurrentSpeed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Current.GetCurrentDirection
      commentId: M:Environement.Current.GetCurrentDirection
      language: CSharp
      name:
        CSharp: GetCurrentDirection()
        VB: GetCurrentDirection()
      nameWithType:
        CSharp: Current.GetCurrentDirection()
        VB: Current.GetCurrentDirection()
      qualifiedName:
        CSharp: Environement.Current.GetCurrentDirection()
        VB: Environement.Current.GetCurrentDirection()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Environement
      source:
        id: GetCurrentDirection
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Current.cs
        startLine: 65
      summary: "\nreturn currentDirection attribut\n"
      example: []
      syntax:
        content:
          CSharp: public float GetCurrentDirection()
          VB: Public Function GetCurrentDirection As Single
        return:
          type: System.Single
          description: currentDirection attribut
      overload: Environement.Current.GetCurrentDirection*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Environement.Wind
    commentId: T:Environement.Wind
    language: CSharp
    name:
      CSharp: Wind
      VB: Wind
    nameWithType:
      CSharp: Wind
      VB: Wind
    qualifiedName:
      CSharp: Environement.Wind
      VB: Environement.Wind
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Environement
    source:
      id: Wind
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Wind.cs
      startLine: 11
    summary: "\nThis class manages the environmental values linked to the wind\n"
    example: []
    syntax:
      content:
        CSharp: public class Wind
        VB: Public Class Wind
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Environement.Wind.#ctor
      commentId: M:Environement.Wind.#ctor
      language: CSharp
      name:
        CSharp: Wind()
        VB: Wind()
      nameWithType:
        CSharp: Wind.Wind()
        VB: Wind.Wind()
      qualifiedName:
        CSharp: Environement.Wind.Wind()
        VB: Environement.Wind.Wind()
      type: Constructor
      assemblies:
      - Assembly-CSharp
      namespace: Environement
      source:
        id: .ctor
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Wind.cs
        startLine: 17
      summary: "\nCreate a Wind instance\n"
      example: []
      syntax:
        content:
          CSharp: public Wind()
          VB: Public Sub New
      overload: Environement.Wind.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Wind.Update(System.Single,System.Single)
      commentId: M:Environement.Wind.Update(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: Update(Single, Single)
        VB: Update(Single, Single)
      nameWithType:
        CSharp: Wind.Update(Single, Single)
        VB: Wind.Update(Single, Single)
      qualifiedName:
        CSharp: Environement.Wind.Update(System.Single, System.Single)
        VB: Environement.Wind.Update(System.Single, System.Single)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Environement
      source:
        id: Update
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Wind.cs
        startLine: 29
      summary: "\nSet class attribut windSpeed and directionWind according to the inputs windSpeed and direction\n"
      example: []
      syntax:
        content:
          CSharp: public void Update(float windSpeed, float direction)
          VB: Public Sub Update(windSpeed As Single, direction As Single)
        parameters:
        - id: windSpeed
          type: System.Single
        - id: direction
          type: System.Single
          description: input direction
      overload: Environement.Wind.Update*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Wind.SetWindSpeed(System.Single)
      commentId: M:Environement.Wind.SetWindSpeed(System.Single)
      language: CSharp
      name:
        CSharp: SetWindSpeed(Single)
        VB: SetWindSpeed(Single)
      nameWithType:
        CSharp: Wind.SetWindSpeed(Single)
        VB: Wind.SetWindSpeed(Single)
      qualifiedName:
        CSharp: Environement.Wind.SetWindSpeed(System.Single)
        VB: Environement.Wind.SetWindSpeed(System.Single)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Environement
      source:
        id: SetWindSpeed
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Wind.cs
        startLine: 38
      summary: "\nSet class attribut windSpeed according to the input windSpeed\n"
      example: []
      syntax:
        content:
          CSharp: public void SetWindSpeed(float windSpeed)
          VB: Public Sub SetWindSpeed(windSpeed As Single)
        parameters:
        - id: windSpeed
          type: System.Single
      overload: Environement.Wind.SetWindSpeed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Wind.SetWindDirection(System.Single)
      commentId: M:Environement.Wind.SetWindDirection(System.Single)
      language: CSharp
      name:
        CSharp: SetWindDirection(Single)
        VB: SetWindDirection(Single)
      nameWithType:
        CSharp: Wind.SetWindDirection(Single)
        VB: Wind.SetWindDirection(Single)
      qualifiedName:
        CSharp: Environement.Wind.SetWindDirection(System.Single)
        VB: Environement.Wind.SetWindDirection(System.Single)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Environement
      source:
        id: SetWindDirection
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Wind.cs
        startLine: 47
      summary: "\nSet class attribut windDirection according to the input windDirection\n"
      example: []
      syntax:
        content:
          CSharp: public void SetWindDirection(float windDirection)
          VB: Public Sub SetWindDirection(windDirection As Single)
        parameters:
        - id: windDirection
          type: System.Single
      overload: Environement.Wind.SetWindDirection*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Wind.GetWindSpeed
      commentId: M:Environement.Wind.GetWindSpeed
      language: CSharp
      name:
        CSharp: GetWindSpeed()
        VB: GetWindSpeed()
      nameWithType:
        CSharp: Wind.GetWindSpeed()
        VB: Wind.GetWindSpeed()
      qualifiedName:
        CSharp: Environement.Wind.GetWindSpeed()
        VB: Environement.Wind.GetWindSpeed()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Environement
      source:
        id: GetWindSpeed
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Wind.cs
        startLine: 56
      summary: "\nreturn windSpeed attribut\n"
      example: []
      syntax:
        content:
          CSharp: public float GetWindSpeed()
          VB: Public Function GetWindSpeed As Single
        return:
          type: System.Single
          description: windSpeed attribut
      overload: Environement.Wind.GetWindSpeed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Environement.Wind.GetWindDirection
      commentId: M:Environement.Wind.GetWindDirection
      language: CSharp
      name:
        CSharp: GetWindDirection()
        VB: GetWindDirection()
      nameWithType:
        CSharp: Wind.GetWindDirection()
        VB: Wind.GetWindDirection()
      qualifiedName:
        CSharp: Environement.Wind.GetWindDirection()
        VB: Environement.Wind.GetWindDirection()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Environement
      source:
        id: GetWindDirection
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Environement\Wind.cs
        startLine: 65
      summary: "\nreturn directionWind attribut\n"
      example: []
      syntax:
        content:
          CSharp: public float GetWindDirection()
          VB: Public Function GetWindDirection As Single
        return:
          type: System.Single
          description: directionWind attribut
      overload: Environement.Wind.GetWindDirection*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Unityscript
  commentId: N:Unityscript
  language: CSharp
  name:
    CSharp: Unityscript
    VB: Unityscript
  nameWithType:
    CSharp: Unityscript
    VB: Unityscript
  qualifiedName:
    CSharp: Unityscript
    VB: Unityscript
  type: Namespace
  assemblies:
  - Assembly-CSharp
  modifiers: {}
  items:
  - id: Unityscript.keyPress
    commentId: T:Unityscript.keyPress
    language: CSharp
    name:
      CSharp: keyPress
      VB: keyPress
    nameWithType:
      CSharp: keyPress
      VB: keyPress
    qualifiedName:
      CSharp: Unityscript.keyPress
      VB: Unityscript.keyPress
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Unityscript
    source:
      id: keyPress
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\keyPress.cs
      startLine: 10
    summary: "\nAllow user to press F1/F2/F3 to display environment panels\nand TAB to switch in between heading mode and wind mode\n"
    example: []
    syntax:
      content:
        CSharp: 'public class keyPress : MonoBehaviour'
        VB: >-
          Public Class keyPress

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    - UnityEngine.Object
    - UnityEngine.Component
    - UnityEngine.Behaviour
    - UnityEngine.MonoBehaviour
    inheritedMembers:
    - UnityEngine.MonoBehaviour.IsInvoking
    - UnityEngine.MonoBehaviour.CancelInvoke
    - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    - UnityEngine.MonoBehaviour.IsInvoking(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StopAllCoroutines
    - UnityEngine.MonoBehaviour.print(System.Object)
    - UnityEngine.MonoBehaviour.useGUILayout
    - UnityEngine.MonoBehaviour.runInEditMode
    - UnityEngine.Behaviour.enabled
    - UnityEngine.Behaviour.isActiveAndEnabled
    - UnityEngine.Component.GetComponent(System.Type)
    - UnityEngine.Component.GetComponent``1
    - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    - UnityEngine.Component.TryGetComponent``1({T}@)
    - UnityEngine.Component.GetComponent(System.String)
    - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInChildren(System.Type)
    - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentInChildren``1
    - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren(System.Type)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInChildren``1
    - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentInParent(System.Type)
    - UnityEngine.Component.GetComponentInParent``1
    - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInParent(System.Type)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInParent``1
    - UnityEngine.Component.GetComponents(System.Type)
    - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponents``1
    - UnityEngine.Component.CompareTag(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    - UnityEngine.Component.SendMessageUpwards(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,System.Object)
    - UnityEngine.Component.SendMessage(System.String)
    - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    - UnityEngine.Component.BroadcastMessage(System.String)
    - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.transform
    - UnityEngine.Component.gameObject
    - UnityEngine.Component.tag
    - UnityEngine.Object.GetInstanceID
    - UnityEngine.Object.GetHashCode
    - UnityEngine.Object.Equals(System.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Instantiate``1({T})
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    - UnityEngine.Object.Destroy(UnityEngine.Object)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    - UnityEngine.Object.FindObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object)
    - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    - UnityEngine.Object.FindObjectsOfType``1
    - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectOfType``1
    - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    - UnityEngine.Object.ToString
    - UnityEngine.Object.name
    - UnityEngine.Object.hideFlags
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Unityscript.keyPress.switchMode
      commentId: F:Unityscript.keyPress.switchMode
      language: CSharp
      name:
        CSharp: switchMode
        VB: switchMode
      nameWithType:
        CSharp: keyPress.switchMode
        VB: keyPress.switchMode
      qualifiedName:
        CSharp: Unityscript.keyPress.switchMode
        VB: Unityscript.keyPress.switchMode
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: switchMode
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\keyPress.cs
        startLine: 12
      syntax:
        content:
          CSharp: public SwitchMode switchMode
          VB: Public switchMode As SwitchMode
        return:
          type: Unityscript.SwitchMode
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.keyPress.envPanel
      commentId: F:Unityscript.keyPress.envPanel
      language: CSharp
      name:
        CSharp: envPanel
        VB: envPanel
      nameWithType:
        CSharp: keyPress.envPanel
        VB: keyPress.envPanel
      qualifiedName:
        CSharp: Unityscript.keyPress.envPanel
        VB: Unityscript.keyPress.envPanel
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: envPanel
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\keyPress.cs
        startLine: 13
      syntax:
        content:
          CSharp: public EnvPanel envPanel
          VB: Public envPanel As EnvPanel
        return:
          type: EnvPanel
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unityscript.Controler
    commentId: T:Unityscript.Controler
    language: CSharp
    name:
      CSharp: Controler
      VB: Controler
    nameWithType:
      CSharp: Controler
      VB: Controler
    qualifiedName:
      CSharp: Unityscript.Controler
      VB: Unityscript.Controler
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Unityscript
    source:
      id: Controler
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Controler.cs
      startLine: 9
    summary: "\nAllow cap to be change with input \n"
    example: []
    syntax:
      content:
        CSharp: 'public class Controler : MonoBehaviour'
        VB: >-
          Public Class Controler

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    - UnityEngine.Object
    - UnityEngine.Component
    - UnityEngine.Behaviour
    - UnityEngine.MonoBehaviour
    inheritedMembers:
    - UnityEngine.MonoBehaviour.IsInvoking
    - UnityEngine.MonoBehaviour.CancelInvoke
    - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    - UnityEngine.MonoBehaviour.IsInvoking(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StopAllCoroutines
    - UnityEngine.MonoBehaviour.print(System.Object)
    - UnityEngine.MonoBehaviour.useGUILayout
    - UnityEngine.MonoBehaviour.runInEditMode
    - UnityEngine.Behaviour.enabled
    - UnityEngine.Behaviour.isActiveAndEnabled
    - UnityEngine.Component.GetComponent(System.Type)
    - UnityEngine.Component.GetComponent``1
    - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    - UnityEngine.Component.TryGetComponent``1({T}@)
    - UnityEngine.Component.GetComponent(System.String)
    - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInChildren(System.Type)
    - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentInChildren``1
    - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren(System.Type)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInChildren``1
    - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentInParent(System.Type)
    - UnityEngine.Component.GetComponentInParent``1
    - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInParent(System.Type)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInParent``1
    - UnityEngine.Component.GetComponents(System.Type)
    - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponents``1
    - UnityEngine.Component.CompareTag(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    - UnityEngine.Component.SendMessageUpwards(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,System.Object)
    - UnityEngine.Component.SendMessage(System.String)
    - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    - UnityEngine.Component.BroadcastMessage(System.String)
    - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.transform
    - UnityEngine.Component.gameObject
    - UnityEngine.Component.tag
    - UnityEngine.Object.GetInstanceID
    - UnityEngine.Object.GetHashCode
    - UnityEngine.Object.Equals(System.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Instantiate``1({T})
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    - UnityEngine.Object.Destroy(UnityEngine.Object)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    - UnityEngine.Object.FindObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object)
    - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    - UnityEngine.Object.FindObjectsOfType``1
    - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectOfType``1
    - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    - UnityEngine.Object.ToString
    - UnityEngine.Object.name
    - UnityEngine.Object.hideFlags
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Unityscript.Controler.captext
      commentId: F:Unityscript.Controler.captext
      language: CSharp
      name:
        CSharp: captext
        VB: captext
      nameWithType:
        CSharp: Controler.captext
        VB: Controler.captext
      qualifiedName:
        CSharp: Unityscript.Controler.captext
        VB: Unityscript.Controler.captext
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: captext
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Controler.cs
        startLine: 11
      syntax:
        content:
          CSharp: public Text captext
          VB: Public captext As Text
        return:
          type: UnityEngine.UI.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Controler.capAllureText
      commentId: F:Unityscript.Controler.capAllureText
      language: CSharp
      name:
        CSharp: capAllureText
        VB: capAllureText
      nameWithType:
        CSharp: Controler.capAllureText
        VB: Controler.capAllureText
      qualifiedName:
        CSharp: Unityscript.Controler.capAllureText
        VB: Unityscript.Controler.capAllureText
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: capAllureText
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Controler.cs
        startLine: 12
      syntax:
        content:
          CSharp: public Text capAllureText
          VB: Public capAllureText As Text
        return:
          type: UnityEngine.UI.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Controler.Start
      commentId: M:Unityscript.Controler.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: Controler.Start()
        VB: Controler.Start()
      qualifiedName:
        CSharp: Unityscript.Controler.Start()
        VB: Unityscript.Controler.Start()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: Start
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Controler.cs
        startLine: 14
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start
      overload: Unityscript.Controler.Start*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Controler.DisplayCap
      commentId: M:Unityscript.Controler.DisplayCap
      language: CSharp
      name:
        CSharp: DisplayCap()
        VB: DisplayCap()
      nameWithType:
        CSharp: Controler.DisplayCap()
        VB: Controler.DisplayCap()
      qualifiedName:
        CSharp: Unityscript.Controler.DisplayCap()
        VB: Unityscript.Controler.DisplayCap()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: DisplayCap
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Controler.cs
        startLine: 19
      syntax:
        content:
          CSharp: public void DisplayCap()
          VB: Public Sub DisplayCap
      overload: Unityscript.Controler.DisplayCap*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Controler.changeCap(System.Int32)
      commentId: M:Unityscript.Controler.changeCap(System.Int32)
      language: CSharp
      name:
        CSharp: changeCap(Int32)
        VB: changeCap(Int32)
      nameWithType:
        CSharp: Controler.changeCap(Int32)
        VB: Controler.changeCap(Int32)
      qualifiedName:
        CSharp: Unityscript.Controler.changeCap(System.Int32)
        VB: Unityscript.Controler.changeCap(System.Int32)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: changeCap
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Controler.cs
        startLine: 28
      summary: "\nchange cap with a n degres \n"
      example: []
      syntax:
        content:
          CSharp: public void changeCap(int n)
          VB: Public Sub changeCap(n As Integer)
        parameters:
        - id: n
          type: System.Int32
          description: degres of incremental cap change
      overload: Unityscript.Controler.changeCap*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unityscript.CreateSave
    commentId: T:Unityscript.CreateSave
    language: CSharp
    name:
      CSharp: CreateSave
      VB: CreateSave
    nameWithType:
      CSharp: CreateSave
      VB: CreateSave
    qualifiedName:
      CSharp: Unityscript.CreateSave
      VB: Unityscript.CreateSave
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Unityscript
    source:
      id: CreateSave
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\CreateSave.cs
      startLine: 11
    summary: "\nAllow user to save current race with a inputfield to give it a name\n"
    example: []
    syntax:
      content:
        CSharp: 'public class CreateSave : MonoBehaviour'
        VB: >-
          Public Class CreateSave

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    - UnityEngine.Object
    - UnityEngine.Component
    - UnityEngine.Behaviour
    - UnityEngine.MonoBehaviour
    inheritedMembers:
    - UnityEngine.MonoBehaviour.IsInvoking
    - UnityEngine.MonoBehaviour.CancelInvoke
    - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    - UnityEngine.MonoBehaviour.IsInvoking(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StopAllCoroutines
    - UnityEngine.MonoBehaviour.print(System.Object)
    - UnityEngine.MonoBehaviour.useGUILayout
    - UnityEngine.MonoBehaviour.runInEditMode
    - UnityEngine.Behaviour.enabled
    - UnityEngine.Behaviour.isActiveAndEnabled
    - UnityEngine.Component.GetComponent(System.Type)
    - UnityEngine.Component.GetComponent``1
    - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    - UnityEngine.Component.TryGetComponent``1({T}@)
    - UnityEngine.Component.GetComponent(System.String)
    - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInChildren(System.Type)
    - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentInChildren``1
    - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren(System.Type)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInChildren``1
    - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentInParent(System.Type)
    - UnityEngine.Component.GetComponentInParent``1
    - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInParent(System.Type)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInParent``1
    - UnityEngine.Component.GetComponents(System.Type)
    - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponents``1
    - UnityEngine.Component.CompareTag(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    - UnityEngine.Component.SendMessageUpwards(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,System.Object)
    - UnityEngine.Component.SendMessage(System.String)
    - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    - UnityEngine.Component.BroadcastMessage(System.String)
    - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.transform
    - UnityEngine.Component.gameObject
    - UnityEngine.Component.tag
    - UnityEngine.Object.GetInstanceID
    - UnityEngine.Object.GetHashCode
    - UnityEngine.Object.Equals(System.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Instantiate``1({T})
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    - UnityEngine.Object.Destroy(UnityEngine.Object)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    - UnityEngine.Object.FindObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object)
    - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    - UnityEngine.Object.FindObjectsOfType``1
    - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectOfType``1
    - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    - UnityEngine.Object.ToString
    - UnityEngine.Object.name
    - UnityEngine.Object.hideFlags
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Unityscript.CreateSave.inputSave
      commentId: F:Unityscript.CreateSave.inputSave
      language: CSharp
      name:
        CSharp: inputSave
        VB: inputSave
      nameWithType:
        CSharp: CreateSave.inputSave
        VB: CreateSave.inputSave
      qualifiedName:
        CSharp: Unityscript.CreateSave.inputSave
        VB: Unityscript.CreateSave.inputSave
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: inputSave
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\CreateSave.cs
        startLine: 13
      syntax:
        content:
          CSharp: public GameObject inputSave
          VB: Public inputSave As GameObject
        return:
          type: UnityEngine.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.CreateSave.Save
      commentId: M:Unityscript.CreateSave.Save
      language: CSharp
      name:
        CSharp: Save()
        VB: Save()
      nameWithType:
        CSharp: CreateSave.Save()
        VB: CreateSave.Save()
      qualifiedName:
        CSharp: Unityscript.CreateSave.Save()
        VB: Unityscript.CreateSave.Save()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: Save
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\CreateSave.cs
        startLine: 16
      syntax:
        content:
          CSharp: public void Save()
          VB: Public Sub Save
      overload: Unityscript.CreateSave.Save*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unityscript.BoatPhys
    commentId: T:Unityscript.BoatPhys
    language: CSharp
    name:
      CSharp: BoatPhys
      VB: BoatPhys
    nameWithType:
      CSharp: BoatPhys
      VB: BoatPhys
    qualifiedName:
      CSharp: Unityscript.BoatPhys
      VB: Unityscript.BoatPhys
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Unityscript
    source:
      id: BoatPhys
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\BoatPhys.cs
      startLine: 13
    summary: "\nManage the visual of the boat according to the model information.\nthe boat rigidbody has been attach to the model before.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BoatPhys : MonoBehaviour'
        VB: >-
          Public Class BoatPhys

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    - UnityEngine.Object
    - UnityEngine.Component
    - UnityEngine.Behaviour
    - UnityEngine.MonoBehaviour
    inheritedMembers:
    - UnityEngine.MonoBehaviour.IsInvoking
    - UnityEngine.MonoBehaviour.CancelInvoke
    - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    - UnityEngine.MonoBehaviour.IsInvoking(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StopAllCoroutines
    - UnityEngine.MonoBehaviour.print(System.Object)
    - UnityEngine.MonoBehaviour.useGUILayout
    - UnityEngine.MonoBehaviour.runInEditMode
    - UnityEngine.Behaviour.enabled
    - UnityEngine.Behaviour.isActiveAndEnabled
    - UnityEngine.Component.GetComponent(System.Type)
    - UnityEngine.Component.GetComponent``1
    - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    - UnityEngine.Component.TryGetComponent``1({T}@)
    - UnityEngine.Component.GetComponent(System.String)
    - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInChildren(System.Type)
    - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentInChildren``1
    - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren(System.Type)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInChildren``1
    - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentInParent(System.Type)
    - UnityEngine.Component.GetComponentInParent``1
    - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInParent(System.Type)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInParent``1
    - UnityEngine.Component.GetComponents(System.Type)
    - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponents``1
    - UnityEngine.Component.CompareTag(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    - UnityEngine.Component.SendMessageUpwards(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,System.Object)
    - UnityEngine.Component.SendMessage(System.String)
    - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    - UnityEngine.Component.BroadcastMessage(System.String)
    - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.transform
    - UnityEngine.Component.gameObject
    - UnityEngine.Component.tag
    - UnityEngine.Object.GetInstanceID
    - UnityEngine.Object.GetHashCode
    - UnityEngine.Object.Equals(System.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Instantiate``1({T})
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    - UnityEngine.Object.Destroy(UnityEngine.Object)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    - UnityEngine.Object.FindObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object)
    - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    - UnityEngine.Object.FindObjectsOfType``1
    - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectOfType``1
    - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    - UnityEngine.Object.ToString
    - UnityEngine.Object.name
    - UnityEngine.Object.hideFlags
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Unityscript.BoatPhys.bat
      commentId: F:Unityscript.BoatPhys.bat
      language: CSharp
      name:
        CSharp: bat
        VB: bat
      nameWithType:
        CSharp: BoatPhys.bat
        VB: BoatPhys.bat
      qualifiedName:
        CSharp: Unityscript.BoatPhys.bat
        VB: Unityscript.BoatPhys.bat
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: bat
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\BoatPhys.cs
        startLine: 15
      syntax:
        content:
          CSharp: public static BoatPhys bat
          VB: Public Shared bat As BoatPhys
        return:
          type: Unityscript.BoatPhys
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unityscript.BoatPhys.boat
      commentId: F:Unityscript.BoatPhys.boat
      language: CSharp
      name:
        CSharp: boat
        VB: boat
      nameWithType:
        CSharp: BoatPhys.boat
        VB: BoatPhys.boat
      qualifiedName:
        CSharp: Unityscript.BoatPhys.boat
        VB: Unityscript.BoatPhys.boat
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: boat
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\BoatPhys.cs
        startLine: 18
      syntax:
        content:
          CSharp: public Rigidbody2D boat
          VB: Public boat As Rigidbody2D
        return:
          type: UnityEngine.Rigidbody2D
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.BoatPhys.velocity
      commentId: F:Unityscript.BoatPhys.velocity
      language: CSharp
      name:
        CSharp: velocity
        VB: velocity
      nameWithType:
        CSharp: BoatPhys.velocity
        VB: BoatPhys.velocity
      qualifiedName:
        CSharp: Unityscript.BoatPhys.velocity
        VB: Unityscript.BoatPhys.velocity
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: velocity
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\BoatPhys.cs
        startLine: 19
      syntax:
        content:
          CSharp: public Vector2 velocity
          VB: Public velocity As Vector2
        return:
          type: UnityEngine.Vector2
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.BoatPhys.cap
      commentId: F:Unityscript.BoatPhys.cap
      language: CSharp
      name:
        CSharp: cap
        VB: cap
      nameWithType:
        CSharp: BoatPhys.cap
        VB: BoatPhys.cap
      qualifiedName:
        CSharp: Unityscript.BoatPhys.cap
        VB: Unityscript.BoatPhys.cap
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: cap
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\BoatPhys.cs
        startLine: 21
      syntax:
        content:
          CSharp: public float cap
          VB: Public cap As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.BoatPhys.COG
      commentId: F:Unityscript.BoatPhys.COG
      language: CSharp
      name:
        CSharp: COG
        VB: COG
      nameWithType:
        CSharp: BoatPhys.COG
        VB: BoatPhys.COG
      qualifiedName:
        CSharp: Unityscript.BoatPhys.COG
        VB: Unityscript.BoatPhys.COG
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: COG
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\BoatPhys.cs
        startLine: 22
      syntax:
        content:
          CSharp: public float COG
          VB: Public COG As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.BoatPhys.SOG
      commentId: F:Unityscript.BoatPhys.SOG
      language: CSharp
      name:
        CSharp: SOG
        VB: SOG
      nameWithType:
        CSharp: BoatPhys.SOG
        VB: BoatPhys.SOG
      qualifiedName:
        CSharp: Unityscript.BoatPhys.SOG
        VB: Unityscript.BoatPhys.SOG
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: SOG
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\BoatPhys.cs
        startLine: 23
      syntax:
        content:
          CSharp: public float SOG
          VB: Public SOG As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unityscript.ShowValue
    commentId: T:Unityscript.ShowValue
    language: CSharp
    name:
      CSharp: ShowValue
      VB: ShowValue
    nameWithType:
      CSharp: ShowValue
      VB: ShowValue
    qualifiedName:
      CSharp: Unityscript.ShowValue
      VB: Unityscript.ShowValue
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Unityscript
    source:
      id: ShowValue
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\ShowValue.cs
      startLine: 11
    summary: "\nDisplay value of all parameters in main scene at the start\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ShowValue : MonoBehaviour'
        VB: >-
          Public Class ShowValue

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    - UnityEngine.Object
    - UnityEngine.Component
    - UnityEngine.Behaviour
    - UnityEngine.MonoBehaviour
    inheritedMembers:
    - UnityEngine.MonoBehaviour.IsInvoking
    - UnityEngine.MonoBehaviour.CancelInvoke
    - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    - UnityEngine.MonoBehaviour.IsInvoking(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StopAllCoroutines
    - UnityEngine.MonoBehaviour.print(System.Object)
    - UnityEngine.MonoBehaviour.useGUILayout
    - UnityEngine.MonoBehaviour.runInEditMode
    - UnityEngine.Behaviour.enabled
    - UnityEngine.Behaviour.isActiveAndEnabled
    - UnityEngine.Component.GetComponent(System.Type)
    - UnityEngine.Component.GetComponent``1
    - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    - UnityEngine.Component.TryGetComponent``1({T}@)
    - UnityEngine.Component.GetComponent(System.String)
    - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInChildren(System.Type)
    - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentInChildren``1
    - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren(System.Type)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInChildren``1
    - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentInParent(System.Type)
    - UnityEngine.Component.GetComponentInParent``1
    - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInParent(System.Type)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInParent``1
    - UnityEngine.Component.GetComponents(System.Type)
    - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponents``1
    - UnityEngine.Component.CompareTag(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    - UnityEngine.Component.SendMessageUpwards(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,System.Object)
    - UnityEngine.Component.SendMessage(System.String)
    - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    - UnityEngine.Component.BroadcastMessage(System.String)
    - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.transform
    - UnityEngine.Component.gameObject
    - UnityEngine.Component.tag
    - UnityEngine.Object.GetInstanceID
    - UnityEngine.Object.GetHashCode
    - UnityEngine.Object.Equals(System.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Instantiate``1({T})
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    - UnityEngine.Object.Destroy(UnityEngine.Object)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    - UnityEngine.Object.FindObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object)
    - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    - UnityEngine.Object.FindObjectsOfType``1
    - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectOfType``1
    - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    - UnityEngine.Object.ToString
    - UnityEngine.Object.name
    - UnityEngine.Object.hideFlags
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Unityscript.ShowValue.inputAcc
      commentId: F:Unityscript.ShowValue.inputAcc
      language: CSharp
      name:
        CSharp: inputAcc
        VB: inputAcc
      nameWithType:
        CSharp: ShowValue.inputAcc
        VB: ShowValue.inputAcc
      qualifiedName:
        CSharp: Unityscript.ShowValue.inputAcc
        VB: Unityscript.ShowValue.inputAcc
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: inputAcc
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\ShowValue.cs
        startLine: 13
      syntax:
        content:
          CSharp: public GameObject inputAcc
          VB: Public inputAcc As GameObject
        return:
          type: UnityEngine.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.ShowValue.windSpeed
      commentId: F:Unityscript.ShowValue.windSpeed
      language: CSharp
      name:
        CSharp: windSpeed
        VB: windSpeed
      nameWithType:
        CSharp: ShowValue.windSpeed
        VB: ShowValue.windSpeed
      qualifiedName:
        CSharp: Unityscript.ShowValue.windSpeed
        VB: Unityscript.ShowValue.windSpeed
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: windSpeed
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\ShowValue.cs
        startLine: 15
      syntax:
        content:
          CSharp: public GameObject windSpeed
          VB: Public windSpeed As GameObject
        return:
          type: UnityEngine.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.ShowValue.windDir
      commentId: F:Unityscript.ShowValue.windDir
      language: CSharp
      name:
        CSharp: windDir
        VB: windDir
      nameWithType:
        CSharp: ShowValue.windDir
        VB: ShowValue.windDir
      qualifiedName:
        CSharp: Unityscript.ShowValue.windDir
        VB: Unityscript.ShowValue.windDir
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: windDir
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\ShowValue.cs
        startLine: 16
      syntax:
        content:
          CSharp: public GameObject windDir
          VB: Public windDir As GameObject
        return:
          type: UnityEngine.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.ShowValue.waveAmpl
      commentId: F:Unityscript.ShowValue.waveAmpl
      language: CSharp
      name:
        CSharp: waveAmpl
        VB: waveAmpl
      nameWithType:
        CSharp: ShowValue.waveAmpl
        VB: ShowValue.waveAmpl
      qualifiedName:
        CSharp: Unityscript.ShowValue.waveAmpl
        VB: Unityscript.ShowValue.waveAmpl
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: waveAmpl
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\ShowValue.cs
        startLine: 18
      syntax:
        content:
          CSharp: public GameObject waveAmpl
          VB: Public waveAmpl As GameObject
        return:
          type: UnityEngine.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.ShowValue.waveDir
      commentId: F:Unityscript.ShowValue.waveDir
      language: CSharp
      name:
        CSharp: waveDir
        VB: waveDir
      nameWithType:
        CSharp: ShowValue.waveDir
        VB: ShowValue.waveDir
      qualifiedName:
        CSharp: Unityscript.ShowValue.waveDir
        VB: Unityscript.ShowValue.waveDir
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: waveDir
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\ShowValue.cs
        startLine: 19
      syntax:
        content:
          CSharp: public GameObject waveDir
          VB: Public waveDir As GameObject
        return:
          type: UnityEngine.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.ShowValue.waveLength
      commentId: F:Unityscript.ShowValue.waveLength
      language: CSharp
      name:
        CSharp: waveLength
        VB: waveLength
      nameWithType:
        CSharp: ShowValue.waveLength
        VB: ShowValue.waveLength
      qualifiedName:
        CSharp: Unityscript.ShowValue.waveLength
        VB: Unityscript.ShowValue.waveLength
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: waveLength
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\ShowValue.cs
        startLine: 20
      syntax:
        content:
          CSharp: public GameObject waveLength
          VB: Public waveLength As GameObject
        return:
          type: UnityEngine.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.ShowValue.waterSpeed
      commentId: F:Unityscript.ShowValue.waterSpeed
      language: CSharp
      name:
        CSharp: waterSpeed
        VB: waterSpeed
      nameWithType:
        CSharp: ShowValue.waterSpeed
        VB: ShowValue.waterSpeed
      qualifiedName:
        CSharp: Unityscript.ShowValue.waterSpeed
        VB: Unityscript.ShowValue.waterSpeed
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: waterSpeed
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\ShowValue.cs
        startLine: 22
      syntax:
        content:
          CSharp: public GameObject waterSpeed
          VB: Public waterSpeed As GameObject
        return:
          type: UnityEngine.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.ShowValue.waterDir
      commentId: F:Unityscript.ShowValue.waterDir
      language: CSharp
      name:
        CSharp: waterDir
        VB: waterDir
      nameWithType:
        CSharp: ShowValue.waterDir
        VB: ShowValue.waterDir
      qualifiedName:
        CSharp: Unityscript.ShowValue.waterDir
        VB: Unityscript.ShowValue.waterDir
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: waterDir
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\ShowValue.cs
        startLine: 23
      syntax:
        content:
          CSharp: public GameObject waterDir
          VB: Public waterDir As GameObject
        return:
          type: UnityEngine.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.ShowValue.ShowInitValue
      commentId: M:Unityscript.ShowValue.ShowInitValue
      language: CSharp
      name:
        CSharp: ShowInitValue()
        VB: ShowInitValue()
      nameWithType:
        CSharp: ShowValue.ShowInitValue()
        VB: ShowValue.ShowInitValue()
      qualifiedName:
        CSharp: Unityscript.ShowValue.ShowInitValue()
        VB: Unityscript.ShowValue.ShowInitValue()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: ShowInitValue
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\ShowValue.cs
        startLine: 33
      summary: "\nGet values from model and display it on GameObject in main scene\n"
      example: []
      syntax:
        content:
          CSharp: public void ShowInitValue()
          VB: Public Sub ShowInitValue
      overload: Unityscript.ShowValue.ShowInitValue*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unityscript.ButtonsSavesControl
    commentId: T:Unityscript.ButtonsSavesControl
    language: CSharp
    name:
      CSharp: ButtonsSavesControl
      VB: ButtonsSavesControl
    nameWithType:
      CSharp: ButtonsSavesControl
      VB: ButtonsSavesControl
    qualifiedName:
      CSharp: Unityscript.ButtonsSavesControl
      VB: Unityscript.ButtonsSavesControl
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Unityscript
    source:
      id: ButtonsSavesControl
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\ButtonsSavesControl.cs
      startLine: 16
    summary: "\nManage the &quot;save selection&quot; scene \n"
    example: []
    syntax:
      content:
        CSharp: 'public class ButtonsSavesControl : MonoBehaviour'
        VB: >-
          Public Class ButtonsSavesControl

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    - UnityEngine.Object
    - UnityEngine.Component
    - UnityEngine.Behaviour
    - UnityEngine.MonoBehaviour
    inheritedMembers:
    - UnityEngine.MonoBehaviour.IsInvoking
    - UnityEngine.MonoBehaviour.CancelInvoke
    - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    - UnityEngine.MonoBehaviour.IsInvoking(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StopAllCoroutines
    - UnityEngine.MonoBehaviour.print(System.Object)
    - UnityEngine.MonoBehaviour.useGUILayout
    - UnityEngine.MonoBehaviour.runInEditMode
    - UnityEngine.Behaviour.enabled
    - UnityEngine.Behaviour.isActiveAndEnabled
    - UnityEngine.Component.GetComponent(System.Type)
    - UnityEngine.Component.GetComponent``1
    - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    - UnityEngine.Component.TryGetComponent``1({T}@)
    - UnityEngine.Component.GetComponent(System.String)
    - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInChildren(System.Type)
    - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentInChildren``1
    - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren(System.Type)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInChildren``1
    - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentInParent(System.Type)
    - UnityEngine.Component.GetComponentInParent``1
    - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInParent(System.Type)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInParent``1
    - UnityEngine.Component.GetComponents(System.Type)
    - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponents``1
    - UnityEngine.Component.CompareTag(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    - UnityEngine.Component.SendMessageUpwards(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,System.Object)
    - UnityEngine.Component.SendMessage(System.String)
    - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    - UnityEngine.Component.BroadcastMessage(System.String)
    - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.transform
    - UnityEngine.Component.gameObject
    - UnityEngine.Component.tag
    - UnityEngine.Object.GetInstanceID
    - UnityEngine.Object.GetHashCode
    - UnityEngine.Object.Equals(System.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Instantiate``1({T})
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    - UnityEngine.Object.Destroy(UnityEngine.Object)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    - UnityEngine.Object.FindObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object)
    - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    - UnityEngine.Object.FindObjectsOfType``1
    - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectOfType``1
    - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    - UnityEngine.Object.ToString
    - UnityEngine.Object.name
    - UnityEngine.Object.hideFlags
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Unityscript.ButtonsSavesControl.listSaves
      commentId: F:Unityscript.ButtonsSavesControl.listSaves
      language: CSharp
      name:
        CSharp: listSaves
        VB: listSaves
      nameWithType:
        CSharp: ButtonsSavesControl.listSaves
        VB: ButtonsSavesControl.listSaves
      qualifiedName:
        CSharp: Unityscript.ButtonsSavesControl.listSaves
        VB: Unityscript.ButtonsSavesControl.listSaves
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: listSaves
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\ButtonsSavesControl.cs
        startLine: 18
      syntax:
        content:
          CSharp: public List<string> listSaves
          VB: Public listSaves As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.ButtonsSavesControl.selectedSaves
      commentId: F:Unityscript.ButtonsSavesControl.selectedSaves
      language: CSharp
      name:
        CSharp: selectedSaves
        VB: selectedSaves
      nameWithType:
        CSharp: ButtonsSavesControl.selectedSaves
        VB: ButtonsSavesControl.selectedSaves
      qualifiedName:
        CSharp: Unityscript.ButtonsSavesControl.selectedSaves
        VB: Unityscript.ButtonsSavesControl.selectedSaves
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: selectedSaves
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\ButtonsSavesControl.cs
        startLine: 22
      syntax:
        content:
          CSharp: public string selectedSaves
          VB: Public selectedSaves As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.ButtonsSavesControl.GenerateList
      commentId: M:Unityscript.ButtonsSavesControl.GenerateList
      language: CSharp
      name:
        CSharp: GenerateList()
        VB: GenerateList()
      nameWithType:
        CSharp: ButtonsSavesControl.GenerateList()
        VB: ButtonsSavesControl.GenerateList()
      qualifiedName:
        CSharp: Unityscript.ButtonsSavesControl.GenerateList()
        VB: Unityscript.ButtonsSavesControl.GenerateList()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: GenerateList
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\ButtonsSavesControl.cs
        startLine: 36
      summary: "\nInitiates as many button as existing saves in folder\n"
      example: []
      syntax:
        content:
          CSharp: public void GenerateList()
          VB: Public Sub GenerateList
      overload: Unityscript.ButtonsSavesControl.GenerateList*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.ButtonsSavesControl.LoadSavesOnClick
      commentId: M:Unityscript.ButtonsSavesControl.LoadSavesOnClick
      language: CSharp
      name:
        CSharp: LoadSavesOnClick()
        VB: LoadSavesOnClick()
      nameWithType:
        CSharp: ButtonsSavesControl.LoadSavesOnClick()
        VB: ButtonsSavesControl.LoadSavesOnClick()
      qualifiedName:
        CSharp: Unityscript.ButtonsSavesControl.LoadSavesOnClick()
        VB: Unityscript.ButtonsSavesControl.LoadSavesOnClick()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: LoadSavesOnClick
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\ButtonsSavesControl.cs
        startLine: 74
      summary: "\nLoad the currentSave and load the main scene when ok pressed\n"
      example: []
      syntax:
        content:
          CSharp: public void LoadSavesOnClick()
          VB: Public Sub LoadSavesOnClick
      overload: Unityscript.ButtonsSavesControl.LoadSavesOnClick*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unityscript.ButtonWaypoint
    commentId: T:Unityscript.ButtonWaypoint
    language: CSharp
    name:
      CSharp: ButtonWaypoint
      VB: ButtonWaypoint
    nameWithType:
      CSharp: ButtonWaypoint
      VB: ButtonWaypoint
    qualifiedName:
      CSharp: Unityscript.ButtonWaypoint
      VB: Unityscript.ButtonWaypoint
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Unityscript
    source:
      id: ButtonWaypoint
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\ButtonWaypoint.cs
      startLine: 21
    summary: "\nManages the scene waypoint to display waypoints on the &quot;Waypoints.gpx&quot; file \nAnd allow to select a starting point\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ButtonWaypoint : MonoBehaviour'
        VB: >-
          Public Class ButtonWaypoint

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    - UnityEngine.Object
    - UnityEngine.Component
    - UnityEngine.Behaviour
    - UnityEngine.MonoBehaviour
    inheritedMembers:
    - UnityEngine.MonoBehaviour.IsInvoking
    - UnityEngine.MonoBehaviour.CancelInvoke
    - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    - UnityEngine.MonoBehaviour.IsInvoking(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StopAllCoroutines
    - UnityEngine.MonoBehaviour.print(System.Object)
    - UnityEngine.MonoBehaviour.useGUILayout
    - UnityEngine.MonoBehaviour.runInEditMode
    - UnityEngine.Behaviour.enabled
    - UnityEngine.Behaviour.isActiveAndEnabled
    - UnityEngine.Component.GetComponent(System.Type)
    - UnityEngine.Component.GetComponent``1
    - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    - UnityEngine.Component.TryGetComponent``1({T}@)
    - UnityEngine.Component.GetComponent(System.String)
    - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInChildren(System.Type)
    - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentInChildren``1
    - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren(System.Type)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInChildren``1
    - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentInParent(System.Type)
    - UnityEngine.Component.GetComponentInParent``1
    - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInParent(System.Type)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInParent``1
    - UnityEngine.Component.GetComponents(System.Type)
    - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponents``1
    - UnityEngine.Component.CompareTag(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    - UnityEngine.Component.SendMessageUpwards(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,System.Object)
    - UnityEngine.Component.SendMessage(System.String)
    - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    - UnityEngine.Component.BroadcastMessage(System.String)
    - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.transform
    - UnityEngine.Component.gameObject
    - UnityEngine.Component.tag
    - UnityEngine.Object.GetInstanceID
    - UnityEngine.Object.GetHashCode
    - UnityEngine.Object.Equals(System.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Instantiate``1({T})
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    - UnityEngine.Object.Destroy(UnityEngine.Object)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    - UnityEngine.Object.FindObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object)
    - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    - UnityEngine.Object.FindObjectsOfType``1
    - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectOfType``1
    - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    - UnityEngine.Object.ToString
    - UnityEngine.Object.name
    - UnityEngine.Object.hideFlags
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Unityscript.ButtonWaypoint.indexWp
      commentId: F:Unityscript.ButtonWaypoint.indexWp
      language: CSharp
      name:
        CSharp: indexWp
        VB: indexWp
      nameWithType:
        CSharp: ButtonWaypoint.indexWp
        VB: ButtonWaypoint.indexWp
      qualifiedName:
        CSharp: Unityscript.ButtonWaypoint.indexWp
        VB: Unityscript.ButtonWaypoint.indexWp
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: indexWp
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\ButtonWaypoint.cs
        startLine: 24
      syntax:
        content:
          CSharp: public int indexWp
          VB: Public indexWp As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.ButtonWaypoint.selectedWaypoint
      commentId: F:Unityscript.ButtonWaypoint.selectedWaypoint
      language: CSharp
      name:
        CSharp: selectedWaypoint
        VB: selectedWaypoint
      nameWithType:
        CSharp: ButtonWaypoint.selectedWaypoint
        VB: ButtonWaypoint.selectedWaypoint
      qualifiedName:
        CSharp: Unityscript.ButtonWaypoint.selectedWaypoint
        VB: Unityscript.ButtonWaypoint.selectedWaypoint
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: selectedWaypoint
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\ButtonWaypoint.cs
        startLine: 30
      syntax:
        content:
          CSharp: public string selectedWaypoint
          VB: Public selectedWaypoint As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.ButtonWaypoint.GenerateList
      commentId: M:Unityscript.ButtonWaypoint.GenerateList
      language: CSharp
      name:
        CSharp: GenerateList()
        VB: GenerateList()
      nameWithType:
        CSharp: ButtonWaypoint.GenerateList()
        VB: ButtonWaypoint.GenerateList()
      qualifiedName:
        CSharp: Unityscript.ButtonWaypoint.GenerateList()
        VB: Unityscript.ButtonWaypoint.GenerateList()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: GenerateList
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\ButtonWaypoint.cs
        startLine: 44
      syntax:
        content:
          CSharp: public void GenerateList()
          VB: Public Sub GenerateList
      overload: Unityscript.ButtonWaypoint.GenerateList*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.ButtonWaypoint.LoadWaypointOnClick
      commentId: M:Unityscript.ButtonWaypoint.LoadWaypointOnClick
      language: CSharp
      name:
        CSharp: LoadWaypointOnClick()
        VB: LoadWaypointOnClick()
      nameWithType:
        CSharp: ButtonWaypoint.LoadWaypointOnClick()
        VB: ButtonWaypoint.LoadWaypointOnClick()
      qualifiedName:
        CSharp: Unityscript.ButtonWaypoint.LoadWaypointOnClick()
        VB: Unityscript.ButtonWaypoint.LoadWaypointOnClick()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: LoadWaypointOnClick
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\ButtonWaypoint.cs
        startLine: 88
      syntax:
        content:
          CSharp: public void LoadWaypointOnClick()
          VB: Public Sub LoadWaypointOnClick
      overload: Unityscript.ButtonWaypoint.LoadWaypointOnClick*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unityscript.PanelSwitch
    commentId: T:Unityscript.PanelSwitch
    language: CSharp
    name:
      CSharp: PanelSwitch
      VB: PanelSwitch
    nameWithType:
      CSharp: PanelSwitch
      VB: PanelSwitch
    qualifiedName:
      CSharp: Unityscript.PanelSwitch
      VB: Unityscript.PanelSwitch
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Unityscript
    source:
      id: PanelSwitch
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\PanelSwitch.cs
      startLine: 10
    summary: "\nManage the configuration tab panel\n"
    example: []
    syntax:
      content:
        CSharp: 'public class PanelSwitch : MonoBehaviour'
        VB: >-
          Public Class PanelSwitch

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    - UnityEngine.Object
    - UnityEngine.Component
    - UnityEngine.Behaviour
    - UnityEngine.MonoBehaviour
    inheritedMembers:
    - UnityEngine.MonoBehaviour.IsInvoking
    - UnityEngine.MonoBehaviour.CancelInvoke
    - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    - UnityEngine.MonoBehaviour.IsInvoking(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StopAllCoroutines
    - UnityEngine.MonoBehaviour.print(System.Object)
    - UnityEngine.MonoBehaviour.useGUILayout
    - UnityEngine.MonoBehaviour.runInEditMode
    - UnityEngine.Behaviour.enabled
    - UnityEngine.Behaviour.isActiveAndEnabled
    - UnityEngine.Component.GetComponent(System.Type)
    - UnityEngine.Component.GetComponent``1
    - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    - UnityEngine.Component.TryGetComponent``1({T}@)
    - UnityEngine.Component.GetComponent(System.String)
    - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInChildren(System.Type)
    - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentInChildren``1
    - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren(System.Type)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInChildren``1
    - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentInParent(System.Type)
    - UnityEngine.Component.GetComponentInParent``1
    - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInParent(System.Type)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInParent``1
    - UnityEngine.Component.GetComponents(System.Type)
    - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponents``1
    - UnityEngine.Component.CompareTag(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    - UnityEngine.Component.SendMessageUpwards(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,System.Object)
    - UnityEngine.Component.SendMessage(System.String)
    - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    - UnityEngine.Component.BroadcastMessage(System.String)
    - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.transform
    - UnityEngine.Component.gameObject
    - UnityEngine.Component.tag
    - UnityEngine.Object.GetInstanceID
    - UnityEngine.Object.GetHashCode
    - UnityEngine.Object.Equals(System.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Instantiate``1({T})
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    - UnityEngine.Object.Destroy(UnityEngine.Object)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    - UnityEngine.Object.FindObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object)
    - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    - UnityEngine.Object.FindObjectsOfType``1
    - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectOfType``1
    - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    - UnityEngine.Object.ToString
    - UnityEngine.Object.name
    - UnityEngine.Object.hideFlags
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Unityscript.PanelSwitch.PanelQTVLM
      commentId: F:Unityscript.PanelSwitch.PanelQTVLM
      language: CSharp
      name:
        CSharp: PanelQTVLM
        VB: PanelQTVLM
      nameWithType:
        CSharp: PanelSwitch.PanelQTVLM
        VB: PanelSwitch.PanelQTVLM
      qualifiedName:
        CSharp: Unityscript.PanelSwitch.PanelQTVLM
        VB: Unityscript.PanelSwitch.PanelQTVLM
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: PanelQTVLM
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\PanelSwitch.cs
        startLine: 13
      syntax:
        content:
          CSharp: public GameObject PanelQTVLM
          VB: Public PanelQTVLM As GameObject
        return:
          type: UnityEngine.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.PanelSwitch.PanelRM
      commentId: F:Unityscript.PanelSwitch.PanelRM
      language: CSharp
      name:
        CSharp: PanelRM
        VB: PanelRM
      nameWithType:
        CSharp: PanelSwitch.PanelRM
        VB: PanelSwitch.PanelRM
      qualifiedName:
        CSharp: Unityscript.PanelSwitch.PanelRM
        VB: Unityscript.PanelSwitch.PanelRM
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: PanelRM
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\PanelSwitch.cs
        startLine: 14
      syntax:
        content:
          CSharp: public GameObject PanelRM
          VB: Public PanelRM As GameObject
        return:
          type: UnityEngine.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.PanelSwitch.PanelLang
      commentId: F:Unityscript.PanelSwitch.PanelLang
      language: CSharp
      name:
        CSharp: PanelLang
        VB: PanelLang
      nameWithType:
        CSharp: PanelSwitch.PanelLang
        VB: PanelSwitch.PanelLang
      qualifiedName:
        CSharp: Unityscript.PanelSwitch.PanelLang
        VB: Unityscript.PanelSwitch.PanelLang
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: PanelLang
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\PanelSwitch.cs
        startLine: 15
      syntax:
        content:
          CSharp: public GameObject PanelLang
          VB: Public PanelLang As GameObject
        return:
          type: UnityEngine.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.PanelSwitch.showPanelQTVLM
      commentId: M:Unityscript.PanelSwitch.showPanelQTVLM
      language: CSharp
      name:
        CSharp: showPanelQTVLM()
        VB: showPanelQTVLM()
      nameWithType:
        CSharp: PanelSwitch.showPanelQTVLM()
        VB: PanelSwitch.showPanelQTVLM()
      qualifiedName:
        CSharp: Unityscript.PanelSwitch.showPanelQTVLM()
        VB: Unityscript.PanelSwitch.showPanelQTVLM()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: showPanelQTVLM
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\PanelSwitch.cs
        startLine: 19
      syntax:
        content:
          CSharp: public void showPanelQTVLM()
          VB: Public Sub showPanelQTVLM
      overload: Unityscript.PanelSwitch.showPanelQTVLM*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.PanelSwitch.showPanelRM
      commentId: M:Unityscript.PanelSwitch.showPanelRM
      language: CSharp
      name:
        CSharp: showPanelRM()
        VB: showPanelRM()
      nameWithType:
        CSharp: PanelSwitch.showPanelRM()
        VB: PanelSwitch.showPanelRM()
      qualifiedName:
        CSharp: Unityscript.PanelSwitch.showPanelRM()
        VB: Unityscript.PanelSwitch.showPanelRM()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: showPanelRM
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\PanelSwitch.cs
        startLine: 25
      syntax:
        content:
          CSharp: public void showPanelRM()
          VB: Public Sub showPanelRM
      overload: Unityscript.PanelSwitch.showPanelRM*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.PanelSwitch.showPanelLang
      commentId: M:Unityscript.PanelSwitch.showPanelLang
      language: CSharp
      name:
        CSharp: showPanelLang()
        VB: showPanelLang()
      nameWithType:
        CSharp: PanelSwitch.showPanelLang()
        VB: PanelSwitch.showPanelLang()
      qualifiedName:
        CSharp: Unityscript.PanelSwitch.showPanelLang()
        VB: Unityscript.PanelSwitch.showPanelLang()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: showPanelLang
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\PanelSwitch.cs
        startLine: 31
      syntax:
        content:
          CSharp: public void showPanelLang()
          VB: Public Sub showPanelLang
      overload: Unityscript.PanelSwitch.showPanelLang*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unityscript.eventOnClick
    commentId: T:Unityscript.eventOnClick
    language: CSharp
    name:
      CSharp: eventOnClick
      VB: eventOnClick
    nameWithType:
      CSharp: eventOnClick
      VB: eventOnClick
    qualifiedName:
      CSharp: Unityscript.eventOnClick
      VB: Unityscript.eventOnClick
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Unityscript
    source:
      id: eventOnClick
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\eventOnClick.cs
      startLine: 10
    summary: "\nMain script to manage scene transition\n"
    example: []
    syntax:
      content:
        CSharp: 'public class eventOnClick : MonoBehaviour'
        VB: >-
          Public Class eventOnClick

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    - UnityEngine.Object
    - UnityEngine.Component
    - UnityEngine.Behaviour
    - UnityEngine.MonoBehaviour
    inheritedMembers:
    - UnityEngine.MonoBehaviour.IsInvoking
    - UnityEngine.MonoBehaviour.CancelInvoke
    - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    - UnityEngine.MonoBehaviour.IsInvoking(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StopAllCoroutines
    - UnityEngine.MonoBehaviour.print(System.Object)
    - UnityEngine.MonoBehaviour.useGUILayout
    - UnityEngine.MonoBehaviour.runInEditMode
    - UnityEngine.Behaviour.enabled
    - UnityEngine.Behaviour.isActiveAndEnabled
    - UnityEngine.Component.GetComponent(System.Type)
    - UnityEngine.Component.GetComponent``1
    - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    - UnityEngine.Component.TryGetComponent``1({T}@)
    - UnityEngine.Component.GetComponent(System.String)
    - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInChildren(System.Type)
    - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentInChildren``1
    - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren(System.Type)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInChildren``1
    - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentInParent(System.Type)
    - UnityEngine.Component.GetComponentInParent``1
    - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInParent(System.Type)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInParent``1
    - UnityEngine.Component.GetComponents(System.Type)
    - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponents``1
    - UnityEngine.Component.CompareTag(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    - UnityEngine.Component.SendMessageUpwards(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,System.Object)
    - UnityEngine.Component.SendMessage(System.String)
    - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    - UnityEngine.Component.BroadcastMessage(System.String)
    - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.transform
    - UnityEngine.Component.gameObject
    - UnityEngine.Component.tag
    - UnityEngine.Object.GetInstanceID
    - UnityEngine.Object.GetHashCode
    - UnityEngine.Object.Equals(System.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Instantiate``1({T})
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    - UnityEngine.Object.Destroy(UnityEngine.Object)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    - UnityEngine.Object.FindObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object)
    - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    - UnityEngine.Object.FindObjectsOfType``1
    - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectOfType``1
    - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    - UnityEngine.Object.ToString
    - UnityEngine.Object.name
    - UnityEngine.Object.hideFlags
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Unityscript.eventOnClick.exitApp
      commentId: M:Unityscript.eventOnClick.exitApp
      language: CSharp
      name:
        CSharp: exitApp()
        VB: exitApp()
      nameWithType:
        CSharp: eventOnClick.exitApp()
        VB: eventOnClick.exitApp()
      qualifiedName:
        CSharp: Unityscript.eventOnClick.exitApp()
        VB: Unityscript.eventOnClick.exitApp()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: exitApp
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\eventOnClick.cs
        startLine: 12
      syntax:
        content:
          CSharp: public void exitApp()
          VB: Public Sub exitApp
      overload: Unityscript.eventOnClick.exitApp*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.eventOnClick.continueRace
      commentId: M:Unityscript.eventOnClick.continueRace
      language: CSharp
      name:
        CSharp: continueRace()
        VB: continueRace()
      nameWithType:
        CSharp: eventOnClick.continueRace()
        VB: eventOnClick.continueRace()
      qualifiedName:
        CSharp: Unityscript.eventOnClick.continueRace()
        VB: Unityscript.eventOnClick.continueRace()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: continueRace
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\eventOnClick.cs
        startLine: 16
      syntax:
        content:
          CSharp: public void continueRace()
          VB: Public Sub continueRace
      overload: Unityscript.eventOnClick.continueRace*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.eventOnClick.startNewGame
      commentId: M:Unityscript.eventOnClick.startNewGame
      language: CSharp
      name:
        CSharp: startNewGame()
        VB: startNewGame()
      nameWithType:
        CSharp: eventOnClick.startNewGame()
        VB: eventOnClick.startNewGame()
      qualifiedName:
        CSharp: Unityscript.eventOnClick.startNewGame()
        VB: Unityscript.eventOnClick.startNewGame()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: startNewGame
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\eventOnClick.cs
        startLine: 20
      syntax:
        content:
          CSharp: public void startNewGame()
          VB: Public Sub startNewGame
      overload: Unityscript.eventOnClick.startNewGame*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.eventOnClick.Menu
      commentId: M:Unityscript.eventOnClick.Menu
      language: CSharp
      name:
        CSharp: Menu()
        VB: Menu()
      nameWithType:
        CSharp: eventOnClick.Menu()
        VB: eventOnClick.Menu()
      qualifiedName:
        CSharp: Unityscript.eventOnClick.Menu()
        VB: Unityscript.eventOnClick.Menu()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: Menu
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\eventOnClick.cs
        startLine: 24
      syntax:
        content:
          CSharp: public void Menu()
          VB: Public Sub Menu
      overload: Unityscript.eventOnClick.Menu*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.eventOnClick.configIPfromMode
      commentId: M:Unityscript.eventOnClick.configIPfromMode
      language: CSharp
      name:
        CSharp: configIPfromMode()
        VB: configIPfromMode()
      nameWithType:
        CSharp: eventOnClick.configIPfromMode()
        VB: eventOnClick.configIPfromMode()
      qualifiedName:
        CSharp: Unityscript.eventOnClick.configIPfromMode()
        VB: Unityscript.eventOnClick.configIPfromMode()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: configIPfromMode
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\eventOnClick.cs
        startLine: 29
      syntax:
        content:
          CSharp: public void configIPfromMode()
          VB: Public Sub configIPfromMode
      overload: Unityscript.eventOnClick.configIPfromMode*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.eventOnClick.ConfigIpFromMenu
      commentId: M:Unityscript.eventOnClick.ConfigIpFromMenu
      language: CSharp
      name:
        CSharp: ConfigIpFromMenu()
        VB: ConfigIpFromMenu()
      nameWithType:
        CSharp: eventOnClick.ConfigIpFromMenu()
        VB: eventOnClick.ConfigIpFromMenu()
      qualifiedName:
        CSharp: Unityscript.eventOnClick.ConfigIpFromMenu()
        VB: Unityscript.eventOnClick.ConfigIpFromMenu()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: ConfigIpFromMenu
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\eventOnClick.cs
        startLine: 34
      syntax:
        content:
          CSharp: public void ConfigIpFromMenu()
          VB: Public Sub ConfigIpFromMenu
      overload: Unityscript.eventOnClick.ConfigIpFromMenu*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.eventOnClick.loadRMBoatList
      commentId: M:Unityscript.eventOnClick.loadRMBoatList
      language: CSharp
      name:
        CSharp: loadRMBoatList()
        VB: loadRMBoatList()
      nameWithType:
        CSharp: eventOnClick.loadRMBoatList()
        VB: eventOnClick.loadRMBoatList()
      qualifiedName:
        CSharp: Unityscript.eventOnClick.loadRMBoatList()
        VB: Unityscript.eventOnClick.loadRMBoatList()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: loadRMBoatList
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\eventOnClick.cs
        startLine: 39
      syntax:
        content:
          CSharp: public void loadRMBoatList()
          VB: Public Sub loadRMBoatList
      overload: Unityscript.eventOnClick.loadRMBoatList*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.eventOnClick.initVerify
      commentId: M:Unityscript.eventOnClick.initVerify
      language: CSharp
      name:
        CSharp: initVerify()
        VB: initVerify()
      nameWithType:
        CSharp: eventOnClick.initVerify()
        VB: eventOnClick.initVerify()
      qualifiedName:
        CSharp: Unityscript.eventOnClick.initVerify()
        VB: Unityscript.eventOnClick.initVerify()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: initVerify
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\eventOnClick.cs
        startLine: 44
      syntax:
        content:
          CSharp: public void initVerify()
          VB: Public Sub initVerify
      overload: Unityscript.eventOnClick.initVerify*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.eventOnClick.waypointLoadScene
      commentId: M:Unityscript.eventOnClick.waypointLoadScene
      language: CSharp
      name:
        CSharp: waypointLoadScene()
        VB: waypointLoadScene()
      nameWithType:
        CSharp: eventOnClick.waypointLoadScene()
        VB: eventOnClick.waypointLoadScene()
      qualifiedName:
        CSharp: Unityscript.eventOnClick.waypointLoadScene()
        VB: Unityscript.eventOnClick.waypointLoadScene()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: waypointLoadScene
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\eventOnClick.cs
        startLine: 48
      syntax:
        content:
          CSharp: public void waypointLoadScene()
          VB: Public Sub waypointLoadScene
      overload: Unityscript.eventOnClick.waypointLoadScene*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.eventOnClick.loadDocumentation
      commentId: M:Unityscript.eventOnClick.loadDocumentation
      language: CSharp
      name:
        CSharp: loadDocumentation()
        VB: loadDocumentation()
      nameWithType:
        CSharp: eventOnClick.loadDocumentation()
        VB: eventOnClick.loadDocumentation()
      qualifiedName:
        CSharp: Unityscript.eventOnClick.loadDocumentation()
        VB: Unityscript.eventOnClick.loadDocumentation()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: loadDocumentation
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\eventOnClick.cs
        startLine: 52
      syntax:
        content:
          CSharp: public void loadDocumentation()
          VB: Public Sub loadDocumentation
      overload: Unityscript.eventOnClick.loadDocumentation*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unityscript.PolarSelection
    commentId: T:Unityscript.PolarSelection
    language: CSharp
    name:
      CSharp: PolarSelection
      VB: PolarSelection
    nameWithType:
      CSharp: PolarSelection
      VB: PolarSelection
    qualifiedName:
      CSharp: Unityscript.PolarSelection
      VB: Unityscript.PolarSelection
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Unityscript
    source:
      id: PolarSelection
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\PolarSelection.cs
      startLine: 11
    summary: "\nAllow display and selection of polars attach to the boat selected earlier\n"
    example: []
    syntax:
      content:
        CSharp: 'public class PolarSelection : MonoBehaviour'
        VB: >-
          Public Class PolarSelection

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    - UnityEngine.Object
    - UnityEngine.Component
    - UnityEngine.Behaviour
    - UnityEngine.MonoBehaviour
    inheritedMembers:
    - UnityEngine.MonoBehaviour.IsInvoking
    - UnityEngine.MonoBehaviour.CancelInvoke
    - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    - UnityEngine.MonoBehaviour.IsInvoking(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StopAllCoroutines
    - UnityEngine.MonoBehaviour.print(System.Object)
    - UnityEngine.MonoBehaviour.useGUILayout
    - UnityEngine.MonoBehaviour.runInEditMode
    - UnityEngine.Behaviour.enabled
    - UnityEngine.Behaviour.isActiveAndEnabled
    - UnityEngine.Component.GetComponent(System.Type)
    - UnityEngine.Component.GetComponent``1
    - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    - UnityEngine.Component.TryGetComponent``1({T}@)
    - UnityEngine.Component.GetComponent(System.String)
    - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInChildren(System.Type)
    - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentInChildren``1
    - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren(System.Type)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInChildren``1
    - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentInParent(System.Type)
    - UnityEngine.Component.GetComponentInParent``1
    - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInParent(System.Type)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInParent``1
    - UnityEngine.Component.GetComponents(System.Type)
    - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponents``1
    - UnityEngine.Component.CompareTag(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    - UnityEngine.Component.SendMessageUpwards(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,System.Object)
    - UnityEngine.Component.SendMessage(System.String)
    - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    - UnityEngine.Component.BroadcastMessage(System.String)
    - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.transform
    - UnityEngine.Component.gameObject
    - UnityEngine.Component.tag
    - UnityEngine.Object.GetInstanceID
    - UnityEngine.Object.GetHashCode
    - UnityEngine.Object.Equals(System.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Instantiate``1({T})
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    - UnityEngine.Object.Destroy(UnityEngine.Object)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    - UnityEngine.Object.FindObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object)
    - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    - UnityEngine.Object.FindObjectsOfType``1
    - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectOfType``1
    - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    - UnityEngine.Object.ToString
    - UnityEngine.Object.name
    - UnityEngine.Object.hideFlags
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Unityscript.PolarSelection.listPolar
      commentId: F:Unityscript.PolarSelection.listPolar
      language: CSharp
      name:
        CSharp: listPolar
        VB: listPolar
      nameWithType:
        CSharp: PolarSelection.listPolar
        VB: PolarSelection.listPolar
      qualifiedName:
        CSharp: Unityscript.PolarSelection.listPolar
        VB: Unityscript.PolarSelection.listPolar
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: listPolar
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\PolarSelection.cs
        startLine: 13
      syntax:
        content:
          CSharp: public List<string> listPolar
          VB: Public listPolar As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.PolarSelection.selectedButton
      commentId: F:Unityscript.PolarSelection.selectedButton
      language: CSharp
      name:
        CSharp: selectedButton
        VB: selectedButton
      nameWithType:
        CSharp: PolarSelection.selectedButton
        VB: PolarSelection.selectedButton
      qualifiedName:
        CSharp: Unityscript.PolarSelection.selectedButton
        VB: Unityscript.PolarSelection.selectedButton
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: selectedButton
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\PolarSelection.cs
        startLine: 17
      syntax:
        content:
          CSharp: public GameObject selectedButton
          VB: Public selectedButton As GameObject
        return:
          type: UnityEngine.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.PolarSelection.GenerateList
      commentId: M:Unityscript.PolarSelection.GenerateList
      language: CSharp
      name:
        CSharp: GenerateList()
        VB: GenerateList()
      nameWithType:
        CSharp: PolarSelection.GenerateList()
        VB: PolarSelection.GenerateList()
      qualifiedName:
        CSharp: Unityscript.PolarSelection.GenerateList()
        VB: Unityscript.PolarSelection.GenerateList()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: GenerateList
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\PolarSelection.cs
        startLine: 30
      summary: "\nDisplay as many button as polars\n"
      example: []
      syntax:
        content:
          CSharp: public void GenerateList()
          VB: Public Sub GenerateList
      overload: Unityscript.PolarSelection.GenerateList*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.PolarSelection.LoadPolarOnClick(System.String,UnityEngine.GameObject)
      commentId: M:Unityscript.PolarSelection.LoadPolarOnClick(System.String,UnityEngine.GameObject)
      language: CSharp
      name:
        CSharp: LoadPolarOnClick(String, GameObject)
        VB: LoadPolarOnClick(String, GameObject)
      nameWithType:
        CSharp: PolarSelection.LoadPolarOnClick(String, GameObject)
        VB: PolarSelection.LoadPolarOnClick(String, GameObject)
      qualifiedName:
        CSharp: Unityscript.PolarSelection.LoadPolarOnClick(System.String, UnityEngine.GameObject)
        VB: Unityscript.PolarSelection.LoadPolarOnClick(System.String, UnityEngine.GameObject)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: LoadPolarOnClick
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\PolarSelection.cs
        startLine: 49
      summary: "\nLoad the polar selected\n"
      example: []
      syntax:
        content:
          CSharp: public void LoadPolarOnClick(string s, GameObject bu)
          VB: Public Sub LoadPolarOnClick(s As String, bu As GameObject)
        parameters:
        - id: s
          type: System.String
          description: name of the polar selected
        - id: bu
          type: UnityEngine.GameObject
          description: button selected
      overload: Unityscript.PolarSelection.LoadPolarOnClick*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.PolarSelection.setNullCurrentPolar
      commentId: M:Unityscript.PolarSelection.setNullCurrentPolar
      language: CSharp
      name:
        CSharp: setNullCurrentPolar()
        VB: setNullCurrentPolar()
      nameWithType:
        CSharp: PolarSelection.setNullCurrentPolar()
        VB: PolarSelection.setNullCurrentPolar()
      qualifiedName:
        CSharp: Unityscript.PolarSelection.setNullCurrentPolar()
        VB: Unityscript.PolarSelection.setNullCurrentPolar()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: setNullCurrentPolar
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\PolarSelection.cs
        startLine: 78
      summary: "\nchange the sails to none\n"
      example: []
      syntax:
        content:
          CSharp: public void setNullCurrentPolar()
          VB: Public Sub setNullCurrentPolar
      overload: Unityscript.PolarSelection.setNullCurrentPolar*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unityscript.DisplayCadran
    commentId: T:Unityscript.DisplayCadran
    language: CSharp
    name:
      CSharp: DisplayCadran
      VB: DisplayCadran
    nameWithType:
      CSharp: DisplayCadran
      VB: DisplayCadran
    qualifiedName:
      CSharp: Unityscript.DisplayCadran
      VB: Unityscript.DisplayCadran
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Unityscript
    source:
      id: DisplayCadran
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\DisplayCadran.cs
      startLine: 10
    summary: "\nDisplay information of the boat (cog/sog/hdg/stw)\n"
    example: []
    syntax:
      content:
        CSharp: 'public class DisplayCadran : MonoBehaviour'
        VB: >-
          Public Class DisplayCadran

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    - UnityEngine.Object
    - UnityEngine.Component
    - UnityEngine.Behaviour
    - UnityEngine.MonoBehaviour
    inheritedMembers:
    - UnityEngine.MonoBehaviour.IsInvoking
    - UnityEngine.MonoBehaviour.CancelInvoke
    - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    - UnityEngine.MonoBehaviour.IsInvoking(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StopAllCoroutines
    - UnityEngine.MonoBehaviour.print(System.Object)
    - UnityEngine.MonoBehaviour.useGUILayout
    - UnityEngine.MonoBehaviour.runInEditMode
    - UnityEngine.Behaviour.enabled
    - UnityEngine.Behaviour.isActiveAndEnabled
    - UnityEngine.Component.GetComponent(System.Type)
    - UnityEngine.Component.GetComponent``1
    - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    - UnityEngine.Component.TryGetComponent``1({T}@)
    - UnityEngine.Component.GetComponent(System.String)
    - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInChildren(System.Type)
    - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentInChildren``1
    - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren(System.Type)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInChildren``1
    - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentInParent(System.Type)
    - UnityEngine.Component.GetComponentInParent``1
    - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInParent(System.Type)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInParent``1
    - UnityEngine.Component.GetComponents(System.Type)
    - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponents``1
    - UnityEngine.Component.CompareTag(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    - UnityEngine.Component.SendMessageUpwards(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,System.Object)
    - UnityEngine.Component.SendMessage(System.String)
    - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    - UnityEngine.Component.BroadcastMessage(System.String)
    - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.transform
    - UnityEngine.Component.gameObject
    - UnityEngine.Component.tag
    - UnityEngine.Object.GetInstanceID
    - UnityEngine.Object.GetHashCode
    - UnityEngine.Object.Equals(System.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Instantiate``1({T})
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    - UnityEngine.Object.Destroy(UnityEngine.Object)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    - UnityEngine.Object.FindObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object)
    - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    - UnityEngine.Object.FindObjectsOfType``1
    - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectOfType``1
    - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    - UnityEngine.Object.ToString
    - UnityEngine.Object.name
    - UnityEngine.Object.hideFlags
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Unityscript.DisplayCadran.cog
      commentId: F:Unityscript.DisplayCadran.cog
      language: CSharp
      name:
        CSharp: cog
        VB: cog
      nameWithType:
        CSharp: DisplayCadran.cog
        VB: DisplayCadran.cog
      qualifiedName:
        CSharp: Unityscript.DisplayCadran.cog
        VB: Unityscript.DisplayCadran.cog
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: cog
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\DisplayCadran.cs
        startLine: 12
      syntax:
        content:
          CSharp: public GameObject cog
          VB: Public cog As GameObject
        return:
          type: UnityEngine.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.DisplayCadran.sog
      commentId: F:Unityscript.DisplayCadran.sog
      language: CSharp
      name:
        CSharp: sog
        VB: sog
      nameWithType:
        CSharp: DisplayCadran.sog
        VB: DisplayCadran.sog
      qualifiedName:
        CSharp: Unityscript.DisplayCadran.sog
        VB: Unityscript.DisplayCadran.sog
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: sog
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\DisplayCadran.cs
        startLine: 13
      syntax:
        content:
          CSharp: public GameObject sog
          VB: Public sog As GameObject
        return:
          type: UnityEngine.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.DisplayCadran.hdg
      commentId: F:Unityscript.DisplayCadran.hdg
      language: CSharp
      name:
        CSharp: hdg
        VB: hdg
      nameWithType:
        CSharp: DisplayCadran.hdg
        VB: DisplayCadran.hdg
      qualifiedName:
        CSharp: Unityscript.DisplayCadran.hdg
        VB: Unityscript.DisplayCadran.hdg
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: hdg
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\DisplayCadran.cs
        startLine: 14
      syntax:
        content:
          CSharp: public GameObject hdg
          VB: Public hdg As GameObject
        return:
          type: UnityEngine.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.DisplayCadran.stw
      commentId: F:Unityscript.DisplayCadran.stw
      language: CSharp
      name:
        CSharp: stw
        VB: stw
      nameWithType:
        CSharp: DisplayCadran.stw
        VB: DisplayCadran.stw
      qualifiedName:
        CSharp: Unityscript.DisplayCadran.stw
        VB: Unityscript.DisplayCadran.stw
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: stw
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\DisplayCadran.cs
        startLine: 15
      syntax:
        content:
          CSharp: public GameObject stw
          VB: Public stw As GameObject
        return:
          type: UnityEngine.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.DisplayCadran.date
      commentId: F:Unityscript.DisplayCadran.date
      language: CSharp
      name:
        CSharp: date
        VB: date
      nameWithType:
        CSharp: DisplayCadran.date
        VB: DisplayCadran.date
      qualifiedName:
        CSharp: Unityscript.DisplayCadran.date
        VB: Unityscript.DisplayCadran.date
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: date
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\DisplayCadran.cs
        startLine: 16
      syntax:
        content:
          CSharp: public GameObject date
          VB: Public date As GameObject
        return:
          type: UnityEngine.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.DisplayCadran.COG
      commentId: F:Unityscript.DisplayCadran.COG
      language: CSharp
      name:
        CSharp: COG
        VB: COG
      nameWithType:
        CSharp: DisplayCadran.COG
        VB: DisplayCadran.COG
      qualifiedName:
        CSharp: Unityscript.DisplayCadran.COG
        VB: Unityscript.DisplayCadran.COG
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: COG
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\DisplayCadran.cs
        startLine: 18
      syntax:
        content:
          CSharp: public float COG
          VB: Public COG As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.DisplayCadran.COGint
      commentId: F:Unityscript.DisplayCadran.COGint
      language: CSharp
      name:
        CSharp: COGint
        VB: COGint
      nameWithType:
        CSharp: DisplayCadran.COGint
        VB: DisplayCadran.COGint
      qualifiedName:
        CSharp: Unityscript.DisplayCadran.COGint
        VB: Unityscript.DisplayCadran.COGint
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: COGint
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\DisplayCadran.cs
        startLine: 19
      syntax:
        content:
          CSharp: public int COGint
          VB: Public COGint As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.DisplayCadran.displayInfo
      commentId: M:Unityscript.DisplayCadran.displayInfo
      language: CSharp
      name:
        CSharp: displayInfo()
        VB: displayInfo()
      nameWithType:
        CSharp: DisplayCadran.displayInfo()
        VB: DisplayCadran.displayInfo()
      qualifiedName:
        CSharp: Unityscript.DisplayCadran.displayInfo()
        VB: Unityscript.DisplayCadran.displayInfo()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: displayInfo
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\DisplayCadran.cs
        startLine: 27
      syntax:
        content:
          CSharp: public void displayInfo()
          VB: Public Sub displayInfo
      overload: Unityscript.DisplayCadran.displayInfo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.DisplayCadran.parseFloat(System.Single)
      commentId: M:Unityscript.DisplayCadran.parseFloat(System.Single)
      language: CSharp
      name:
        CSharp: parseFloat(Single)
        VB: parseFloat(Single)
      nameWithType:
        CSharp: DisplayCadran.parseFloat(Single)
        VB: DisplayCadran.parseFloat(Single)
      qualifiedName:
        CSharp: Unityscript.DisplayCadran.parseFloat(System.Single)
        VB: Unityscript.DisplayCadran.parseFloat(System.Single)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: parseFloat
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\DisplayCadran.cs
        startLine: 42
      syntax:
        content:
          CSharp: public float parseFloat(float number)
          VB: Public Function parseFloat(number As Single) As Single
        parameters:
        - id: number
          type: System.Single
        return:
          type: System.Single
      overload: Unityscript.DisplayCadran.parseFloat*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unityscript.setConfig
    commentId: T:Unityscript.setConfig
    language: CSharp
    name:
      CSharp: setConfig
      VB: setConfig
    nameWithType:
      CSharp: setConfig
      VB: setConfig
    qualifiedName:
      CSharp: Unityscript.setConfig
      VB: Unityscript.setConfig
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Unityscript
    source:
      id: setConfig
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\setConfig.cs
      startLine: 15
    summary: "\nScript that manage the configuration with the \n-NMEA port / IP\n-RM port / IP\n-language\n"
    example: []
    syntax:
      content:
        CSharp: 'public class setConfig : MonoBehaviour'
        VB: >-
          Public Class setConfig

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    - UnityEngine.Object
    - UnityEngine.Component
    - UnityEngine.Behaviour
    - UnityEngine.MonoBehaviour
    inheritedMembers:
    - UnityEngine.MonoBehaviour.IsInvoking
    - UnityEngine.MonoBehaviour.CancelInvoke
    - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    - UnityEngine.MonoBehaviour.IsInvoking(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StopAllCoroutines
    - UnityEngine.MonoBehaviour.print(System.Object)
    - UnityEngine.MonoBehaviour.useGUILayout
    - UnityEngine.MonoBehaviour.runInEditMode
    - UnityEngine.Behaviour.enabled
    - UnityEngine.Behaviour.isActiveAndEnabled
    - UnityEngine.Component.GetComponent(System.Type)
    - UnityEngine.Component.GetComponent``1
    - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    - UnityEngine.Component.TryGetComponent``1({T}@)
    - UnityEngine.Component.GetComponent(System.String)
    - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInChildren(System.Type)
    - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentInChildren``1
    - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren(System.Type)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInChildren``1
    - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentInParent(System.Type)
    - UnityEngine.Component.GetComponentInParent``1
    - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInParent(System.Type)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInParent``1
    - UnityEngine.Component.GetComponents(System.Type)
    - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponents``1
    - UnityEngine.Component.CompareTag(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    - UnityEngine.Component.SendMessageUpwards(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,System.Object)
    - UnityEngine.Component.SendMessage(System.String)
    - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    - UnityEngine.Component.BroadcastMessage(System.String)
    - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.transform
    - UnityEngine.Component.gameObject
    - UnityEngine.Component.tag
    - UnityEngine.Object.GetInstanceID
    - UnityEngine.Object.GetHashCode
    - UnityEngine.Object.Equals(System.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Instantiate``1({T})
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    - UnityEngine.Object.Destroy(UnityEngine.Object)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    - UnityEngine.Object.FindObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object)
    - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    - UnityEngine.Object.FindObjectsOfType``1
    - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectOfType``1
    - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    - UnityEngine.Object.ToString
    - UnityEngine.Object.name
    - UnityEngine.Object.hideFlags
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Unityscript.setConfig.conf
      commentId: F:Unityscript.setConfig.conf
      language: CSharp
      name:
        CSharp: conf
        VB: conf
      nameWithType:
        CSharp: setConfig.conf
        VB: setConfig.conf
      qualifiedName:
        CSharp: Unityscript.setConfig.conf
        VB: Unityscript.setConfig.conf
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: conf
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\setConfig.cs
        startLine: 17
      syntax:
        content:
          CSharp: public SavedConfigReader.SavedConfig conf
          VB: Public conf As SavedConfigReader.SavedConfig
        return:
          type: SavedConfigReader.SavedConfig
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.setConfig.inputNMEA
      commentId: F:Unityscript.setConfig.inputNMEA
      language: CSharp
      name:
        CSharp: inputNMEA
        VB: inputNMEA
      nameWithType:
        CSharp: setConfig.inputNMEA
        VB: setConfig.inputNMEA
      qualifiedName:
        CSharp: Unityscript.setConfig.inputNMEA
        VB: Unityscript.setConfig.inputNMEA
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: inputNMEA
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\setConfig.cs
        startLine: 18
      syntax:
        content:
          CSharp: public GameObject inputNMEA
          VB: Public inputNMEA As GameObject
        return:
          type: UnityEngine.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.setConfig.inputIPNMEA
      commentId: F:Unityscript.setConfig.inputIPNMEA
      language: CSharp
      name:
        CSharp: inputIPNMEA
        VB: inputIPNMEA
      nameWithType:
        CSharp: setConfig.inputIPNMEA
        VB: setConfig.inputIPNMEA
      qualifiedName:
        CSharp: Unityscript.setConfig.inputIPNMEA
        VB: Unityscript.setConfig.inputIPNMEA
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: inputIPNMEA
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\setConfig.cs
        startLine: 19
      syntax:
        content:
          CSharp: public GameObject inputIPNMEA
          VB: Public inputIPNMEA As GameObject
        return:
          type: UnityEngine.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.setConfig.inputRM
      commentId: F:Unityscript.setConfig.inputRM
      language: CSharp
      name:
        CSharp: inputRM
        VB: inputRM
      nameWithType:
        CSharp: setConfig.inputRM
        VB: setConfig.inputRM
      qualifiedName:
        CSharp: Unityscript.setConfig.inputRM
        VB: Unityscript.setConfig.inputRM
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: inputRM
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\setConfig.cs
        startLine: 20
      syntax:
        content:
          CSharp: public GameObject inputRM
          VB: Public inputRM As GameObject
        return:
          type: UnityEngine.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.setConfig.inputIPRM
      commentId: F:Unityscript.setConfig.inputIPRM
      language: CSharp
      name:
        CSharp: inputIPRM
        VB: inputIPRM
      nameWithType:
        CSharp: setConfig.inputIPRM
        VB: setConfig.inputIPRM
      qualifiedName:
        CSharp: Unityscript.setConfig.inputIPRM
        VB: Unityscript.setConfig.inputIPRM
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: inputIPRM
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\setConfig.cs
        startLine: 21
      syntax:
        content:
          CSharp: public GameObject inputIPRM
          VB: Public inputIPRM As GameObject
        return:
          type: UnityEngine.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.setConfig.lang
      commentId: F:Unityscript.setConfig.lang
      language: CSharp
      name:
        CSharp: lang
        VB: lang
      nameWithType:
        CSharp: setConfig.lang
        VB: setConfig.lang
      qualifiedName:
        CSharp: Unityscript.setConfig.lang
        VB: Unityscript.setConfig.lang
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: lang
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\setConfig.cs
        startLine: 22
      syntax:
        content:
          CSharp: public TMP_Dropdown lang
          VB: Public lang As TMP_Dropdown
        return:
          type: TMPro.TMP_Dropdown
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.setConfig.SetNMEA
      commentId: M:Unityscript.setConfig.SetNMEA
      language: CSharp
      name:
        CSharp: SetNMEA()
        VB: SetNMEA()
      nameWithType:
        CSharp: setConfig.SetNMEA()
        VB: setConfig.SetNMEA()
      qualifiedName:
        CSharp: Unityscript.setConfig.SetNMEA()
        VB: Unityscript.setConfig.SetNMEA()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: SetNMEA
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\setConfig.cs
        startLine: 32
      syntax:
        content:
          CSharp: public void SetNMEA()
          VB: Public Sub SetNMEA
      overload: Unityscript.setConfig.SetNMEA*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.setConfig.SetRM
      commentId: M:Unityscript.setConfig.SetRM
      language: CSharp
      name:
        CSharp: SetRM()
        VB: SetRM()
      nameWithType:
        CSharp: setConfig.SetRM()
        VB: setConfig.SetRM()
      qualifiedName:
        CSharp: Unityscript.setConfig.SetRM()
        VB: Unityscript.setConfig.SetRM()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: SetRM
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\setConfig.cs
        startLine: 38
      syntax:
        content:
          CSharp: public void SetRM()
          VB: Public Sub SetRM
      overload: Unityscript.setConfig.SetRM*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.setConfig.SetLang(TMPro.TMP_Dropdown)
      commentId: M:Unityscript.setConfig.SetLang(TMPro.TMP_Dropdown)
      language: CSharp
      name:
        CSharp: SetLang(TMP_Dropdown)
        VB: SetLang(TMP_Dropdown)
      nameWithType:
        CSharp: setConfig.SetLang(TMP_Dropdown)
        VB: setConfig.SetLang(TMP_Dropdown)
      qualifiedName:
        CSharp: Unityscript.setConfig.SetLang(TMPro.TMP_Dropdown)
        VB: Unityscript.setConfig.SetLang(TMPro.TMP_Dropdown)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: SetLang
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\setConfig.cs
        startLine: 44
      syntax:
        content:
          CSharp: public void SetLang(TMP_Dropdown lang)
          VB: Public Sub SetLang(lang As TMP_Dropdown)
        parameters:
        - id: lang
          type: TMPro.TMP_Dropdown
      overload: Unityscript.setConfig.SetLang*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.setConfig.ShowConfig
      commentId: M:Unityscript.setConfig.ShowConfig
      language: CSharp
      name:
        CSharp: ShowConfig()
        VB: ShowConfig()
      nameWithType:
        CSharp: setConfig.ShowConfig()
        VB: setConfig.ShowConfig()
      qualifiedName:
        CSharp: Unityscript.setConfig.ShowConfig()
        VB: Unityscript.setConfig.ShowConfig()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: ShowConfig
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\setConfig.cs
        startLine: 61
      summary: "\nDisplay initial configuration at start\n"
      example: []
      syntax:
        content:
          CSharp: public void ShowConfig()
          VB: Public Sub ShowConfig
      overload: Unityscript.setConfig.ShowConfig*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unityscript.Run
    commentId: T:Unityscript.Run
    language: CSharp
    name:
      CSharp: Run
      VB: Run
    nameWithType:
      CSharp: Run
      VB: Run
    qualifiedName:
      CSharp: Unityscript.Run
      VB: Unityscript.Run
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Unityscript
    source:
      id: Run
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Run.cs
      startLine: 11
    summary: "\nScript that attach the boat to the model\nthen run the model to start a race\nThis script should be run at the beguining of the &quot;main scene&quot; \n"
    example: []
    syntax:
      content:
        CSharp: 'public class Run : MonoBehaviour'
        VB: >-
          Public Class Run

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    - UnityEngine.Object
    - UnityEngine.Component
    - UnityEngine.Behaviour
    - UnityEngine.MonoBehaviour
    inheritedMembers:
    - UnityEngine.MonoBehaviour.IsInvoking
    - UnityEngine.MonoBehaviour.CancelInvoke
    - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    - UnityEngine.MonoBehaviour.IsInvoking(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StopAllCoroutines
    - UnityEngine.MonoBehaviour.print(System.Object)
    - UnityEngine.MonoBehaviour.useGUILayout
    - UnityEngine.MonoBehaviour.runInEditMode
    - UnityEngine.Behaviour.enabled
    - UnityEngine.Behaviour.isActiveAndEnabled
    - UnityEngine.Component.GetComponent(System.Type)
    - UnityEngine.Component.GetComponent``1
    - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    - UnityEngine.Component.TryGetComponent``1({T}@)
    - UnityEngine.Component.GetComponent(System.String)
    - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInChildren(System.Type)
    - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentInChildren``1
    - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren(System.Type)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInChildren``1
    - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentInParent(System.Type)
    - UnityEngine.Component.GetComponentInParent``1
    - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInParent(System.Type)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInParent``1
    - UnityEngine.Component.GetComponents(System.Type)
    - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponents``1
    - UnityEngine.Component.CompareTag(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    - UnityEngine.Component.SendMessageUpwards(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,System.Object)
    - UnityEngine.Component.SendMessage(System.String)
    - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    - UnityEngine.Component.BroadcastMessage(System.String)
    - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.transform
    - UnityEngine.Component.gameObject
    - UnityEngine.Component.tag
    - UnityEngine.Object.GetInstanceID
    - UnityEngine.Object.GetHashCode
    - UnityEngine.Object.Equals(System.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Instantiate``1({T})
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    - UnityEngine.Object.Destroy(UnityEngine.Object)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    - UnityEngine.Object.FindObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object)
    - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    - UnityEngine.Object.FindObjectsOfType``1
    - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectOfType``1
    - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    - UnityEngine.Object.ToString
    - UnityEngine.Object.name
    - UnityEngine.Object.hideFlags
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Unityscript.ButtonListButton
    commentId: T:Unityscript.ButtonListButton
    language: CSharp
    name:
      CSharp: ButtonListButton
      VB: ButtonListButton
    nameWithType:
      CSharp: ButtonListButton
      VB: ButtonListButton
    qualifiedName:
      CSharp: Unityscript.ButtonListButton
      VB: Unityscript.ButtonListButton
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Unityscript
    source:
      id: ButtonListButton
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\ListBoatType\ButtonListButton.cs
      startLine: 10
    summary: "\nPrefab of a generated button to use it on our dynamique list button\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ButtonListButton : MonoBehaviour'
        VB: >-
          Public Class ButtonListButton

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    - UnityEngine.Object
    - UnityEngine.Component
    - UnityEngine.Behaviour
    - UnityEngine.MonoBehaviour
    inheritedMembers:
    - UnityEngine.MonoBehaviour.IsInvoking
    - UnityEngine.MonoBehaviour.CancelInvoke
    - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    - UnityEngine.MonoBehaviour.IsInvoking(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StopAllCoroutines
    - UnityEngine.MonoBehaviour.print(System.Object)
    - UnityEngine.MonoBehaviour.useGUILayout
    - UnityEngine.MonoBehaviour.runInEditMode
    - UnityEngine.Behaviour.enabled
    - UnityEngine.Behaviour.isActiveAndEnabled
    - UnityEngine.Component.GetComponent(System.Type)
    - UnityEngine.Component.GetComponent``1
    - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    - UnityEngine.Component.TryGetComponent``1({T}@)
    - UnityEngine.Component.GetComponent(System.String)
    - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInChildren(System.Type)
    - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentInChildren``1
    - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren(System.Type)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInChildren``1
    - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentInParent(System.Type)
    - UnityEngine.Component.GetComponentInParent``1
    - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInParent(System.Type)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInParent``1
    - UnityEngine.Component.GetComponents(System.Type)
    - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponents``1
    - UnityEngine.Component.CompareTag(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    - UnityEngine.Component.SendMessageUpwards(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,System.Object)
    - UnityEngine.Component.SendMessage(System.String)
    - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    - UnityEngine.Component.BroadcastMessage(System.String)
    - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.transform
    - UnityEngine.Component.gameObject
    - UnityEngine.Component.tag
    - UnityEngine.Object.GetInstanceID
    - UnityEngine.Object.GetHashCode
    - UnityEngine.Object.Equals(System.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Instantiate``1({T})
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    - UnityEngine.Object.Destroy(UnityEngine.Object)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    - UnityEngine.Object.FindObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object)
    - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    - UnityEngine.Object.FindObjectsOfType``1
    - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectOfType``1
    - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    - UnityEngine.Object.ToString
    - UnityEngine.Object.name
    - UnityEngine.Object.hideFlags
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Unityscript.ButtonListButton.SetText(System.String)
      commentId: M:Unityscript.ButtonListButton.SetText(System.String)
      language: CSharp
      name:
        CSharp: SetText(String)
        VB: SetText(String)
      nameWithType:
        CSharp: ButtonListButton.SetText(String)
        VB: ButtonListButton.SetText(String)
      qualifiedName:
        CSharp: Unityscript.ButtonListButton.SetText(System.String)
        VB: Unityscript.ButtonListButton.SetText(System.String)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: SetText
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\ListBoatType\ButtonListButton.cs
        startLine: 19
      syntax:
        content:
          CSharp: public void SetText(string textString)
          VB: Public Sub SetText(textString As String)
        parameters:
        - id: textString
          type: System.String
      overload: Unityscript.ButtonListButton.SetText*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.ButtonListButton.OnClick
      commentId: M:Unityscript.ButtonListButton.OnClick
      language: CSharp
      name:
        CSharp: OnClick()
        VB: OnClick()
      nameWithType:
        CSharp: ButtonListButton.OnClick()
        VB: ButtonListButton.OnClick()
      qualifiedName:
        CSharp: Unityscript.ButtonListButton.OnClick()
        VB: Unityscript.ButtonListButton.OnClick()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: OnClick
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\ListBoatType\ButtonListButton.cs
        startLine: 25
      syntax:
        content:
          CSharp: public void OnClick()
          VB: Public Sub OnClick
      overload: Unityscript.ButtonListButton.OnClick*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unityscript.SwitchMode
    commentId: T:Unityscript.SwitchMode
    language: CSharp
    name:
      CSharp: SwitchMode
      VB: SwitchMode
    nameWithType:
      CSharp: SwitchMode
      VB: SwitchMode
    qualifiedName:
      CSharp: Unityscript.SwitchMode
      VB: Unityscript.SwitchMode
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Unityscript
    source:
      id: SwitchMode
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\SwitchMode.cs
      startLine: 11
    summary: "\nAllow user to switch in between heading mode and wind mode\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SwitchMode : MonoBehaviour'
        VB: >-
          Public Class SwitchMode

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    - UnityEngine.Object
    - UnityEngine.Component
    - UnityEngine.Behaviour
    - UnityEngine.MonoBehaviour
    inheritedMembers:
    - UnityEngine.MonoBehaviour.IsInvoking
    - UnityEngine.MonoBehaviour.CancelInvoke
    - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    - UnityEngine.MonoBehaviour.IsInvoking(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StopAllCoroutines
    - UnityEngine.MonoBehaviour.print(System.Object)
    - UnityEngine.MonoBehaviour.useGUILayout
    - UnityEngine.MonoBehaviour.runInEditMode
    - UnityEngine.Behaviour.enabled
    - UnityEngine.Behaviour.isActiveAndEnabled
    - UnityEngine.Component.GetComponent(System.Type)
    - UnityEngine.Component.GetComponent``1
    - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    - UnityEngine.Component.TryGetComponent``1({T}@)
    - UnityEngine.Component.GetComponent(System.String)
    - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInChildren(System.Type)
    - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentInChildren``1
    - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren(System.Type)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInChildren``1
    - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentInParent(System.Type)
    - UnityEngine.Component.GetComponentInParent``1
    - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInParent(System.Type)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInParent``1
    - UnityEngine.Component.GetComponents(System.Type)
    - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponents``1
    - UnityEngine.Component.CompareTag(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    - UnityEngine.Component.SendMessageUpwards(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,System.Object)
    - UnityEngine.Component.SendMessage(System.String)
    - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    - UnityEngine.Component.BroadcastMessage(System.String)
    - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.transform
    - UnityEngine.Component.gameObject
    - UnityEngine.Component.tag
    - UnityEngine.Object.GetInstanceID
    - UnityEngine.Object.GetHashCode
    - UnityEngine.Object.Equals(System.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Instantiate``1({T})
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    - UnityEngine.Object.Destroy(UnityEngine.Object)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    - UnityEngine.Object.FindObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object)
    - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    - UnityEngine.Object.FindObjectsOfType``1
    - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectOfType``1
    - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    - UnityEngine.Object.ToString
    - UnityEngine.Object.name
    - UnityEngine.Object.hideFlags
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Unityscript.SwitchMode.PanelCap
      commentId: F:Unityscript.SwitchMode.PanelCap
      language: CSharp
      name:
        CSharp: PanelCap
        VB: PanelCap
      nameWithType:
        CSharp: SwitchMode.PanelCap
        VB: SwitchMode.PanelCap
      qualifiedName:
        CSharp: Unityscript.SwitchMode.PanelCap
        VB: Unityscript.SwitchMode.PanelCap
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: PanelCap
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\SwitchMode.cs
        startLine: 13
      syntax:
        content:
          CSharp: public GameObject PanelCap
          VB: Public PanelCap As GameObject
        return:
          type: UnityEngine.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.SwitchMode.PanelWind
      commentId: F:Unityscript.SwitchMode.PanelWind
      language: CSharp
      name:
        CSharp: PanelWind
        VB: PanelWind
      nameWithType:
        CSharp: SwitchMode.PanelWind
        VB: SwitchMode.PanelWind
      qualifiedName:
        CSharp: Unityscript.SwitchMode.PanelWind
        VB: Unityscript.SwitchMode.PanelWind
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: PanelWind
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\SwitchMode.cs
        startLine: 14
      syntax:
        content:
          CSharp: public GameObject PanelWind
          VB: Public PanelWind As GameObject
        return:
          type: UnityEngine.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.SwitchMode.isActive
      commentId: F:Unityscript.SwitchMode.isActive
      language: CSharp
      name:
        CSharp: isActive
        VB: isActive
      nameWithType:
        CSharp: SwitchMode.isActive
        VB: SwitchMode.isActive
      qualifiedName:
        CSharp: Unityscript.SwitchMode.isActive
        VB: Unityscript.SwitchMode.isActive
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: isActive
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\SwitchMode.cs
        startLine: 15
      syntax:
        content:
          CSharp: public bool isActive
          VB: Public isActive As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.SwitchMode.captext
      commentId: F:Unityscript.SwitchMode.captext
      language: CSharp
      name:
        CSharp: captext
        VB: captext
      nameWithType:
        CSharp: SwitchMode.captext
        VB: SwitchMode.captext
      qualifiedName:
        CSharp: Unityscript.SwitchMode.captext
        VB: Unityscript.SwitchMode.captext
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: captext
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\SwitchMode.cs
        startLine: 16
      syntax:
        content:
          CSharp: public Text captext
          VB: Public captext As Text
        return:
          type: UnityEngine.UI.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.SwitchMode.capAllureText
      commentId: F:Unityscript.SwitchMode.capAllureText
      language: CSharp
      name:
        CSharp: capAllureText
        VB: capAllureText
      nameWithType:
        CSharp: SwitchMode.capAllureText
        VB: SwitchMode.capAllureText
      qualifiedName:
        CSharp: Unityscript.SwitchMode.capAllureText
        VB: Unityscript.SwitchMode.capAllureText
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: capAllureText
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\SwitchMode.cs
        startLine: 17
      syntax:
        content:
          CSharp: public Text capAllureText
          VB: Public capAllureText As Text
        return:
          type: UnityEngine.UI.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.SwitchMode.showCappanel
      commentId: M:Unityscript.SwitchMode.showCappanel
      language: CSharp
      name:
        CSharp: showCappanel()
        VB: showCappanel()
      nameWithType:
        CSharp: SwitchMode.showCappanel()
        VB: SwitchMode.showCappanel()
      qualifiedName:
        CSharp: Unityscript.SwitchMode.showCappanel()
        VB: Unityscript.SwitchMode.showCappanel()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: showCappanel
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\SwitchMode.cs
        startLine: 24
      syntax:
        content:
          CSharp: public void showCappanel()
          VB: Public Sub showCappanel
      overload: Unityscript.SwitchMode.showCappanel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.SwitchMode.showWindpanel
      commentId: M:Unityscript.SwitchMode.showWindpanel
      language: CSharp
      name:
        CSharp: showWindpanel()
        VB: showWindpanel()
      nameWithType:
        CSharp: SwitchMode.showWindpanel()
        VB: SwitchMode.showWindpanel()
      qualifiedName:
        CSharp: Unityscript.SwitchMode.showWindpanel()
        VB: Unityscript.SwitchMode.showWindpanel()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: showWindpanel
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\SwitchMode.cs
        startLine: 32
      syntax:
        content:
          CSharp: public void showWindpanel()
          VB: Public Sub showWindpanel
      overload: Unityscript.SwitchMode.showWindpanel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.SwitchMode.tabpress
      commentId: M:Unityscript.SwitchMode.tabpress
      language: CSharp
      name:
        CSharp: tabpress()
        VB: tabpress()
      nameWithType:
        CSharp: SwitchMode.tabpress()
        VB: SwitchMode.tabpress()
      qualifiedName:
        CSharp: Unityscript.SwitchMode.tabpress()
        VB: Unityscript.SwitchMode.tabpress()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: tabpress
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\SwitchMode.cs
        startLine: 42
      summary: "\nAllow user to switch with pressing TAB\n"
      example: []
      syntax:
        content:
          CSharp: public void tabpress()
          VB: Public Sub tabpress
      overload: Unityscript.SwitchMode.tabpress*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unityscript.Creation
    commentId: T:Unityscript.Creation
    language: CSharp
    name:
      CSharp: Creation
      VB: Creation
    nameWithType:
      CSharp: Creation
      VB: Creation
    qualifiedName:
      CSharp: Unityscript.Creation
      VB: Unityscript.Creation
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Unityscript
    source:
      id: Creation
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Creation.cs
      startLine: 19
    summary: "\nScript that initiate the model of the boat. It should be launch on the very first scene but not rerun on the scene.\ndo not run again the &quot;Debut&quot; scene or you must destroy this before.\nIt is the principale interface between information from model to interface and vis versa\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Creation : MonoBehaviour'
        VB: >-
          Public Class Creation

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    - UnityEngine.Object
    - UnityEngine.Component
    - UnityEngine.Behaviour
    - UnityEngine.MonoBehaviour
    inheritedMembers:
    - UnityEngine.MonoBehaviour.IsInvoking
    - UnityEngine.MonoBehaviour.CancelInvoke
    - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    - UnityEngine.MonoBehaviour.IsInvoking(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StopAllCoroutines
    - UnityEngine.MonoBehaviour.print(System.Object)
    - UnityEngine.MonoBehaviour.useGUILayout
    - UnityEngine.MonoBehaviour.runInEditMode
    - UnityEngine.Behaviour.enabled
    - UnityEngine.Behaviour.isActiveAndEnabled
    - UnityEngine.Component.GetComponent(System.Type)
    - UnityEngine.Component.GetComponent``1
    - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    - UnityEngine.Component.TryGetComponent``1({T}@)
    - UnityEngine.Component.GetComponent(System.String)
    - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInChildren(System.Type)
    - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentInChildren``1
    - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren(System.Type)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInChildren``1
    - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentInParent(System.Type)
    - UnityEngine.Component.GetComponentInParent``1
    - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInParent(System.Type)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInParent``1
    - UnityEngine.Component.GetComponents(System.Type)
    - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponents``1
    - UnityEngine.Component.CompareTag(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    - UnityEngine.Component.SendMessageUpwards(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,System.Object)
    - UnityEngine.Component.SendMessage(System.String)
    - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    - UnityEngine.Component.BroadcastMessage(System.String)
    - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.transform
    - UnityEngine.Component.gameObject
    - UnityEngine.Component.tag
    - UnityEngine.Object.GetInstanceID
    - UnityEngine.Object.GetHashCode
    - UnityEngine.Object.Equals(System.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Instantiate``1({T})
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    - UnityEngine.Object.Destroy(UnityEngine.Object)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    - UnityEngine.Object.FindObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object)
    - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    - UnityEngine.Object.FindObjectsOfType``1
    - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectOfType``1
    - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    - UnityEngine.Object.ToString
    - UnityEngine.Object.name
    - UnityEngine.Object.hideFlags
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Unityscript.Creation.creation
      commentId: F:Unityscript.Creation.creation
      language: CSharp
      name:
        CSharp: creation
        VB: creation
      nameWithType:
        CSharp: Creation.creation
        VB: Creation.creation
      qualifiedName:
        CSharp: Unityscript.Creation.creation
        VB: Unityscript.Creation.creation
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: creation
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Creation.cs
        startLine: 21
      syntax:
        content:
          CSharp: public static Creation creation
          VB: Public Shared creation As Creation
        return:
          type: Unityscript.Creation
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Unityscript.Creation.model
      commentId: F:Unityscript.Creation.model
      language: CSharp
      name:
        CSharp: model
        VB: model
      nameWithType:
        CSharp: Creation.model
        VB: Creation.model
      qualifiedName:
        CSharp: Unityscript.Creation.model
        VB: Unityscript.Creation.model
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: model
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Creation.cs
        startLine: 22
      syntax:
        content:
          CSharp: public RaceModel model
          VB: Public model As RaceModel
        return:
          type: Model.RaceModel
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Creation.obs
      commentId: F:Unityscript.Creation.obs
      language: CSharp
      name:
        CSharp: obs
        VB: obs
      nameWithType:
        CSharp: Creation.obs
        VB: Creation.obs
      qualifiedName:
        CSharp: Unityscript.Creation.obs
        VB: Unityscript.Creation.obs
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: obs
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Creation.cs
        startLine: 23
      syntax:
        content:
          CSharp: public Observer obs
          VB: Public obs As Observer
        return:
          type: Model.Observer
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Creation.boat
      commentId: F:Unityscript.Creation.boat
      language: CSharp
      name:
        CSharp: boat
        VB: boat
      nameWithType:
        CSharp: Creation.boat
        VB: Creation.boat
      qualifiedName:
        CSharp: Unityscript.Creation.boat
        VB: Unityscript.Creation.boat
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: boat
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Creation.cs
        startLine: 24
      syntax:
        content:
          CSharp: public BoatPhys boat
          VB: Public boat As BoatPhys
        return:
          type: Unityscript.BoatPhys
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Creation.changeBoatInfo(System.Single,System.Single,System.Single)
      commentId: M:Unityscript.Creation.changeBoatInfo(System.Single,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: changeBoatInfo(Single, Single, Single)
        VB: changeBoatInfo(Single, Single, Single)
      nameWithType:
        CSharp: Creation.changeBoatInfo(Single, Single, Single)
        VB: Creation.changeBoatInfo(Single, Single, Single)
      qualifiedName:
        CSharp: Unityscript.Creation.changeBoatInfo(System.Single, System.Single, System.Single)
        VB: Unityscript.Creation.changeBoatInfo(System.Single, System.Single, System.Single)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: changeBoatInfo
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Creation.cs
        startLine: 41
      syntax:
        content:
          CSharp: public void changeBoatInfo(float cap, float COG, float SOG)
          VB: Public Sub changeBoatInfo(cap As Single, COG As Single, SOG As Single)
        parameters:
        - id: cap
          type: System.Single
        - id: COG
          type: System.Single
        - id: SOG
          type: System.Single
      overload: Unityscript.Creation.changeBoatInfo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Creation.setCurrent(System.Single,System.Single)
      commentId: M:Unityscript.Creation.setCurrent(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: setCurrent(Single, Single)
        VB: setCurrent(Single, Single)
      nameWithType:
        CSharp: Creation.setCurrent(Single, Single)
        VB: Creation.setCurrent(Single, Single)
      qualifiedName:
        CSharp: Unityscript.Creation.setCurrent(System.Single, System.Single)
        VB: Unityscript.Creation.setCurrent(System.Single, System.Single)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: setCurrent
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Creation.cs
        startLine: 52
      syntax:
        content:
          CSharp: public void setCurrent(float currentspeed, float currentdir)
          VB: Public Sub setCurrent(currentspeed As Single, currentdir As Single)
        parameters:
        - id: currentspeed
          type: System.Single
        - id: currentdir
          type: System.Single
      overload: Unityscript.Creation.setCurrent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Creation.setWind(System.Single,System.Single)
      commentId: M:Unityscript.Creation.setWind(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: setWind(Single, Single)
        VB: setWind(Single, Single)
      nameWithType:
        CSharp: Creation.setWind(Single, Single)
        VB: Creation.setWind(Single, Single)
      qualifiedName:
        CSharp: Unityscript.Creation.setWind(System.Single, System.Single)
        VB: Unityscript.Creation.setWind(System.Single, System.Single)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: setWind
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Creation.cs
        startLine: 56
      syntax:
        content:
          CSharp: public void setWind(float windspeed, float winddir)
          VB: Public Sub setWind(windspeed As Single, winddir As Single)
        parameters:
        - id: windspeed
          type: System.Single
        - id: winddir
          type: System.Single
      overload: Unityscript.Creation.setWind*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Creation.setWave(System.Single,System.Single,System.Single)
      commentId: M:Unityscript.Creation.setWave(System.Single,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: setWave(Single, Single, Single)
        VB: setWave(Single, Single, Single)
      nameWithType:
        CSharp: Creation.setWave(Single, Single, Single)
        VB: Creation.setWave(Single, Single, Single)
      qualifiedName:
        CSharp: Unityscript.Creation.setWave(System.Single, System.Single, System.Single)
        VB: Unityscript.Creation.setWave(System.Single, System.Single, System.Single)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: setWave
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Creation.cs
        startLine: 60
      syntax:
        content:
          CSharp: public void setWave(float waveampl, float wavedir, float wavelength)
          VB: Public Sub setWave(waveampl As Single, wavedir As Single, wavelength As Single)
        parameters:
        - id: waveampl
          type: System.Single
        - id: wavedir
          type: System.Single
        - id: wavelength
          type: System.Single
      overload: Unityscript.Creation.setWave*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Creation.setFactorAcc(System.Single)
      commentId: M:Unityscript.Creation.setFactorAcc(System.Single)
      language: CSharp
      name:
        CSharp: setFactorAcc(Single)
        VB: setFactorAcc(Single)
      nameWithType:
        CSharp: Creation.setFactorAcc(Single)
        VB: Creation.setFactorAcc(Single)
      qualifiedName:
        CSharp: Unityscript.Creation.setFactorAcc(System.Single)
        VB: Unityscript.Creation.setFactorAcc(System.Single)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: setFactorAcc
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Creation.cs
        startLine: 64
      syntax:
        content:
          CSharp: public void setFactorAcc(float factoracc)
          VB: Public Sub setFactorAcc(factoracc As Single)
        parameters:
        - id: factoracc
          type: System.Single
      overload: Unityscript.Creation.setFactorAcc*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Creation.switchCommande
      commentId: M:Unityscript.Creation.switchCommande
      language: CSharp
      name:
        CSharp: switchCommande()
        VB: switchCommande()
      nameWithType:
        CSharp: Creation.switchCommande()
        VB: Creation.switchCommande()
      qualifiedName:
        CSharp: Unityscript.Creation.switchCommande()
        VB: Unityscript.Creation.switchCommande()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: switchCommande
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Creation.cs
        startLine: 69
      syntax:
        content:
          CSharp: public void switchCommande()
          VB: Public Sub switchCommande
      overload: Unityscript.Creation.switchCommande*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Creation.showCap
      commentId: M:Unityscript.Creation.showCap
      language: CSharp
      name:
        CSharp: showCap()
        VB: showCap()
      nameWithType:
        CSharp: Creation.showCap()
        VB: Creation.showCap()
      qualifiedName:
        CSharp: Unityscript.Creation.showCap()
        VB: Unityscript.Creation.showCap()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: showCap
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Creation.cs
        startLine: 73
      syntax:
        content:
          CSharp: public float showCap()
          VB: Public Function showCap As Single
        return:
          type: System.Single
      overload: Unityscript.Creation.showCap*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Creation.ShowRegulateurCap
      commentId: M:Unityscript.Creation.ShowRegulateurCap
      language: CSharp
      name:
        CSharp: ShowRegulateurCap()
        VB: ShowRegulateurCap()
      nameWithType:
        CSharp: Creation.ShowRegulateurCap()
        VB: Creation.ShowRegulateurCap()
      qualifiedName:
        CSharp: Unityscript.Creation.ShowRegulateurCap()
        VB: Unityscript.Creation.ShowRegulateurCap()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: ShowRegulateurCap
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Creation.cs
        startLine: 78
      syntax:
        content:
          CSharp: public float ShowRegulateurCap()
          VB: Public Function ShowRegulateurCap As Single
        return:
          type: System.Single
      overload: Unityscript.Creation.ShowRegulateurCap*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Creation.capChange(System.Int32)
      commentId: M:Unityscript.Creation.capChange(System.Int32)
      language: CSharp
      name:
        CSharp: capChange(Int32)
        VB: capChange(Int32)
      nameWithType:
        CSharp: Creation.capChange(Int32)
        VB: Creation.capChange(Int32)
      qualifiedName:
        CSharp: Unityscript.Creation.capChange(System.Int32)
        VB: Unityscript.Creation.capChange(System.Int32)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: capChange
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Creation.cs
        startLine: 87
      summary: "\nchange the cap of the model with n degres\n"
      example: []
      syntax:
        content:
          CSharp: public void capChange(int n)
          VB: Public Sub capChange(n As Integer)
        parameters:
        - id: n
          type: System.Int32
          description: degres of incremental cap change
      overload: Unityscript.Creation.capChange*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Creation.getFactorAcc
      commentId: M:Unityscript.Creation.getFactorAcc
      language: CSharp
      name:
        CSharp: getFactorAcc()
        VB: getFactorAcc()
      nameWithType:
        CSharp: Creation.getFactorAcc()
        VB: Creation.getFactorAcc()
      qualifiedName:
        CSharp: Unityscript.Creation.getFactorAcc()
        VB: Unityscript.Creation.getFactorAcc()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: getFactorAcc
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Creation.cs
        startLine: 106
      syntax:
        content:
          CSharp: public float getFactorAcc()
          VB: Public Function getFactorAcc As Single
        return:
          type: System.Single
      overload: Unityscript.Creation.getFactorAcc*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Creation.getWindSpeed
      commentId: M:Unityscript.Creation.getWindSpeed
      language: CSharp
      name:
        CSharp: getWindSpeed()
        VB: getWindSpeed()
      nameWithType:
        CSharp: Creation.getWindSpeed()
        VB: Creation.getWindSpeed()
      qualifiedName:
        CSharp: Unityscript.Creation.getWindSpeed()
        VB: Unityscript.Creation.getWindSpeed()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: getWindSpeed
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Creation.cs
        startLine: 111
      syntax:
        content:
          CSharp: public float getWindSpeed()
          VB: Public Function getWindSpeed As Single
        return:
          type: System.Single
      overload: Unityscript.Creation.getWindSpeed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Creation.getWindDir
      commentId: M:Unityscript.Creation.getWindDir
      language: CSharp
      name:
        CSharp: getWindDir()
        VB: getWindDir()
      nameWithType:
        CSharp: Creation.getWindDir()
        VB: Creation.getWindDir()
      qualifiedName:
        CSharp: Unityscript.Creation.getWindDir()
        VB: Unityscript.Creation.getWindDir()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: getWindDir
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Creation.cs
        startLine: 116
      syntax:
        content:
          CSharp: public float getWindDir()
          VB: Public Function getWindDir As Single
        return:
          type: System.Single
      overload: Unityscript.Creation.getWindDir*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Creation.getWaveAmpl
      commentId: M:Unityscript.Creation.getWaveAmpl
      language: CSharp
      name:
        CSharp: getWaveAmpl()
        VB: getWaveAmpl()
      nameWithType:
        CSharp: Creation.getWaveAmpl()
        VB: Creation.getWaveAmpl()
      qualifiedName:
        CSharp: Unityscript.Creation.getWaveAmpl()
        VB: Unityscript.Creation.getWaveAmpl()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: getWaveAmpl
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Creation.cs
        startLine: 120
      syntax:
        content:
          CSharp: public float getWaveAmpl()
          VB: Public Function getWaveAmpl As Single
        return:
          type: System.Single
      overload: Unityscript.Creation.getWaveAmpl*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Creation.getWaveDir
      commentId: M:Unityscript.Creation.getWaveDir
      language: CSharp
      name:
        CSharp: getWaveDir()
        VB: getWaveDir()
      nameWithType:
        CSharp: Creation.getWaveDir()
        VB: Creation.getWaveDir()
      qualifiedName:
        CSharp: Unityscript.Creation.getWaveDir()
        VB: Unityscript.Creation.getWaveDir()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: getWaveDir
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Creation.cs
        startLine: 124
      syntax:
        content:
          CSharp: public float getWaveDir()
          VB: Public Function getWaveDir As Single
        return:
          type: System.Single
      overload: Unityscript.Creation.getWaveDir*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Creation.getWaveLength
      commentId: M:Unityscript.Creation.getWaveLength
      language: CSharp
      name:
        CSharp: getWaveLength()
        VB: getWaveLength()
      nameWithType:
        CSharp: Creation.getWaveLength()
        VB: Creation.getWaveLength()
      qualifiedName:
        CSharp: Unityscript.Creation.getWaveLength()
        VB: Unityscript.Creation.getWaveLength()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: getWaveLength
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Creation.cs
        startLine: 128
      syntax:
        content:
          CSharp: public float getWaveLength()
          VB: Public Function getWaveLength As Single
        return:
          type: System.Single
      overload: Unityscript.Creation.getWaveLength*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Creation.getWaterSpeed
      commentId: M:Unityscript.Creation.getWaterSpeed
      language: CSharp
      name:
        CSharp: getWaterSpeed()
        VB: getWaterSpeed()
      nameWithType:
        CSharp: Creation.getWaterSpeed()
        VB: Creation.getWaterSpeed()
      qualifiedName:
        CSharp: Unityscript.Creation.getWaterSpeed()
        VB: Unityscript.Creation.getWaterSpeed()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: getWaterSpeed
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Creation.cs
        startLine: 132
      syntax:
        content:
          CSharp: public float getWaterSpeed()
          VB: Public Function getWaterSpeed As Single
        return:
          type: System.Single
      overload: Unityscript.Creation.getWaterSpeed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Creation.getWaterDir
      commentId: M:Unityscript.Creation.getWaterDir
      language: CSharp
      name:
        CSharp: getWaterDir()
        VB: getWaterDir()
      nameWithType:
        CSharp: Creation.getWaterDir()
        VB: Creation.getWaterDir()
      qualifiedName:
        CSharp: Unityscript.Creation.getWaterDir()
        VB: Unityscript.Creation.getWaterDir()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: getWaterDir
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Creation.cs
        startLine: 136
      syntax:
        content:
          CSharp: public float getWaterDir()
          VB: Public Function getWaterDir As Single
        return:
          type: System.Single
      overload: Unityscript.Creation.getWaterDir*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Creation.getSTW
      commentId: M:Unityscript.Creation.getSTW
      language: CSharp
      name:
        CSharp: getSTW()
        VB: getSTW()
      nameWithType:
        CSharp: Creation.getSTW()
        VB: Creation.getSTW()
      qualifiedName:
        CSharp: Unityscript.Creation.getSTW()
        VB: Unityscript.Creation.getSTW()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: getSTW
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Creation.cs
        startLine: 141
      syntax:
        content:
          CSharp: public float getSTW()
          VB: Public Function getSTW As Single
        return:
          type: System.Single
      overload: Unityscript.Creation.getSTW*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Creation.setNMEA(System.Int32,System.String)
      commentId: M:Unityscript.Creation.setNMEA(System.Int32,System.String)
      language: CSharp
      name:
        CSharp: setNMEA(Int32, String)
        VB: setNMEA(Int32, String)
      nameWithType:
        CSharp: Creation.setNMEA(Int32, String)
        VB: Creation.setNMEA(Int32, String)
      qualifiedName:
        CSharp: Unityscript.Creation.setNMEA(System.Int32, System.String)
        VB: Unityscript.Creation.setNMEA(System.Int32, System.String)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: setNMEA
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Creation.cs
        startLine: 146
      syntax:
        content:
          CSharp: public void setNMEA(int port, string ip)
          VB: Public Sub setNMEA(port As Integer, ip As String)
        parameters:
        - id: port
          type: System.Int32
        - id: ip
          type: System.String
      overload: Unityscript.Creation.setNMEA*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Creation.getPortNMEA
      commentId: M:Unityscript.Creation.getPortNMEA
      language: CSharp
      name:
        CSharp: getPortNMEA()
        VB: getPortNMEA()
      nameWithType:
        CSharp: Creation.getPortNMEA()
        VB: Creation.getPortNMEA()
      qualifiedName:
        CSharp: Unityscript.Creation.getPortNMEA()
        VB: Unityscript.Creation.getPortNMEA()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: getPortNMEA
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Creation.cs
        startLine: 150
      syntax:
        content:
          CSharp: public int getPortNMEA()
          VB: Public Function getPortNMEA As Integer
        return:
          type: System.Int32
      overload: Unityscript.Creation.getPortNMEA*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Creation.getIpNMEA
      commentId: M:Unityscript.Creation.getIpNMEA
      language: CSharp
      name:
        CSharp: getIpNMEA()
        VB: getIpNMEA()
      nameWithType:
        CSharp: Creation.getIpNMEA()
        VB: Creation.getIpNMEA()
      qualifiedName:
        CSharp: Unityscript.Creation.getIpNMEA()
        VB: Unityscript.Creation.getIpNMEA()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: getIpNMEA
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Creation.cs
        startLine: 154
      syntax:
        content:
          CSharp: public string getIpNMEA()
          VB: Public Function getIpNMEA As String
        return:
          type: System.String
      overload: Unityscript.Creation.getIpNMEA*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Creation.getBoatList(System.String,System.Int32)
      commentId: M:Unityscript.Creation.getBoatList(System.String,System.Int32)
      language: CSharp
      name:
        CSharp: getBoatList(String, Int32)
        VB: getBoatList(String, Int32)
      nameWithType:
        CSharp: Creation.getBoatList(String, Int32)
        VB: Creation.getBoatList(String, Int32)
      qualifiedName:
        CSharp: Unityscript.Creation.getBoatList(System.String, System.Int32)
        VB: Unityscript.Creation.getBoatList(System.String, System.Int32)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: getBoatList
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Creation.cs
        startLine: 159
      syntax:
        content:
          CSharp: public List<string> getBoatList(string ip, int port)
          VB: Public Function getBoatList(ip As String, port As Integer) As List(Of String)
        parameters:
        - id: ip
          type: System.String
        - id: port
          type: System.Int32
        return:
          type: System.Collections.Generic.List{System.String}
      overload: Unityscript.Creation.getBoatList*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Creation.getPolars
      commentId: M:Unityscript.Creation.getPolars
      language: CSharp
      name:
        CSharp: getPolars()
        VB: getPolars()
      nameWithType:
        CSharp: Creation.getPolars()
        VB: Creation.getPolars()
      qualifiedName:
        CSharp: Unityscript.Creation.getPolars()
        VB: Unityscript.Creation.getPolars()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: getPolars
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Creation.cs
        startLine: 164
      syntax:
        content:
          CSharp: public List<string> getPolars()
          VB: Public Function getPolars As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
      overload: Unityscript.Creation.getPolars*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Creation.setPolar(System.String)
      commentId: M:Unityscript.Creation.setPolar(System.String)
      language: CSharp
      name:
        CSharp: setPolar(String)
        VB: setPolar(String)
      nameWithType:
        CSharp: Creation.setPolar(String)
        VB: Creation.setPolar(String)
      qualifiedName:
        CSharp: Unityscript.Creation.setPolar(System.String)
        VB: Unityscript.Creation.setPolar(System.String)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: setPolar
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Creation.cs
        startLine: 168
      syntax:
        content:
          CSharp: public void setPolar(string polarName)
          VB: Public Sub setPolar(polarName As String)
        parameters:
        - id: polarName
          type: System.String
      overload: Unityscript.Creation.setPolar*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Creation.setNullPolar
      commentId: M:Unityscript.Creation.setNullPolar
      language: CSharp
      name:
        CSharp: setNullPolar()
        VB: setNullPolar()
      nameWithType:
        CSharp: Creation.setNullPolar()
        VB: Creation.setNullPolar()
      qualifiedName:
        CSharp: Unityscript.Creation.setNullPolar()
        VB: Unityscript.Creation.setNullPolar()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: setNullPolar
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Creation.cs
        startLine: 172
      syntax:
        content:
          CSharp: public void setNullPolar()
          VB: Public Sub setNullPolar
      overload: Unityscript.Creation.setNullPolar*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Creation.setWaypoint(System.Single,System.Single)
      commentId: M:Unityscript.Creation.setWaypoint(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: setWaypoint(Single, Single)
        VB: setWaypoint(Single, Single)
      nameWithType:
        CSharp: Creation.setWaypoint(Single, Single)
        VB: Creation.setWaypoint(Single, Single)
      qualifiedName:
        CSharp: Unityscript.Creation.setWaypoint(System.Single, System.Single)
        VB: Unityscript.Creation.setWaypoint(System.Single, System.Single)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: setWaypoint
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Creation.cs
        startLine: 177
      syntax:
        content:
          CSharp: public void setWaypoint(float lat, float longi)
          VB: Public Sub setWaypoint(lat As Single, longi As Single)
        parameters:
        - id: lat
          type: System.Single
        - id: longi
          type: System.Single
      overload: Unityscript.Creation.setWaypoint*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Creation.getClock
      commentId: M:Unityscript.Creation.getClock
      language: CSharp
      name:
        CSharp: getClock()
        VB: getClock()
      nameWithType:
        CSharp: Creation.getClock()
        VB: Creation.getClock()
      qualifiedName:
        CSharp: Unityscript.Creation.getClock()
        VB: Unityscript.Creation.getClock()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: getClock
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Creation.cs
        startLine: 182
      syntax:
        content:
          CSharp: public DateTime getClock()
          VB: Public Function getClock As Date
        return:
          type: System.DateTime
      overload: Unityscript.Creation.getClock*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unityscript.Initialisation
    commentId: T:Unityscript.Initialisation
    language: CSharp
    name:
      CSharp: Initialisation
      VB: Initialisation
    nameWithType:
      CSharp: Initialisation
      VB: Initialisation
    qualifiedName:
      CSharp: Unityscript.Initialisation
      VB: Unityscript.Initialisation
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Unityscript
    source:
      id: Initialisation
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Initialisation.cs
      startLine: 16
    summary: "\nManage the sequence of initialisation\nThe Transform boat is turning and is sending to the corresponding port and ip NMEA trames\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Initialisation : MonoBehaviour'
        VB: >-
          Public Class Initialisation

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    - UnityEngine.Object
    - UnityEngine.Component
    - UnityEngine.Behaviour
    - UnityEngine.MonoBehaviour
    inheritedMembers:
    - UnityEngine.MonoBehaviour.IsInvoking
    - UnityEngine.MonoBehaviour.CancelInvoke
    - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    - UnityEngine.MonoBehaviour.IsInvoking(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StopAllCoroutines
    - UnityEngine.MonoBehaviour.print(System.Object)
    - UnityEngine.MonoBehaviour.useGUILayout
    - UnityEngine.MonoBehaviour.runInEditMode
    - UnityEngine.Behaviour.enabled
    - UnityEngine.Behaviour.isActiveAndEnabled
    - UnityEngine.Component.GetComponent(System.Type)
    - UnityEngine.Component.GetComponent``1
    - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    - UnityEngine.Component.TryGetComponent``1({T}@)
    - UnityEngine.Component.GetComponent(System.String)
    - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInChildren(System.Type)
    - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentInChildren``1
    - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren(System.Type)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInChildren``1
    - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentInParent(System.Type)
    - UnityEngine.Component.GetComponentInParent``1
    - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInParent(System.Type)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInParent``1
    - UnityEngine.Component.GetComponents(System.Type)
    - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponents``1
    - UnityEngine.Component.CompareTag(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    - UnityEngine.Component.SendMessageUpwards(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,System.Object)
    - UnityEngine.Component.SendMessage(System.String)
    - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    - UnityEngine.Component.BroadcastMessage(System.String)
    - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.transform
    - UnityEngine.Component.gameObject
    - UnityEngine.Component.tag
    - UnityEngine.Object.GetInstanceID
    - UnityEngine.Object.GetHashCode
    - UnityEngine.Object.Equals(System.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Instantiate``1({T})
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    - UnityEngine.Object.Destroy(UnityEngine.Object)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    - UnityEngine.Object.FindObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object)
    - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    - UnityEngine.Object.FindObjectsOfType``1
    - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectOfType``1
    - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    - UnityEngine.Object.ToString
    - UnityEngine.Object.name
    - UnityEngine.Object.hideFlags
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Unityscript.Initialisation.Boat
      commentId: F:Unityscript.Initialisation.Boat
      language: CSharp
      name:
        CSharp: Boat
        VB: Boat
      nameWithType:
        CSharp: Initialisation.Boat
        VB: Initialisation.Boat
      qualifiedName:
        CSharp: Unityscript.Initialisation.Boat
        VB: Unityscript.Initialisation.Boat
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: Boat
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Initialisation.cs
        startLine: 18
      syntax:
        content:
          CSharp: public Transform Boat
          VB: Public Boat As Transform
        return:
          type: UnityEngine.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Initialisation.rotation
      commentId: F:Unityscript.Initialisation.rotation
      language: CSharp
      name:
        CSharp: rotation
        VB: rotation
      nameWithType:
        CSharp: Initialisation.rotation
        VB: Initialisation.rotation
      qualifiedName:
        CSharp: Unityscript.Initialisation.rotation
        VB: Unityscript.Initialisation.rotation
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: rotation
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Initialisation.cs
        startLine: 19
      syntax:
        content:
          CSharp: public Vector3 rotation
          VB: Public rotation As Vector3
        return:
          type: UnityEngine.Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Initialisation.cap
      commentId: F:Unityscript.Initialisation.cap
      language: CSharp
      name:
        CSharp: cap
        VB: cap
      nameWithType:
        CSharp: Initialisation.cap
        VB: Initialisation.cap
      qualifiedName:
        CSharp: Unityscript.Initialisation.cap
        VB: Unityscript.Initialisation.cap
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: cap
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Initialisation.cs
        startLine: 20
      syntax:
        content:
          CSharp: public float cap
          VB: Public cap As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Initialisation.send
      commentId: F:Unityscript.Initialisation.send
      language: CSharp
      name:
        CSharp: send
        VB: send
      nameWithType:
        CSharp: Initialisation.send
        VB: Initialisation.send
      qualifiedName:
        CSharp: Unityscript.Initialisation.send
        VB: Unityscript.Initialisation.send
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: send
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Initialisation.cs
        startLine: 21
      syntax:
        content:
          CSharp: public Sender send
          VB: Public send As Sender
        return:
          type: SimpleSimulator.AquitisionCommunication.Trame.Sender
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Initialisation.trame
      commentId: F:Unityscript.Initialisation.trame
      language: CSharp
      name:
        CSharp: trame
        VB: trame
      nameWithType:
        CSharp: Initialisation.trame
        VB: Initialisation.trame
      qualifiedName:
        CSharp: Unityscript.Initialisation.trame
        VB: Unityscript.Initialisation.trame
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: trame
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Initialisation.cs
        startLine: 22
      syntax:
        content:
          CSharp: public TrameNMEA trame
          VB: Public trame As TrameNMEA
        return:
          type: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Initialisation.conf
      commentId: F:Unityscript.Initialisation.conf
      language: CSharp
      name:
        CSharp: conf
        VB: conf
      nameWithType:
        CSharp: Initialisation.conf
        VB: Initialisation.conf
      qualifiedName:
        CSharp: Unityscript.Initialisation.conf
        VB: Unityscript.Initialisation.conf
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: conf
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Initialisation.cs
        startLine: 23
      syntax:
        content:
          CSharp: public SavedConfigReader.SavedConfig conf
          VB: Public conf As SavedConfigReader.SavedConfig
        return:
          type: SavedConfigReader.SavedConfig
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unityscript.ButtonListControl
    commentId: T:Unityscript.ButtonListControl
    language: CSharp
    name:
      CSharp: ButtonListControl
      VB: ButtonListControl
    nameWithType:
      CSharp: ButtonListControl
      VB: ButtonListControl
    qualifiedName:
      CSharp: Unityscript.ButtonListControl
      VB: Unityscript.ButtonListControl
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Unityscript
    source:
      id: ButtonListControl
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\ListBoatType\ButtonListControl.cs
      startLine: 10
    summary: "\nGenerate the button list of the boat type scene\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ButtonListControl : MonoBehaviour'
        VB: >-
          Public Class ButtonListControl

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    - UnityEngine.Object
    - UnityEngine.Component
    - UnityEngine.Behaviour
    - UnityEngine.MonoBehaviour
    inheritedMembers:
    - UnityEngine.MonoBehaviour.IsInvoking
    - UnityEngine.MonoBehaviour.CancelInvoke
    - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    - UnityEngine.MonoBehaviour.IsInvoking(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StopAllCoroutines
    - UnityEngine.MonoBehaviour.print(System.Object)
    - UnityEngine.MonoBehaviour.useGUILayout
    - UnityEngine.MonoBehaviour.runInEditMode
    - UnityEngine.Behaviour.enabled
    - UnityEngine.Behaviour.isActiveAndEnabled
    - UnityEngine.Component.GetComponent(System.Type)
    - UnityEngine.Component.GetComponent``1
    - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    - UnityEngine.Component.TryGetComponent``1({T}@)
    - UnityEngine.Component.GetComponent(System.String)
    - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInChildren(System.Type)
    - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentInChildren``1
    - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren(System.Type)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInChildren``1
    - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentInParent(System.Type)
    - UnityEngine.Component.GetComponentInParent``1
    - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInParent(System.Type)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInParent``1
    - UnityEngine.Component.GetComponents(System.Type)
    - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponents``1
    - UnityEngine.Component.CompareTag(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    - UnityEngine.Component.SendMessageUpwards(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,System.Object)
    - UnityEngine.Component.SendMessage(System.String)
    - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    - UnityEngine.Component.BroadcastMessage(System.String)
    - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.transform
    - UnityEngine.Component.gameObject
    - UnityEngine.Component.tag
    - UnityEngine.Object.GetInstanceID
    - UnityEngine.Object.GetHashCode
    - UnityEngine.Object.Equals(System.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Instantiate``1({T})
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    - UnityEngine.Object.Destroy(UnityEngine.Object)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    - UnityEngine.Object.FindObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object)
    - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    - UnityEngine.Object.FindObjectsOfType``1
    - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectOfType``1
    - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    - UnityEngine.Object.ToString
    - UnityEngine.Object.name
    - UnityEngine.Object.hideFlags
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Unityscript.ButtonListControl.conf
      commentId: F:Unityscript.ButtonListControl.conf
      language: CSharp
      name:
        CSharp: conf
        VB: conf
      nameWithType:
        CSharp: ButtonListControl.conf
        VB: ButtonListControl.conf
      qualifiedName:
        CSharp: Unityscript.ButtonListControl.conf
        VB: Unityscript.ButtonListControl.conf
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: conf
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\ListBoatType\ButtonListControl.cs
        startLine: 18
      syntax:
        content:
          CSharp: public SavedConfigReader.SavedConfig conf
          VB: Public conf As SavedConfigReader.SavedConfig
        return:
          type: SavedConfigReader.SavedConfig
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.ButtonListControl.currentBoat
      commentId: F:Unityscript.ButtonListControl.currentBoat
      language: CSharp
      name:
        CSharp: currentBoat
        VB: currentBoat
      nameWithType:
        CSharp: ButtonListControl.currentBoat
        VB: ButtonListControl.currentBoat
      qualifiedName:
        CSharp: Unityscript.ButtonListControl.currentBoat
        VB: Unityscript.ButtonListControl.currentBoat
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: currentBoat
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\ListBoatType\ButtonListControl.cs
        startLine: 19
      syntax:
        content:
          CSharp: public string currentBoat
          VB: Public currentBoat As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.ButtonListControl.GenerateList
      commentId: M:Unityscript.ButtonListControl.GenerateList
      language: CSharp
      name:
        CSharp: GenerateList()
        VB: GenerateList()
      nameWithType:
        CSharp: ButtonListControl.GenerateList()
        VB: ButtonListControl.GenerateList()
      qualifiedName:
        CSharp: Unityscript.ButtonListControl.GenerateList()
        VB: Unityscript.ButtonListControl.GenerateList()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: GenerateList
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\ListBoatType\ButtonListControl.cs
        startLine: 39
      summary: "\nCalled at the beguining of the boat selection scene and every time a refresh is called\nDestroy existing button then recreated from the boat type list get by  the race manager\n"
      example: []
      syntax:
        content:
          CSharp: public void GenerateList()
          VB: Public Sub GenerateList
      overload: Unityscript.ButtonListControl.GenerateList*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.ButtonListControl.SelectBoatType(System.String,UnityEngine.GameObject)
      commentId: M:Unityscript.ButtonListControl.SelectBoatType(System.String,UnityEngine.GameObject)
      language: CSharp
      name:
        CSharp: SelectBoatType(String, GameObject)
        VB: SelectBoatType(String, GameObject)
      nameWithType:
        CSharp: ButtonListControl.SelectBoatType(String, GameObject)
        VB: ButtonListControl.SelectBoatType(String, GameObject)
      qualifiedName:
        CSharp: Unityscript.ButtonListControl.SelectBoatType(System.String, UnityEngine.GameObject)
        VB: Unityscript.ButtonListControl.SelectBoatType(System.String, UnityEngine.GameObject)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: SelectBoatType
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\ListBoatType\ButtonListControl.cs
        startLine: 67
      syntax:
        content:
          CSharp: public void SelectBoatType(string boatname, GameObject bu)
          VB: Public Sub SelectBoatType(boatname As String, bu As GameObject)
        parameters:
        - id: boatname
          type: System.String
        - id: bu
          type: UnityEngine.GameObject
      overload: Unityscript.ButtonListControl.SelectBoatType*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.ButtonListControl.refresh
      commentId: M:Unityscript.ButtonListControl.refresh
      language: CSharp
      name:
        CSharp: refresh()
        VB: refresh()
      nameWithType:
        CSharp: ButtonListControl.refresh()
        VB: ButtonListControl.refresh()
      qualifiedName:
        CSharp: Unityscript.ButtonListControl.refresh()
        VB: Unityscript.ButtonListControl.refresh()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: refresh
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\ListBoatType\ButtonListControl.cs
        startLine: 82
      summary: "\ncalled when a button is clicked to load the boat type selected \nmove on the main scene to start a race\n"
      example: []
      syntax:
        content:
          CSharp: public void refresh()
          VB: Public Sub refresh
      overload: Unityscript.ButtonListControl.refresh*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.ButtonListControl.LoadBoatSelected
      commentId: M:Unityscript.ButtonListControl.LoadBoatSelected
      language: CSharp
      name:
        CSharp: LoadBoatSelected()
        VB: LoadBoatSelected()
      nameWithType:
        CSharp: ButtonListControl.LoadBoatSelected()
        VB: ButtonListControl.LoadBoatSelected()
      qualifiedName:
        CSharp: Unityscript.ButtonListControl.LoadBoatSelected()
        VB: Unityscript.ButtonListControl.LoadBoatSelected()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: LoadBoatSelected
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\ListBoatType\ButtonListControl.cs
        startLine: 86
      syntax:
        content:
          CSharp: public void LoadBoatSelected()
          VB: Public Sub LoadBoatSelected
      overload: Unityscript.ButtonListControl.LoadBoatSelected*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unityscript.SetEnv
    commentId: T:Unityscript.SetEnv
    language: CSharp
    name:
      CSharp: SetEnv
      VB: SetEnv
    nameWithType:
      CSharp: SetEnv
      VB: SetEnv
    qualifiedName:
      CSharp: Unityscript.SetEnv
      VB: Unityscript.SetEnv
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Unityscript
    source:
      id: SetEnv
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\SetEnv.cs
      startLine: 12
    summary: "\nAllow user to change environment parameters with inputfields from interface\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SetEnv : MonoBehaviour'
        VB: >-
          Public Class SetEnv

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    - UnityEngine.Object
    - UnityEngine.Component
    - UnityEngine.Behaviour
    - UnityEngine.MonoBehaviour
    inheritedMembers:
    - UnityEngine.MonoBehaviour.IsInvoking
    - UnityEngine.MonoBehaviour.CancelInvoke
    - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    - UnityEngine.MonoBehaviour.IsInvoking(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StopAllCoroutines
    - UnityEngine.MonoBehaviour.print(System.Object)
    - UnityEngine.MonoBehaviour.useGUILayout
    - UnityEngine.MonoBehaviour.runInEditMode
    - UnityEngine.Behaviour.enabled
    - UnityEngine.Behaviour.isActiveAndEnabled
    - UnityEngine.Component.GetComponent(System.Type)
    - UnityEngine.Component.GetComponent``1
    - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    - UnityEngine.Component.TryGetComponent``1({T}@)
    - UnityEngine.Component.GetComponent(System.String)
    - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInChildren(System.Type)
    - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentInChildren``1
    - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren(System.Type)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInChildren``1
    - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentInParent(System.Type)
    - UnityEngine.Component.GetComponentInParent``1
    - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInParent(System.Type)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInParent``1
    - UnityEngine.Component.GetComponents(System.Type)
    - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponents``1
    - UnityEngine.Component.CompareTag(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    - UnityEngine.Component.SendMessageUpwards(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,System.Object)
    - UnityEngine.Component.SendMessage(System.String)
    - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    - UnityEngine.Component.BroadcastMessage(System.String)
    - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.transform
    - UnityEngine.Component.gameObject
    - UnityEngine.Component.tag
    - UnityEngine.Object.GetInstanceID
    - UnityEngine.Object.GetHashCode
    - UnityEngine.Object.Equals(System.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Instantiate``1({T})
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    - UnityEngine.Object.Destroy(UnityEngine.Object)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    - UnityEngine.Object.FindObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object)
    - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    - UnityEngine.Object.FindObjectsOfType``1
    - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectOfType``1
    - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    - UnityEngine.Object.ToString
    - UnityEngine.Object.name
    - UnityEngine.Object.hideFlags
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Unityscript.SetEnv.windSpeed
      commentId: F:Unityscript.SetEnv.windSpeed
      language: CSharp
      name:
        CSharp: windSpeed
        VB: windSpeed
      nameWithType:
        CSharp: SetEnv.windSpeed
        VB: SetEnv.windSpeed
      qualifiedName:
        CSharp: Unityscript.SetEnv.windSpeed
        VB: Unityscript.SetEnv.windSpeed
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: windSpeed
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\SetEnv.cs
        startLine: 14
      syntax:
        content:
          CSharp: public GameObject windSpeed
          VB: Public windSpeed As GameObject
        return:
          type: UnityEngine.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.SetEnv.windDir
      commentId: F:Unityscript.SetEnv.windDir
      language: CSharp
      name:
        CSharp: windDir
        VB: windDir
      nameWithType:
        CSharp: SetEnv.windDir
        VB: SetEnv.windDir
      qualifiedName:
        CSharp: Unityscript.SetEnv.windDir
        VB: Unityscript.SetEnv.windDir
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: windDir
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\SetEnv.cs
        startLine: 15
      syntax:
        content:
          CSharp: public GameObject windDir
          VB: Public windDir As GameObject
        return:
          type: UnityEngine.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.SetEnv.waveAmpl
      commentId: F:Unityscript.SetEnv.waveAmpl
      language: CSharp
      name:
        CSharp: waveAmpl
        VB: waveAmpl
      nameWithType:
        CSharp: SetEnv.waveAmpl
        VB: SetEnv.waveAmpl
      qualifiedName:
        CSharp: Unityscript.SetEnv.waveAmpl
        VB: Unityscript.SetEnv.waveAmpl
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: waveAmpl
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\SetEnv.cs
        startLine: 17
      syntax:
        content:
          CSharp: public GameObject waveAmpl
          VB: Public waveAmpl As GameObject
        return:
          type: UnityEngine.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.SetEnv.waveDir
      commentId: F:Unityscript.SetEnv.waveDir
      language: CSharp
      name:
        CSharp: waveDir
        VB: waveDir
      nameWithType:
        CSharp: SetEnv.waveDir
        VB: SetEnv.waveDir
      qualifiedName:
        CSharp: Unityscript.SetEnv.waveDir
        VB: Unityscript.SetEnv.waveDir
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: waveDir
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\SetEnv.cs
        startLine: 18
      syntax:
        content:
          CSharp: public GameObject waveDir
          VB: Public waveDir As GameObject
        return:
          type: UnityEngine.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.SetEnv.waveLength
      commentId: F:Unityscript.SetEnv.waveLength
      language: CSharp
      name:
        CSharp: waveLength
        VB: waveLength
      nameWithType:
        CSharp: SetEnv.waveLength
        VB: SetEnv.waveLength
      qualifiedName:
        CSharp: Unityscript.SetEnv.waveLength
        VB: Unityscript.SetEnv.waveLength
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: waveLength
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\SetEnv.cs
        startLine: 19
      syntax:
        content:
          CSharp: public GameObject waveLength
          VB: Public waveLength As GameObject
        return:
          type: UnityEngine.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.SetEnv.waterSpeed
      commentId: F:Unityscript.SetEnv.waterSpeed
      language: CSharp
      name:
        CSharp: waterSpeed
        VB: waterSpeed
      nameWithType:
        CSharp: SetEnv.waterSpeed
        VB: SetEnv.waterSpeed
      qualifiedName:
        CSharp: Unityscript.SetEnv.waterSpeed
        VB: Unityscript.SetEnv.waterSpeed
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: waterSpeed
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\SetEnv.cs
        startLine: 21
      syntax:
        content:
          CSharp: public GameObject waterSpeed
          VB: Public waterSpeed As GameObject
        return:
          type: UnityEngine.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.SetEnv.waterDir
      commentId: F:Unityscript.SetEnv.waterDir
      language: CSharp
      name:
        CSharp: waterDir
        VB: waterDir
      nameWithType:
        CSharp: SetEnv.waterDir
        VB: SetEnv.waterDir
      qualifiedName:
        CSharp: Unityscript.SetEnv.waterDir
        VB: Unityscript.SetEnv.waterDir
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: waterDir
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\SetEnv.cs
        startLine: 22
      syntax:
        content:
          CSharp: public GameObject waterDir
          VB: Public waterDir As GameObject
        return:
          type: UnityEngine.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.SetEnv.panel
      commentId: F:Unityscript.SetEnv.panel
      language: CSharp
      name:
        CSharp: panel
        VB: panel
      nameWithType:
        CSharp: SetEnv.panel
        VB: SetEnv.panel
      qualifiedName:
        CSharp: Unityscript.SetEnv.panel
        VB: Unityscript.SetEnv.panel
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: panel
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\SetEnv.cs
        startLine: 23
      syntax:
        content:
          CSharp: public EnvPanel panel
          VB: Public panel As EnvPanel
        return:
          type: EnvPanel
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.SetEnv.setWind
      commentId: M:Unityscript.SetEnv.setWind
      language: CSharp
      name:
        CSharp: setWind()
        VB: setWind()
      nameWithType:
        CSharp: SetEnv.setWind()
        VB: SetEnv.setWind()
      qualifiedName:
        CSharp: Unityscript.SetEnv.setWind()
        VB: Unityscript.SetEnv.setWind()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: setWind
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\SetEnv.cs
        startLine: 25
      syntax:
        content:
          CSharp: public void setWind()
          VB: Public Sub setWind
      overload: Unityscript.SetEnv.setWind*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.SetEnv.setWave
      commentId: M:Unityscript.SetEnv.setWave
      language: CSharp
      name:
        CSharp: setWave()
        VB: setWave()
      nameWithType:
        CSharp: SetEnv.setWave()
        VB: SetEnv.setWave()
      qualifiedName:
        CSharp: Unityscript.SetEnv.setWave()
        VB: Unityscript.SetEnv.setWave()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: setWave
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\SetEnv.cs
        startLine: 31
      syntax:
        content:
          CSharp: public void setWave()
          VB: Public Sub setWave
      overload: Unityscript.SetEnv.setWave*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.SetEnv.setWater
      commentId: M:Unityscript.SetEnv.setWater
      language: CSharp
      name:
        CSharp: setWater()
        VB: setWater()
      nameWithType:
        CSharp: SetEnv.setWater()
        VB: SetEnv.setWater()
      qualifiedName:
        CSharp: Unityscript.SetEnv.setWater()
        VB: Unityscript.SetEnv.setWater()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: setWater
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\SetEnv.cs
        startLine: 41
      syntax:
        content:
          CSharp: public void setWater()
          VB: Public Sub setWater
      overload: Unityscript.SetEnv.setWater*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unityscript.SetAcc
    commentId: T:Unityscript.SetAcc
    language: CSharp
    name:
      CSharp: SetAcc
      VB: SetAcc
    nameWithType:
      CSharp: SetAcc
      VB: SetAcc
    qualifiedName:
      CSharp: Unityscript.SetAcc
      VB: Unityscript.SetAcc
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Unityscript
    source:
      id: SetAcc
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\SetAcc.cs
      startLine: 11
    summary: "\nAllow factor of acceleration to be change acording to input user\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SetAcc : MonoBehaviour'
        VB: >-
          Public Class SetAcc

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    - UnityEngine.Object
    - UnityEngine.Component
    - UnityEngine.Behaviour
    - UnityEngine.MonoBehaviour
    inheritedMembers:
    - UnityEngine.MonoBehaviour.IsInvoking
    - UnityEngine.MonoBehaviour.CancelInvoke
    - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    - UnityEngine.MonoBehaviour.IsInvoking(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StopAllCoroutines
    - UnityEngine.MonoBehaviour.print(System.Object)
    - UnityEngine.MonoBehaviour.useGUILayout
    - UnityEngine.MonoBehaviour.runInEditMode
    - UnityEngine.Behaviour.enabled
    - UnityEngine.Behaviour.isActiveAndEnabled
    - UnityEngine.Component.GetComponent(System.Type)
    - UnityEngine.Component.GetComponent``1
    - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    - UnityEngine.Component.TryGetComponent``1({T}@)
    - UnityEngine.Component.GetComponent(System.String)
    - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInChildren(System.Type)
    - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentInChildren``1
    - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren(System.Type)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInChildren``1
    - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentInParent(System.Type)
    - UnityEngine.Component.GetComponentInParent``1
    - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInParent(System.Type)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInParent``1
    - UnityEngine.Component.GetComponents(System.Type)
    - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponents``1
    - UnityEngine.Component.CompareTag(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    - UnityEngine.Component.SendMessageUpwards(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,System.Object)
    - UnityEngine.Component.SendMessage(System.String)
    - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    - UnityEngine.Component.BroadcastMessage(System.String)
    - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.transform
    - UnityEngine.Component.gameObject
    - UnityEngine.Component.tag
    - UnityEngine.Object.GetInstanceID
    - UnityEngine.Object.GetHashCode
    - UnityEngine.Object.Equals(System.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Instantiate``1({T})
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    - UnityEngine.Object.Destroy(UnityEngine.Object)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    - UnityEngine.Object.FindObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object)
    - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    - UnityEngine.Object.FindObjectsOfType``1
    - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectOfType``1
    - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    - UnityEngine.Object.ToString
    - UnityEngine.Object.name
    - UnityEngine.Object.hideFlags
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Unityscript.SetAcc.inputAcc
      commentId: F:Unityscript.SetAcc.inputAcc
      language: CSharp
      name:
        CSharp: inputAcc
        VB: inputAcc
      nameWithType:
        CSharp: SetAcc.inputAcc
        VB: SetAcc.inputAcc
      qualifiedName:
        CSharp: Unityscript.SetAcc.inputAcc
        VB: Unityscript.SetAcc.inputAcc
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: inputAcc
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\SetAcc.cs
        startLine: 13
      syntax:
        content:
          CSharp: public GameObject inputAcc
          VB: Public inputAcc As GameObject
        return:
          type: UnityEngine.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.SetAcc.setacc
      commentId: M:Unityscript.SetAcc.setacc
      language: CSharp
      name:
        CSharp: setacc()
        VB: setacc()
      nameWithType:
        CSharp: SetAcc.setacc()
        VB: SetAcc.setacc()
      qualifiedName:
        CSharp: Unityscript.SetAcc.setacc()
        VB: Unityscript.SetAcc.setacc()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: setacc
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\SetAcc.cs
        startLine: 14
      syntax:
        content:
          CSharp: public void setacc()
          VB: Public Sub setacc
      overload: Unityscript.SetAcc.setacc*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Unityscript.Follow
    commentId: T:Unityscript.Follow
    language: CSharp
    name:
      CSharp: Follow
      VB: Follow
    nameWithType:
      CSharp: Follow
      VB: Follow
    qualifiedName:
      CSharp: Unityscript.Follow
      VB: Unityscript.Follow
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Unityscript
    source:
      id: Follow
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Follow.cs
      startLine: 10
    summary: "\nManage the camera/music to follow the boat within a range\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Follow : MonoBehaviour'
        VB: >-
          Public Class Follow

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    - UnityEngine.Object
    - UnityEngine.Component
    - UnityEngine.Behaviour
    - UnityEngine.MonoBehaviour
    inheritedMembers:
    - UnityEngine.MonoBehaviour.IsInvoking
    - UnityEngine.MonoBehaviour.CancelInvoke
    - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    - UnityEngine.MonoBehaviour.IsInvoking(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    - UnityEngine.MonoBehaviour.StopAllCoroutines
    - UnityEngine.MonoBehaviour.print(System.Object)
    - UnityEngine.MonoBehaviour.useGUILayout
    - UnityEngine.MonoBehaviour.runInEditMode
    - UnityEngine.Behaviour.enabled
    - UnityEngine.Behaviour.isActiveAndEnabled
    - UnityEngine.Component.GetComponent(System.Type)
    - UnityEngine.Component.GetComponent``1
    - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    - UnityEngine.Component.TryGetComponent``1({T}@)
    - UnityEngine.Component.GetComponent(System.String)
    - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentInChildren(System.Type)
    - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentInChildren``1
    - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren(System.Type)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInChildren``1
    - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentInParent(System.Type)
    - UnityEngine.Component.GetComponentInParent``1
    - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    - UnityEngine.Component.GetComponentsInParent(System.Type)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponentsInParent``1
    - UnityEngine.Component.GetComponents(System.Type)
    - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
    - UnityEngine.Component.GetComponents``1
    - UnityEngine.Component.CompareTag(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    - UnityEngine.Component.SendMessageUpwards(System.String)
    - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,System.Object)
    - UnityEngine.Component.SendMessage(System.String)
    - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    - UnityEngine.Component.BroadcastMessage(System.String)
    - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    - UnityEngine.Component.transform
    - UnityEngine.Component.gameObject
    - UnityEngine.Component.tag
    - UnityEngine.Object.GetInstanceID
    - UnityEngine.Object.GetHashCode
    - UnityEngine.Object.Equals(System.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Instantiate``1({T})
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
    - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
    - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    - UnityEngine.Object.Destroy(UnityEngine.Object)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    - UnityEngine.Object.FindObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    - UnityEngine.Object.DestroyObject(UnityEngine.Object)
    - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    - UnityEngine.Object.FindObjectsOfType``1
    - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectOfType``1
    - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type)
    - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    - UnityEngine.Object.ToString
    - UnityEngine.Object.name
    - UnityEngine.Object.hideFlags
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Unityscript.Follow.target
      commentId: F:Unityscript.Follow.target
      language: CSharp
      name:
        CSharp: target
        VB: target
      nameWithType:
        CSharp: Follow.target
        VB: Follow.target
      qualifiedName:
        CSharp: Unityscript.Follow.target
        VB: Unityscript.Follow.target
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: target
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Follow.cs
        startLine: 13
      syntax:
        content:
          CSharp: public Transform target
          VB: Public target As Transform
        return:
          type: UnityEngine.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Follow.camera
      commentId: F:Unityscript.Follow.camera
      language: CSharp
      name:
        CSharp: camera
        VB: camera
      nameWithType:
        CSharp: Follow.camera
        VB: Follow.camera
      qualifiedName:
        CSharp: Unityscript.Follow.camera
        VB: Unityscript.Follow.camera
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: camera
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Follow.cs
        startLine: 14
      syntax:
        content:
          CSharp: public Transform camera
          VB: Public camera As Transform
        return:
          type: UnityEngine.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Follow.music
      commentId: F:Unityscript.Follow.music
      language: CSharp
      name:
        CSharp: music
        VB: music
      nameWithType:
        CSharp: Follow.music
        VB: Follow.music
      qualifiedName:
        CSharp: Unityscript.Follow.music
        VB: Unityscript.Follow.music
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: music
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Follow.cs
        startLine: 15
      syntax:
        content:
          CSharp: public Transform music
          VB: Public music As Transform
        return:
          type: UnityEngine.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Follow.currentX
      commentId: F:Unityscript.Follow.currentX
      language: CSharp
      name:
        CSharp: currentX
        VB: currentX
      nameWithType:
        CSharp: Follow.currentX
        VB: Follow.currentX
      qualifiedName:
        CSharp: Unityscript.Follow.currentX
        VB: Unityscript.Follow.currentX
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: currentX
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Follow.cs
        startLine: 16
      syntax:
        content:
          CSharp: public float currentX
          VB: Public currentX As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Follow.currentY
      commentId: F:Unityscript.Follow.currentY
      language: CSharp
      name:
        CSharp: currentY
        VB: currentY
      nameWithType:
        CSharp: Follow.currentY
        VB: Follow.currentY
      qualifiedName:
        CSharp: Unityscript.Follow.currentY
        VB: Unityscript.Follow.currentY
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: currentY
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Follow.cs
        startLine: 17
      syntax:
        content:
          CSharp: public float currentY
          VB: Public currentY As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Unityscript.Follow.range
      commentId: F:Unityscript.Follow.range
      language: CSharp
      name:
        CSharp: range
        VB: range
      nameWithType:
        CSharp: Follow.range
        VB: Follow.range
      qualifiedName:
        CSharp: Unityscript.Follow.range
        VB: Unityscript.Follow.range
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Unityscript
      source:
        id: range
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Follow.cs
        startLine: 19
      syntax:
        content:
          CSharp: public float range
          VB: Public range As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Model
  commentId: N:Model
  language: CSharp
  name:
    CSharp: Model
    VB: Model
  nameWithType:
    CSharp: Model
    VB: Model
  qualifiedName:
    CSharp: Model
    VB: Model
  type: Namespace
  assemblies:
  - Assembly-CSharp
  modifiers: {}
  items:
  - id: Model.ISubject
    commentId: T:Model.ISubject
    language: CSharp
    name:
      CSharp: ISubject
      VB: ISubject
    nameWithType:
      CSharp: ISubject
      VB: ISubject
    qualifiedName:
      CSharp: Model.ISubject
      VB: Model.ISubject
    type: Interface
    assemblies:
    - Assembly-CSharp
    namespace: Model
    source:
      id: ISubject
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\ISubject.cs
      startLine: 9
    summary: "\nInterface for a model pattern\n"
    example: []
    syntax:
      content:
        CSharp: public interface ISubject
        VB: Public Interface ISubject
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Model.ISubject.Attach(Model.IObserver)
      commentId: M:Model.ISubject.Attach(Model.IObserver)
      language: CSharp
      name:
        CSharp: Attach(IObserver)
        VB: Attach(IObserver)
      nameWithType:
        CSharp: ISubject.Attach(IObserver)
        VB: ISubject.Attach(IObserver)
      qualifiedName:
        CSharp: Model.ISubject.Attach(Model.IObserver)
        VB: Model.ISubject.Attach(Model.IObserver)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: Attach
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\ISubject.cs
        startLine: 11
      syntax:
        content:
          CSharp: void Attach(IObserver observer)
          VB: Sub Attach(observer As IObserver)
        parameters:
        - id: observer
          type: Model.IObserver
      overload: Model.ISubject.Attach*
      modifiers:
        CSharp: []
        VB: []
    - id: Model.ISubject.Notify
      commentId: M:Model.ISubject.Notify
      language: CSharp
      name:
        CSharp: Notify()
        VB: Notify()
      nameWithType:
        CSharp: ISubject.Notify()
        VB: ISubject.Notify()
      qualifiedName:
        CSharp: Model.ISubject.Notify()
        VB: Model.ISubject.Notify()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: Notify
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\ISubject.cs
        startLine: 12
      syntax:
        content:
          CSharp: void Notify()
          VB: Sub Notify
      overload: Model.ISubject.Notify*
      modifiers:
        CSharp: []
        VB: []
    - id: Model.ISubject.GetBoatStatus
      commentId: M:Model.ISubject.GetBoatStatus
      language: CSharp
      name:
        CSharp: GetBoatStatus()
        VB: GetBoatStatus()
      nameWithType:
        CSharp: ISubject.GetBoatStatus()
        VB: ISubject.GetBoatStatus()
      qualifiedName:
        CSharp: Model.ISubject.GetBoatStatus()
        VB: Model.ISubject.GetBoatStatus()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: GetBoatStatus
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\ISubject.cs
        startLine: 13
      syntax:
        content:
          CSharp: Dictionary<BoatInfo, double> GetBoatStatus()
          VB: Function GetBoatStatus As Dictionary(Of BoatInfo, Double)
        return:
          type: System.Collections.Generic.Dictionary{Model.BoatInfo,System.Double}
      overload: Model.ISubject.GetBoatStatus*
      modifiers:
        CSharp: []
        VB: []
  - id: Model.RaceModel
    commentId: T:Model.RaceModel
    language: CSharp
    name:
      CSharp: RaceModel
      VB: RaceModel
    nameWithType:
      CSharp: RaceModel
      VB: RaceModel
    qualifiedName:
      CSharp: Model.RaceModel
      VB: Model.RaceModel
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Model
    source:
      id: RaceModel
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Model.cs
      startLine: 20
    summary: "\nThis class plays the role of model(pattern model-observer) for the class <xref href=\"PRace.Race\" data-throw-if-not-resolved=\"false\"></xref>.\nIt&apos;s also manage the save process\n"
    example: []
    syntax:
      content:
        CSharp: 'public class RaceModel : ISubject'
        VB: >-
          Public Class RaceModel

              Implements ISubject
    inheritance:
    - System.Object
    implements:
    - Model.ISubject
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Model.RaceModel.#ctor
      commentId: M:Model.RaceModel.#ctor
      language: CSharp
      name:
        CSharp: RaceModel()
        VB: RaceModel()
      nameWithType:
        CSharp: RaceModel.RaceModel()
        VB: RaceModel.RaceModel()
      qualifiedName:
        CSharp: Model.RaceModel.RaceModel()
        VB: Model.RaceModel.RaceModel()
      type: Constructor
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: .ctor
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Model.cs
        startLine: 25
      summary: "\nCreate an instance of RaceModel\n"
      example: []
      syntax:
        content:
          CSharp: public RaceModel()
          VB: Public Sub New
      overload: Model.RaceModel.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.RaceModel.Set_Up(System.Nullable{PRace.Mode},System.String,System.String,System.Int32,System.String,System.Int32,System.String)
      commentId: M:Model.RaceModel.Set_Up(System.Nullable{PRace.Mode},System.String,System.String,System.Int32,System.String,System.Int32,System.String)
      language: CSharp
      name:
        CSharp: Set_Up(Nullable<Mode>, String, String, Int32, String, Int32, String)
        VB: Set_Up(Nullable(Of Mode), String, String, Int32, String, Int32, String)
      nameWithType:
        CSharp: RaceModel.Set_Up(Nullable<Mode>, String, String, Int32, String, Int32, String)
        VB: RaceModel.Set_Up(Nullable(Of Mode), String, String, Int32, String, Int32, String)
      qualifiedName:
        CSharp: Model.RaceModel.Set_Up(System.Nullable<PRace.Mode>, System.String, System.String, System.Int32, System.String, System.Int32, System.String)
        VB: Model.RaceModel.Set_Up(System.Nullable(Of PRace.Mode), System.String, System.String, System.Int32, System.String, System.Int32, System.String)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: Set_Up
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Model.cs
        startLine: 43
      summary: "\nSet up this instance by loading a save or creating a new race based on mode an boat type.\nIn order to this fonction to work path or (mode and IDBoatType) need to be provided        \n"
      remarks: this fonction priorizes the initialisation with the path
      example: []
      syntax:
        content:
          CSharp: public void Set_Up(Mode? mode = null, string IDBoatType = null, string path = null, int portQTVLM = 10113, string ipQTVLM = "127.0.0.1", int portRM = 0, string ipRM = "0")
          VB: Public Sub Set_Up(mode As Mode? = Nothing, IDBoatType As String = Nothing, path As String = Nothing, portQTVLM As Integer = 10113, ipQTVLM As String = "127.0.0.1", portRM As Integer = 0, ipRM As String = "0")
        parameters:
        - id: mode
          type: System.Nullable{PRace.Mode}
          description: the <see cref="!:"></see> for the new race
        - id: IDBoatType
          type: System.String
          description: the <xref href="Communication.DataProcessing.Json.BoatType" data-throw-if-not-resolved="false"></xref> which will be used to create the boat of the new race
        - id: path
          type: System.String
          description: the path at with be used to load the save
        - id: portQTVLM
          type: System.Int32
          description: the port that will be used to connect to QTVLM
        - id: ipQTVLM
          type: System.String
          description: the ip that will be used to connect to QTVLM
        - id: portRM
          type: System.Int32
          description: the port that will be used to connect to the Race Manager
        - id: ipRM
          type: System.String
          description: the ip that will be used to connect to the Race Manager
      overload: Model.RaceModel.Set_Up*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        Communication.DataProcessing.Json.BoatType: 
    - id: Model.RaceModel.Attach(Model.IObserver)
      commentId: M:Model.RaceModel.Attach(Model.IObserver)
      language: CSharp
      name:
        CSharp: Attach(IObserver)
        VB: Attach(IObserver)
      nameWithType:
        CSharp: RaceModel.Attach(IObserver)
        VB: RaceModel.Attach(IObserver)
      qualifiedName:
        CSharp: Model.RaceModel.Attach(Model.IObserver)
        VB: Model.RaceModel.Attach(Model.IObserver)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: Attach
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Model.cs
        startLine: 90
      summary: "\nAttach a new <xref href=\"Model.IObserver\" data-throw-if-not-resolved=\"false\"></xref> to the model\n"
      example: []
      syntax:
        content:
          CSharp: public void Attach(IObserver obs)
          VB: Public Sub Attach(obs As IObserver)
        parameters:
        - id: obs
          type: Model.IObserver
          description: ''
      overload: Model.RaceModel.Attach*
      implements:
      - Model.ISubject.Attach(Model.IObserver)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        Model.IObserver: 
    - id: Model.RaceModel.Notify
      commentId: M:Model.RaceModel.Notify
      language: CSharp
      name:
        CSharp: Notify()
        VB: Notify()
      nameWithType:
        CSharp: RaceModel.Notify()
        VB: RaceModel.Notify()
      qualifiedName:
        CSharp: Model.RaceModel.Notify()
        VB: Model.RaceModel.Notify()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: Notify
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Model.cs
        startLine: 98
      summary: "\nNotify all the added observer (all observer in &apos;ListObserver&apos; attribut\n"
      example: []
      syntax:
        content:
          CSharp: public void Notify()
          VB: Public Sub Notify
      overload: Model.RaceModel.Notify*
      implements:
      - Model.ISubject.Notify
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.RaceModel.GetRace
      commentId: M:Model.RaceModel.GetRace
      language: CSharp
      name:
        CSharp: GetRace()
        VB: GetRace()
      nameWithType:
        CSharp: RaceModel.GetRace()
        VB: RaceModel.GetRace()
      qualifiedName:
        CSharp: Model.RaceModel.GetRace()
        VB: Model.RaceModel.GetRace()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: GetRace
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Model.cs
        startLine: 103
      syntax:
        content:
          CSharp: public Race GetRace()
          VB: Public Function GetRace As Race
        return:
          type: PRace.Race
      overload: Model.RaceModel.GetRace*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.RaceModel.ListSavePath
      commentId: M:Model.RaceModel.ListSavePath
      language: CSharp
      name:
        CSharp: ListSavePath()
        VB: ListSavePath()
      nameWithType:
        CSharp: RaceModel.ListSavePath()
        VB: RaceModel.ListSavePath()
      qualifiedName:
        CSharp: Model.RaceModel.ListSavePath()
        VB: Model.RaceModel.ListSavePath()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: ListSavePath
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Model.cs
        startLine: 112
      summary: "\nreturn the list the path of all available saves\n"
      example: []
      syntax:
        content:
          CSharp: public string[] ListSavePath()
          VB: Public Function ListSavePath As String()
        return:
          type: System.String[]
          description: return the list the path of all available saves
      overload: Model.RaceModel.ListSavePath*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.RaceModel.Save(System.String)
      commentId: M:Model.RaceModel.Save(System.String)
      language: CSharp
      name:
        CSharp: Save(String)
        VB: Save(String)
      nameWithType:
        CSharp: RaceModel.Save(String)
        VB: RaceModel.Save(String)
      qualifiedName:
        CSharp: Model.RaceModel.Save(System.String)
        VB: Model.RaceModel.Save(System.String)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: Save
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Model.cs
        startLine: 123
      summary: "\nCreate a save of the race\n"
      example: []
      syntax:
        content:
          CSharp: public void Save(string inputSavePath)
          VB: Public Sub Save(inputSavePath As String)
        parameters:
        - id: inputSavePath
          type: System.String
          description: Name of the save
      overload: Model.RaceModel.Save*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.RaceModel.getBoatList(System.String,System.Int32)
      commentId: M:Model.RaceModel.getBoatList(System.String,System.Int32)
      language: CSharp
      name:
        CSharp: getBoatList(String, Int32)
        VB: getBoatList(String, Int32)
      nameWithType:
        CSharp: RaceModel.getBoatList(String, Int32)
        VB: RaceModel.getBoatList(String, Int32)
      qualifiedName:
        CSharp: Model.RaceModel.getBoatList(System.String, System.Int32)
        VB: Model.RaceModel.getBoatList(System.String, System.Int32)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: getBoatList
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Model.cs
        startLine: 185
      syntax:
        content:
          CSharp: public List<string> getBoatList(string ip, int port)
          VB: Public Function getBoatList(ip As String, port As Integer) As List(Of String)
        parameters:
        - id: ip
          type: System.String
        - id: port
          type: System.Int32
        return:
          type: System.Collections.Generic.List{System.String}
      overload: Model.RaceModel.getBoatList*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.RaceModel.Run
      commentId: M:Model.RaceModel.Run
      language: CSharp
      name:
        CSharp: Run()
        VB: Run()
      nameWithType:
        CSharp: RaceModel.Run()
        VB: RaceModel.Run()
      qualifiedName:
        CSharp: Model.RaceModel.Run()
        VB: Model.RaceModel.Run()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: Run
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Model.cs
        startLine: 204
      summary: "\nRun the race\n"
      example: []
      syntax:
        content:
          CSharp: public void Run()
          VB: Public Sub Run
      overload: Model.RaceModel.Run*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.RaceModel.Pause
      commentId: M:Model.RaceModel.Pause
      language: CSharp
      name:
        CSharp: Pause()
        VB: Pause()
      nameWithType:
        CSharp: RaceModel.Pause()
        VB: RaceModel.Pause()
      qualifiedName:
        CSharp: Model.RaceModel.Pause()
        VB: Model.RaceModel.Pause()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: Pause
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Model.cs
        startLine: 212
      summary: "\npause the race\n"
      example: []
      syntax:
        content:
          CSharp: public void Pause()
          VB: Public Sub Pause
      overload: Model.RaceModel.Pause*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.RaceModel.GetBoatStatus
      commentId: M:Model.RaceModel.GetBoatStatus
      language: CSharp
      name:
        CSharp: GetBoatStatus()
        VB: GetBoatStatus()
      nameWithType:
        CSharp: RaceModel.GetBoatStatus()
        VB: RaceModel.GetBoatStatus()
      qualifiedName:
        CSharp: Model.RaceModel.GetBoatStatus()
        VB: Model.RaceModel.GetBoatStatus()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: GetBoatStatus
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Model.cs
        startLine: 221
      summary: "\nReturn a dictionary with as key <xref href=\"Model.BoatInfo\" data-throw-if-not-resolved=\"false\"></xref> and as value the corresponding value of the race\n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<BoatInfo, double> GetBoatStatus()
          VB: Public Function GetBoatStatus As Dictionary(Of BoatInfo, Double)
        return:
          type: System.Collections.Generic.Dictionary{Model.BoatInfo,System.Double}
          description: Return a dictionary with as key <xref href="Model.BoatInfo" data-throw-if-not-resolved="false"></xref> and as value the corresponding value of the race
      overload: Model.RaceModel.GetBoatStatus*
      implements:
      - Model.ISubject.GetBoatStatus
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        Model.BoatInfo: 
    - id: Model.RaceModel.SetCurrent(System.Single,System.Single)
      commentId: M:Model.RaceModel.SetCurrent(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: SetCurrent(Single, Single)
        VB: SetCurrent(Single, Single)
      nameWithType:
        CSharp: RaceModel.SetCurrent(Single, Single)
        VB: RaceModel.SetCurrent(Single, Single)
      qualifiedName:
        CSharp: Model.RaceModel.SetCurrent(System.Single, System.Single)
        VB: Model.RaceModel.SetCurrent(System.Single, System.Single)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: SetCurrent
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Model.cs
        startLine: 241
      summary: "\nset the current of the race\n"
      example: []
      syntax:
        content:
          CSharp: public void SetCurrent(float currentspeed, float currentdir)
          VB: Public Sub SetCurrent(currentspeed As Single, currentdir As Single)
        parameters:
        - id: currentspeed
          type: System.Single
          description: current speed
        - id: currentdir
          type: System.Single
          description: current direction
      overload: Model.RaceModel.SetCurrent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.RaceModel.SetWave(System.Single,System.Single,System.Single)
      commentId: M:Model.RaceModel.SetWave(System.Single,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: SetWave(Single, Single, Single)
        VB: SetWave(Single, Single, Single)
      nameWithType:
        CSharp: RaceModel.SetWave(Single, Single, Single)
        VB: RaceModel.SetWave(Single, Single, Single)
      qualifiedName:
        CSharp: Model.RaceModel.SetWave(System.Single, System.Single, System.Single)
        VB: Model.RaceModel.SetWave(System.Single, System.Single, System.Single)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: SetWave
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Model.cs
        startLine: 252
      summary: "\nset the waves of th simulation\n"
      example: []
      syntax:
        content:
          CSharp: public void SetWave(float wavesampl, float wavedir, float wavelength)
          VB: Public Sub SetWave(wavesampl As Single, wavedir As Single, wavelength As Single)
        parameters:
        - id: wavesampl
          type: System.Single
          description: ''
        - id: wavedir
          type: System.Single
          description: ''
        - id: wavelength
          type: System.Single
          description: ''
      overload: Model.RaceModel.SetWave*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.RaceModel.SetWind(System.Single,System.Single)
      commentId: M:Model.RaceModel.SetWind(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: SetWind(Single, Single)
        VB: SetWind(Single, Single)
      nameWithType:
        CSharp: RaceModel.SetWind(Single, Single)
        VB: RaceModel.SetWind(Single, Single)
      qualifiedName:
        CSharp: Model.RaceModel.SetWind(System.Single, System.Single)
        VB: Model.RaceModel.SetWind(System.Single, System.Single)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: SetWind
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Model.cs
        startLine: 262
      summary: "\nset the wind of the simulation\n"
      example: []
      syntax:
        content:
          CSharp: public void SetWind(float windspeed, float winddir)
          VB: Public Sub SetWind(windspeed As Single, winddir As Single)
        parameters:
        - id: windspeed
          type: System.Single
          description: wind speed
        - id: winddir
          type: System.Single
          description: wind direction
      overload: Model.RaceModel.SetWind*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.RaceModel.SetFactor(System.Single)
      commentId: M:Model.RaceModel.SetFactor(System.Single)
      language: CSharp
      name:
        CSharp: SetFactor(Single)
        VB: SetFactor(Single)
      nameWithType:
        CSharp: RaceModel.SetFactor(Single)
        VB: RaceModel.SetFactor(Single)
      qualifiedName:
        CSharp: Model.RaceModel.SetFactor(System.Single)
        VB: Model.RaceModel.SetFactor(System.Single)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: SetFactor
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Model.cs
        startLine: 271
      summary: "\nset the acceleration factor of the simulation\n"
      example: []
      syntax:
        content:
          CSharp: public void SetFactor(float acc)
          VB: Public Sub SetFactor(acc As Single)
        parameters:
        - id: acc
          type: System.Single
          description: ''
      overload: Model.RaceModel.SetFactor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.RaceModel.GetAccFactor
      commentId: M:Model.RaceModel.GetAccFactor
      language: CSharp
      name:
        CSharp: GetAccFactor()
        VB: GetAccFactor()
      nameWithType:
        CSharp: RaceModel.GetAccFactor()
        VB: RaceModel.GetAccFactor()
      qualifiedName:
        CSharp: Model.RaceModel.GetAccFactor()
        VB: Model.RaceModel.GetAccFactor()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: GetAccFactor
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Model.cs
        startLine: 280
      summary: "\nreturn the acceleration factor of the simulation\n"
      example: []
      syntax:
        content:
          CSharp: public float GetAccFactor()
          VB: Public Function GetAccFactor As Single
        return:
          type: System.Single
          description: return the acceleration factor of the simulation
      overload: Model.RaceModel.GetAccFactor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.RaceModel.IncrementCap(PRace.ModeCommande,PRace.DegreeIncrement)
      commentId: M:Model.RaceModel.IncrementCap(PRace.ModeCommande,PRace.DegreeIncrement)
      language: CSharp
      name:
        CSharp: IncrementCap(ModeCommande, DegreeIncrement)
        VB: IncrementCap(ModeCommande, DegreeIncrement)
      nameWithType:
        CSharp: RaceModel.IncrementCap(ModeCommande, DegreeIncrement)
        VB: RaceModel.IncrementCap(ModeCommande, DegreeIncrement)
      qualifiedName:
        CSharp: Model.RaceModel.IncrementCap(PRace.ModeCommande, PRace.DegreeIncrement)
        VB: Model.RaceModel.IncrementCap(PRace.ModeCommande, PRace.DegreeIncrement)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: IncrementCap
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Model.cs
        startLine: 291
      summary: "\nIncrement the cap the commande mode\n"
      example: []
      syntax:
        content:
          CSharp: public void IncrementCap(ModeCommande commande, DegreeIncrement degre)
          VB: Public Sub IncrementCap(commande As ModeCommande, degre As DegreeIncrement)
        parameters:
        - id: commande
          type: PRace.ModeCommande
          description: Commande mode to increment
        - id: degre
          type: PRace.DegreeIncrement
          description: value of the increment
      overload: Model.RaceModel.IncrementCap*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.RaceModel.SwitchCommande
      commentId: M:Model.RaceModel.SwitchCommande
      language: CSharp
      name:
        CSharp: SwitchCommande()
        VB: SwitchCommande()
      nameWithType:
        CSharp: RaceModel.SwitchCommande()
        VB: RaceModel.SwitchCommande()
      qualifiedName:
        CSharp: Model.RaceModel.SwitchCommande()
        VB: Model.RaceModel.SwitchCommande()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: SwitchCommande
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Model.cs
        startLine: 301
      summary: "\nIf the attrubit commande is &apos;cap&apos; switch to &apos;RegulateurAmure&apos;.\nIf the attrubit commande is &apos;RegulateurAmure&apos; switch to &apos;cap&apos;.\n"
      example: []
      syntax:
        content:
          CSharp: public void SwitchCommande()
          VB: Public Sub SwitchCommande
      overload: Model.RaceModel.SwitchCommande*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.RaceModel.getModelCap
      commentId: M:Model.RaceModel.getModelCap
      language: CSharp
      name:
        CSharp: getModelCap()
        VB: getModelCap()
      nameWithType:
        CSharp: RaceModel.getModelCap()
        VB: RaceModel.getModelCap()
      qualifiedName:
        CSharp: Model.RaceModel.getModelCap()
        VB: Model.RaceModel.getModelCap()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: getModelCap
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Model.cs
        startLine: 310
      summary: "\nreturn boat heading\n"
      example: []
      syntax:
        content:
          CSharp: public float getModelCap()
          VB: Public Function getModelCap As Single
        return:
          type: System.Single
          description: ''
      overload: Model.RaceModel.getModelCap*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.RaceModel.getAllureCap
      commentId: M:Model.RaceModel.getAllureCap
      language: CSharp
      name:
        CSharp: getAllureCap()
        VB: getAllureCap()
      nameWithType:
        CSharp: RaceModel.getAllureCap()
        VB: RaceModel.getAllureCap()
      qualifiedName:
        CSharp: Model.RaceModel.getAllureCap()
        VB: Model.RaceModel.getAllureCap()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: getAllureCap
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Model.cs
        startLine: 319
      summary: "\nreturn the cap of the wind mode\n"
      example: []
      syntax:
        content:
          CSharp: public float getAllureCap()
          VB: Public Function getAllureCap As Single
        return:
          type: System.Single
          description: ''
      overload: Model.RaceModel.getAllureCap*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.RaceModel.getCommandeMode
      commentId: M:Model.RaceModel.getCommandeMode
      language: CSharp
      name:
        CSharp: getCommandeMode()
        VB: getCommandeMode()
      nameWithType:
        CSharp: RaceModel.getCommandeMode()
        VB: RaceModel.getCommandeMode()
      qualifiedName:
        CSharp: Model.RaceModel.getCommandeMode()
        VB: Model.RaceModel.getCommandeMode()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: getCommandeMode
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Model.cs
        startLine: 328
      summary: "\nreturn the active commande mode\n"
      example: []
      syntax:
        content:
          CSharp: public ModeCommande getCommandeMode()
          VB: Public Function getCommandeMode As ModeCommande
        return:
          type: PRace.ModeCommande
          description: ''
      overload: Model.RaceModel.getCommandeMode*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.RaceModel.getWindSpeed
      commentId: M:Model.RaceModel.getWindSpeed
      language: CSharp
      name:
        CSharp: getWindSpeed()
        VB: getWindSpeed()
      nameWithType:
        CSharp: RaceModel.getWindSpeed()
        VB: RaceModel.getWindSpeed()
      qualifiedName:
        CSharp: Model.RaceModel.getWindSpeed()
        VB: Model.RaceModel.getWindSpeed()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: getWindSpeed
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Model.cs
        startLine: 337
      summary: "\nreturn the wind speed of the simulation\n"
      example: []
      syntax:
        content:
          CSharp: public float getWindSpeed()
          VB: Public Function getWindSpeed As Single
        return:
          type: System.Single
          description: ''
      overload: Model.RaceModel.getWindSpeed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.RaceModel.getWindDir
      commentId: M:Model.RaceModel.getWindDir
      language: CSharp
      name:
        CSharp: getWindDir()
        VB: getWindDir()
      nameWithType:
        CSharp: RaceModel.getWindDir()
        VB: RaceModel.getWindDir()
      qualifiedName:
        CSharp: Model.RaceModel.getWindDir()
        VB: Model.RaceModel.getWindDir()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: getWindDir
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Model.cs
        startLine: 346
      summary: "\nreturn the wind direction of the simulation\n"
      example: []
      syntax:
        content:
          CSharp: public float getWindDir()
          VB: Public Function getWindDir As Single
        return:
          type: System.Single
          description: ''
      overload: Model.RaceModel.getWindDir*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.RaceModel.getWaveAmpl
      commentId: M:Model.RaceModel.getWaveAmpl
      language: CSharp
      name:
        CSharp: getWaveAmpl()
        VB: getWaveAmpl()
      nameWithType:
        CSharp: RaceModel.getWaveAmpl()
        VB: RaceModel.getWaveAmpl()
      qualifiedName:
        CSharp: Model.RaceModel.getWaveAmpl()
        VB: Model.RaceModel.getWaveAmpl()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: getWaveAmpl
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Model.cs
        startLine: 355
      summary: "\nreturn Wave Amplitude of the simulation\n"
      example: []
      syntax:
        content:
          CSharp: public float getWaveAmpl()
          VB: Public Function getWaveAmpl As Single
        return:
          type: System.Single
          description: ''
      overload: Model.RaceModel.getWaveAmpl*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.RaceModel.getWaveDir
      commentId: M:Model.RaceModel.getWaveDir
      language: CSharp
      name:
        CSharp: getWaveDir()
        VB: getWaveDir()
      nameWithType:
        CSharp: RaceModel.getWaveDir()
        VB: RaceModel.getWaveDir()
      qualifiedName:
        CSharp: Model.RaceModel.getWaveDir()
        VB: Model.RaceModel.getWaveDir()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: getWaveDir
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Model.cs
        startLine: 364
      summary: "\nreturn Wave direction of the simulation\n"
      example: []
      syntax:
        content:
          CSharp: public float getWaveDir()
          VB: Public Function getWaveDir As Single
        return:
          type: System.Single
          description: ''
      overload: Model.RaceModel.getWaveDir*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.RaceModel.getWaveLength
      commentId: M:Model.RaceModel.getWaveLength
      language: CSharp
      name:
        CSharp: getWaveLength()
        VB: getWaveLength()
      nameWithType:
        CSharp: RaceModel.getWaveLength()
        VB: RaceModel.getWaveLength()
      qualifiedName:
        CSharp: Model.RaceModel.getWaveLength()
        VB: Model.RaceModel.getWaveLength()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: getWaveLength
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Model.cs
        startLine: 373
      summary: "\nreturn Wave length of the simulation\n"
      example: []
      syntax:
        content:
          CSharp: public float getWaveLength()
          VB: Public Function getWaveLength As Single
        return:
          type: System.Single
          description: ''
      overload: Model.RaceModel.getWaveLength*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.RaceModel.getWaterSpeed
      commentId: M:Model.RaceModel.getWaterSpeed
      language: CSharp
      name:
        CSharp: getWaterSpeed()
        VB: getWaterSpeed()
      nameWithType:
        CSharp: RaceModel.getWaterSpeed()
        VB: RaceModel.getWaterSpeed()
      qualifiedName:
        CSharp: Model.RaceModel.getWaterSpeed()
        VB: Model.RaceModel.getWaterSpeed()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: getWaterSpeed
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Model.cs
        startLine: 382
      summary: "\nreturn current speed of the simulation\n"
      example: []
      syntax:
        content:
          CSharp: public float getWaterSpeed()
          VB: Public Function getWaterSpeed As Single
        return:
          type: System.Single
          description: ''
      overload: Model.RaceModel.getWaterSpeed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.RaceModel.getWaterDir
      commentId: M:Model.RaceModel.getWaterDir
      language: CSharp
      name:
        CSharp: getWaterDir()
        VB: getWaterDir()
      nameWithType:
        CSharp: RaceModel.getWaterDir()
        VB: RaceModel.getWaterDir()
      qualifiedName:
        CSharp: Model.RaceModel.getWaterDir()
        VB: Model.RaceModel.getWaterDir()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: getWaterDir
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Model.cs
        startLine: 391
      summary: "\nreturn current direction of the simulation\n"
      example: []
      syntax:
        content:
          CSharp: public float getWaterDir()
          VB: Public Function getWaterDir As Single
        return:
          type: System.Single
          description: ''
      overload: Model.RaceModel.getWaterDir*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.RaceModel.getSTW
      commentId: M:Model.RaceModel.getSTW
      language: CSharp
      name:
        CSharp: getSTW()
        VB: getSTW()
      nameWithType:
        CSharp: RaceModel.getSTW()
        VB: RaceModel.getSTW()
      qualifiedName:
        CSharp: Model.RaceModel.getSTW()
        VB: Model.RaceModel.getSTW()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: getSTW
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Model.cs
        startLine: 400
      summary: "\nreturn the speed throw water of the boat\n"
      example: []
      syntax:
        content:
          CSharp: public float getSTW()
          VB: Public Function getSTW As Single
        return:
          type: System.Single
          description: ''
      overload: Model.RaceModel.getSTW*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.RaceModel.setNMEA(System.Int32,System.String)
      commentId: M:Model.RaceModel.setNMEA(System.Int32,System.String)
      language: CSharp
      name:
        CSharp: setNMEA(Int32, String)
        VB: setNMEA(Int32, String)
      nameWithType:
        CSharp: RaceModel.setNMEA(Int32, String)
        VB: RaceModel.setNMEA(Int32, String)
      qualifiedName:
        CSharp: Model.RaceModel.setNMEA(System.Int32, System.String)
        VB: Model.RaceModel.setNMEA(System.Int32, System.String)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: setNMEA
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Model.cs
        startLine: 410
      summary: "\nSet the IP and port of QTVLN\n"
      example: []
      syntax:
        content:
          CSharp: public void setNMEA(int port, string ip)
          VB: Public Sub setNMEA(port As Integer, ip As String)
        parameters:
        - id: port
          type: System.Int32
          description: ''
        - id: ip
          type: System.String
          description: ''
      overload: Model.RaceModel.setNMEA*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.RaceModel.getportNMEA
      commentId: M:Model.RaceModel.getportNMEA
      language: CSharp
      name:
        CSharp: getportNMEA()
        VB: getportNMEA()
      nameWithType:
        CSharp: RaceModel.getportNMEA()
        VB: RaceModel.getportNMEA()
      qualifiedName:
        CSharp: Model.RaceModel.getportNMEA()
        VB: Model.RaceModel.getportNMEA()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: getportNMEA
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Model.cs
        startLine: 419
      summary: "\nreturn the port use for QTVLM\n"
      example: []
      syntax:
        content:
          CSharp: public int getportNMEA()
          VB: Public Function getportNMEA As Integer
        return:
          type: System.Int32
          description: ''
      overload: Model.RaceModel.getportNMEA*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.RaceModel.getipNMEA
      commentId: M:Model.RaceModel.getipNMEA
      language: CSharp
      name:
        CSharp: getipNMEA()
        VB: getipNMEA()
      nameWithType:
        CSharp: RaceModel.getipNMEA()
        VB: RaceModel.getipNMEA()
      qualifiedName:
        CSharp: Model.RaceModel.getipNMEA()
        VB: Model.RaceModel.getipNMEA()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: getipNMEA
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Model.cs
        startLine: 428
      summary: "\nreturn the ip use for QTVLM\n"
      example: []
      syntax:
        content:
          CSharp: public string getipNMEA()
          VB: Public Function getipNMEA As String
        return:
          type: System.String
          description: ''
      overload: Model.RaceModel.getipNMEA*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.RaceModel.getListPolaire
      commentId: M:Model.RaceModel.getListPolaire
      language: CSharp
      name:
        CSharp: getListPolaire()
        VB: getListPolaire()
      nameWithType:
        CSharp: RaceModel.getListPolaire()
        VB: RaceModel.getListPolaire()
      qualifiedName:
        CSharp: Model.RaceModel.getListPolaire()
        VB: Model.RaceModel.getListPolaire()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: getListPolaire
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Model.cs
        startLine: 437
      summary: "\nReturn the list of all available polars of the boat\n"
      example: []
      syntax:
        content:
          CSharp: public List<string> getListPolaire()
          VB: Public Function getListPolaire As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
          description: ''
      overload: Model.RaceModel.getListPolaire*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.RaceModel.setPolaire(System.String)
      commentId: M:Model.RaceModel.setPolaire(System.String)
      language: CSharp
      name:
        CSharp: setPolaire(String)
        VB: setPolaire(String)
      nameWithType:
        CSharp: RaceModel.setPolaire(String)
        VB: RaceModel.setPolaire(String)
      qualifiedName:
        CSharp: Model.RaceModel.setPolaire(System.String)
        VB: Model.RaceModel.setPolaire(System.String)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: setPolaire
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Model.cs
        startLine: 452
      summary: "\nSet the current polar of the boat to the polars with the corresponding name amoung all available polars\n"
      example: []
      syntax:
        content:
          CSharp: public void setPolaire(string polaireName)
          VB: Public Sub setPolaire(polaireName As String)
        parameters:
        - id: polaireName
          type: System.String
          description: ''
      overload: Model.RaceModel.setPolaire*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.RaceModel.setNoneCurrentPolar
      commentId: M:Model.RaceModel.setNoneCurrentPolar
      language: CSharp
      name:
        CSharp: setNoneCurrentPolar()
        VB: setNoneCurrentPolar()
      nameWithType:
        CSharp: RaceModel.setNoneCurrentPolar()
        VB: RaceModel.setNoneCurrentPolar()
      qualifiedName:
        CSharp: Model.RaceModel.setNoneCurrentPolar()
        VB: Model.RaceModel.setNoneCurrentPolar()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: setNoneCurrentPolar
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Model.cs
        startLine: 460
      summary: "\nlower the sails\n"
      example: []
      syntax:
        content:
          CSharp: public void setNoneCurrentPolar()
          VB: Public Sub setNoneCurrentPolar
      overload: Model.RaceModel.setNoneCurrentPolar*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.RaceModel.setPositionDeDepart(System.Single,System.Single)
      commentId: M:Model.RaceModel.setPositionDeDepart(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: setPositionDeDepart(Single, Single)
        VB: setPositionDeDepart(Single, Single)
      nameWithType:
        CSharp: RaceModel.setPositionDeDepart(Single, Single)
        VB: RaceModel.setPositionDeDepart(Single, Single)
      qualifiedName:
        CSharp: Model.RaceModel.setPositionDeDepart(System.Single, System.Single)
        VB: Model.RaceModel.setPositionDeDepart(System.Single, System.Single)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: setPositionDeDepart
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Model.cs
        startLine: 470
      summary: "\nSet the position of the boat\n"
      example: []
      syntax:
        content:
          CSharp: public void setPositionDeDepart(float latitude, float longitude)
          VB: Public Sub setPositionDeDepart(latitude As Single, longitude As Single)
        parameters:
        - id: latitude
          type: System.Single
          description: ''
        - id: longitude
          type: System.Single
          description: ''
      overload: Model.RaceModel.setPositionDeDepart*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.RaceModel.getTime
      commentId: M:Model.RaceModel.getTime
      language: CSharp
      name:
        CSharp: getTime()
        VB: getTime()
      nameWithType:
        CSharp: RaceModel.getTime()
        VB: RaceModel.getTime()
      qualifiedName:
        CSharp: Model.RaceModel.getTime()
        VB: Model.RaceModel.getTime()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: getTime
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Model.cs
        startLine: 482
      syntax:
        content:
          CSharp: public DateTime getTime()
          VB: Public Function getTime As Date
        return:
          type: System.DateTime
      overload: Model.RaceModel.getTime*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    references:
      PRace.Race: 
  - id: Model.Observer
    commentId: T:Model.Observer
    language: CSharp
    name:
      CSharp: Observer
      VB: Observer
    nameWithType:
      CSharp: Observer
      VB: Observer
    qualifiedName:
      CSharp: Model.Observer
      VB: Model.Observer
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: Model
    source:
      id: Observer
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Observer.cs
      startLine: 11
    summary: "\nThe is an observer(or interface) of <xref href=\"Model.RaceModel\" data-throw-if-not-resolved=\"false\"></xref>\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Observer : IObserver'
        VB: >-
          Public Class Observer

              Implements IObserver
    inheritance:
    - System.Object
    implements:
    - Model.IObserver
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Model.Observer.#ctor(Unityscript.Creation)
      commentId: M:Model.Observer.#ctor(Unityscript.Creation)
      language: CSharp
      name:
        CSharp: Observer(Creation)
        VB: Observer(Creation)
      nameWithType:
        CSharp: Observer.Observer(Creation)
        VB: Observer.Observer(Creation)
      qualifiedName:
        CSharp: Model.Observer.Observer(Unityscript.Creation)
        VB: Model.Observer.Observer(Unityscript.Creation)
      type: Constructor
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: .ctor
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Observer.cs
        startLine: 17
      summary: "\nCreate an instance of Observer\n"
      example: []
      syntax:
        content:
          CSharp: public Observer(Creation creation)
          VB: Public Sub New(creation As Creation)
        parameters:
        - id: creation
          type: Unityscript.Creation
          description: ''
      overload: Model.Observer.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.Observer.creation
      commentId: F:Model.Observer.creation
      language: CSharp
      name:
        CSharp: creation
        VB: creation
      nameWithType:
        CSharp: Observer.creation
        VB: Observer.creation
      qualifiedName:
        CSharp: Model.Observer.creation
        VB: Model.Observer.creation
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: creation
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Observer.cs
        startLine: 22
      syntax:
        content:
          CSharp: public Creation creation
          VB: Public creation As Creation
        return:
          type: Unityscript.Creation
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Model.Observer.Update(Model.ISubject)
      commentId: M:Model.Observer.Update(Model.ISubject)
      language: CSharp
      name:
        CSharp: Update(ISubject)
        VB: Update(ISubject)
      nameWithType:
        CSharp: Observer.Update(ISubject)
        VB: Observer.Update(ISubject)
      qualifiedName:
        CSharp: Model.Observer.Update(Model.ISubject)
        VB: Model.Observer.Update(Model.ISubject)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: Update
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Observer.cs
        startLine: 28
      summary: "\nUpdate the attribut &apos;creation&apos; according to the subject status\n"
      example: []
      syntax:
        content:
          CSharp: public void Update(ISubject s)
          VB: Public Sub Update(s As ISubject)
        parameters:
        - id: s
          type: Model.ISubject
          description: ''
      overload: Model.Observer.Update*
      implements:
      - Model.IObserver.Update(Model.ISubject)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    references:
      Model.RaceModel: 
  - id: Model.IObserver
    commentId: T:Model.IObserver
    language: CSharp
    name:
      CSharp: IObserver
      VB: IObserver
    nameWithType:
      CSharp: IObserver
      VB: IObserver
    qualifiedName:
      CSharp: Model.IObserver
      VB: Model.IObserver
    type: Interface
    assemblies:
    - Assembly-CSharp
    namespace: Model
    source:
      id: IObserver
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\IObserver.cs
      startLine: 10
    summary: "\nInterface of an observer pattern\n"
    example: []
    syntax:
      content:
        CSharp: public interface IObserver
        VB: Public Interface IObserver
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Model.IObserver.Update(Model.ISubject)
      commentId: M:Model.IObserver.Update(Model.ISubject)
      language: CSharp
      name:
        CSharp: Update(ISubject)
        VB: Update(ISubject)
      nameWithType:
        CSharp: IObserver.Update(ISubject)
        VB: IObserver.Update(ISubject)
      qualifiedName:
        CSharp: Model.IObserver.Update(Model.ISubject)
        VB: Model.IObserver.Update(Model.ISubject)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: Update
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\IObserver.cs
        startLine: 12
      syntax:
        content:
          CSharp: void Update(ISubject subject)
          VB: Sub Update(subject As ISubject)
        parameters:
        - id: subject
          type: Model.ISubject
      overload: Model.IObserver.Update*
      modifiers:
        CSharp: []
        VB: []
  - id: Model.BoatInfo
    commentId: T:Model.BoatInfo
    language: CSharp
    name:
      CSharp: BoatInfo
      VB: BoatInfo
    nameWithType:
      CSharp: BoatInfo
      VB: BoatInfo
    qualifiedName:
      CSharp: Model.BoatInfo
      VB: Model.BoatInfo
    type: Enum
    assemblies:
    - Assembly-CSharp
    namespace: Model
    source:
      id: BoatInfo
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\BoatInfo.cs
      startLine: 11
    summary: "\nEnumerate all information about the boat that should be transmitted ton the interface\n"
    example: []
    syntax:
      content:
        CSharp: public enum BoatInfo
        VB: Public Enum BoatInfo
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Model.BoatInfo.Longitude
      commentId: F:Model.BoatInfo.Longitude
      language: CSharp
      name:
        CSharp: Longitude
        VB: Longitude
      nameWithType:
        CSharp: BoatInfo.Longitude
        VB: BoatInfo.Longitude
      qualifiedName:
        CSharp: Model.BoatInfo.Longitude
        VB: Model.BoatInfo.Longitude
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: Longitude
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\BoatInfo.cs
        startLine: 13
      syntax:
        content:
          CSharp: Longitude = 0
          VB: Longitude = 0
        return:
          type: Model.BoatInfo
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Model.BoatInfo.Latitude
      commentId: F:Model.BoatInfo.Latitude
      language: CSharp
      name:
        CSharp: Latitude
        VB: Latitude
      nameWithType:
        CSharp: BoatInfo.Latitude
        VB: BoatInfo.Latitude
      qualifiedName:
        CSharp: Model.BoatInfo.Latitude
        VB: Model.BoatInfo.Latitude
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: Latitude
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\BoatInfo.cs
        startLine: 14
      syntax:
        content:
          CSharp: Latitude = 1
          VB: Latitude = 1
        return:
          type: Model.BoatInfo
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Model.BoatInfo.Cap
      commentId: F:Model.BoatInfo.Cap
      language: CSharp
      name:
        CSharp: Cap
        VB: Cap
      nameWithType:
        CSharp: BoatInfo.Cap
        VB: BoatInfo.Cap
      qualifiedName:
        CSharp: Model.BoatInfo.Cap
        VB: Model.BoatInfo.Cap
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: Cap
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\BoatInfo.cs
        startLine: 15
      syntax:
        content:
          CSharp: Cap = 2
          VB: Cap = 2
        return:
          type: Model.BoatInfo
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Model.BoatInfo.COG
      commentId: F:Model.BoatInfo.COG
      language: CSharp
      name:
        CSharp: COG
        VB: COG
      nameWithType:
        CSharp: BoatInfo.COG
        VB: BoatInfo.COG
      qualifiedName:
        CSharp: Model.BoatInfo.COG
        VB: Model.BoatInfo.COG
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: COG
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\BoatInfo.cs
        startLine: 16
      syntax:
        content:
          CSharp: COG = 3
          VB: COG = 3
        return:
          type: Model.BoatInfo
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Model.BoatInfo.SOG
      commentId: F:Model.BoatInfo.SOG
      language: CSharp
      name:
        CSharp: SOG
        VB: SOG
      nameWithType:
        CSharp: BoatInfo.SOG
        VB: BoatInfo.SOG
      qualifiedName:
        CSharp: Model.BoatInfo.SOG
        VB: Model.BoatInfo.SOG
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: SOG
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\BoatInfo.cs
        startLine: 17
      syntax:
        content:
          CSharp: SOG = 4
          VB: SOG = 4
        return:
          type: Model.BoatInfo
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Model.BoatInfo.STW
      commentId: F:Model.BoatInfo.STW
      language: CSharp
      name:
        CSharp: STW
        VB: STW
      nameWithType:
        CSharp: BoatInfo.STW
        VB: BoatInfo.STW
      qualifiedName:
        CSharp: Model.BoatInfo.STW
        VB: Model.BoatInfo.STW
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: STW
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\BoatInfo.cs
        startLine: 18
      syntax:
        content:
          CSharp: STW = 5
          VB: STW = 5
        return:
          type: Model.BoatInfo
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Model.BoatInfo.AWS
      commentId: F:Model.BoatInfo.AWS
      language: CSharp
      name:
        CSharp: AWS
        VB: AWS
      nameWithType:
        CSharp: BoatInfo.AWS
        VB: BoatInfo.AWS
      qualifiedName:
        CSharp: Model.BoatInfo.AWS
        VB: Model.BoatInfo.AWS
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: AWS
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\BoatInfo.cs
        startLine: 19
      syntax:
        content:
          CSharp: AWS = 6
          VB: AWS = 6
        return:
          type: Model.BoatInfo
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Model.BoatInfo.AWA
      commentId: F:Model.BoatInfo.AWA
      language: CSharp
      name:
        CSharp: AWA
        VB: AWA
      nameWithType:
        CSharp: BoatInfo.AWA
        VB: BoatInfo.AWA
      qualifiedName:
        CSharp: Model.BoatInfo.AWA
        VB: Model.BoatInfo.AWA
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: Model
      source:
        id: AWA
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\BoatInfo.cs
        startLine: 20
      syntax:
        content:
          CSharp: AWA = 7
          VB: AWA = 7
        return:
          type: Model.BoatInfo
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
- id: AquitisionCommunication
  commentId: N:AquitisionCommunication
  language: CSharp
  name:
    CSharp: AquitisionCommunication
    VB: AquitisionCommunication
  nameWithType:
    CSharp: AquitisionCommunication
    VB: AquitisionCommunication
  qualifiedName:
    CSharp: AquitisionCommunication
    VB: AquitisionCommunication
  type: Namespace
  assemblies:
  - Assembly-CSharp
  modifiers: {}
  items:
  - id: AquitisionCommunication.AquisitionPolaire
    commentId: T:AquitisionCommunication.AquisitionPolaire
    language: CSharp
    name:
      CSharp: AquisitionPolaire
      VB: AquisitionPolaire
    nameWithType:
      CSharp: AquisitionPolaire
      VB: AquisitionPolaire
    qualifiedName:
      CSharp: AquitisionCommunication.AquisitionPolaire
      VB: AquitisionCommunication.AquisitionPolaire
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: AquitisionCommunication
    source:
      id: AquisitionPolaire
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\AquisitionPolaire.cs
      startLine: 12
    summary: "\nThis class is used to load .pol file\n"
    example: []
    syntax:
      content:
        CSharp: public class AquisitionPolaire
        VB: Public Class AquisitionPolaire
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AquitisionCommunication.AquisitionPolaire.#ctor
      commentId: M:AquitisionCommunication.AquisitionPolaire.#ctor
      language: CSharp
      name:
        CSharp: AquisitionPolaire()
        VB: AquisitionPolaire()
      nameWithType:
        CSharp: AquisitionPolaire.AquisitionPolaire()
        VB: AquisitionPolaire.AquisitionPolaire()
      qualifiedName:
        CSharp: AquitisionCommunication.AquisitionPolaire.AquisitionPolaire()
        VB: AquitisionCommunication.AquisitionPolaire.AquisitionPolaire()
      type: Constructor
      assemblies:
      - Assembly-CSharp
      namespace: AquitisionCommunication
      source:
        id: .ctor
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\AquisitionPolaire.cs
        startLine: 14
      syntax:
        content:
          CSharp: public AquisitionPolaire()
          VB: Public Sub New
      overload: AquitisionCommunication.AquisitionPolaire.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.AquisitionPolaire.ReadPolaire(System.String)
      commentId: M:AquitisionCommunication.AquisitionPolaire.ReadPolaire(System.String)
      language: CSharp
      name:
        CSharp: ReadPolaire(String)
        VB: ReadPolaire(String)
      nameWithType:
        CSharp: AquisitionPolaire.ReadPolaire(String)
        VB: AquisitionPolaire.ReadPolaire(String)
      qualifiedName:
        CSharp: AquitisionCommunication.AquisitionPolaire.ReadPolaire(System.String)
        VB: AquitisionCommunication.AquisitionPolaire.ReadPolaire(System.String)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: AquitisionCommunication
      source:
        id: ReadPolaire
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\AquisitionPolaire.cs
        startLine: 24
      summary: "\nload a .pol file \n"
      example: []
      syntax:
        content:
          CSharp: public Dictionary<float, Dictionary<float, float>> ReadPolaire(string filePath)
          VB: Public Function ReadPolaire(filePath As String) As Dictionary(Of Single, Dictionary(Of Single, Single))
        parameters:
        - id: filePath
          type: System.String
          description: ''
        return:
          type: System.Collections.Generic.Dictionary{System.Single,System.Collections.Generic.Dictionary{System.Single,System.Single}}
          description: ''
      overload: AquitisionCommunication.AquisitionPolaire.ReadPolaire*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.AquisitionPolaire.ReadMultiplePolaire(System.Collections.Generic.List{System.String})
      commentId: M:AquitisionCommunication.AquisitionPolaire.ReadMultiplePolaire(System.Collections.Generic.List{System.String})
      language: CSharp
      name:
        CSharp: ReadMultiplePolaire(List<String>)
        VB: ReadMultiplePolaire(List(Of String))
      nameWithType:
        CSharp: AquisitionPolaire.ReadMultiplePolaire(List<String>)
        VB: AquisitionPolaire.ReadMultiplePolaire(List(Of String))
      qualifiedName:
        CSharp: AquitisionCommunication.AquisitionPolaire.ReadMultiplePolaire(System.Collections.Generic.List<System.String>)
        VB: AquitisionCommunication.AquisitionPolaire.ReadMultiplePolaire(System.Collections.Generic.List(Of System.String))
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: AquitisionCommunication
      source:
        id: ReadMultiplePolaire
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\AquisitionPolaire.cs
        startLine: 64
      summary: "\nload multiple a .pol file\n"
      example: []
      syntax:
        content:
          CSharp: public List<Dictionary<float, Dictionary<float, float>>> ReadMultiplePolaire(List<string> ListFilePath)
          VB: Public Function ReadMultiplePolaire(ListFilePath As List(Of String)) As List(Of Dictionary(Of Single, Dictionary(Of Single, Single)))
        parameters:
        - id: ListFilePath
          type: System.Collections.Generic.List{System.String}
          description: ''
        return:
          type: System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.Single,System.Collections.Generic.Dictionary{System.Single,System.Single}}}
          description: ''
      overload: AquitisionCommunication.AquisitionPolaire.ReadMultiplePolaire*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AquitisionCommunication.AquisitionFichierSaveRace
    commentId: T:AquitisionCommunication.AquisitionFichierSaveRace
    language: CSharp
    name:
      CSharp: AquisitionFichierSaveRace
      VB: AquisitionFichierSaveRace
    nameWithType:
      CSharp: AquisitionFichierSaveRace
      VB: AquisitionFichierSaveRace
    qualifiedName:
      CSharp: AquitisionCommunication.AquisitionFichierSaveRace
      VB: AquitisionCommunication.AquisitionFichierSaveRace
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: AquitisionCommunication
    source:
      id: AquisitionFichierSaveRace
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\AquisitionFichier.cs
      startLine: 9
    syntax:
      content:
        CSharp: public class AquisitionFichierSaveRace
        VB: Public Class AquisitionFichierSaveRace
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AquitisionCommunication.AquisitionFichierSaveRace.#ctor(System.String)
      commentId: M:AquitisionCommunication.AquisitionFichierSaveRace.#ctor(System.String)
      language: CSharp
      name:
        CSharp: AquisitionFichierSaveRace(String)
        VB: AquisitionFichierSaveRace(String)
      nameWithType:
        CSharp: AquisitionFichierSaveRace.AquisitionFichierSaveRace(String)
        VB: AquisitionFichierSaveRace.AquisitionFichierSaveRace(String)
      qualifiedName:
        CSharp: AquitisionCommunication.AquisitionFichierSaveRace.AquisitionFichierSaveRace(System.String)
        VB: AquitisionCommunication.AquisitionFichierSaveRace.AquisitionFichierSaveRace(System.String)
      type: Constructor
      assemblies:
      - Assembly-CSharp
      namespace: AquitisionCommunication
      source:
        id: .ctor
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\AquisitionFichier.cs
        startLine: 12
      syntax:
        content:
          CSharp: public AquisitionFichierSaveRace(string filePath)
          VB: Public Sub New(filePath As String)
        parameters:
        - id: filePath
          type: System.String
      overload: AquitisionCommunication.AquisitionFichierSaveRace.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AquitisionCommunication.Sauvegarde
    commentId: T:AquitisionCommunication.Sauvegarde
    language: CSharp
    name:
      CSharp: Sauvegarde
      VB: Sauvegarde
    nameWithType:
      CSharp: Sauvegarde
      VB: Sauvegarde
    qualifiedName:
      CSharp: AquitisionCommunication.Sauvegarde
      VB: AquitisionCommunication.Sauvegarde
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: AquitisionCommunication
    source:
      id: Sauvegarde
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Sauvegarde.cs
      startLine: 7
    syntax:
      content:
        CSharp: public class Sauvegarde
        VB: Public Class Sauvegarde
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AquitisionCommunication.Sauvegarde.#ctor
      commentId: M:AquitisionCommunication.Sauvegarde.#ctor
      language: CSharp
      name:
        CSharp: Sauvegarde()
        VB: Sauvegarde()
      nameWithType:
        CSharp: Sauvegarde.Sauvegarde()
        VB: Sauvegarde.Sauvegarde()
      qualifiedName:
        CSharp: AquitisionCommunication.Sauvegarde.Sauvegarde()
        VB: AquitisionCommunication.Sauvegarde.Sauvegarde()
      type: Constructor
      assemblies:
      - Assembly-CSharp
      namespace: AquitisionCommunication
      source:
        id: .ctor
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Sauvegarde.cs
        startLine: 9
      syntax:
        content:
          CSharp: public Sauvegarde()
          VB: Public Sub New
      overload: AquitisionCommunication.Sauvegarde.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.Sauvegarde.Id
      commentId: F:AquitisionCommunication.Sauvegarde.Id
      language: CSharp
      name:
        CSharp: Id
        VB: Id
      nameWithType:
        CSharp: Sauvegarde.Id
        VB: Sauvegarde.Id
      qualifiedName:
        CSharp: AquitisionCommunication.Sauvegarde.Id
        VB: AquitisionCommunication.Sauvegarde.Id
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: AquitisionCommunication
      source:
        id: Id
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Sauvegarde.cs
        startLine: 13
      syntax:
        content:
          CSharp: public int Id
          VB: Public Id As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.Sauvegarde.InstantT
      commentId: F:AquitisionCommunication.Sauvegarde.InstantT
      language: CSharp
      name:
        CSharp: InstantT
        VB: InstantT
      nameWithType:
        CSharp: Sauvegarde.InstantT
        VB: Sauvegarde.InstantT
      qualifiedName:
        CSharp: AquitisionCommunication.Sauvegarde.InstantT
        VB: AquitisionCommunication.Sauvegarde.InstantT
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: AquitisionCommunication
      source:
        id: InstantT
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Sauvegarde.cs
        startLine: 15
      syntax:
        content:
          CSharp: public DateTime InstantT
          VB: Public InstantT As Date
        return:
          type: System.DateTime
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.Sauvegarde.fichierGpx
      commentId: F:AquitisionCommunication.Sauvegarde.fichierGpx
      language: CSharp
      name:
        CSharp: fichierGpx
        VB: fichierGpx
      nameWithType:
        CSharp: Sauvegarde.fichierGpx
        VB: Sauvegarde.fichierGpx
      qualifiedName:
        CSharp: AquitisionCommunication.Sauvegarde.fichierGpx
        VB: AquitisionCommunication.Sauvegarde.fichierGpx
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: AquitisionCommunication
      source:
        id: fichierGpx
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Sauvegarde.cs
        startLine: 17
      syntax:
        content:
          CSharp: public string fichierGpx
          VB: Public fichierGpx As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AquitisionCommunication.Aquisition
    commentId: T:AquitisionCommunication.Aquisition
    language: CSharp
    name:
      CSharp: Aquisition
      VB: Aquisition
    nameWithType:
      CSharp: Aquisition
      VB: Aquisition
    qualifiedName:
      CSharp: AquitisionCommunication.Aquisition
      VB: AquitisionCommunication.Aquisition
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: AquitisionCommunication
    source:
      id: Aquisition
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Aquisition.cs
      startLine: 15
    summary: "\nthis classe manages the communication with QTVLM on OpenCPN\n"
    example: []
    syntax:
      content:
        CSharp: public class Aquisition
        VB: Public Class Aquisition
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AquitisionCommunication.Aquisition.#ctor(PRace.Race,System.Int32,System.String,System.Int32,System.String)
      commentId: M:AquitisionCommunication.Aquisition.#ctor(PRace.Race,System.Int32,System.String,System.Int32,System.String)
      language: CSharp
      name:
        CSharp: Aquisition(Race, Int32, String, Int32, String)
        VB: Aquisition(Race, Int32, String, Int32, String)
      nameWithType:
        CSharp: Aquisition.Aquisition(Race, Int32, String, Int32, String)
        VB: Aquisition.Aquisition(Race, Int32, String, Int32, String)
      qualifiedName:
        CSharp: AquitisionCommunication.Aquisition.Aquisition(PRace.Race, System.Int32, System.String, System.Int32, System.String)
        VB: AquitisionCommunication.Aquisition.Aquisition(PRace.Race, System.Int32, System.String, System.Int32, System.String)
      type: Constructor
      assemblies:
      - Assembly-CSharp
      namespace: AquitisionCommunication
      source:
        id: .ctor
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Aquisition.cs
        startLine: 25
      summary: "\nCreate an instance of Aquisition\n"
      example: []
      syntax:
        content:
          CSharp: public Aquisition(Race race, int portQTVLM, string ipQTVLM, int portRM, string ipRM)
          VB: Public Sub New(race As Race, portQTVLM As Integer, ipQTVLM As String, portRM As Integer, ipRM As String)
        parameters:
        - id: race
          type: PRace.Race
          description: the race whose launch the communication
        - id: portQTVLM
          type: System.Int32
          description: ''
        - id: ipQTVLM
          type: System.String
          description: ''
        - id: portRM
          type: System.Int32
          description: ''
        - id: ipRM
          type: System.String
          description: ''
      overload: AquitisionCommunication.Aquisition.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.Aquisition.conf
      commentId: F:AquitisionCommunication.Aquisition.conf
      language: CSharp
      name:
        CSharp: conf
        VB: conf
      nameWithType:
        CSharp: Aquisition.conf
        VB: Aquisition.conf
      qualifiedName:
        CSharp: AquitisionCommunication.Aquisition.conf
        VB: AquitisionCommunication.Aquisition.conf
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: AquitisionCommunication
      source:
        id: conf
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Aquisition.cs
        startLine: 38
      syntax:
        content:
          CSharp: public SavedConfigReader.SavedConfig conf
          VB: Public conf As SavedConfigReader.SavedConfig
        return:
          type: SavedConfigReader.SavedConfig
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.Aquisition.SetNMEA(System.Int32,System.String)
      commentId: M:AquitisionCommunication.Aquisition.SetNMEA(System.Int32,System.String)
      language: CSharp
      name:
        CSharp: SetNMEA(Int32, String)
        VB: SetNMEA(Int32, String)
      nameWithType:
        CSharp: Aquisition.SetNMEA(Int32, String)
        VB: Aquisition.SetNMEA(Int32, String)
      qualifiedName:
        CSharp: AquitisionCommunication.Aquisition.SetNMEA(System.Int32, System.String)
        VB: AquitisionCommunication.Aquisition.SetNMEA(System.Int32, System.String)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: AquitisionCommunication
      source:
        id: SetNMEA
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Aquisition.cs
        startLine: 46
      summary: "\nSet the ip and port to communicate with QTVLM\n"
      example: []
      syntax:
        content:
          CSharp: public void SetNMEA(int port, string ip)
          VB: Public Sub SetNMEA(port As Integer, ip As String)
        parameters:
        - id: port
          type: System.Int32
          description: ''
        - id: ip
          type: System.String
          description: ''
      overload: AquitisionCommunication.Aquisition.SetNMEA*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.Aquisition.getPortNMEA
      commentId: M:AquitisionCommunication.Aquisition.getPortNMEA
      language: CSharp
      name:
        CSharp: getPortNMEA()
        VB: getPortNMEA()
      nameWithType:
        CSharp: Aquisition.getPortNMEA()
        VB: Aquisition.getPortNMEA()
      qualifiedName:
        CSharp: AquitisionCommunication.Aquisition.getPortNMEA()
        VB: AquitisionCommunication.Aquisition.getPortNMEA()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: AquitisionCommunication
      source:
        id: getPortNMEA
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Aquisition.cs
        startLine: 56
      summary: "\nReturn the port used to communicate with QTVML\n"
      example: []
      syntax:
        content:
          CSharp: public int getPortNMEA()
          VB: Public Function getPortNMEA As Integer
        return:
          type: System.Int32
          description: ''
      overload: AquitisionCommunication.Aquisition.getPortNMEA*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.Aquisition.getIpNMEA
      commentId: M:AquitisionCommunication.Aquisition.getIpNMEA
      language: CSharp
      name:
        CSharp: getIpNMEA()
        VB: getIpNMEA()
      nameWithType:
        CSharp: Aquisition.getIpNMEA()
        VB: Aquisition.getIpNMEA()
      qualifiedName:
        CSharp: AquitisionCommunication.Aquisition.getIpNMEA()
        VB: AquitisionCommunication.Aquisition.getIpNMEA()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: AquitisionCommunication
      source:
        id: getIpNMEA
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Aquisition.cs
        startLine: 65
      summary: "\nReturn the ip used to communicate with QTVML\n"
      example: []
      syntax:
        content:
          CSharp: public string getIpNMEA()
          VB: Public Function getIpNMEA As String
        return:
          type: System.String
          description: ''
      overload: AquitisionCommunication.Aquisition.getIpNMEA*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.Aquisition.sentPosition(System.Collections.Generic.Dictionary{Environement.Conditions,System.Single},System.Single,System.Single,System.Single,PRace.Position.Coords,PRace.Position.Coords,System.DateTime,System.Single,System.Single,System.Single)
      commentId: M:AquitisionCommunication.Aquisition.sentPosition(System.Collections.Generic.Dictionary{Environement.Conditions,System.Single},System.Single,System.Single,System.Single,PRace.Position.Coords,PRace.Position.Coords,System.DateTime,System.Single,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: sentPosition(Dictionary<Conditions, Single>, Single, Single, Single, Position.Coords, Position.Coords, DateTime, Single, Single, Single)
        VB: sentPosition(Dictionary(Of Conditions, Single), Single, Single, Single, Position.Coords, Position.Coords, DateTime, Single, Single, Single)
      nameWithType:
        CSharp: Aquisition.sentPosition(Dictionary<Conditions, Single>, Single, Single, Single, Position.Coords, Position.Coords, DateTime, Single, Single, Single)
        VB: Aquisition.sentPosition(Dictionary(Of Conditions, Single), Single, Single, Single, Position.Coords, Position.Coords, DateTime, Single, Single, Single)
      qualifiedName:
        CSharp: AquitisionCommunication.Aquisition.sentPosition(System.Collections.Generic.Dictionary<Environement.Conditions, System.Single>, System.Single, System.Single, System.Single, PRace.Position.Coords, PRace.Position.Coords, System.DateTime, System.Single, System.Single, System.Single)
        VB: AquitisionCommunication.Aquisition.sentPosition(System.Collections.Generic.Dictionary(Of Environement.Conditions, System.Single), System.Single, System.Single, System.Single, PRace.Position.Coords, PRace.Position.Coords, System.DateTime, System.Single, System.Single, System.Single)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: AquitisionCommunication
      source:
        id: sentPosition
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Aquisition.cs
        startLine: 83
      syntax:
        content:
          CSharp: public void sentPosition(Dictionary<Conditions, float> condition, float SOG, float COG, float cap, Position.Coords latitude, Position.Coords longitude, DateTime date, float STW, float AWS, float AWA)
          VB: Public Sub sentPosition(condition As Dictionary(Of Conditions, Single), SOG As Single, COG As Single, cap As Single, latitude As Position.Coords, longitude As Position.Coords, date As Date, STW As Single, AWS As Single, AWA As Single)
        parameters:
        - id: condition
          type: System.Collections.Generic.Dictionary{Environement.Conditions,System.Single}
        - id: SOG
          type: System.Single
        - id: COG
          type: System.Single
        - id: cap
          type: System.Single
        - id: latitude
          type: PRace.Position.Coords
        - id: longitude
          type: PRace.Position.Coords
        - id: date
          type: System.DateTime
        - id: STW
          type: System.Single
        - id: AWS
          type: System.Single
        - id: AWA
          type: System.Single
      overload: AquitisionCommunication.Aquisition.sentPosition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AquitisionCommunication.RaceSave
    commentId: T:AquitisionCommunication.RaceSave
    language: CSharp
    name:
      CSharp: RaceSave
      VB: RaceSave
    nameWithType:
      CSharp: RaceSave
      VB: RaceSave
    qualifiedName:
      CSharp: AquitisionCommunication.RaceSave
      VB: AquitisionCommunication.RaceSave
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: AquitisionCommunication
    source:
      id: RaceSave
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\RaceSave.cs
      startLine: 14
    summary: "\nThis class is used load and save a serilized vesion of the race\n"
    example: []
    syntax:
      content:
        CSharp: public class RaceSave
        VB: Public Class RaceSave
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AquitisionCommunication.RaceSave.#ctor(System.String)
      commentId: M:AquitisionCommunication.RaceSave.#ctor(System.String)
      language: CSharp
      name:
        CSharp: RaceSave(String)
        VB: RaceSave(String)
      nameWithType:
        CSharp: RaceSave.RaceSave(String)
        VB: RaceSave.RaceSave(String)
      qualifiedName:
        CSharp: AquitisionCommunication.RaceSave.RaceSave(System.String)
        VB: AquitisionCommunication.RaceSave.RaceSave(System.String)
      type: Constructor
      assemblies:
      - Assembly-CSharp
      namespace: AquitisionCommunication
      source:
        id: .ctor
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\RaceSave.cs
        startLine: 21
      summary: "\nCreate an instance of RaceSave\n"
      example: []
      syntax:
        content:
          CSharp: public RaceSave(string filePath)
          VB: Public Sub New(filePath As String)
        parameters:
        - id: filePath
          type: System.String
          description: path to the save
      overload: AquitisionCommunication.RaceSave.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.RaceSave.GetJsonRace
      commentId: M:AquitisionCommunication.RaceSave.GetJsonRace
      language: CSharp
      name:
        CSharp: GetJsonRace()
        VB: GetJsonRace()
      nameWithType:
        CSharp: RaceSave.GetJsonRace()
        VB: RaceSave.GetJsonRace()
      qualifiedName:
        CSharp: AquitisionCommunication.RaceSave.GetJsonRace()
        VB: AquitisionCommunication.RaceSave.GetJsonRace()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: AquitisionCommunication
      source:
        id: GetJsonRace
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\RaceSave.cs
        startLine: 68
      summary: "\nreturn the attribut &apos;jrace&apos;\n"
      example: []
      syntax:
        content:
          CSharp: public RaceSave.JsonRace GetJsonRace()
          VB: Public Function GetJsonRace As RaceSave.JsonRace
        return:
          type: AquitisionCommunication.RaceSave.JsonRace
          description: ''
      overload: AquitisionCommunication.RaceSave.GetJsonRace*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.RaceSave.Update(PRace.Race)
      commentId: M:AquitisionCommunication.RaceSave.Update(PRace.Race)
      language: CSharp
      name:
        CSharp: Update(Race)
        VB: Update(Race)
      nameWithType:
        CSharp: RaceSave.Update(Race)
        VB: RaceSave.Update(Race)
      qualifiedName:
        CSharp: AquitisionCommunication.RaceSave.Update(PRace.Race)
        VB: AquitisionCommunication.RaceSave.Update(PRace.Race)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: AquitisionCommunication
      source:
        id: Update
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\RaceSave.cs
        startLine: 77
      summary: "\nupdate the attribut &apos;jrace&apos; according to the input race\n"
      example: []
      syntax:
        content:
          CSharp: public void Update(Race race)
          VB: Public Sub Update(race As Race)
        parameters:
        - id: race
          type: PRace.Race
          description: race used to update jrace
      overload: AquitisionCommunication.RaceSave.Update*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.RaceSave.loadfile
      commentId: M:AquitisionCommunication.RaceSave.loadfile
      language: CSharp
      name:
        CSharp: loadfile()
        VB: loadfile()
      nameWithType:
        CSharp: RaceSave.loadfile()
        VB: RaceSave.loadfile()
      qualifiedName:
        CSharp: AquitisionCommunication.RaceSave.loadfile()
        VB: AquitisionCommunication.RaceSave.loadfile()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: AquitisionCommunication
      source:
        id: loadfile
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\RaceSave.cs
        startLine: 107
      summary: "\nload a <xref href=\"AquitisionCommunication.RaceSave.JsonRace\" data-throw-if-not-resolved=\"false\"></xref> form the save at the path at the attribut &apos;filePath&apos; and set &apos;jrace&apos; accordingly\n"
      example: []
      syntax:
        content:
          CSharp: public RaceSave.JsonRace loadfile()
          VB: Public Function loadfile As RaceSave.JsonRace
        return:
          type: AquitisionCommunication.RaceSave.JsonRace
          description: the value of loaded form the save at the path at the attribut &apos;<xref href="AquitisionCommunication.RaceSave.JsonRace" data-throw-if-not-resolved="false"></xref> form the save at the path at the attribut &apos;filePath&apos;&apos;
      overload: AquitisionCommunication.RaceSave.loadfile*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        AquitisionCommunication.RaceSave.JsonRace: 
    - id: AquitisionCommunication.RaceSave.savefile
      commentId: M:AquitisionCommunication.RaceSave.savefile
      language: CSharp
      name:
        CSharp: savefile()
        VB: savefile()
      nameWithType:
        CSharp: RaceSave.savefile()
        VB: RaceSave.savefile()
      qualifiedName:
        CSharp: AquitisionCommunication.RaceSave.savefile()
        VB: AquitisionCommunication.RaceSave.savefile()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: AquitisionCommunication
      source:
        id: savefile
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\RaceSave.cs
        startLine: 121
      summary: "\nSave &apos;jrace&apos; at &apos;filePath&apos;\n"
      example: []
      syntax:
        content:
          CSharp: public void savefile()
          VB: Public Sub savefile
      overload: AquitisionCommunication.RaceSave.savefile*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: AquitisionCommunication.RaceSave.JsonRace
    commentId: T:AquitisionCommunication.RaceSave.JsonRace
    language: CSharp
    name:
      CSharp: RaceSave.JsonRace
      VB: RaceSave.JsonRace
    nameWithType:
      CSharp: RaceSave.JsonRace
      VB: RaceSave.JsonRace
    qualifiedName:
      CSharp: AquitisionCommunication.RaceSave.JsonRace
      VB: AquitisionCommunication.RaceSave.JsonRace
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: AquitisionCommunication
    source:
      id: JsonRace
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\RaceSave.cs
      startLine: 34
    summary: "\nserilized vesion of the race\n"
    example: []
    syntax:
      content:
        CSharp: public class JsonRace
        VB: Public Class JsonRace
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: AquitisionCommunication.RaceSave.JsonRace.#ctor
      commentId: M:AquitisionCommunication.RaceSave.JsonRace.#ctor
      language: CSharp
      name:
        CSharp: JsonRace()
        VB: JsonRace()
      nameWithType:
        CSharp: RaceSave.JsonRace.JsonRace()
        VB: RaceSave.JsonRace.JsonRace()
      qualifiedName:
        CSharp: AquitisionCommunication.RaceSave.JsonRace.JsonRace()
        VB: AquitisionCommunication.RaceSave.JsonRace.JsonRace()
      type: Constructor
      assemblies:
      - Assembly-CSharp
      namespace: AquitisionCommunication
      source:
        id: .ctor
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\RaceSave.cs
        startLine: 36
      syntax:
        content:
          CSharp: public JsonRace()
          VB: Public Sub New
      overload: AquitisionCommunication.RaceSave.JsonRace.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.RaceSave.JsonRace.mode
      commentId: F:AquitisionCommunication.RaceSave.JsonRace.mode
      language: CSharp
      name:
        CSharp: mode
        VB: mode
      nameWithType:
        CSharp: RaceSave.JsonRace.mode
        VB: RaceSave.JsonRace.mode
      qualifiedName:
        CSharp: AquitisionCommunication.RaceSave.JsonRace.mode
        VB: AquitisionCommunication.RaceSave.JsonRace.mode
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: AquitisionCommunication
      source:
        id: mode
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\RaceSave.cs
        startLine: 39
      syntax:
        content:
          CSharp: public Mode mode
          VB: Public mode As Mode
        return:
          type: PRace.Mode
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.RaceSave.JsonRace.RaceId
      commentId: F:AquitisionCommunication.RaceSave.JsonRace.RaceId
      language: CSharp
      name:
        CSharp: RaceId
        VB: RaceId
      nameWithType:
        CSharp: RaceSave.JsonRace.RaceId
        VB: RaceSave.JsonRace.RaceId
      qualifiedName:
        CSharp: AquitisionCommunication.RaceSave.JsonRace.RaceId
        VB: AquitisionCommunication.RaceSave.JsonRace.RaceId
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: AquitisionCommunication
      source:
        id: RaceId
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\RaceSave.cs
        startLine: 40
      syntax:
        content:
          CSharp: public int RaceId
          VB: Public RaceId As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.RaceSave.JsonRace.RaceTime
      commentId: F:AquitisionCommunication.RaceSave.JsonRace.RaceTime
      language: CSharp
      name:
        CSharp: RaceTime
        VB: RaceTime
      nameWithType:
        CSharp: RaceSave.JsonRace.RaceTime
        VB: RaceSave.JsonRace.RaceTime
      qualifiedName:
        CSharp: AquitisionCommunication.RaceSave.JsonRace.RaceTime
        VB: AquitisionCommunication.RaceSave.JsonRace.RaceTime
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: AquitisionCommunication
      source:
        id: RaceTime
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\RaceSave.cs
        startLine: 41
      syntax:
        content:
          CSharp: public DateTime RaceTime
          VB: Public RaceTime As Date
        return:
          type: System.DateTime
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.RaceSave.JsonRace.wayPointFile
      commentId: F:AquitisionCommunication.RaceSave.JsonRace.wayPointFile
      language: CSharp
      name:
        CSharp: wayPointFile
        VB: wayPointFile
      nameWithType:
        CSharp: RaceSave.JsonRace.wayPointFile
        VB: RaceSave.JsonRace.wayPointFile
      qualifiedName:
        CSharp: AquitisionCommunication.RaceSave.JsonRace.wayPointFile
        VB: AquitisionCommunication.RaceSave.JsonRace.wayPointFile
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: AquitisionCommunication
      source:
        id: wayPointFile
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\RaceSave.cs
        startLine: 42
      syntax:
        content:
          CSharp: public string wayPointFile
          VB: Public wayPointFile As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.RaceSave.JsonRace.currentPol
      commentId: F:AquitisionCommunication.RaceSave.JsonRace.currentPol
      language: CSharp
      name:
        CSharp: currentPol
        VB: currentPol
      nameWithType:
        CSharp: RaceSave.JsonRace.currentPol
        VB: RaceSave.JsonRace.currentPol
      qualifiedName:
        CSharp: AquitisionCommunication.RaceSave.JsonRace.currentPol
        VB: AquitisionCommunication.RaceSave.JsonRace.currentPol
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: AquitisionCommunication
      source:
        id: currentPol
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\RaceSave.cs
        startLine: 43
      syntax:
        content:
          CSharp: public string currentPol
          VB: Public currentPol As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.RaceSave.JsonRace.polFiles
      commentId: F:AquitisionCommunication.RaceSave.JsonRace.polFiles
      language: CSharp
      name:
        CSharp: polFiles
        VB: polFiles
      nameWithType:
        CSharp: RaceSave.JsonRace.polFiles
        VB: RaceSave.JsonRace.polFiles
      qualifiedName:
        CSharp: AquitisionCommunication.RaceSave.JsonRace.polFiles
        VB: AquitisionCommunication.RaceSave.JsonRace.polFiles
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: AquitisionCommunication
      source:
        id: polFiles
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\RaceSave.cs
        startLine: 44
      syntax:
        content:
          CSharp: public List<string> polFiles
          VB: Public polFiles As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.RaceSave.JsonRace.polNames
      commentId: F:AquitisionCommunication.RaceSave.JsonRace.polNames
      language: CSharp
      name:
        CSharp: polNames
        VB: polNames
      nameWithType:
        CSharp: RaceSave.JsonRace.polNames
        VB: RaceSave.JsonRace.polNames
      qualifiedName:
        CSharp: AquitisionCommunication.RaceSave.JsonRace.polNames
        VB: AquitisionCommunication.RaceSave.JsonRace.polNames
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: AquitisionCommunication
      source:
        id: polNames
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\RaceSave.cs
        startLine: 45
      syntax:
        content:
          CSharp: public List<string> polNames
          VB: Public polNames As List(Of String)
        return:
          type: System.Collections.Generic.List{System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.RaceSave.JsonRace.BoatId
      commentId: F:AquitisionCommunication.RaceSave.JsonRace.BoatId
      language: CSharp
      name:
        CSharp: BoatId
        VB: BoatId
      nameWithType:
        CSharp: RaceSave.JsonRace.BoatId
        VB: RaceSave.JsonRace.BoatId
      qualifiedName:
        CSharp: AquitisionCommunication.RaceSave.JsonRace.BoatId
        VB: AquitisionCommunication.RaceSave.JsonRace.BoatId
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: AquitisionCommunication
      source:
        id: BoatId
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\RaceSave.cs
        startLine: 46
      syntax:
        content:
          CSharp: public int BoatId
          VB: Public BoatId As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.RaceSave.JsonRace.BoatCap
      commentId: F:AquitisionCommunication.RaceSave.JsonRace.BoatCap
      language: CSharp
      name:
        CSharp: BoatCap
        VB: BoatCap
      nameWithType:
        CSharp: RaceSave.JsonRace.BoatCap
        VB: RaceSave.JsonRace.BoatCap
      qualifiedName:
        CSharp: AquitisionCommunication.RaceSave.JsonRace.BoatCap
        VB: AquitisionCommunication.RaceSave.JsonRace.BoatCap
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: AquitisionCommunication
      source:
        id: BoatCap
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\RaceSave.cs
        startLine: 47
      syntax:
        content:
          CSharp: public float BoatCap
          VB: Public BoatCap As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.RaceSave.JsonRace.longitude
      commentId: F:AquitisionCommunication.RaceSave.JsonRace.longitude
      language: CSharp
      name:
        CSharp: longitude
        VB: longitude
      nameWithType:
        CSharp: RaceSave.JsonRace.longitude
        VB: RaceSave.JsonRace.longitude
      qualifiedName:
        CSharp: AquitisionCommunication.RaceSave.JsonRace.longitude
        VB: AquitisionCommunication.RaceSave.JsonRace.longitude
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: AquitisionCommunication
      source:
        id: longitude
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\RaceSave.cs
        startLine: 48
      syntax:
        content:
          CSharp: public double longitude
          VB: Public longitude As Double
        return:
          type: System.Double
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.RaceSave.JsonRace.latitude
      commentId: F:AquitisionCommunication.RaceSave.JsonRace.latitude
      language: CSharp
      name:
        CSharp: latitude
        VB: latitude
      nameWithType:
        CSharp: RaceSave.JsonRace.latitude
        VB: RaceSave.JsonRace.latitude
      qualifiedName:
        CSharp: AquitisionCommunication.RaceSave.JsonRace.latitude
        VB: AquitisionCommunication.RaceSave.JsonRace.latitude
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: AquitisionCommunication
      source:
        id: latitude
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\RaceSave.cs
        startLine: 49
      syntax:
        content:
          CSharp: public double latitude
          VB: Public latitude As Double
        return:
          type: System.Double
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.RaceSave.JsonRace.accelerationFactor
      commentId: F:AquitisionCommunication.RaceSave.JsonRace.accelerationFactor
      language: CSharp
      name:
        CSharp: accelerationFactor
        VB: accelerationFactor
      nameWithType:
        CSharp: RaceSave.JsonRace.accelerationFactor
        VB: RaceSave.JsonRace.accelerationFactor
      qualifiedName:
        CSharp: AquitisionCommunication.RaceSave.JsonRace.accelerationFactor
        VB: AquitisionCommunication.RaceSave.JsonRace.accelerationFactor
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: AquitisionCommunication
      source:
        id: accelerationFactor
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\RaceSave.cs
        startLine: 50
      syntax:
        content:
          CSharp: public float accelerationFactor
          VB: Public accelerationFactor As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.RaceSave.JsonRace.GetMode
      commentId: M:AquitisionCommunication.RaceSave.JsonRace.GetMode
      language: CSharp
      name:
        CSharp: GetMode()
        VB: GetMode()
      nameWithType:
        CSharp: RaceSave.JsonRace.GetMode()
        VB: RaceSave.JsonRace.GetMode()
      qualifiedName:
        CSharp: AquitisionCommunication.RaceSave.JsonRace.GetMode()
        VB: AquitisionCommunication.RaceSave.JsonRace.GetMode()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: AquitisionCommunication
      source:
        id: GetMode
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\RaceSave.cs
        startLine: 52
      syntax:
        content:
          CSharp: public Mode GetMode()
          VB: Public Function GetMode As Mode
        return:
          type: PRace.Mode
      overload: AquitisionCommunication.RaceSave.JsonRace.GetMode*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: AquitisionCommunication.RaceSave.JsonRace.Equals(System.Object)
      commentId: M:AquitisionCommunication.RaceSave.JsonRace.Equals(System.Object)
      language: CSharp
      name:
        CSharp: Equals(Object)
        VB: Equals(Object)
      nameWithType:
        CSharp: RaceSave.JsonRace.Equals(Object)
        VB: RaceSave.JsonRace.Equals(Object)
      qualifiedName:
        CSharp: AquitisionCommunication.RaceSave.JsonRace.Equals(System.Object)
        VB: AquitisionCommunication.RaceSave.JsonRace.Equals(System.Object)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: AquitisionCommunication
      source:
        id: Equals
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\RaceSave.cs
        startLine: 56
      syntax:
        content:
          CSharp: public bool Equals(object o)
          VB: Public Function Equals(o As Object) As Boolean
        parameters:
        - id: o
          type: System.Object
        return:
          type: System.Boolean
      overload: AquitisionCommunication.RaceSave.JsonRace.Equals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: SimpleSimulator.AquitisionCommunication.Trame
  commentId: N:SimpleSimulator.AquitisionCommunication.Trame
  language: CSharp
  name:
    CSharp: SimpleSimulator.AquitisionCommunication.Trame
    VB: SimpleSimulator.AquitisionCommunication.Trame
  nameWithType:
    CSharp: SimpleSimulator.AquitisionCommunication.Trame
    VB: SimpleSimulator.AquitisionCommunication.Trame
  qualifiedName:
    CSharp: SimpleSimulator.AquitisionCommunication.Trame
    VB: SimpleSimulator.AquitisionCommunication.Trame
  type: Namespace
  assemblies:
  - Assembly-CSharp
  modifiers: {}
  items:
  - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA
    commentId: T:SimpleSimulator.AquitisionCommunication.Trame.TrameRSA
    language: CSharp
    name:
      CSharp: TrameRSA
      VB: TrameRSA
    nameWithType:
      CSharp: TrameRSA
      VB: TrameRSA
    qualifiedName:
      CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA
      VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: SimpleSimulator.AquitisionCommunication.Trame
    source:
      id: TrameRSA
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameRSA.cs
      startLine: 18
    syntax:
      content:
        CSharp: public class TrameRSA
        VB: Public Class TrameRSA
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.TrameType
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.TrameType
      language: CSharp
      name:
        CSharp: TrameType
        VB: TrameType
      nameWithType:
        CSharp: TrameRSA.TrameType
        VB: TrameRSA.TrameType
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.TrameType
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.TrameType
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: TrameType
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameRSA.cs
        startLine: 20
      syntax:
        content:
          CSharp: public string TrameType { get; set; }
          VB: Public Property TrameType As String
        parameters: []
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.TrameType*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreT
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreT
      language: CSharp
      name:
        CSharp: BarreT
        VB: BarreT
      nameWithType:
        CSharp: TrameRSA.BarreT
        VB: TrameRSA.BarreT
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreT
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreT
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: BarreT
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameRSA.cs
        startLine: 22
      syntax:
        content:
          CSharp: public float BarreT { get; set; }
          VB: Public Property BarreT As Single
        parameters: []
        return:
          type: System.Single
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreT*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatT
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatT
      language: CSharp
      name:
        CSharp: EtatT
        VB: EtatT
      nameWithType:
        CSharp: TrameRSA.EtatT
        VB: TrameRSA.EtatT
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatT
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatT
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: EtatT
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameRSA.cs
        startLine: 23
      syntax:
        content:
          CSharp: public string EtatT { get; set; }
          VB: Public Property EtatT As String
        parameters: []
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatT*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreB
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreB
      language: CSharp
      name:
        CSharp: BarreB
        VB: BarreB
      nameWithType:
        CSharp: TrameRSA.BarreB
        VB: TrameRSA.BarreB
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreB
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreB
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: BarreB
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameRSA.cs
        startLine: 24
      syntax:
        content:
          CSharp: public float BarreB { get; set; }
          VB: Public Property BarreB As Single
        parameters: []
        return:
          type: System.Single
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreB*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatB
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatB
      language: CSharp
      name:
        CSharp: EtatB
        VB: EtatB
      nameWithType:
        CSharp: TrameRSA.EtatB
        VB: TrameRSA.EtatB
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatB
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatB
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: EtatB
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameRSA.cs
        startLine: 25
      syntax:
        content:
          CSharp: public string EtatB { get; set; }
          VB: Public Property EtatB As String
        parameters: []
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatB*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Controle
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Controle
      language: CSharp
      name:
        CSharp: Controle
        VB: Controle
      nameWithType:
        CSharp: TrameRSA.Controle
        VB: TrameRSA.Controle
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Controle
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Controle
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: Controle
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameRSA.cs
        startLine: 26
      syntax:
        content:
          CSharp: public string Controle { get; set; }
          VB: Public Property Controle As String
        parameters: []
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Controle*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Checksum(System.String)
      commentId: M:SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Checksum(System.String)
      language: CSharp
      name:
        CSharp: Checksum(String)
        VB: Checksum(String)
      nameWithType:
        CSharp: TrameRSA.Checksum(String)
        VB: TrameRSA.Checksum(String)
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Checksum(System.String)
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Checksum(System.String)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: Checksum
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameRSA.cs
        startLine: 27
      syntax:
        content:
          CSharp: public string Checksum(string trame)
          VB: Public Function Checksum(trame As String) As String
        parameters:
        - id: trame
          type: System.String
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Checksum*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.ToString
      commentId: M:SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: TrameRSA.ToString()
        VB: TrameRSA.ToString()
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.ToString()
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.ToString()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: ToString
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameRSA.cs
        startLine: 37
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.ToString*
      overridden: System.Object.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR
    commentId: T:SimpleSimulator.AquitisionCommunication.Trame.TrameXDR
    language: CSharp
    name:
      CSharp: TrameXDR
      VB: TrameXDR
    nameWithType:
      CSharp: TrameXDR
      VB: TrameXDR
    qualifiedName:
      CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR
      VB: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: SimpleSimulator.AquitisionCommunication.Trame
    source:
      id: TrameXDR
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameXDR.cs
      startLine: 22
    syntax:
      content:
        CSharp: public class TrameXDR
        VB: Public Class TrameXDR
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.TrameType
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.TrameType
      language: CSharp
      name:
        CSharp: TrameType
        VB: TrameType
      nameWithType:
        CSharp: TrameXDR.TrameType
        VB: TrameXDR.TrameType
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.TrameType
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.TrameType
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: TrameType
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameXDR.cs
        startLine: 24
      syntax:
        content:
          CSharp: public string TrameType { get; set; }
          VB: Public Property TrameType As String
        parameters: []
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.TrameType*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.XDRSubs
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.XDRSubs
      language: CSharp
      name:
        CSharp: XDRSubs
        VB: XDRSubs
      nameWithType:
        CSharp: TrameXDR.XDRSubs
        VB: TrameXDR.XDRSubs
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.XDRSubs
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.XDRSubs
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: XDRSubs
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameXDR.cs
        startLine: 25
      syntax:
        content:
          CSharp: public List<XDRSub> XDRSubs { get; set; }
          VB: Public Property XDRSubs As List(Of XDRSub)
        parameters: []
        return:
          type: System.Collections.Generic.List{SimpleSimulator.AquitisionCommunication.Trame.XDRSub}
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.XDRSubs*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Controle
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Controle
      language: CSharp
      name:
        CSharp: Controle
        VB: Controle
      nameWithType:
        CSharp: TrameXDR.Controle
        VB: TrameXDR.Controle
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Controle
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Controle
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: Controle
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameXDR.cs
        startLine: 26
      syntax:
        content:
          CSharp: public string Controle { get; set; }
          VB: Public Property Controle As String
        parameters: []
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Controle*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Checksum(System.String)
      commentId: M:SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Checksum(System.String)
      language: CSharp
      name:
        CSharp: Checksum(String)
        VB: Checksum(String)
      nameWithType:
        CSharp: TrameXDR.Checksum(String)
        VB: TrameXDR.Checksum(String)
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Checksum(System.String)
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Checksum(System.String)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: Checksum
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameXDR.cs
        startLine: 28
      syntax:
        content:
          CSharp: public string Checksum(string trame)
          VB: Public Function Checksum(trame As String) As String
        parameters:
        - id: trame
          type: System.String
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Checksum*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.ToString
      commentId: M:SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: TrameXDR.ToString()
        VB: TrameXDR.ToString()
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.ToString()
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.ToString()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: ToString
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameXDR.cs
        startLine: 38
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.ToString*
      overridden: System.Object.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM
    commentId: T:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM
    language: CSharp
    name:
      CSharp: TrameVDM
      VB: TrameVDM
    nameWithType:
      CSharp: TrameVDM
      VB: TrameVDM
    qualifiedName:
      CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM
      VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: SimpleSimulator.AquitisionCommunication.Trame
    source:
      id: TrameVDM
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameVDM.cs
      startLine: 21
    syntax:
      content:
        CSharp: public class TrameVDM
        VB: Public Class TrameVDM
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.TrameType
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.TrameType
      language: CSharp
      name:
        CSharp: TrameType
        VB: TrameType
      nameWithType:
        CSharp: TrameVDM.TrameType
        VB: TrameVDM.TrameType
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.TrameType
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.TrameType
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: TrameType
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameVDM.cs
        startLine: 23
      syntax:
        content:
          CSharp: public string TrameType { get; set; }
          VB: Public Property TrameType As String
        parameters: []
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.TrameType*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Heure
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Heure
      language: CSharp
      name:
        CSharp: Heure
        VB: Heure
      nameWithType:
        CSharp: TrameVDM.Heure
        VB: TrameVDM.Heure
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Heure
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Heure
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: Heure
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameVDM.cs
        startLine: 24
      syntax:
        content:
          CSharp: public DateTime Heure { get; set; }
          VB: Public Property Heure As Date
        parameters: []
        return:
          type: System.DateTime
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Heure*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Etat
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Etat
      language: CSharp
      name:
        CSharp: Etat
        VB: Etat
      nameWithType:
        CSharp: TrameVDM.Etat
        VB: TrameVDM.Etat
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Etat
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Etat
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: Etat
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameVDM.cs
        startLine: 25
      syntax:
        content:
          CSharp: public string Etat { get; set; }
          VB: Public Property Etat As String
        parameters: []
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Etat*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Latitude
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Latitude
      language: CSharp
      name:
        CSharp: Latitude
        VB: Latitude
      nameWithType:
        CSharp: TrameVDM.Latitude
        VB: TrameVDM.Latitude
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Latitude
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Latitude
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: Latitude
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameVDM.cs
        startLine: 26
      syntax:
        content:
          CSharp: public float Latitude { get; set; }
          VB: Public Property Latitude As Single
        parameters: []
        return:
          type: System.Single
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Latitude*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLatitude
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLatitude
      language: CSharp
      name:
        CSharp: IndicateurLatitude
        VB: IndicateurLatitude
      nameWithType:
        CSharp: TrameVDM.IndicateurLatitude
        VB: TrameVDM.IndicateurLatitude
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLatitude
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLatitude
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: IndicateurLatitude
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameVDM.cs
        startLine: 27
      syntax:
        content:
          CSharp: public char IndicateurLatitude { get; set; }
          VB: Public Property IndicateurLatitude As Char
        parameters: []
        return:
          type: System.Char
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLatitude*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Longitude
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Longitude
      language: CSharp
      name:
        CSharp: Longitude
        VB: Longitude
      nameWithType:
        CSharp: TrameVDM.Longitude
        VB: TrameVDM.Longitude
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Longitude
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Longitude
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: Longitude
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameVDM.cs
        startLine: 28
      syntax:
        content:
          CSharp: public float Longitude { get; set; }
          VB: Public Property Longitude As Single
        parameters: []
        return:
          type: System.Single
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Longitude*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLongitude
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLongitude
      language: CSharp
      name:
        CSharp: IndicateurLongitude
        VB: IndicateurLongitude
      nameWithType:
        CSharp: TrameVDM.IndicateurLongitude
        VB: TrameVDM.IndicateurLongitude
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLongitude
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLongitude
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: IndicateurLongitude
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameVDM.cs
        startLine: 29
      syntax:
        content:
          CSharp: public char IndicateurLongitude { get; set; }
          VB: Public Property IndicateurLongitude As Char
        parameters: []
        return:
          type: System.Char
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLongitude*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Vitesse
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Vitesse
      language: CSharp
      name:
        CSharp: Vitesse
        VB: Vitesse
      nameWithType:
        CSharp: TrameVDM.Vitesse
        VB: TrameVDM.Vitesse
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Vitesse
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Vitesse
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: Vitesse
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameVDM.cs
        startLine: 30
      syntax:
        content:
          CSharp: public float Vitesse { get; set; }
          VB: Public Property Vitesse As Single
        parameters: []
        return:
          type: System.Single
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Vitesse*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Road
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Road
      language: CSharp
      name:
        CSharp: Road
        VB: Road
      nameWithType:
        CSharp: TrameVDM.Road
        VB: TrameVDM.Road
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Road
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Road
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: Road
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameVDM.cs
        startLine: 31
      syntax:
        content:
          CSharp: public float Road { get; set; }
          VB: Public Property Road As Single
        parameters: []
        return:
          type: System.Single
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Road*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Date
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Date
      language: CSharp
      name:
        CSharp: Date
        VB: Date
      nameWithType:
        CSharp: TrameVDM.Date
        VB: TrameVDM.Date
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Date
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Date
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: Date
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameVDM.cs
        startLine: 32
      syntax:
        content:
          CSharp: public DateTime Date { get; set; }
          VB: Public Property Date As Date
        parameters: []
        return:
          type: System.DateTime
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Date*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Magneto
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Magneto
      language: CSharp
      name:
        CSharp: Magneto
        VB: Magneto
      nameWithType:
        CSharp: TrameVDM.Magneto
        VB: TrameVDM.Magneto
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Magneto
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Magneto
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: Magneto
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameVDM.cs
        startLine: 33
      syntax:
        content:
          CSharp: public float Magneto { get; set; }
          VB: Public Property Magneto As Single
        parameters: []
        return:
          type: System.Single
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Magneto*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Sens
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Sens
      language: CSharp
      name:
        CSharp: Sens
        VB: Sens
      nameWithType:
        CSharp: TrameVDM.Sens
        VB: TrameVDM.Sens
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Sens
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Sens
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: Sens
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameVDM.cs
        startLine: 34
      syntax:
        content:
          CSharp: public char Sens { get; set; }
          VB: Public Property Sens As Char
        parameters: []
        return:
          type: System.Char
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Sens*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Mode
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Mode
      language: CSharp
      name:
        CSharp: Mode
        VB: Mode
      nameWithType:
        CSharp: TrameVDM.Mode
        VB: TrameVDM.Mode
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Mode
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Mode
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: Mode
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameVDM.cs
        startLine: 35
      syntax:
        content:
          CSharp: public char Mode { get; set; }
          VB: Public Property Mode As Char
        parameters: []
        return:
          type: System.Char
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Mode*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Controle
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Controle
      language: CSharp
      name:
        CSharp: Controle
        VB: Controle
      nameWithType:
        CSharp: TrameVDM.Controle
        VB: TrameVDM.Controle
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Controle
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Controle
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: Controle
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameVDM.cs
        startLine: 36
      syntax:
        content:
          CSharp: public string Controle { get; set; }
          VB: Public Property Controle As String
        parameters: []
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Controle*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeHeure(System.DateTime)
      commentId: M:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeHeure(System.DateTime)
      language: CSharp
      name:
        CSharp: NormalizeHeure(DateTime)
        VB: NormalizeHeure(DateTime)
      nameWithType:
        CSharp: TrameVDM.NormalizeHeure(DateTime)
        VB: TrameVDM.NormalizeHeure(DateTime)
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeHeure(System.DateTime)
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeHeure(System.DateTime)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: NormalizeHeure
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameVDM.cs
        startLine: 38
      syntax:
        content:
          CSharp: public string NormalizeHeure(DateTime date)
          VB: Public Function NormalizeHeure(date As Date) As String
        parameters:
        - id: date
          type: System.DateTime
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeHeure*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeDate(System.DateTime)
      commentId: M:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeDate(System.DateTime)
      language: CSharp
      name:
        CSharp: NormalizeDate(DateTime)
        VB: NormalizeDate(DateTime)
      nameWithType:
        CSharp: TrameVDM.NormalizeDate(DateTime)
        VB: TrameVDM.NormalizeDate(DateTime)
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeDate(System.DateTime)
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeDate(System.DateTime)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: NormalizeDate
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameVDM.cs
        startLine: 43
      syntax:
        content:
          CSharp: public string NormalizeDate(DateTime date)
          VB: Public Function NormalizeDate(date As Date) As String
        parameters:
        - id: date
          type: System.DateTime
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeDate*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Checksum(System.String)
      commentId: M:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Checksum(System.String)
      language: CSharp
      name:
        CSharp: Checksum(String)
        VB: Checksum(String)
      nameWithType:
        CSharp: TrameVDM.Checksum(String)
        VB: TrameVDM.Checksum(String)
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Checksum(System.String)
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Checksum(System.String)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: Checksum
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameVDM.cs
        startLine: 48
      syntax:
        content:
          CSharp: public string Checksum(string trame)
          VB: Public Function Checksum(trame As String) As String
        parameters:
        - id: trame
          type: System.String
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Checksum*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.ToString
      commentId: M:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: TrameVDM.ToString()
        VB: TrameVDM.ToString()
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.ToString()
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.ToString()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: ToString
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameVDM.cs
        startLine: 58
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.ToString*
      overridden: System.Object.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: SimpleSimulator.AquitisionCommunication.Trame.Sender
    commentId: T:SimpleSimulator.AquitisionCommunication.Trame.Sender
    language: CSharp
    name:
      CSharp: Sender
      VB: Sender
    nameWithType:
      CSharp: Sender
      VB: Sender
    qualifiedName:
      CSharp: SimpleSimulator.AquitisionCommunication.Trame.Sender
      VB: SimpleSimulator.AquitisionCommunication.Trame.Sender
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: SimpleSimulator.AquitisionCommunication.Trame
    source:
      id: Sender
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\Sender.cs
      startLine: 12
    summary: "\nSend full NMEA trame to a defined ip/port with Udp protocol\n"
    example: []
    syntax:
      content:
        CSharp: public class Sender
        VB: Public Class Sender
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SimpleSimulator.AquitisionCommunication.Trame.Sender.udpClient
      commentId: F:SimpleSimulator.AquitisionCommunication.Trame.Sender.udpClient
      language: CSharp
      name:
        CSharp: udpClient
        VB: udpClient
      nameWithType:
        CSharp: Sender.udpClient
        VB: Sender.udpClient
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.Sender.udpClient
        VB: SimpleSimulator.AquitisionCommunication.Trame.Sender.udpClient
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: udpClient
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\Sender.cs
        startLine: 14
      syntax:
        content:
          CSharp: public UdpClient udpClient
          VB: Public udpClient As UdpClient
        return:
          type: System.Net.Sockets.UdpClient
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.Sender.ip
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.Sender.ip
      language: CSharp
      name:
        CSharp: ip
        VB: ip
      nameWithType:
        CSharp: Sender.ip
        VB: Sender.ip
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.Sender.ip
        VB: SimpleSimulator.AquitisionCommunication.Trame.Sender.ip
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: ip
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\Sender.cs
        startLine: 15
      syntax:
        content:
          CSharp: public string ip { get; set; }
          VB: Public Property ip As String
        parameters: []
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.Sender.ip*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.Sender.port
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.Sender.port
      language: CSharp
      name:
        CSharp: port
        VB: port
      nameWithType:
        CSharp: Sender.port
        VB: Sender.port
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.Sender.port
        VB: SimpleSimulator.AquitisionCommunication.Trame.Sender.port
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: port
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\Sender.cs
        startLine: 16
      syntax:
        content:
          CSharp: public int port { get; set; }
          VB: Public Property port As Integer
        parameters: []
        return:
          type: System.Int32
      overload: SimpleSimulator.AquitisionCommunication.Trame.Sender.port*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.Sender.Send(SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA)
      commentId: M:SimpleSimulator.AquitisionCommunication.Trame.Sender.Send(SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA)
      language: CSharp
      name:
        CSharp: Send(TrameNMEA)
        VB: Send(TrameNMEA)
      nameWithType:
        CSharp: Sender.Send(TrameNMEA)
        VB: Sender.Send(TrameNMEA)
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.Sender.Send(SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA)
        VB: SimpleSimulator.AquitisionCommunication.Trame.Sender.Send(SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: Send
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\Sender.cs
        startLine: 21
      summary: "\nSend trame NMEA with Udp protocol\n"
      example: []
      syntax:
        content:
          CSharp: public void Send(TrameNMEA trame)
          VB: Public Sub Send(trame As TrameNMEA)
        parameters:
        - id: trame
          type: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA
          description: trameNMEA to be send
      overload: SimpleSimulator.AquitisionCommunication.Trame.Sender.Send*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC
    commentId: T:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC
    language: CSharp
    name:
      CSharp: TrameRMC
      VB: TrameRMC
    nameWithType:
      CSharp: TrameRMC
      VB: TrameRMC
    qualifiedName:
      CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC
      VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: SimpleSimulator.AquitisionCommunication.Trame
    source:
      id: TrameRMC
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameRMC.cs
      startLine: 35
    summary: "\nTrame RMC\nImportant parameters :\nHeure wich refer to the date time Hour\nDate with refer to the date time Day\nLatitude / indicateur Latitude \nLongitude / indicateur Longitude\nVitesse witch refer to speed in knots\nControle wich get the checksum string \n"
    example: []
    syntax:
      content:
        CSharp: public class TrameRMC
        VB: Public Class TrameRMC
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.TrameType
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.TrameType
      language: CSharp
      name:
        CSharp: TrameType
        VB: TrameType
      nameWithType:
        CSharp: TrameRMC.TrameType
        VB: TrameRMC.TrameType
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.TrameType
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.TrameType
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: TrameType
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameRMC.cs
        startLine: 37
      syntax:
        content:
          CSharp: public string TrameType { get; set; }
          VB: Public Property TrameType As String
        parameters: []
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.TrameType*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Heure
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Heure
      language: CSharp
      name:
        CSharp: Heure
        VB: Heure
      nameWithType:
        CSharp: TrameRMC.Heure
        VB: TrameRMC.Heure
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Heure
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Heure
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: Heure
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameRMC.cs
        startLine: 38
      syntax:
        content:
          CSharp: public DateTime Heure { get; set; }
          VB: Public Property Heure As Date
        parameters: []
        return:
          type: System.DateTime
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Heure*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Etat
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Etat
      language: CSharp
      name:
        CSharp: Etat
        VB: Etat
      nameWithType:
        CSharp: TrameRMC.Etat
        VB: TrameRMC.Etat
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Etat
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Etat
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: Etat
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameRMC.cs
        startLine: 39
      syntax:
        content:
          CSharp: public string Etat { get; set; }
          VB: Public Property Etat As String
        parameters: []
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Etat*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Latitude
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Latitude
      language: CSharp
      name:
        CSharp: Latitude
        VB: Latitude
      nameWithType:
        CSharp: TrameRMC.Latitude
        VB: TrameRMC.Latitude
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Latitude
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Latitude
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: Latitude
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameRMC.cs
        startLine: 40
      syntax:
        content:
          CSharp: public float Latitude { get; set; }
          VB: Public Property Latitude As Single
        parameters: []
        return:
          type: System.Single
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Latitude*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLatitude
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLatitude
      language: CSharp
      name:
        CSharp: IndicateurLatitude
        VB: IndicateurLatitude
      nameWithType:
        CSharp: TrameRMC.IndicateurLatitude
        VB: TrameRMC.IndicateurLatitude
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLatitude
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLatitude
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: IndicateurLatitude
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameRMC.cs
        startLine: 41
      syntax:
        content:
          CSharp: public char IndicateurLatitude { get; set; }
          VB: Public Property IndicateurLatitude As Char
        parameters: []
        return:
          type: System.Char
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLatitude*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Longitude
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Longitude
      language: CSharp
      name:
        CSharp: Longitude
        VB: Longitude
      nameWithType:
        CSharp: TrameRMC.Longitude
        VB: TrameRMC.Longitude
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Longitude
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Longitude
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: Longitude
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameRMC.cs
        startLine: 42
      syntax:
        content:
          CSharp: public float Longitude { get; set; }
          VB: Public Property Longitude As Single
        parameters: []
        return:
          type: System.Single
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Longitude*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLongitude
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLongitude
      language: CSharp
      name:
        CSharp: IndicateurLongitude
        VB: IndicateurLongitude
      nameWithType:
        CSharp: TrameRMC.IndicateurLongitude
        VB: TrameRMC.IndicateurLongitude
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLongitude
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLongitude
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: IndicateurLongitude
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameRMC.cs
        startLine: 43
      syntax:
        content:
          CSharp: public char IndicateurLongitude { get; set; }
          VB: Public Property IndicateurLongitude As Char
        parameters: []
        return:
          type: System.Char
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLongitude*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Vitesse
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Vitesse
      language: CSharp
      name:
        CSharp: Vitesse
        VB: Vitesse
      nameWithType:
        CSharp: TrameRMC.Vitesse
        VB: TrameRMC.Vitesse
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Vitesse
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Vitesse
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: Vitesse
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameRMC.cs
        startLine: 44
      syntax:
        content:
          CSharp: public float Vitesse { get; set; }
          VB: Public Property Vitesse As Single
        parameters: []
        return:
          type: System.Single
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Vitesse*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Road
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Road
      language: CSharp
      name:
        CSharp: Road
        VB: Road
      nameWithType:
        CSharp: TrameRMC.Road
        VB: TrameRMC.Road
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Road
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Road
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: Road
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameRMC.cs
        startLine: 45
      syntax:
        content:
          CSharp: public float Road { get; set; }
          VB: Public Property Road As Single
        parameters: []
        return:
          type: System.Single
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Road*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Date
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Date
      language: CSharp
      name:
        CSharp: Date
        VB: Date
      nameWithType:
        CSharp: TrameRMC.Date
        VB: TrameRMC.Date
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Date
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Date
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: Date
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameRMC.cs
        startLine: 46
      syntax:
        content:
          CSharp: public DateTime Date { get; set; }
          VB: Public Property Date As Date
        parameters: []
        return:
          type: System.DateTime
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Date*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Magneto
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Magneto
      language: CSharp
      name:
        CSharp: Magneto
        VB: Magneto
      nameWithType:
        CSharp: TrameRMC.Magneto
        VB: TrameRMC.Magneto
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Magneto
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Magneto
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: Magneto
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameRMC.cs
        startLine: 47
      syntax:
        content:
          CSharp: public float Magneto { get; set; }
          VB: Public Property Magneto As Single
        parameters: []
        return:
          type: System.Single
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Magneto*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Sens
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Sens
      language: CSharp
      name:
        CSharp: Sens
        VB: Sens
      nameWithType:
        CSharp: TrameRMC.Sens
        VB: TrameRMC.Sens
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Sens
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Sens
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: Sens
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameRMC.cs
        startLine: 48
      syntax:
        content:
          CSharp: public char Sens { get; set; }
          VB: Public Property Sens As Char
        parameters: []
        return:
          type: System.Char
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Sens*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Mode
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Mode
      language: CSharp
      name:
        CSharp: Mode
        VB: Mode
      nameWithType:
        CSharp: TrameRMC.Mode
        VB: TrameRMC.Mode
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Mode
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Mode
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: Mode
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameRMC.cs
        startLine: 49
      syntax:
        content:
          CSharp: public char Mode { get; set; }
          VB: Public Property Mode As Char
        parameters: []
        return:
          type: System.Char
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Mode*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Controle
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Controle
      language: CSharp
      name:
        CSharp: Controle
        VB: Controle
      nameWithType:
        CSharp: TrameRMC.Controle
        VB: TrameRMC.Controle
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Controle
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Controle
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: Controle
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameRMC.cs
        startLine: 50
      syntax:
        content:
          CSharp: public string Controle { get; set; }
          VB: Public Property Controle As String
        parameters: []
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Controle*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeHeure(System.DateTime)
      commentId: M:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeHeure(System.DateTime)
      language: CSharp
      name:
        CSharp: NormalizeHeure(DateTime)
        VB: NormalizeHeure(DateTime)
      nameWithType:
        CSharp: TrameRMC.NormalizeHeure(DateTime)
        VB: TrameRMC.NormalizeHeure(DateTime)
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeHeure(System.DateTime)
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeHeure(System.DateTime)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: NormalizeHeure
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameRMC.cs
        startLine: 57
      summary: "\ncompute the accepted hour time to the second \n"
      example: []
      syntax:
        content:
          CSharp: public string NormalizeHeure(DateTime date)
          VB: Public Function NormalizeHeure(date As Date) As String
        parameters:
        - id: date
          type: System.DateTime
          description: ''
        return:
          type: System.String
          description: ''
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeHeure*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeDate(System.DateTime)
      commentId: M:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeDate(System.DateTime)
      language: CSharp
      name:
        CSharp: NormalizeDate(DateTime)
        VB: NormalizeDate(DateTime)
      nameWithType:
        CSharp: TrameRMC.NormalizeDate(DateTime)
        VB: TrameRMC.NormalizeDate(DateTime)
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeDate(System.DateTime)
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeDate(System.DateTime)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: NormalizeDate
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameRMC.cs
        startLine: 67
      summary: "\ncompute the accepted date day\n"
      example: []
      syntax:
        content:
          CSharp: public string NormalizeDate(DateTime date)
          VB: Public Function NormalizeDate(date As Date) As String
        parameters:
        - id: date
          type: System.DateTime
          description: ''
        return:
          type: System.String
          description: ''
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeDate*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Checksum(System.String)
      commentId: M:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Checksum(System.String)
      language: CSharp
      name:
        CSharp: Checksum(String)
        VB: Checksum(String)
      nameWithType:
        CSharp: TrameRMC.Checksum(String)
        VB: TrameRMC.Checksum(String)
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Checksum(System.String)
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Checksum(System.String)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: Checksum
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameRMC.cs
        startLine: 97
      summary: "\ncompute the resulting checksum of a trame RMC\n"
      example: []
      syntax:
        content:
          CSharp: public string Checksum(string trame)
          VB: Public Function Checksum(trame As String) As String
        parameters:
        - id: trame
          type: System.String
          description: string of a trame RMC
        return:
          type: System.String
          description: ''
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Checksum*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.ToString
      commentId: M:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: TrameRMC.ToString()
        VB: TrameRMC.ToString()
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.ToString()
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.ToString()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: ToString
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameRMC.cs
        startLine: 111
      summary: "\ncompute the resulting trame RMC in string\n"
      example: []
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
          description: ''
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.ToString*
      overridden: System.Object.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW
    commentId: T:SimpleSimulator.AquitisionCommunication.Trame.TrameVHW
    language: CSharp
    name:
      CSharp: TrameVHW
      VB: TrameVHW
    nameWithType:
      CSharp: TrameVHW
      VB: TrameVHW
    qualifiedName:
      CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW
      VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: SimpleSimulator.AquitisionCommunication.Trame
    source:
      id: TrameVHW
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameVHW.cs
      startLine: 31
    summary: "\nTrame VHW\nImportant parameters:\nCapDegres : Cap\nVitBateauNoeud : speed of the boat in knots\nControle : get the checksum of the VHW trame\n"
    example: []
    syntax:
      content:
        CSharp: public class TrameVHW
        VB: Public Class TrameVHW
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.TrameType
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.TrameType
      language: CSharp
      name:
        CSharp: TrameType
        VB: TrameType
      nameWithType:
        CSharp: TrameVHW.TrameType
        VB: TrameVHW.TrameType
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.TrameType
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.TrameType
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: TrameType
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameVHW.cs
        startLine: 33
      syntax:
        content:
          CSharp: public string TrameType { get; set; }
          VB: Public Property TrameType As String
        parameters: []
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.TrameType*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapDegres
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapDegres
      language: CSharp
      name:
        CSharp: CapDegres
        VB: CapDegres
      nameWithType:
        CSharp: TrameVHW.CapDegres
        VB: TrameVHW.CapDegres
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapDegres
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapDegres
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: CapDegres
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameVHW.cs
        startLine: 35
      syntax:
        content:
          CSharp: public float CapDegres { get; set; }
          VB: Public Property CapDegres As Single
        parameters: []
        return:
          type: System.Single
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapDegres*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapMagne
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapMagne
      language: CSharp
      name:
        CSharp: CapMagne
        VB: CapMagne
      nameWithType:
        CSharp: TrameVHW.CapMagne
        VB: TrameVHW.CapMagne
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapMagne
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapMagne
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: CapMagne
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameVHW.cs
        startLine: 36
      syntax:
        content:
          CSharp: public float CapMagne { get; set; }
          VB: Public Property CapMagne As Single
        parameters: []
        return:
          type: System.Single
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapMagne*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauNoeud
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauNoeud
      language: CSharp
      name:
        CSharp: VitBateauNoeud
        VB: VitBateauNoeud
      nameWithType:
        CSharp: TrameVHW.VitBateauNoeud
        VB: TrameVHW.VitBateauNoeud
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauNoeud
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauNoeud
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: VitBateauNoeud
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameVHW.cs
        startLine: 37
      syntax:
        content:
          CSharp: public float VitBateauNoeud { get; set; }
          VB: Public Property VitBateauNoeud As Single
        parameters: []
        return:
          type: System.Single
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauNoeud*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauKm
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauKm
      language: CSharp
      name:
        CSharp: VitBateauKm
        VB: VitBateauKm
      nameWithType:
        CSharp: TrameVHW.VitBateauKm
        VB: TrameVHW.VitBateauKm
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauKm
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauKm
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: VitBateauKm
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameVHW.cs
        startLine: 38
      syntax:
        content:
          CSharp: public float VitBateauKm { get; set; }
          VB: Public Property VitBateauKm As Single
        parameters: []
        return:
          type: System.Single
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauKm*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Controle
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Controle
      language: CSharp
      name:
        CSharp: Controle
        VB: Controle
      nameWithType:
        CSharp: TrameVHW.Controle
        VB: TrameVHW.Controle
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Controle
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Controle
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: Controle
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameVHW.cs
        startLine: 39
      syntax:
        content:
          CSharp: public string Controle { get; set; }
          VB: Public Property Controle As String
        parameters: []
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Controle*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Checksum(System.String)
      commentId: M:SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Checksum(System.String)
      language: CSharp
      name:
        CSharp: Checksum(String)
        VB: Checksum(String)
      nameWithType:
        CSharp: TrameVHW.Checksum(String)
        VB: TrameVHW.Checksum(String)
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Checksum(System.String)
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Checksum(System.String)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: Checksum
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameVHW.cs
        startLine: 46
      summary: "\ncompute the resulting checksum of the trame\n"
      example: []
      syntax:
        content:
          CSharp: public string Checksum(string trame)
          VB: Public Function Checksum(trame As String) As String
        parameters:
        - id: trame
          type: System.String
          description: ''
        return:
          type: System.String
          description: ''
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Checksum*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.ToString
      commentId: M:SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: TrameVHW.ToString()
        VB: TrameVHW.ToString()
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.ToString()
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.ToString()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: ToString
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameVHW.cs
        startLine: 62
      summary: "\ngenerate the resulting trame VHW \n"
      example: []
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
          description: ''
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.ToString*
      overridden: System.Object.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: SimpleSimulator.AquitisionCommunication.Trame.XDRSub
    commentId: T:SimpleSimulator.AquitisionCommunication.Trame.XDRSub
    language: CSharp
    name:
      CSharp: XDRSub
      VB: XDRSub
    nameWithType:
      CSharp: XDRSub
      VB: XDRSub
    qualifiedName:
      CSharp: SimpleSimulator.AquitisionCommunication.Trame.XDRSub
      VB: SimpleSimulator.AquitisionCommunication.Trame.XDRSub
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: SimpleSimulator.AquitisionCommunication.Trame
    source:
      id: XDRSub
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\XDRSub.cs
      startLine: 9
    syntax:
      content:
        CSharp: public class XDRSub
        VB: Public Class XDRSub
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerType
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerType
      language: CSharp
      name:
        CSharp: TransducerType
        VB: TransducerType
      nameWithType:
        CSharp: XDRSub.TransducerType
        VB: XDRSub.TransducerType
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerType
        VB: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerType
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: TransducerType
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\XDRSub.cs
        startLine: 11
      syntax:
        content:
          CSharp: public char TransducerType { get; set; }
          VB: Public Property TransducerType As Char
        parameters: []
        return:
          type: System.Char
      overload: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerType*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.MesurementData
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.XDRSub.MesurementData
      language: CSharp
      name:
        CSharp: MesurementData
        VB: MesurementData
      nameWithType:
        CSharp: XDRSub.MesurementData
        VB: XDRSub.MesurementData
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.MesurementData
        VB: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.MesurementData
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: MesurementData
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\XDRSub.cs
        startLine: 12
      syntax:
        content:
          CSharp: public float MesurementData { get; set; }
          VB: Public Property MesurementData As Single
        parameters: []
        return:
          type: System.Single
      overload: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.MesurementData*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.UnitsMeasure
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.XDRSub.UnitsMeasure
      language: CSharp
      name:
        CSharp: UnitsMeasure
        VB: UnitsMeasure
      nameWithType:
        CSharp: XDRSub.UnitsMeasure
        VB: XDRSub.UnitsMeasure
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.UnitsMeasure
        VB: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.UnitsMeasure
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: UnitsMeasure
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\XDRSub.cs
        startLine: 13
      syntax:
        content:
          CSharp: public string UnitsMeasure { get; set; }
          VB: Public Property UnitsMeasure As String
        parameters: []
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.UnitsMeasure*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerName
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerName
      language: CSharp
      name:
        CSharp: TransducerName
        VB: TransducerName
      nameWithType:
        CSharp: XDRSub.TransducerName
        VB: XDRSub.TransducerName
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerName
        VB: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerName
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: TransducerName
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\XDRSub.cs
        startLine: 14
      syntax:
        content:
          CSharp: public string TransducerName { get; set; }
          VB: Public Property TransducerName As String
        parameters: []
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerName*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.ToString
      commentId: M:SimpleSimulator.AquitisionCommunication.Trame.XDRSub.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: XDRSub.ToString()
        VB: XDRSub.ToString()
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.ToString()
        VB: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.ToString()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: ToString
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\XDRSub.cs
        startLine: 16
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.ToString*
      overridden: System.Object.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV
    commentId: T:SimpleSimulator.AquitisionCommunication.Trame.TrameMWV
    language: CSharp
    name:
      CSharp: TrameMWV
      VB: TrameMWV
    nameWithType:
      CSharp: TrameMWV
      VB: TrameMWV
    qualifiedName:
      CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV
      VB: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: SimpleSimulator.AquitisionCommunication.Trame
    source:
      id: TrameMWV
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameMWV.cs
      startLine: 24
    summary: "\nTrame MWV\nImportant parameters : AngleVent wich refer to Wind angle and VitesseVent wich refer to Wind speed  \nthe string Controle get the checksum value of the trame MWV\n"
    example: []
    syntax:
      content:
        CSharp: public class TrameMWV
        VB: Public Class TrameMWV
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.TrameType
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.TrameType
      language: CSharp
      name:
        CSharp: TrameType
        VB: TrameType
      nameWithType:
        CSharp: TrameMWV.TrameType
        VB: TrameMWV.TrameType
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.TrameType
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.TrameType
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: TrameType
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameMWV.cs
        startLine: 26
      syntax:
        content:
          CSharp: public string TrameType { get; set; }
          VB: Public Property TrameType As String
        parameters: []
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.TrameType*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.AngleVent
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.AngleVent
      language: CSharp
      name:
        CSharp: AngleVent
        VB: AngleVent
      nameWithType:
        CSharp: TrameMWV.AngleVent
        VB: TrameMWV.AngleVent
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.AngleVent
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.AngleVent
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: AngleVent
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameMWV.cs
        startLine: 27
      syntax:
        content:
          CSharp: public float AngleVent { get; set; }
          VB: Public Property AngleVent As Single
        parameters: []
        return:
          type: System.Single
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.AngleVent*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Reference
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Reference
      language: CSharp
      name:
        CSharp: Reference
        VB: Reference
      nameWithType:
        CSharp: TrameMWV.Reference
        VB: TrameMWV.Reference
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Reference
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Reference
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: Reference
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameMWV.cs
        startLine: 28
      syntax:
        content:
          CSharp: public char Reference { get; set; }
          VB: Public Property Reference As Char
        parameters: []
        return:
          type: System.Char
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Reference*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.VitesseVent
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.VitesseVent
      language: CSharp
      name:
        CSharp: VitesseVent
        VB: VitesseVent
      nameWithType:
        CSharp: TrameMWV.VitesseVent
        VB: TrameMWV.VitesseVent
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.VitesseVent
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.VitesseVent
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: VitesseVent
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameMWV.cs
        startLine: 29
      syntax:
        content:
          CSharp: public float VitesseVent { get; set; }
          VB: Public Property VitesseVent As Single
        parameters: []
        return:
          type: System.Single
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.VitesseVent*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Unite
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Unite
      language: CSharp
      name:
        CSharp: Unite
        VB: Unite
      nameWithType:
        CSharp: TrameMWV.Unite
        VB: TrameMWV.Unite
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Unite
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Unite
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: Unite
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameMWV.cs
        startLine: 30
      syntax:
        content:
          CSharp: public char Unite { get; set; }
          VB: Public Property Unite As Char
        parameters: []
        return:
          type: System.Char
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Unite*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Etat
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Etat
      language: CSharp
      name:
        CSharp: Etat
        VB: Etat
      nameWithType:
        CSharp: TrameMWV.Etat
        VB: TrameMWV.Etat
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Etat
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Etat
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: Etat
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameMWV.cs
        startLine: 31
      syntax:
        content:
          CSharp: public string Etat { get; set; }
          VB: Public Property Etat As String
        parameters: []
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Etat*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Controle
      commentId: P:SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Controle
      language: CSharp
      name:
        CSharp: Controle
        VB: Controle
      nameWithType:
        CSharp: TrameMWV.Controle
        VB: TrameMWV.Controle
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Controle
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Controle
      type: Property
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: Controle
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameMWV.cs
        startLine: 32
      syntax:
        content:
          CSharp: public string Controle { get; set; }
          VB: Public Property Controle As String
        parameters: []
        return:
          type: System.String
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Controle*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Checksum(System.String)
      commentId: M:SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Checksum(System.String)
      language: CSharp
      name:
        CSharp: Checksum(String)
        VB: Checksum(String)
      nameWithType:
        CSharp: TrameMWV.Checksum(String)
        VB: TrameMWV.Checksum(String)
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Checksum(System.String)
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Checksum(System.String)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: Checksum
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameMWV.cs
        startLine: 40
      summary: "\nCompute the checksum of a string, we use the current trame in our case\nIt&apos;s computed with xor operation in between each caracters of the string trame\n"
      example: []
      syntax:
        content:
          CSharp: public string Checksum(string trame)
          VB: Public Function Checksum(trame As String) As String
        parameters:
        - id: trame
          type: System.String
          description: string trame to get checksum with
        return:
          type: System.String
          description: ''
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Checksum*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.ToString
      commentId: M:SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: TrameMWV.ToString()
        VB: TrameMWV.ToString()
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.ToString()
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.ToString()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: ToString
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameMWV.cs
        startLine: 54
      summary: "\nMethode to compute the resulting MWV trame\n"
      example: []
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
          description: ''
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.ToString*
      overridden: System.Object.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA
    commentId: T:SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA
    language: CSharp
    name:
      CSharp: TrameNMEA
      VB: TrameNMEA
    nameWithType:
      CSharp: TrameNMEA
      VB: TrameNMEA
    qualifiedName:
      CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA
      VB: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: SimpleSimulator.AquitisionCommunication.Trame
    source:
      id: TrameNMEA
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameNMEA.cs
      startLine: 11
    summary: "\nCompute the resulting full NMEA trame with a TrameRMC/ TrameMWV / trame VHW\n"
    example: []
    syntax:
      content:
        CSharp: public class TrameNMEA
        VB: Public Class TrameNMEA
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA.rmc
      commentId: F:SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA.rmc
      language: CSharp
      name:
        CSharp: rmc
        VB: rmc
      nameWithType:
        CSharp: TrameNMEA.rmc
        VB: TrameNMEA.rmc
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA.rmc
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA.rmc
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: rmc
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameNMEA.cs
        startLine: 14
      syntax:
        content:
          CSharp: public TrameRMC rmc
          VB: Public rmc As TrameRMC
        return:
          type: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA.mwv
      commentId: F:SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA.mwv
      language: CSharp
      name:
        CSharp: mwv
        VB: mwv
      nameWithType:
        CSharp: TrameNMEA.mwv
        VB: TrameNMEA.mwv
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA.mwv
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA.mwv
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: mwv
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameNMEA.cs
        startLine: 15
      syntax:
        content:
          CSharp: public TrameMWV mwv
          VB: Public mwv As TrameMWV
        return:
          type: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA.vhw
      commentId: F:SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA.vhw
      language: CSharp
      name:
        CSharp: vhw
        VB: vhw
      nameWithType:
        CSharp: TrameNMEA.vhw
        VB: TrameNMEA.vhw
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA.vhw
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA.vhw
      type: Field
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: vhw
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameNMEA.cs
        startLine: 16
      syntax:
        content:
          CSharp: public TrameVHW vhw
          VB: Public vhw As TrameVHW
        return:
          type: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA.ToString
      commentId: M:SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: TrameNMEA.ToString()
        VB: TrameNMEA.ToString()
      qualifiedName:
        CSharp: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA.ToString()
        VB: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA.ToString()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: SimpleSimulator.AquitisionCommunication.Trame
      source:
        id: ToString
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Trame\TrameNMEA.cs
        startLine: 33
      summary: "\nCompute the resulting full trame NMEA string\n"
      example: []
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
          description: ''
      overload: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA.ToString*
      overridden: System.Object.ToString
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
- id: physicSimulator
  commentId: N:physicSimulator
  language: CSharp
  name:
    CSharp: physicSimulator
    VB: physicSimulator
  nameWithType:
    CSharp: physicSimulator
    VB: physicSimulator
  qualifiedName:
    CSharp: physicSimulator
    VB: physicSimulator
  type: Namespace
  assemblies:
  - Assembly-CSharp
  modifiers: {}
  items:
  - id: physicSimulator.physics_simulator
    commentId: T:physicSimulator.physics_simulator
    language: CSharp
    name:
      CSharp: physics_simulator
      VB: physics_simulator
    nameWithType:
      CSharp: physics_simulator
      VB: physics_simulator
    qualifiedName:
      CSharp: physicSimulator.physics_simulator
      VB: physicSimulator.physics_simulator
    type: Class
    assemblies:
    - Assembly-CSharp
    namespace: physicSimulator
    source:
      id: physics_simulator
      path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\physic_simulator\physics_simulator.cs
      startLine: 10
    summary: "\nThis class manages the calculation of the boat motions at each time interval\n"
    example: []
    syntax:
      content:
        CSharp: public class physics_simulator
        VB: Public Class physics_simulator
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.ToString
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: physicSimulator.physics_simulator.#ctor(Environement.Environment,PRace.Boat,PRace.Time)
      commentId: M:physicSimulator.physics_simulator.#ctor(Environement.Environment,PRace.Boat,PRace.Time)
      language: CSharp
      name:
        CSharp: physics_simulator(Environment, Boat, Time)
        VB: physics_simulator(Environment, Boat, Time)
      nameWithType:
        CSharp: physics_simulator.physics_simulator(Environment, Boat, Time)
        VB: physics_simulator.physics_simulator(Environment, Boat, Time)
      qualifiedName:
        CSharp: physicSimulator.physics_simulator.physics_simulator(Environement.Environment, PRace.Boat, PRace.Time)
        VB: physicSimulator.physics_simulator.physics_simulator(Environement.Environment, PRace.Boat, PRace.Time)
      type: Constructor
      assemblies:
      - Assembly-CSharp
      namespace: physicSimulator
      source:
        id: .ctor
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\physic_simulator\physics_simulator.cs
        startLine: 18
      summary: "\nCreate an physics_simulator instance\n"
      example: []
      syntax:
        content:
          CSharp: public physics_simulator(Environment env, Boat boat, Time time)
          VB: Public Sub New(env As Environment, boat As Boat, time As Time)
        parameters:
        - id: env
          type: Environement.Environment
          description: Environment which will be used to calcul the new position
        - id: boat
          type: PRace.Boat
          description: Boat to move
        - id: time
          type: PRace.Time
          description: object containg time compression and tick value
      overload: physicSimulator.physics_simulator.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: physicSimulator.physics_simulator.SetBoat(PRace.Boat)
      commentId: M:physicSimulator.physics_simulator.SetBoat(PRace.Boat)
      language: CSharp
      name:
        CSharp: SetBoat(Boat)
        VB: SetBoat(Boat)
      nameWithType:
        CSharp: physics_simulator.SetBoat(Boat)
        VB: physics_simulator.SetBoat(Boat)
      qualifiedName:
        CSharp: physicSimulator.physics_simulator.SetBoat(PRace.Boat)
        VB: physicSimulator.physics_simulator.SetBoat(PRace.Boat)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: physicSimulator
      source:
        id: SetBoat
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\physic_simulator\physics_simulator.cs
        startLine: 52
      summary: "\nSet the boat to move\n"
      example: []
      syntax:
        content:
          CSharp: public void SetBoat(Boat boat)
          VB: Public Sub SetBoat(boat As Boat)
        parameters:
        - id: boat
          type: PRace.Boat
          description: ''
      overload: physicSimulator.physics_simulator.SetBoat*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: physicSimulator.physics_simulator.MathMod(System.Double,System.Double)
      commentId: M:physicSimulator.physics_simulator.MathMod(System.Double,System.Double)
      language: CSharp
      name:
        CSharp: MathMod(Double, Double)
        VB: MathMod(Double, Double)
      nameWithType:
        CSharp: physics_simulator.MathMod(Double, Double)
        VB: physics_simulator.MathMod(Double, Double)
      qualifiedName:
        CSharp: physicSimulator.physics_simulator.MathMod(System.Double, System.Double)
        VB: physicSimulator.physics_simulator.MathMod(System.Double, System.Double)
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: physicSimulator
      source:
        id: MathMod
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\physic_simulator\physics_simulator.cs
        startLine: 63
      summary: "\nCalculate the mathematical modulus of a by b\n"
      example: []
      syntax:
        content:
          CSharp: public double MathMod(double a, double b)
          VB: Public Function MathMod(a As Double, b As Double) As Double
        parameters:
        - id: a
          type: System.Double
          description: value whose the modulo will be calculated
        - id: b
          type: System.Double
          description: divider
        return:
          type: System.Double
          description: double containing the modulo of a by b
      overload: physicSimulator.physics_simulator.MathMod*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: physicSimulator.physics_simulator.Move
      commentId: M:physicSimulator.physics_simulator.Move
      language: CSharp
      name:
        CSharp: Move()
        VB: Move()
      nameWithType:
        CSharp: physics_simulator.Move()
        VB: physics_simulator.Move()
      qualifiedName:
        CSharp: physicSimulator.physics_simulator.Move()
        VB: physicSimulator.physics_simulator.Move()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: physicSimulator
      source:
        id: Move
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\physic_simulator\physics_simulator.cs
        startLine: 81
      summary: "\nCalculate a iteration of the physic simulation.\nFirst calculate the motion of the boat in the tangent plane,\nthen project this motion on a sphere of the Earth radius divided by the time compression value.\nAlso calcute the new COG and SOG\nand change the boat position to its next position\n"
      example: []
      syntax:
        content:
          CSharp: public void Move()
          VB: Public Sub Move
      overload: physicSimulator.physics_simulator.Move*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: physicSimulator.physics_simulator.GetCOG
      commentId: M:physicSimulator.physics_simulator.GetCOG
      language: CSharp
      name:
        CSharp: GetCOG()
        VB: GetCOG()
      nameWithType:
        CSharp: physics_simulator.GetCOG()
        VB: physics_simulator.GetCOG()
      qualifiedName:
        CSharp: physicSimulator.physics_simulator.GetCOG()
        VB: physicSimulator.physics_simulator.GetCOG()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: physicSimulator
      source:
        id: GetCOG
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\physic_simulator\physics_simulator.cs
        startLine: 325
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public float GetCOG()
          VB: Public Function GetCOG As Single
        return:
          type: System.Single
          description: ''
      overload: physicSimulator.physics_simulator.GetCOG*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: physicSimulator.physics_simulator.GetCOGDegre
      commentId: M:physicSimulator.physics_simulator.GetCOGDegre
      language: CSharp
      name:
        CSharp: GetCOGDegre()
        VB: GetCOGDegre()
      nameWithType:
        CSharp: physics_simulator.GetCOGDegre()
        VB: physics_simulator.GetCOGDegre()
      qualifiedName:
        CSharp: physicSimulator.physics_simulator.GetCOGDegre()
        VB: physicSimulator.physics_simulator.GetCOGDegre()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: physicSimulator
      source:
        id: GetCOGDegre
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\physic_simulator\physics_simulator.cs
        startLine: 334
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public float GetCOGDegre()
          VB: Public Function GetCOGDegre As Single
        return:
          type: System.Single
          description: ''
      overload: physicSimulator.physics_simulator.GetCOGDegre*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: physicSimulator.physics_simulator.GetSOG
      commentId: M:physicSimulator.physics_simulator.GetSOG
      language: CSharp
      name:
        CSharp: GetSOG()
        VB: GetSOG()
      nameWithType:
        CSharp: physics_simulator.GetSOG()
        VB: physics_simulator.GetSOG()
      qualifiedName:
        CSharp: physicSimulator.physics_simulator.GetSOG()
        VB: physicSimulator.physics_simulator.GetSOG()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: physicSimulator
      source:
        id: GetSOG
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\physic_simulator\physics_simulator.cs
        startLine: 343
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public float GetSOG()
          VB: Public Function GetSOG As Single
        return:
          type: System.Single
          description: ''
      overload: physicSimulator.physics_simulator.GetSOG*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: physicSimulator.physics_simulator.GetSTW
      commentId: M:physicSimulator.physics_simulator.GetSTW
      language: CSharp
      name:
        CSharp: GetSTW()
        VB: GetSTW()
      nameWithType:
        CSharp: physics_simulator.GetSTW()
        VB: physics_simulator.GetSTW()
      qualifiedName:
        CSharp: physicSimulator.physics_simulator.GetSTW()
        VB: physicSimulator.physics_simulator.GetSTW()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: physicSimulator
      source:
        id: GetSTW
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\physic_simulator\physics_simulator.cs
        startLine: 352
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public float GetSTW()
          VB: Public Function GetSTW As Single
        return:
          type: System.Single
          description: ''
      overload: physicSimulator.physics_simulator.GetSTW*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: physicSimulator.physics_simulator.GetSTWdirDegre
      commentId: M:physicSimulator.physics_simulator.GetSTWdirDegre
      language: CSharp
      name:
        CSharp: GetSTWdirDegre()
        VB: GetSTWdirDegre()
      nameWithType:
        CSharp: physics_simulator.GetSTWdirDegre()
        VB: physics_simulator.GetSTWdirDegre()
      qualifiedName:
        CSharp: physicSimulator.physics_simulator.GetSTWdirDegre()
        VB: physicSimulator.physics_simulator.GetSTWdirDegre()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: physicSimulator
      source:
        id: GetSTWdirDegre
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\physic_simulator\physics_simulator.cs
        startLine: 361
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public float GetSTWdirDegre()
          VB: Public Function GetSTWdirDegre As Single
        return:
          type: System.Single
          description: ''
      overload: physicSimulator.physics_simulator.GetSTWdirDegre*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: physicSimulator.physics_simulator.GetAWS
      commentId: M:physicSimulator.physics_simulator.GetAWS
      language: CSharp
      name:
        CSharp: GetAWS()
        VB: GetAWS()
      nameWithType:
        CSharp: physics_simulator.GetAWS()
        VB: physics_simulator.GetAWS()
      qualifiedName:
        CSharp: physicSimulator.physics_simulator.GetAWS()
        VB: physicSimulator.physics_simulator.GetAWS()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: physicSimulator
      source:
        id: GetAWS
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\physic_simulator\physics_simulator.cs
        startLine: 370
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public float GetAWS()
          VB: Public Function GetAWS As Single
        return:
          type: System.Single
          description: ''
      overload: physicSimulator.physics_simulator.GetAWS*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: physicSimulator.physics_simulator.GetAWADegre
      commentId: M:physicSimulator.physics_simulator.GetAWADegre
      language: CSharp
      name:
        CSharp: GetAWADegre()
        VB: GetAWADegre()
      nameWithType:
        CSharp: physics_simulator.GetAWADegre()
        VB: physics_simulator.GetAWADegre()
      qualifiedName:
        CSharp: physicSimulator.physics_simulator.GetAWADegre()
        VB: physicSimulator.physics_simulator.GetAWADegre()
      type: Method
      assemblies:
      - Assembly-CSharp
      namespace: physicSimulator
      source:
        id: GetAWADegre
        path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\physic_simulator\physics_simulator.cs
        startLine: 379
      summary: "\n\n"
      example: []
      syntax:
        content:
          CSharp: public float GetAWADegre()
          VB: Public Function GetAWADegre As Single
        return:
          type: System.Single
          description: ''
      overload: physicSimulator.physics_simulator.GetAWADegre*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
references:
  UnityEngine:
    name:
      CSharp:
      - name: UnityEngine
        nameWithType: UnityEngine
        qualifiedName: UnityEngine
        isExternal: true
      VB:
      - name: UnityEngine
        nameWithType: UnityEngine
        qualifiedName: UnityEngine
    isDefinition: true
    commentId: N:UnityEngine
  UnityEngine.MonoBehaviour:
    name:
      CSharp:
      - id: UnityEngine.MonoBehaviour
        name: MonoBehaviour
        nameWithType: MonoBehaviour
        qualifiedName: UnityEngine.MonoBehaviour
        isExternal: true
      VB:
      - id: UnityEngine.MonoBehaviour
        name: MonoBehaviour
        nameWithType: MonoBehaviour
        qualifiedName: UnityEngine.MonoBehaviour
        isExternal: true
    isDefinition: true
    parent: UnityEngine
    commentId: T:UnityEngine.MonoBehaviour
  UnityEngine.MonoBehaviour.IsInvoking:
    name:
      CSharp:
      - id: UnityEngine.MonoBehaviour.IsInvoking
        name: IsInvoking
        nameWithType: MonoBehaviour.IsInvoking
        qualifiedName: UnityEngine.MonoBehaviour.IsInvoking
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.MonoBehaviour.IsInvoking
        name: IsInvoking
        nameWithType: MonoBehaviour.IsInvoking
        qualifiedName: UnityEngine.MonoBehaviour.IsInvoking
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.MonoBehaviour
    commentId: M:UnityEngine.MonoBehaviour.IsInvoking
  UnityEngine.MonoBehaviour.CancelInvoke:
    name:
      CSharp:
      - id: UnityEngine.MonoBehaviour.CancelInvoke
        name: CancelInvoke
        nameWithType: MonoBehaviour.CancelInvoke
        qualifiedName: UnityEngine.MonoBehaviour.CancelInvoke
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.MonoBehaviour.CancelInvoke
        name: CancelInvoke
        nameWithType: MonoBehaviour.CancelInvoke
        qualifiedName: UnityEngine.MonoBehaviour.CancelInvoke
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.MonoBehaviour
    commentId: M:UnityEngine.MonoBehaviour.CancelInvoke
  UnityEngine.MonoBehaviour.Invoke(System.String,System.Single):
    name:
      CSharp:
      - id: UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
        name: Invoke
        nameWithType: MonoBehaviour.Invoke
        qualifiedName: UnityEngine.MonoBehaviour.Invoke
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
        name: Invoke
        nameWithType: MonoBehaviour.Invoke
        qualifiedName: UnityEngine.MonoBehaviour.Invoke
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.MonoBehaviour
    commentId: M:UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
  UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single):
    name:
      CSharp:
      - id: UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
        name: InvokeRepeating
        nameWithType: MonoBehaviour.InvokeRepeating
        qualifiedName: UnityEngine.MonoBehaviour.InvokeRepeating
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
        name: InvokeRepeating
        nameWithType: MonoBehaviour.InvokeRepeating
        qualifiedName: UnityEngine.MonoBehaviour.InvokeRepeating
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.MonoBehaviour
    commentId: M:UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
  UnityEngine.MonoBehaviour.CancelInvoke(System.String):
    name:
      CSharp:
      - id: UnityEngine.MonoBehaviour.CancelInvoke(System.String)
        name: CancelInvoke
        nameWithType: MonoBehaviour.CancelInvoke
        qualifiedName: UnityEngine.MonoBehaviour.CancelInvoke
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.MonoBehaviour.CancelInvoke(System.String)
        name: CancelInvoke
        nameWithType: MonoBehaviour.CancelInvoke
        qualifiedName: UnityEngine.MonoBehaviour.CancelInvoke
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.MonoBehaviour
    commentId: M:UnityEngine.MonoBehaviour.CancelInvoke(System.String)
  UnityEngine.MonoBehaviour.IsInvoking(System.String):
    name:
      CSharp:
      - id: UnityEngine.MonoBehaviour.IsInvoking(System.String)
        name: IsInvoking
        nameWithType: MonoBehaviour.IsInvoking
        qualifiedName: UnityEngine.MonoBehaviour.IsInvoking
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.MonoBehaviour.IsInvoking(System.String)
        name: IsInvoking
        nameWithType: MonoBehaviour.IsInvoking
        qualifiedName: UnityEngine.MonoBehaviour.IsInvoking
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.MonoBehaviour
    commentId: M:UnityEngine.MonoBehaviour.IsInvoking(System.String)
  UnityEngine.MonoBehaviour.StartCoroutine(System.String):
    name:
      CSharp:
      - id: UnityEngine.MonoBehaviour.StartCoroutine(System.String)
        name: StartCoroutine
        nameWithType: MonoBehaviour.StartCoroutine
        qualifiedName: UnityEngine.MonoBehaviour.StartCoroutine
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.MonoBehaviour.StartCoroutine(System.String)
        name: StartCoroutine
        nameWithType: MonoBehaviour.StartCoroutine
        qualifiedName: UnityEngine.MonoBehaviour.StartCoroutine
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.MonoBehaviour
    commentId: M:UnityEngine.MonoBehaviour.StartCoroutine(System.String)
  UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object):
    name:
      CSharp:
      - id: UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
        name: StartCoroutine
        nameWithType: MonoBehaviour.StartCoroutine
        qualifiedName: UnityEngine.MonoBehaviour.StartCoroutine
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
        name: StartCoroutine
        nameWithType: MonoBehaviour.StartCoroutine
        qualifiedName: UnityEngine.MonoBehaviour.StartCoroutine
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.MonoBehaviour
    commentId: M:UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
  UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator):
    name:
      CSharp:
      - id: UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
        name: StartCoroutine
        nameWithType: MonoBehaviour.StartCoroutine
        qualifiedName: UnityEngine.MonoBehaviour.StartCoroutine
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.IEnumerator
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
        name: StartCoroutine
        nameWithType: MonoBehaviour.StartCoroutine
        qualifiedName: UnityEngine.MonoBehaviour.StartCoroutine
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.IEnumerator
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.MonoBehaviour
    commentId: M:UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
  UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator):
    name:
      CSharp:
      - id: UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
        name: StartCoroutine_Auto
        nameWithType: MonoBehaviour.StartCoroutine_Auto
        qualifiedName: UnityEngine.MonoBehaviour.StartCoroutine_Auto
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.IEnumerator
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
        name: StartCoroutine_Auto
        nameWithType: MonoBehaviour.StartCoroutine_Auto
        qualifiedName: UnityEngine.MonoBehaviour.StartCoroutine_Auto
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.IEnumerator
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.MonoBehaviour
    commentId: M:UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
  UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator):
    name:
      CSharp:
      - id: UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
        name: StopCoroutine
        nameWithType: MonoBehaviour.StopCoroutine
        qualifiedName: UnityEngine.MonoBehaviour.StopCoroutine
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.IEnumerator
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
        name: StopCoroutine
        nameWithType: MonoBehaviour.StopCoroutine
        qualifiedName: UnityEngine.MonoBehaviour.StopCoroutine
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.IEnumerator
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.MonoBehaviour
    commentId: M:UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
  UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine):
    name:
      CSharp:
      - id: UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
        name: StopCoroutine
        nameWithType: MonoBehaviour.StopCoroutine
        qualifiedName: UnityEngine.MonoBehaviour.StopCoroutine
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Coroutine
        name: Coroutine
        nameWithType: Coroutine
        qualifiedName: UnityEngine.Coroutine
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
        name: StopCoroutine
        nameWithType: MonoBehaviour.StopCoroutine
        qualifiedName: UnityEngine.MonoBehaviour.StopCoroutine
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Coroutine
        name: Coroutine
        nameWithType: Coroutine
        qualifiedName: UnityEngine.Coroutine
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.MonoBehaviour
    commentId: M:UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
  UnityEngine.MonoBehaviour.StopCoroutine(System.String):
    name:
      CSharp:
      - id: UnityEngine.MonoBehaviour.StopCoroutine(System.String)
        name: StopCoroutine
        nameWithType: MonoBehaviour.StopCoroutine
        qualifiedName: UnityEngine.MonoBehaviour.StopCoroutine
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.MonoBehaviour.StopCoroutine(System.String)
        name: StopCoroutine
        nameWithType: MonoBehaviour.StopCoroutine
        qualifiedName: UnityEngine.MonoBehaviour.StopCoroutine
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.MonoBehaviour
    commentId: M:UnityEngine.MonoBehaviour.StopCoroutine(System.String)
  UnityEngine.MonoBehaviour.StopAllCoroutines:
    name:
      CSharp:
      - id: UnityEngine.MonoBehaviour.StopAllCoroutines
        name: StopAllCoroutines
        nameWithType: MonoBehaviour.StopAllCoroutines
        qualifiedName: UnityEngine.MonoBehaviour.StopAllCoroutines
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.MonoBehaviour.StopAllCoroutines
        name: StopAllCoroutines
        nameWithType: MonoBehaviour.StopAllCoroutines
        qualifiedName: UnityEngine.MonoBehaviour.StopAllCoroutines
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.MonoBehaviour
    commentId: M:UnityEngine.MonoBehaviour.StopAllCoroutines
  UnityEngine.MonoBehaviour.print(System.Object):
    name:
      CSharp:
      - id: UnityEngine.MonoBehaviour.print(System.Object)
        name: print
        nameWithType: MonoBehaviour.print
        qualifiedName: UnityEngine.MonoBehaviour.print
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.MonoBehaviour.print(System.Object)
        name: print
        nameWithType: MonoBehaviour.print
        qualifiedName: UnityEngine.MonoBehaviour.print
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.MonoBehaviour
    commentId: M:UnityEngine.MonoBehaviour.print(System.Object)
  UnityEngine.MonoBehaviour.useGUILayout:
    name:
      CSharp:
      - id: UnityEngine.MonoBehaviour.useGUILayout
        name: useGUILayout
        nameWithType: MonoBehaviour.useGUILayout
        qualifiedName: UnityEngine.MonoBehaviour.useGUILayout
        isExternal: true
      VB:
      - id: UnityEngine.MonoBehaviour.useGUILayout
        name: useGUILayout
        nameWithType: MonoBehaviour.useGUILayout
        qualifiedName: UnityEngine.MonoBehaviour.useGUILayout
        isExternal: true
    isDefinition: true
    parent: UnityEngine.MonoBehaviour
    commentId: P:UnityEngine.MonoBehaviour.useGUILayout
  UnityEngine.MonoBehaviour.runInEditMode:
    name:
      CSharp:
      - id: UnityEngine.MonoBehaviour.runInEditMode
        name: runInEditMode
        nameWithType: MonoBehaviour.runInEditMode
        qualifiedName: UnityEngine.MonoBehaviour.runInEditMode
        isExternal: true
      VB:
      - id: UnityEngine.MonoBehaviour.runInEditMode
        name: runInEditMode
        nameWithType: MonoBehaviour.runInEditMode
        qualifiedName: UnityEngine.MonoBehaviour.runInEditMode
        isExternal: true
    isDefinition: true
    parent: UnityEngine.MonoBehaviour
    commentId: P:UnityEngine.MonoBehaviour.runInEditMode
  UnityEngine.Behaviour:
    name:
      CSharp:
      - id: UnityEngine.Behaviour
        name: Behaviour
        nameWithType: Behaviour
        qualifiedName: UnityEngine.Behaviour
        isExternal: true
      VB:
      - id: UnityEngine.Behaviour
        name: Behaviour
        nameWithType: Behaviour
        qualifiedName: UnityEngine.Behaviour
        isExternal: true
    isDefinition: true
    parent: UnityEngine
    commentId: T:UnityEngine.Behaviour
  UnityEngine.Behaviour.enabled:
    name:
      CSharp:
      - id: UnityEngine.Behaviour.enabled
        name: enabled
        nameWithType: Behaviour.enabled
        qualifiedName: UnityEngine.Behaviour.enabled
        isExternal: true
      VB:
      - id: UnityEngine.Behaviour.enabled
        name: enabled
        nameWithType: Behaviour.enabled
        qualifiedName: UnityEngine.Behaviour.enabled
        isExternal: true
    isDefinition: true
    parent: UnityEngine.Behaviour
    commentId: P:UnityEngine.Behaviour.enabled
  UnityEngine.Behaviour.isActiveAndEnabled:
    name:
      CSharp:
      - id: UnityEngine.Behaviour.isActiveAndEnabled
        name: isActiveAndEnabled
        nameWithType: Behaviour.isActiveAndEnabled
        qualifiedName: UnityEngine.Behaviour.isActiveAndEnabled
        isExternal: true
      VB:
      - id: UnityEngine.Behaviour.isActiveAndEnabled
        name: isActiveAndEnabled
        nameWithType: Behaviour.isActiveAndEnabled
        qualifiedName: UnityEngine.Behaviour.isActiveAndEnabled
        isExternal: true
    isDefinition: true
    parent: UnityEngine.Behaviour
    commentId: P:UnityEngine.Behaviour.isActiveAndEnabled
  UnityEngine.Component:
    name:
      CSharp:
      - id: UnityEngine.Component
        name: Component
        nameWithType: Component
        qualifiedName: UnityEngine.Component
        isExternal: true
      VB:
      - id: UnityEngine.Component
        name: Component
        nameWithType: Component
        qualifiedName: UnityEngine.Component
        isExternal: true
    isDefinition: true
    parent: UnityEngine
    commentId: T:UnityEngine.Component
  UnityEngine.Component.GetComponent(System.Type):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponent(System.Type)
        name: GetComponent
        nameWithType: Component.GetComponent
        qualifiedName: UnityEngine.Component.GetComponent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponent(System.Type)
        name: GetComponent
        nameWithType: Component.GetComponent
        qualifiedName: UnityEngine.Component.GetComponent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponent(System.Type)
  UnityEngine.Component.GetComponent``1:
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponent``1
        name: GetComponent<T>
        nameWithType: Component.GetComponent<T>
        qualifiedName: UnityEngine.Component.GetComponent<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponent``1
        name: GetComponent(Of T)
        nameWithType: Component.GetComponent(Of T)
        qualifiedName: UnityEngine.Component.GetComponent(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponent``1
  UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@):
    name:
      CSharp:
      - id: UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
        name: TryGetComponent
        nameWithType: Component.TryGetComponent
        qualifiedName: UnityEngine.Component.TryGetComponent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Component
        name: Component
        nameWithType: Component
        qualifiedName: UnityEngine.Component
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
        name: TryGetComponent
        nameWithType: Component.TryGetComponent
        qualifiedName: UnityEngine.Component.TryGetComponent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Component
        name: Component
        nameWithType: Component
        qualifiedName: UnityEngine.Component
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
  UnityEngine.Component.TryGetComponent``1(``0@):
    name:
      CSharp:
      - id: UnityEngine.Component.TryGetComponent``1(``0@)
        name: TryGetComponent<T>
        nameWithType: Component.TryGetComponent<T>
        qualifiedName: UnityEngine.Component.TryGetComponent<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.TryGetComponent``1(``0@)
        name: TryGetComponent(Of T)
        nameWithType: Component.TryGetComponent(Of T)
        qualifiedName: UnityEngine.Component.TryGetComponent(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:UnityEngine.Component.TryGetComponent``1(``0@)
  UnityEngine.Component.TryGetComponent``1({T}@):
    name:
      CSharp:
      - id: UnityEngine.Component.TryGetComponent``1(``0@)
        name: TryGetComponent<T>
        nameWithType: Component.TryGetComponent<T>
        qualifiedName: UnityEngine.Component.TryGetComponent<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.TryGetComponent``1(``0@)
        name: TryGetComponent(Of T)
        nameWithType: Component.TryGetComponent(Of T)
        qualifiedName: UnityEngine.Component.TryGetComponent(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: UnityEngine.Component.TryGetComponent``1(``0@)
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.TryGetComponent``1(``0@)
  UnityEngine.Component.GetComponent(System.String):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponent(System.String)
        name: GetComponent
        nameWithType: Component.GetComponent
        qualifiedName: UnityEngine.Component.GetComponent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponent(System.String)
        name: GetComponent
        nameWithType: Component.GetComponent
        qualifiedName: UnityEngine.Component.GetComponent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponent(System.String)
  UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
        name: GetComponentInChildren
        nameWithType: Component.GetComponentInChildren
        qualifiedName: UnityEngine.Component.GetComponentInChildren
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
        name: GetComponentInChildren
        nameWithType: Component.GetComponentInChildren
        qualifiedName: UnityEngine.Component.GetComponentInChildren
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
  UnityEngine.Component.GetComponentInChildren(System.Type):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentInChildren(System.Type)
        name: GetComponentInChildren
        nameWithType: Component.GetComponentInChildren
        qualifiedName: UnityEngine.Component.GetComponentInChildren
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentInChildren(System.Type)
        name: GetComponentInChildren
        nameWithType: Component.GetComponentInChildren
        qualifiedName: UnityEngine.Component.GetComponentInChildren
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponentInChildren(System.Type)
  UnityEngine.Component.GetComponentInChildren``1(System.Boolean):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
        name: GetComponentInChildren<T>
        nameWithType: Component.GetComponentInChildren<T>
        qualifiedName: UnityEngine.Component.GetComponentInChildren<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
        name: GetComponentInChildren(Of T)
        nameWithType: Component.GetComponentInChildren(Of T)
        qualifiedName: UnityEngine.Component.GetComponentInChildren(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
  UnityEngine.Component.GetComponentInChildren``1:
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentInChildren``1
        name: GetComponentInChildren<T>
        nameWithType: Component.GetComponentInChildren<T>
        qualifiedName: UnityEngine.Component.GetComponentInChildren<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentInChildren``1
        name: GetComponentInChildren(Of T)
        nameWithType: Component.GetComponentInChildren(Of T)
        qualifiedName: UnityEngine.Component.GetComponentInChildren(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponentInChildren``1
  UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
        name: GetComponentsInChildren
        nameWithType: Component.GetComponentsInChildren
        qualifiedName: UnityEngine.Component.GetComponentsInChildren
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
        name: GetComponentsInChildren
        nameWithType: Component.GetComponentsInChildren
        qualifiedName: UnityEngine.Component.GetComponentsInChildren
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
  UnityEngine.Component.GetComponentsInChildren(System.Type):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentsInChildren(System.Type)
        name: GetComponentsInChildren
        nameWithType: Component.GetComponentsInChildren
        qualifiedName: UnityEngine.Component.GetComponentsInChildren
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentsInChildren(System.Type)
        name: GetComponentsInChildren
        nameWithType: Component.GetComponentsInChildren
        qualifiedName: UnityEngine.Component.GetComponentsInChildren
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponentsInChildren(System.Type)
  UnityEngine.Component.GetComponentsInChildren``1(System.Boolean):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
        name: GetComponentsInChildren<T>
        nameWithType: Component.GetComponentsInChildren<T>
        qualifiedName: UnityEngine.Component.GetComponentsInChildren<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
        name: GetComponentsInChildren(Of T)
        nameWithType: Component.GetComponentsInChildren(Of T)
        qualifiedName: UnityEngine.Component.GetComponentsInChildren(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
  UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0}):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
        name: GetComponentsInChildren<T>
        nameWithType: Component.GetComponentsInChildren<T>
        qualifiedName: UnityEngine.Component.GetComponentsInChildren<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
        name: GetComponentsInChildren(Of T)
        nameWithType: Component.GetComponentsInChildren(Of T)
        qualifiedName: UnityEngine.Component.GetComponentsInChildren(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
  UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}}):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
        name: GetComponentsInChildren<T>
        nameWithType: Component.GetComponentsInChildren<T>
        qualifiedName: UnityEngine.Component.GetComponentsInChildren<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
        name: GetComponentsInChildren(Of T)
        nameWithType: Component.GetComponentsInChildren(Of T)
        qualifiedName: UnityEngine.Component.GetComponentsInChildren(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
  UnityEngine.Component.GetComponentsInChildren``1:
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentsInChildren``1
        name: GetComponentsInChildren<T>
        nameWithType: Component.GetComponentsInChildren<T>
        qualifiedName: UnityEngine.Component.GetComponentsInChildren<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentsInChildren``1
        name: GetComponentsInChildren(Of T)
        nameWithType: Component.GetComponentsInChildren(Of T)
        qualifiedName: UnityEngine.Component.GetComponentsInChildren(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponentsInChildren``1
  UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0}):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
        name: GetComponentsInChildren<T>
        nameWithType: Component.GetComponentsInChildren<T>
        qualifiedName: UnityEngine.Component.GetComponentsInChildren<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
        name: GetComponentsInChildren(Of T)
        nameWithType: Component.GetComponentsInChildren(Of T)
        qualifiedName: UnityEngine.Component.GetComponentsInChildren(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
  UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}}):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
        name: GetComponentsInChildren<T>
        nameWithType: Component.GetComponentsInChildren<T>
        qualifiedName: UnityEngine.Component.GetComponentsInChildren<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
        name: GetComponentsInChildren(Of T)
        nameWithType: Component.GetComponentsInChildren(Of T)
        qualifiedName: UnityEngine.Component.GetComponentsInChildren(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
  UnityEngine.Component.GetComponentInParent(System.Type):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentInParent(System.Type)
        name: GetComponentInParent
        nameWithType: Component.GetComponentInParent
        qualifiedName: UnityEngine.Component.GetComponentInParent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentInParent(System.Type)
        name: GetComponentInParent
        nameWithType: Component.GetComponentInParent
        qualifiedName: UnityEngine.Component.GetComponentInParent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponentInParent(System.Type)
  UnityEngine.Component.GetComponentInParent``1:
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentInParent``1
        name: GetComponentInParent<T>
        nameWithType: Component.GetComponentInParent<T>
        qualifiedName: UnityEngine.Component.GetComponentInParent<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentInParent``1
        name: GetComponentInParent(Of T)
        nameWithType: Component.GetComponentInParent(Of T)
        qualifiedName: UnityEngine.Component.GetComponentInParent(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponentInParent``1
  UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
        name: GetComponentsInParent
        nameWithType: Component.GetComponentsInParent
        qualifiedName: UnityEngine.Component.GetComponentsInParent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
        name: GetComponentsInParent
        nameWithType: Component.GetComponentsInParent
        qualifiedName: UnityEngine.Component.GetComponentsInParent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
  UnityEngine.Component.GetComponentsInParent(System.Type):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentsInParent(System.Type)
        name: GetComponentsInParent
        nameWithType: Component.GetComponentsInParent
        qualifiedName: UnityEngine.Component.GetComponentsInParent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentsInParent(System.Type)
        name: GetComponentsInParent
        nameWithType: Component.GetComponentsInParent
        qualifiedName: UnityEngine.Component.GetComponentsInParent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponentsInParent(System.Type)
  UnityEngine.Component.GetComponentsInParent``1(System.Boolean):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
        name: GetComponentsInParent<T>
        nameWithType: Component.GetComponentsInParent<T>
        qualifiedName: UnityEngine.Component.GetComponentsInParent<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
        name: GetComponentsInParent(Of T)
        nameWithType: Component.GetComponentsInParent(Of T)
        qualifiedName: UnityEngine.Component.GetComponentsInParent(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
  UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0}):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
        name: GetComponentsInParent<T>
        nameWithType: Component.GetComponentsInParent<T>
        qualifiedName: UnityEngine.Component.GetComponentsInParent<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
        name: GetComponentsInParent(Of T)
        nameWithType: Component.GetComponentsInParent(Of T)
        qualifiedName: UnityEngine.Component.GetComponentsInParent(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
  UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}}):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
        name: GetComponentsInParent<T>
        nameWithType: Component.GetComponentsInParent<T>
        qualifiedName: UnityEngine.Component.GetComponentsInParent<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
        name: GetComponentsInParent(Of T)
        nameWithType: Component.GetComponentsInParent(Of T)
        qualifiedName: UnityEngine.Component.GetComponentsInParent(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
  UnityEngine.Component.GetComponentsInParent``1:
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponentsInParent``1
        name: GetComponentsInParent<T>
        nameWithType: Component.GetComponentsInParent<T>
        qualifiedName: UnityEngine.Component.GetComponentsInParent<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponentsInParent``1
        name: GetComponentsInParent(Of T)
        nameWithType: Component.GetComponentsInParent(Of T)
        qualifiedName: UnityEngine.Component.GetComponentsInParent(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponentsInParent``1
  UnityEngine.Component.GetComponents(System.Type):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponents(System.Type)
        name: GetComponents
        nameWithType: Component.GetComponents
        qualifiedName: UnityEngine.Component.GetComponents
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponents(System.Type)
        name: GetComponents
        nameWithType: Component.GetComponents
        qualifiedName: UnityEngine.Component.GetComponents
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponents(System.Type)
  UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component}):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
        name: GetComponents
        nameWithType: Component.GetComponents
        qualifiedName: UnityEngine.Component.GetComponents
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: UnityEngine.Component
        name: Component
        nameWithType: Component
        qualifiedName: UnityEngine.Component
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
        name: GetComponents
        nameWithType: Component.GetComponents
        qualifiedName: UnityEngine.Component.GetComponents
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: UnityEngine.Component
        name: Component
        nameWithType: Component
        qualifiedName: UnityEngine.Component
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
  UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0}):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
        name: GetComponents<T>
        nameWithType: Component.GetComponents<T>
        qualifiedName: UnityEngine.Component.GetComponents<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
        name: GetComponents(Of T)
        nameWithType: Component.GetComponents(Of T)
        qualifiedName: UnityEngine.Component.GetComponents(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
  UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}}):
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
        name: GetComponents<T>
        nameWithType: Component.GetComponents<T>
        qualifiedName: UnityEngine.Component.GetComponents<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
        name: GetComponents(Of T)
        nameWithType: Component.GetComponents(Of T)
        qualifiedName: UnityEngine.Component.GetComponents(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
  UnityEngine.Component.GetComponents``1:
    name:
      CSharp:
      - id: UnityEngine.Component.GetComponents``1
        name: GetComponents<T>
        nameWithType: Component.GetComponents<T>
        qualifiedName: UnityEngine.Component.GetComponents<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.GetComponents``1
        name: GetComponents(Of T)
        nameWithType: Component.GetComponents(Of T)
        qualifiedName: UnityEngine.Component.GetComponents(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.GetComponents``1
  UnityEngine.Component.CompareTag(System.String):
    name:
      CSharp:
      - id: UnityEngine.Component.CompareTag(System.String)
        name: CompareTag
        nameWithType: Component.CompareTag
        qualifiedName: UnityEngine.Component.CompareTag
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.CompareTag(System.String)
        name: CompareTag
        nameWithType: Component.CompareTag
        qualifiedName: UnityEngine.Component.CompareTag
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.CompareTag(System.String)
  UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions):
    name:
      CSharp:
      - id: UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
        name: SendMessageUpwards
        nameWithType: Component.SendMessageUpwards
        qualifiedName: UnityEngine.Component.SendMessageUpwards
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.SendMessageOptions
        name: SendMessageOptions
        nameWithType: SendMessageOptions
        qualifiedName: UnityEngine.SendMessageOptions
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
        name: SendMessageUpwards
        nameWithType: Component.SendMessageUpwards
        qualifiedName: UnityEngine.Component.SendMessageUpwards
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.SendMessageOptions
        name: SendMessageOptions
        nameWithType: SendMessageOptions
        qualifiedName: UnityEngine.SendMessageOptions
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
  UnityEngine.Component.SendMessageUpwards(System.String,System.Object):
    name:
      CSharp:
      - id: UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
        name: SendMessageUpwards
        nameWithType: Component.SendMessageUpwards
        qualifiedName: UnityEngine.Component.SendMessageUpwards
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
        name: SendMessageUpwards
        nameWithType: Component.SendMessageUpwards
        qualifiedName: UnityEngine.Component.SendMessageUpwards
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
  UnityEngine.Component.SendMessageUpwards(System.String):
    name:
      CSharp:
      - id: UnityEngine.Component.SendMessageUpwards(System.String)
        name: SendMessageUpwards
        nameWithType: Component.SendMessageUpwards
        qualifiedName: UnityEngine.Component.SendMessageUpwards
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.SendMessageUpwards(System.String)
        name: SendMessageUpwards
        nameWithType: Component.SendMessageUpwards
        qualifiedName: UnityEngine.Component.SendMessageUpwards
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.SendMessageUpwards(System.String)
  UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions):
    name:
      CSharp:
      - id: UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
        name: SendMessageUpwards
        nameWithType: Component.SendMessageUpwards
        qualifiedName: UnityEngine.Component.SendMessageUpwards
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.SendMessageOptions
        name: SendMessageOptions
        nameWithType: SendMessageOptions
        qualifiedName: UnityEngine.SendMessageOptions
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
        name: SendMessageUpwards
        nameWithType: Component.SendMessageUpwards
        qualifiedName: UnityEngine.Component.SendMessageUpwards
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.SendMessageOptions
        name: SendMessageOptions
        nameWithType: SendMessageOptions
        qualifiedName: UnityEngine.SendMessageOptions
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
  UnityEngine.Component.SendMessage(System.String,System.Object):
    name:
      CSharp:
      - id: UnityEngine.Component.SendMessage(System.String,System.Object)
        name: SendMessage
        nameWithType: Component.SendMessage
        qualifiedName: UnityEngine.Component.SendMessage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.SendMessage(System.String,System.Object)
        name: SendMessage
        nameWithType: Component.SendMessage
        qualifiedName: UnityEngine.Component.SendMessage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.SendMessage(System.String,System.Object)
  UnityEngine.Component.SendMessage(System.String):
    name:
      CSharp:
      - id: UnityEngine.Component.SendMessage(System.String)
        name: SendMessage
        nameWithType: Component.SendMessage
        qualifiedName: UnityEngine.Component.SendMessage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.SendMessage(System.String)
        name: SendMessage
        nameWithType: Component.SendMessage
        qualifiedName: UnityEngine.Component.SendMessage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.SendMessage(System.String)
  UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions):
    name:
      CSharp:
      - id: UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
        name: SendMessage
        nameWithType: Component.SendMessage
        qualifiedName: UnityEngine.Component.SendMessage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.SendMessageOptions
        name: SendMessageOptions
        nameWithType: SendMessageOptions
        qualifiedName: UnityEngine.SendMessageOptions
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
        name: SendMessage
        nameWithType: Component.SendMessage
        qualifiedName: UnityEngine.Component.SendMessage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.SendMessageOptions
        name: SendMessageOptions
        nameWithType: SendMessageOptions
        qualifiedName: UnityEngine.SendMessageOptions
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
  UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions):
    name:
      CSharp:
      - id: UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
        name: SendMessage
        nameWithType: Component.SendMessage
        qualifiedName: UnityEngine.Component.SendMessage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.SendMessageOptions
        name: SendMessageOptions
        nameWithType: SendMessageOptions
        qualifiedName: UnityEngine.SendMessageOptions
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
        name: SendMessage
        nameWithType: Component.SendMessage
        qualifiedName: UnityEngine.Component.SendMessage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.SendMessageOptions
        name: SendMessageOptions
        nameWithType: SendMessageOptions
        qualifiedName: UnityEngine.SendMessageOptions
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
  UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions):
    name:
      CSharp:
      - id: UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
        name: BroadcastMessage
        nameWithType: Component.BroadcastMessage
        qualifiedName: UnityEngine.Component.BroadcastMessage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.SendMessageOptions
        name: SendMessageOptions
        nameWithType: SendMessageOptions
        qualifiedName: UnityEngine.SendMessageOptions
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
        name: BroadcastMessage
        nameWithType: Component.BroadcastMessage
        qualifiedName: UnityEngine.Component.BroadcastMessage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.SendMessageOptions
        name: SendMessageOptions
        nameWithType: SendMessageOptions
        qualifiedName: UnityEngine.SendMessageOptions
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
  UnityEngine.Component.BroadcastMessage(System.String,System.Object):
    name:
      CSharp:
      - id: UnityEngine.Component.BroadcastMessage(System.String,System.Object)
        name: BroadcastMessage
        nameWithType: Component.BroadcastMessage
        qualifiedName: UnityEngine.Component.BroadcastMessage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.BroadcastMessage(System.String,System.Object)
        name: BroadcastMessage
        nameWithType: Component.BroadcastMessage
        qualifiedName: UnityEngine.Component.BroadcastMessage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.BroadcastMessage(System.String,System.Object)
  UnityEngine.Component.BroadcastMessage(System.String):
    name:
      CSharp:
      - id: UnityEngine.Component.BroadcastMessage(System.String)
        name: BroadcastMessage
        nameWithType: Component.BroadcastMessage
        qualifiedName: UnityEngine.Component.BroadcastMessage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.BroadcastMessage(System.String)
        name: BroadcastMessage
        nameWithType: Component.BroadcastMessage
        qualifiedName: UnityEngine.Component.BroadcastMessage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.BroadcastMessage(System.String)
  UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions):
    name:
      CSharp:
      - id: UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
        name: BroadcastMessage
        nameWithType: Component.BroadcastMessage
        qualifiedName: UnityEngine.Component.BroadcastMessage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.SendMessageOptions
        name: SendMessageOptions
        nameWithType: SendMessageOptions
        qualifiedName: UnityEngine.SendMessageOptions
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
        name: BroadcastMessage
        nameWithType: Component.BroadcastMessage
        qualifiedName: UnityEngine.Component.BroadcastMessage
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.SendMessageOptions
        name: SendMessageOptions
        nameWithType: SendMessageOptions
        qualifiedName: UnityEngine.SendMessageOptions
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Component
    commentId: M:UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
  UnityEngine.Component.transform:
    name:
      CSharp:
      - id: UnityEngine.Component.transform
        name: transform
        nameWithType: Component.transform
        qualifiedName: UnityEngine.Component.transform
        isExternal: true
      VB:
      - id: UnityEngine.Component.transform
        name: transform
        nameWithType: Component.transform
        qualifiedName: UnityEngine.Component.transform
        isExternal: true
    isDefinition: true
    parent: UnityEngine.Component
    commentId: P:UnityEngine.Component.transform
  UnityEngine.Component.gameObject:
    name:
      CSharp:
      - id: UnityEngine.Component.gameObject
        name: gameObject
        nameWithType: Component.gameObject
        qualifiedName: UnityEngine.Component.gameObject
        isExternal: true
      VB:
      - id: UnityEngine.Component.gameObject
        name: gameObject
        nameWithType: Component.gameObject
        qualifiedName: UnityEngine.Component.gameObject
        isExternal: true
    isDefinition: true
    parent: UnityEngine.Component
    commentId: P:UnityEngine.Component.gameObject
  UnityEngine.Component.tag:
    name:
      CSharp:
      - id: UnityEngine.Component.tag
        name: tag
        nameWithType: Component.tag
        qualifiedName: UnityEngine.Component.tag
        isExternal: true
      VB:
      - id: UnityEngine.Component.tag
        name: tag
        nameWithType: Component.tag
        qualifiedName: UnityEngine.Component.tag
        isExternal: true
    isDefinition: true
    parent: UnityEngine.Component
    commentId: P:UnityEngine.Component.tag
  UnityEngine.Object:
    name:
      CSharp:
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      VB:
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
    isDefinition: true
    parent: UnityEngine
    commentId: T:UnityEngine.Object
  UnityEngine.Object.GetInstanceID:
    name:
      CSharp:
      - id: UnityEngine.Object.GetInstanceID
        name: GetInstanceID
        nameWithType: Object.GetInstanceID
        qualifiedName: UnityEngine.Object.GetInstanceID
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.GetInstanceID
        name: GetInstanceID
        nameWithType: Object.GetInstanceID
        qualifiedName: UnityEngine.Object.GetInstanceID
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.GetInstanceID
  UnityEngine.Object.GetHashCode:
    name:
      CSharp:
      - id: UnityEngine.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: UnityEngine.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: UnityEngine.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.GetHashCode
  UnityEngine.Object.Equals(System.Object):
    name:
      CSharp:
      - id: UnityEngine.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: UnityEngine.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: UnityEngine.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.Equals(System.Object)
  UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion):
    name:
      CSharp:
      - id: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
        name: Instantiate
        nameWithType: Object.Instantiate
        qualifiedName: UnityEngine.Object.Instantiate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: UnityEngine.Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: UnityEngine.Quaternion
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
        name: Instantiate
        nameWithType: Object.Instantiate
        qualifiedName: UnityEngine.Object.Instantiate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: UnityEngine.Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: UnityEngine.Quaternion
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
  UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform):
    name:
      CSharp:
      - id: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
        name: Instantiate
        nameWithType: Object.Instantiate
        qualifiedName: UnityEngine.Object.Instantiate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: UnityEngine.Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: UnityEngine.Quaternion
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: UnityEngine.Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
        name: Instantiate
        nameWithType: Object.Instantiate
        qualifiedName: UnityEngine.Object.Instantiate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: UnityEngine.Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: UnityEngine.Quaternion
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: UnityEngine.Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  UnityEngine.Object.Instantiate(UnityEngine.Object):
    name:
      CSharp:
      - id: UnityEngine.Object.Instantiate(UnityEngine.Object)
        name: Instantiate
        nameWithType: Object.Instantiate
        qualifiedName: UnityEngine.Object.Instantiate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.Instantiate(UnityEngine.Object)
        name: Instantiate
        nameWithType: Object.Instantiate
        qualifiedName: UnityEngine.Object.Instantiate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object)
  UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform):
    name:
      CSharp:
      - id: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
        name: Instantiate
        nameWithType: Object.Instantiate
        qualifiedName: UnityEngine.Object.Instantiate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: UnityEngine.Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
        name: Instantiate
        nameWithType: Object.Instantiate
        qualifiedName: UnityEngine.Object.Instantiate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: UnityEngine.Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
  UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean):
    name:
      CSharp:
      - id: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
        name: Instantiate
        nameWithType: Object.Instantiate
        qualifiedName: UnityEngine.Object.Instantiate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: UnityEngine.Transform
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
        name: Instantiate
        nameWithType: Object.Instantiate
        qualifiedName: UnityEngine.Object.Instantiate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: UnityEngine.Transform
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
  UnityEngine.Object.Instantiate``1(``0):
    name:
      CSharp:
      - id: UnityEngine.Object.Instantiate``1(``0)
        name: Instantiate<T>
        nameWithType: Object.Instantiate<T>
        qualifiedName: UnityEngine.Object.Instantiate<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.Instantiate``1(``0)
        name: Instantiate(Of T)
        nameWithType: Object.Instantiate(Of T)
        qualifiedName: UnityEngine.Object.Instantiate(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:UnityEngine.Object.Instantiate``1(``0)
  UnityEngine.Object.Instantiate``1({T}):
    name:
      CSharp:
      - id: UnityEngine.Object.Instantiate``1(``0)
        name: Instantiate<T>
        nameWithType: Object.Instantiate<T>
        qualifiedName: UnityEngine.Object.Instantiate<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.Instantiate``1(``0)
        name: Instantiate(Of T)
        nameWithType: Object.Instantiate(Of T)
        qualifiedName: UnityEngine.Object.Instantiate(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: UnityEngine.Object.Instantiate``1(``0)
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.Instantiate``1(``0)
  UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion):
    name:
      CSharp:
      - id: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
        name: Instantiate<T>
        nameWithType: Object.Instantiate<T>
        qualifiedName: UnityEngine.Object.Instantiate<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: UnityEngine.Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: UnityEngine.Quaternion
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
        name: Instantiate(Of T)
        nameWithType: Object.Instantiate(Of T)
        qualifiedName: UnityEngine.Object.Instantiate(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: UnityEngine.Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: UnityEngine.Quaternion
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
  UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion):
    name:
      CSharp:
      - id: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
        name: Instantiate<T>
        nameWithType: Object.Instantiate<T>
        qualifiedName: UnityEngine.Object.Instantiate<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: UnityEngine.Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: UnityEngine.Quaternion
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
        name: Instantiate(Of T)
        nameWithType: Object.Instantiate(Of T)
        qualifiedName: UnityEngine.Object.Instantiate(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: UnityEngine.Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: UnityEngine.Quaternion
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
  UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform):
    name:
      CSharp:
      - id: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
        name: Instantiate<T>
        nameWithType: Object.Instantiate<T>
        qualifiedName: UnityEngine.Object.Instantiate<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: UnityEngine.Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: UnityEngine.Quaternion
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: UnityEngine.Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
        name: Instantiate(Of T)
        nameWithType: Object.Instantiate(Of T)
        qualifiedName: UnityEngine.Object.Instantiate(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: UnityEngine.Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: UnityEngine.Quaternion
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: UnityEngine.Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform):
    name:
      CSharp:
      - id: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
        name: Instantiate<T>
        nameWithType: Object.Instantiate<T>
        qualifiedName: UnityEngine.Object.Instantiate<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: UnityEngine.Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: UnityEngine.Quaternion
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: UnityEngine.Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
        name: Instantiate(Of T)
        nameWithType: Object.Instantiate(Of T)
        qualifiedName: UnityEngine.Object.Instantiate(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: UnityEngine.Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: UnityEngine.Quaternion
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: UnityEngine.Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform):
    name:
      CSharp:
      - id: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
        name: Instantiate<T>
        nameWithType: Object.Instantiate<T>
        qualifiedName: UnityEngine.Object.Instantiate<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: UnityEngine.Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
        name: Instantiate(Of T)
        nameWithType: Object.Instantiate(Of T)
        qualifiedName: UnityEngine.Object.Instantiate(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: UnityEngine.Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
  UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform):
    name:
      CSharp:
      - id: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
        name: Instantiate<T>
        nameWithType: Object.Instantiate<T>
        qualifiedName: UnityEngine.Object.Instantiate<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: UnityEngine.Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
        name: Instantiate(Of T)
        nameWithType: Object.Instantiate(Of T)
        qualifiedName: UnityEngine.Object.Instantiate(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: UnityEngine.Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
  UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean):
    name:
      CSharp:
      - id: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
        name: Instantiate<T>
        nameWithType: Object.Instantiate<T>
        qualifiedName: UnityEngine.Object.Instantiate<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: UnityEngine.Transform
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
        name: Instantiate(Of T)
        nameWithType: Object.Instantiate(Of T)
        qualifiedName: UnityEngine.Object.Instantiate(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: UnityEngine.Transform
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
  UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean):
    name:
      CSharp:
      - id: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
        name: Instantiate<T>
        nameWithType: Object.Instantiate<T>
        qualifiedName: UnityEngine.Object.Instantiate<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: UnityEngine.Transform
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
        name: Instantiate(Of T)
        nameWithType: Object.Instantiate(Of T)
        qualifiedName: UnityEngine.Object.Instantiate(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: UnityEngine.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: UnityEngine.Transform
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
  UnityEngine.Object.Destroy(UnityEngine.Object,System.Single):
    name:
      CSharp:
      - id: UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
        name: Destroy
        nameWithType: Object.Destroy
        qualifiedName: UnityEngine.Object.Destroy
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
        name: Destroy
        nameWithType: Object.Destroy
        qualifiedName: UnityEngine.Object.Destroy
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
  UnityEngine.Object.Destroy(UnityEngine.Object):
    name:
      CSharp:
      - id: UnityEngine.Object.Destroy(UnityEngine.Object)
        name: Destroy
        nameWithType: Object.Destroy
        qualifiedName: UnityEngine.Object.Destroy
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.Destroy(UnityEngine.Object)
        name: Destroy
        nameWithType: Object.Destroy
        qualifiedName: UnityEngine.Object.Destroy
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.Destroy(UnityEngine.Object)
  UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean):
    name:
      CSharp:
      - id: UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
        name: DestroyImmediate
        nameWithType: Object.DestroyImmediate
        qualifiedName: UnityEngine.Object.DestroyImmediate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
        name: DestroyImmediate
        nameWithType: Object.DestroyImmediate
        qualifiedName: UnityEngine.Object.DestroyImmediate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
  UnityEngine.Object.DestroyImmediate(UnityEngine.Object):
    name:
      CSharp:
      - id: UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
        name: DestroyImmediate
        nameWithType: Object.DestroyImmediate
        qualifiedName: UnityEngine.Object.DestroyImmediate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
        name: DestroyImmediate
        nameWithType: Object.DestroyImmediate
        qualifiedName: UnityEngine.Object.DestroyImmediate
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
  UnityEngine.Object.FindObjectsOfType(System.Type):
    name:
      CSharp:
      - id: UnityEngine.Object.FindObjectsOfType(System.Type)
        name: FindObjectsOfType
        nameWithType: Object.FindObjectsOfType
        qualifiedName: UnityEngine.Object.FindObjectsOfType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.FindObjectsOfType(System.Type)
        name: FindObjectsOfType
        nameWithType: Object.FindObjectsOfType
        qualifiedName: UnityEngine.Object.FindObjectsOfType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.FindObjectsOfType(System.Type)
  UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean):
    name:
      CSharp:
      - id: UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
        name: FindObjectsOfType
        nameWithType: Object.FindObjectsOfType
        qualifiedName: UnityEngine.Object.FindObjectsOfType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
        name: FindObjectsOfType
        nameWithType: Object.FindObjectsOfType
        qualifiedName: UnityEngine.Object.FindObjectsOfType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
  UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object):
    name:
      CSharp:
      - id: UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
        name: DontDestroyOnLoad
        nameWithType: Object.DontDestroyOnLoad
        qualifiedName: UnityEngine.Object.DontDestroyOnLoad
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
        name: DontDestroyOnLoad
        nameWithType: Object.DontDestroyOnLoad
        qualifiedName: UnityEngine.Object.DontDestroyOnLoad
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
  UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single):
    name:
      CSharp:
      - id: UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
        name: DestroyObject
        nameWithType: Object.DestroyObject
        qualifiedName: UnityEngine.Object.DestroyObject
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
        name: DestroyObject
        nameWithType: Object.DestroyObject
        qualifiedName: UnityEngine.Object.DestroyObject
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
  UnityEngine.Object.DestroyObject(UnityEngine.Object):
    name:
      CSharp:
      - id: UnityEngine.Object.DestroyObject(UnityEngine.Object)
        name: DestroyObject
        nameWithType: Object.DestroyObject
        qualifiedName: UnityEngine.Object.DestroyObject
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.DestroyObject(UnityEngine.Object)
        name: DestroyObject
        nameWithType: Object.DestroyObject
        qualifiedName: UnityEngine.Object.DestroyObject
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: UnityEngine.Object
        name: Object
        nameWithType: Object
        qualifiedName: UnityEngine.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.DestroyObject(UnityEngine.Object)
  UnityEngine.Object.FindSceneObjectsOfType(System.Type):
    name:
      CSharp:
      - id: UnityEngine.Object.FindSceneObjectsOfType(System.Type)
        name: FindSceneObjectsOfType
        nameWithType: Object.FindSceneObjectsOfType
        qualifiedName: UnityEngine.Object.FindSceneObjectsOfType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.FindSceneObjectsOfType(System.Type)
        name: FindSceneObjectsOfType
        nameWithType: Object.FindSceneObjectsOfType
        qualifiedName: UnityEngine.Object.FindSceneObjectsOfType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.FindSceneObjectsOfType(System.Type)
  UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type):
    name:
      CSharp:
      - id: UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
        name: FindObjectsOfTypeIncludingAssets
        nameWithType: Object.FindObjectsOfTypeIncludingAssets
        qualifiedName: UnityEngine.Object.FindObjectsOfTypeIncludingAssets
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
        name: FindObjectsOfTypeIncludingAssets
        nameWithType: Object.FindObjectsOfTypeIncludingAssets
        qualifiedName: UnityEngine.Object.FindObjectsOfTypeIncludingAssets
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
  UnityEngine.Object.FindObjectsOfType``1:
    name:
      CSharp:
      - id: UnityEngine.Object.FindObjectsOfType``1
        name: FindObjectsOfType<T>
        nameWithType: Object.FindObjectsOfType<T>
        qualifiedName: UnityEngine.Object.FindObjectsOfType<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.FindObjectsOfType``1
        name: FindObjectsOfType(Of T)
        nameWithType: Object.FindObjectsOfType(Of T)
        qualifiedName: UnityEngine.Object.FindObjectsOfType(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.FindObjectsOfType``1
  UnityEngine.Object.FindObjectsOfType``1(System.Boolean):
    name:
      CSharp:
      - id: UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
        name: FindObjectsOfType<T>
        nameWithType: Object.FindObjectsOfType<T>
        qualifiedName: UnityEngine.Object.FindObjectsOfType<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
        name: FindObjectsOfType(Of T)
        nameWithType: Object.FindObjectsOfType(Of T)
        qualifiedName: UnityEngine.Object.FindObjectsOfType(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
  UnityEngine.Object.FindObjectOfType``1:
    name:
      CSharp:
      - id: UnityEngine.Object.FindObjectOfType``1
        name: FindObjectOfType<T>
        nameWithType: Object.FindObjectOfType<T>
        qualifiedName: UnityEngine.Object.FindObjectOfType<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.FindObjectOfType``1
        name: FindObjectOfType(Of T)
        nameWithType: Object.FindObjectOfType(Of T)
        qualifiedName: UnityEngine.Object.FindObjectOfType(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.FindObjectOfType``1
  UnityEngine.Object.FindObjectOfType``1(System.Boolean):
    name:
      CSharp:
      - id: UnityEngine.Object.FindObjectOfType``1(System.Boolean)
        name: FindObjectOfType<T>
        nameWithType: Object.FindObjectOfType<T>
        qualifiedName: UnityEngine.Object.FindObjectOfType<T>
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.FindObjectOfType``1(System.Boolean)
        name: FindObjectOfType(Of T)
        nameWithType: Object.FindObjectOfType(Of T)
        qualifiedName: UnityEngine.Object.FindObjectOfType(Of T)
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.FindObjectOfType``1(System.Boolean)
  UnityEngine.Object.FindObjectsOfTypeAll(System.Type):
    name:
      CSharp:
      - id: UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
        name: FindObjectsOfTypeAll
        nameWithType: Object.FindObjectsOfTypeAll
        qualifiedName: UnityEngine.Object.FindObjectsOfTypeAll
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
        name: FindObjectsOfTypeAll
        nameWithType: Object.FindObjectsOfTypeAll
        qualifiedName: UnityEngine.Object.FindObjectsOfTypeAll
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
  UnityEngine.Object.FindObjectOfType(System.Type):
    name:
      CSharp:
      - id: UnityEngine.Object.FindObjectOfType(System.Type)
        name: FindObjectOfType
        nameWithType: Object.FindObjectOfType
        qualifiedName: UnityEngine.Object.FindObjectOfType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.FindObjectOfType(System.Type)
        name: FindObjectOfType
        nameWithType: Object.FindObjectOfType
        qualifiedName: UnityEngine.Object.FindObjectOfType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.FindObjectOfType(System.Type)
  UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean):
    name:
      CSharp:
      - id: UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
        name: FindObjectOfType
        nameWithType: Object.FindObjectOfType
        qualifiedName: UnityEngine.Object.FindObjectOfType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
        name: FindObjectOfType
        nameWithType: Object.FindObjectOfType
        qualifiedName: UnityEngine.Object.FindObjectOfType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
  UnityEngine.Object.ToString:
    name:
      CSharp:
      - id: UnityEngine.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: UnityEngine.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: UnityEngine.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: UnityEngine.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: UnityEngine.Object
    commentId: M:UnityEngine.Object.ToString
  UnityEngine.Object.name:
    name:
      CSharp:
      - id: UnityEngine.Object.name
        name: name
        nameWithType: Object.name
        qualifiedName: UnityEngine.Object.name
        isExternal: true
      VB:
      - id: UnityEngine.Object.name
        name: name
        nameWithType: Object.name
        qualifiedName: UnityEngine.Object.name
        isExternal: true
    isDefinition: true
    parent: UnityEngine.Object
    commentId: P:UnityEngine.Object.name
  UnityEngine.Object.hideFlags:
    name:
      CSharp:
      - id: UnityEngine.Object.hideFlags
        name: hideFlags
        nameWithType: Object.hideFlags
        qualifiedName: UnityEngine.Object.hideFlags
        isExternal: true
      VB:
      - id: UnityEngine.Object.hideFlags
        name: hideFlags
        nameWithType: Object.hideFlags
        qualifiedName: UnityEngine.Object.hideFlags
        isExternal: true
    isDefinition: true
    parent: UnityEngine.Object
    commentId: P:UnityEngine.Object.hideFlags
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  SavedConfigReader.SavedConfig:
    name:
      CSharp:
      - id: SavedConfigReader.SavedConfig
        name: SavedConfigReader.SavedConfig
        nameWithType: SavedConfigReader.SavedConfig
        qualifiedName: SavedConfigReader.SavedConfig
      VB:
      - id: SavedConfigReader.SavedConfig
        name: SavedConfigReader.SavedConfig
        nameWithType: SavedConfigReader.SavedConfig
        qualifiedName: SavedConfigReader.SavedConfig
    isDefinition: true
    commentId: T:SavedConfigReader.SavedConfig
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  UnityEngine.TextAsset:
    name:
      CSharp:
      - id: UnityEngine.TextAsset
        name: TextAsset
        nameWithType: TextAsset
        qualifiedName: UnityEngine.TextAsset
        isExternal: true
      VB:
      - id: UnityEngine.TextAsset
        name: TextAsset
        nameWithType: TextAsset
        qualifiedName: UnityEngine.TextAsset
        isExternal: true
    isDefinition: true
    parent: UnityEngine
    commentId: T:UnityEngine.TextAsset
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  TMPro:
    name:
      CSharp:
      - name: TMPro
        nameWithType: TMPro
        qualifiedName: TMPro
        isExternal: true
      VB:
      - name: TMPro
        nameWithType: TMPro
        qualifiedName: TMPro
    isDefinition: true
    commentId: N:TMPro
  TMPro.TextMeshProUGUI:
    name:
      CSharp:
      - id: TMPro.TextMeshProUGUI
        name: TextMeshProUGUI
        nameWithType: TextMeshProUGUI
        qualifiedName: TMPro.TextMeshProUGUI
        isExternal: true
      VB:
      - id: TMPro.TextMeshProUGUI
        name: TextMeshProUGUI
        nameWithType: TextMeshProUGUI
        qualifiedName: TMPro.TextMeshProUGUI
        isExternal: true
    isDefinition: true
    parent: TMPro
    commentId: T:TMPro.TextMeshProUGUI
  Traductionscript.WaypointSelectionTrad:
    name:
      CSharp:
      - id: Traductionscript.WaypointSelectionTrad
        name: WaypointSelectionTrad
        nameWithType: WaypointSelectionTrad
        qualifiedName: Traductionscript.WaypointSelectionTrad
      VB:
      - id: Traductionscript.WaypointSelectionTrad
        name: WaypointSelectionTrad
        nameWithType: WaypointSelectionTrad
        qualifiedName: Traductionscript.WaypointSelectionTrad
    isDefinition: true
    commentId: T:Traductionscript.WaypointSelectionTrad
  UnityEngine.UI:
    name:
      CSharp:
      - name: UnityEngine.UI
        nameWithType: UnityEngine.UI
        qualifiedName: UnityEngine.UI
        isExternal: true
      VB:
      - name: UnityEngine.UI
        nameWithType: UnityEngine.UI
        qualifiedName: UnityEngine.UI
    isDefinition: true
    commentId: N:UnityEngine.UI
  UnityEngine.UI.Text:
    name:
      CSharp:
      - id: UnityEngine.UI.Text
        name: Text
        nameWithType: Text
        qualifiedName: UnityEngine.UI.Text
        isExternal: true
      VB:
      - id: UnityEngine.UI.Text
        name: Text
        nameWithType: Text
        qualifiedName: UnityEngine.UI.Text
        isExternal: true
    isDefinition: true
    parent: UnityEngine.UI
    commentId: T:UnityEngine.UI.Text
  UnityEngine.UI.Dropdown:
    name:
      CSharp:
      - id: UnityEngine.UI.Dropdown
        name: Dropdown
        nameWithType: Dropdown
        qualifiedName: UnityEngine.UI.Dropdown
        isExternal: true
      VB:
      - id: UnityEngine.UI.Dropdown
        name: Dropdown
        nameWithType: Dropdown
        qualifiedName: UnityEngine.UI.Dropdown
        isExternal: true
    isDefinition: true
    parent: UnityEngine.UI
    commentId: T:UnityEngine.UI.Dropdown
  Traductionscript.xmlReader.ValueChangeCheck*:
    name:
      CSharp:
      - id: Traductionscript.xmlReader.ValueChangeCheck*
        name: ValueChangeCheck
        nameWithType: xmlReader.ValueChangeCheck
        qualifiedName: Traductionscript.xmlReader.ValueChangeCheck
      VB:
      - id: Traductionscript.xmlReader.ValueChangeCheck*
        name: ValueChangeCheck
        nameWithType: xmlReader.ValueChangeCheck
        qualifiedName: Traductionscript.xmlReader.ValueChangeCheck
    isDefinition: true
    commentId: Overload:Traductionscript.xmlReader.ValueChangeCheck
  Traductionscript.xmlReader:
    name:
      CSharp:
      - id: Traductionscript.xmlReader
        name: xmlReader
        nameWithType: xmlReader
        qualifiedName: Traductionscript.xmlReader
      VB:
      - id: Traductionscript.xmlReader
        name: xmlReader
        nameWithType: xmlReader
        qualifiedName: Traductionscript.xmlReader
    isDefinition: true
    commentId: T:Traductionscript.xmlReader
  Traductionscript.MenuTrad:
    name:
      CSharp:
      - id: Traductionscript.MenuTrad
        name: MenuTrad
        nameWithType: MenuTrad
        qualifiedName: Traductionscript.MenuTrad
      VB:
      - id: Traductionscript.MenuTrad
        name: MenuTrad
        nameWithType: MenuTrad
        qualifiedName: Traductionscript.MenuTrad
    isDefinition: true
    commentId: T:Traductionscript.MenuTrad
  Traductionscript.InitialisationTrad:
    name:
      CSharp:
      - id: Traductionscript.InitialisationTrad
        name: InitialisationTrad
        nameWithType: InitialisationTrad
        qualifiedName: Traductionscript.InitialisationTrad
      VB:
      - id: Traductionscript.InitialisationTrad
        name: InitialisationTrad
        nameWithType: InitialisationTrad
        qualifiedName: Traductionscript.InitialisationTrad
    isDefinition: true
    commentId: T:Traductionscript.InitialisationTrad
  Traductionscript.ConfigTrad:
    name:
      CSharp:
      - id: Traductionscript.ConfigTrad
        name: ConfigTrad
        nameWithType: ConfigTrad
        qualifiedName: Traductionscript.ConfigTrad
      VB:
      - id: Traductionscript.ConfigTrad
        name: ConfigTrad
        nameWithType: ConfigTrad
        qualifiedName: Traductionscript.ConfigTrad
    isDefinition: true
    commentId: T:Traductionscript.ConfigTrad
  Traductionscript.ModeTrad:
    name:
      CSharp:
      - id: Traductionscript.ModeTrad
        name: ModeTrad
        nameWithType: ModeTrad
        qualifiedName: Traductionscript.ModeTrad
      VB:
      - id: Traductionscript.ModeTrad
        name: ModeTrad
        nameWithType: ModeTrad
        qualifiedName: Traductionscript.ModeTrad
    isDefinition: true
    commentId: T:Traductionscript.ModeTrad
  Traductionscript.SavesSelectionTrad:
    name:
      CSharp:
      - id: Traductionscript.SavesSelectionTrad
        name: SavesSelectionTrad
        nameWithType: SavesSelectionTrad
        qualifiedName: Traductionscript.SavesSelectionTrad
      VB:
      - id: Traductionscript.SavesSelectionTrad
        name: SavesSelectionTrad
        nameWithType: SavesSelectionTrad
        qualifiedName: Traductionscript.SavesSelectionTrad
    isDefinition: true
    commentId: T:Traductionscript.SavesSelectionTrad
  Traductionscript.BoatSelectTrad:
    name:
      CSharp:
      - id: Traductionscript.BoatSelectTrad
        name: BoatSelectTrad
        nameWithType: BoatSelectTrad
        qualifiedName: Traductionscript.BoatSelectTrad
      VB:
      - id: Traductionscript.BoatSelectTrad
        name: BoatSelectTrad
        nameWithType: BoatSelectTrad
        qualifiedName: Traductionscript.BoatSelectTrad
    isDefinition: true
    commentId: T:Traductionscript.BoatSelectTrad
  Traductionscript:
    name:
      CSharp:
      - name: Traductionscript
        nameWithType: Traductionscript
        qualifiedName: Traductionscript
      VB:
      - name: Traductionscript
        nameWithType: Traductionscript
        qualifiedName: Traductionscript
    isDefinition: true
    commentId: N:Traductionscript
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  System.Single:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Single
  PRace.Time.GetAccFactorValue*:
    name:
      CSharp:
      - id: PRace.Time.GetAccFactorValue*
        name: GetAccFactorValue
        nameWithType: Time.GetAccFactorValue
        qualifiedName: PRace.Time.GetAccFactorValue
      VB:
      - id: PRace.Time.GetAccFactorValue*
        name: GetAccFactorValue
        nameWithType: Time.GetAccFactorValue
        qualifiedName: PRace.Time.GetAccFactorValue
    isDefinition: true
    commentId: Overload:PRace.Time.GetAccFactorValue
  PRace.Time.SetAccFactor*:
    name:
      CSharp:
      - id: PRace.Time.SetAccFactor*
        name: SetAccFactor
        nameWithType: Time.SetAccFactor
        qualifiedName: PRace.Time.SetAccFactor
      VB:
      - id: PRace.Time.SetAccFactor*
        name: SetAccFactor
        nameWithType: Time.SetAccFactor
        qualifiedName: PRace.Time.SetAccFactor
    isDefinition: true
    commentId: Overload:PRace.Time.SetAccFactor
  PRace.Time.GetTickValue*:
    name:
      CSharp:
      - id: PRace.Time.GetTickValue*
        name: GetTickValue
        nameWithType: Time.GetTickValue
        qualifiedName: PRace.Time.GetTickValue
      VB:
      - id: PRace.Time.GetTickValue*
        name: GetTickValue
        nameWithType: Time.GetTickValue
        qualifiedName: PRace.Time.GetTickValue
    isDefinition: true
    commentId: Overload:PRace.Time.GetTickValue
  PRace.Time.SetTick*:
    name:
      CSharp:
      - id: PRace.Time.SetTick*
        name: SetTick
        nameWithType: Time.SetTick
        qualifiedName: PRace.Time.SetTick
      VB:
      - id: PRace.Time.SetTick*
        name: SetTick
        nameWithType: Time.SetTick
        qualifiedName: PRace.Time.SetTick
    isDefinition: true
    commentId: Overload:PRace.Time.SetTick
  PRace.Time:
    name:
      CSharp:
      - id: PRace.Time
        name: Time
        nameWithType: Time
        qualifiedName: PRace.Time
      VB:
      - id: PRace.Time
        name: Time
        nameWithType: Time
        qualifiedName: PRace.Time
    isDefinition: true
    parent: PRace
    commentId: T:PRace.Time
  System.Collections.Generic.Dictionary`2:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.Dictionary`2
  System.Collections.Generic:
    name:
      CSharp:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
        isExternal: true
      VB:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
    isDefinition: true
    commentId: N:System.Collections.Generic
  System.Collections.Generic.Dictionary{System.Single,System.Collections.Generic.Dictionary{System.Single,System.Single}}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.Single,System.Collections.Generic.Dictionary{System.Single,System.Single}}
  PRace.Polaire.#ctor*:
    name:
      CSharp:
      - id: PRace.Polaire.#ctor*
        name: Polaire
        nameWithType: Polaire.Polaire
        qualifiedName: PRace.Polaire.Polaire
      VB:
      - id: PRace.Polaire.#ctor*
        name: Polaire
        nameWithType: Polaire.Polaire
        qualifiedName: PRace.Polaire.Polaire
    isDefinition: true
    commentId: Overload:PRace.Polaire.#ctor
  System.Single[]:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  PRace.Polaire.GetNearest*:
    name:
      CSharp:
      - id: PRace.Polaire.GetNearest*
        name: GetNearest
        nameWithType: Polaire.GetNearest
        qualifiedName: PRace.Polaire.GetNearest
      VB:
      - id: PRace.Polaire.GetNearest*
        name: GetNearest
        nameWithType: Polaire.GetNearest
        qualifiedName: PRace.Polaire.GetNearest
    isDefinition: true
    commentId: Overload:PRace.Polaire.GetNearest
  PRace.Polaire.getSpeed*:
    name:
      CSharp:
      - id: PRace.Polaire.getSpeed*
        name: getSpeed
        nameWithType: Polaire.getSpeed
        qualifiedName: PRace.Polaire.getSpeed
      VB:
      - id: PRace.Polaire.getSpeed*
        name: getSpeed
        nameWithType: Polaire.getSpeed
        qualifiedName: PRace.Polaire.getSpeed
    isDefinition: true
    commentId: Overload:PRace.Polaire.getSpeed
  PRace.Polaire.setName*:
    name:
      CSharp:
      - id: PRace.Polaire.setName*
        name: setName
        nameWithType: Polaire.setName
        qualifiedName: PRace.Polaire.setName
      VB:
      - id: PRace.Polaire.setName*
        name: setName
        nameWithType: Polaire.setName
        qualifiedName: PRace.Polaire.setName
    isDefinition: true
    commentId: Overload:PRace.Polaire.setName
  PRace.Polaire.getName*:
    name:
      CSharp:
      - id: PRace.Polaire.getName*
        name: getName
        nameWithType: Polaire.getName
        qualifiedName: PRace.Polaire.getName
      VB:
      - id: PRace.Polaire.getName*
        name: getName
        nameWithType: Polaire.getName
        qualifiedName: PRace.Polaire.getName
    isDefinition: true
    commentId: Overload:PRace.Polaire.getName
  PRace.Polaire.setPath*:
    name:
      CSharp:
      - id: PRace.Polaire.setPath*
        name: setPath
        nameWithType: Polaire.setPath
        qualifiedName: PRace.Polaire.setPath
      VB:
      - id: PRace.Polaire.setPath*
        name: setPath
        nameWithType: Polaire.setPath
        qualifiedName: PRace.Polaire.setPath
    isDefinition: true
    commentId: Overload:PRace.Polaire.setPath
  PRace.Polaire.getPath*:
    name:
      CSharp:
      - id: PRace.Polaire.getPath*
        name: getPath
        nameWithType: Polaire.getPath
        qualifiedName: PRace.Polaire.getPath
      VB:
      - id: PRace.Polaire.getPath*
        name: getPath
        nameWithType: Polaire.getPath
        qualifiedName: PRace.Polaire.getPath
    isDefinition: true
    commentId: Overload:PRace.Polaire.getPath
  PRace.Polaire:
    name:
      CSharp:
      - id: PRace.Polaire
        name: Polaire
        nameWithType: Polaire
        qualifiedName: PRace.Polaire
      VB:
      - id: PRace.Polaire
        name: Polaire
        nameWithType: Polaire
        qualifiedName: PRace.Polaire
    isDefinition: true
    parent: PRace
    commentId: T:PRace.Polaire
  PRace:
    name:
      CSharp:
      - name: PRace
        nameWithType: PRace
        qualifiedName: PRace
      VB:
      - name: PRace
        nameWithType: PRace
        qualifiedName: PRace
    isDefinition: true
    commentId: N:PRace
  PRace.ModeCommande:
    name:
      CSharp:
      - id: PRace.ModeCommande
        name: ModeCommande
        nameWithType: ModeCommande
        qualifiedName: PRace.ModeCommande
      VB:
      - id: PRace.ModeCommande
        name: ModeCommande
        nameWithType: ModeCommande
        qualifiedName: PRace.ModeCommande
    isDefinition: true
    parent: PRace
    commentId: T:PRace.ModeCommande
  PRace.Competitor.#ctor*:
    name:
      CSharp:
      - id: PRace.Competitor.#ctor*
        name: Competitor
        nameWithType: Competitor.Competitor
        qualifiedName: PRace.Competitor.Competitor
      VB:
      - id: PRace.Competitor.#ctor*
        name: Competitor
        nameWithType: Competitor.Competitor
        qualifiedName: PRace.Competitor.Competitor
    isDefinition: true
    commentId: Overload:PRace.Competitor.#ctor
  PRace.Position:
    name:
      CSharp:
      - id: PRace.Position
        name: Position
        nameWithType: Position
        qualifiedName: PRace.Position
      VB:
      - id: PRace.Position
        name: Position
        nameWithType: Position
        qualifiedName: PRace.Position
    isDefinition: true
    parent: PRace
    commentId: T:PRace.Position
  PRace.Competitor.SetPosition*:
    name:
      CSharp:
      - id: PRace.Competitor.SetPosition*
        name: SetPosition
        nameWithType: Competitor.SetPosition
        qualifiedName: PRace.Competitor.SetPosition
      VB:
      - id: PRace.Competitor.SetPosition*
        name: SetPosition
        nameWithType: Competitor.SetPosition
        qualifiedName: PRace.Competitor.SetPosition
    isDefinition: true
    commentId: Overload:PRace.Competitor.SetPosition
  PRace.Competitor.GetPosition*:
    name:
      CSharp:
      - id: PRace.Competitor.GetPosition*
        name: GetPosition
        nameWithType: Competitor.GetPosition
        qualifiedName: PRace.Competitor.GetPosition
      VB:
      - id: PRace.Competitor.GetPosition*
        name: GetPosition
        nameWithType: Competitor.GetPosition
        qualifiedName: PRace.Competitor.GetPosition
    isDefinition: true
    commentId: Overload:PRace.Competitor.GetPosition
  PRace.Competitor.GetId*:
    name:
      CSharp:
      - id: PRace.Competitor.GetId*
        name: GetId
        nameWithType: Competitor.GetId
        qualifiedName: PRace.Competitor.GetId
      VB:
      - id: PRace.Competitor.GetId*
        name: GetId
        nameWithType: Competitor.GetId
        qualifiedName: PRace.Competitor.GetId
    isDefinition: true
    commentId: Overload:PRace.Competitor.GetId
  PRace.Competitor:
    name:
      CSharp:
      - id: PRace.Competitor
        name: Competitor
        nameWithType: Competitor
        qualifiedName: PRace.Competitor
      VB:
      - id: PRace.Competitor
        name: Competitor
        nameWithType: Competitor
        qualifiedName: PRace.Competitor
    isDefinition: true
    commentId: T:PRace.Competitor
  System.Double:
    name:
      CSharp:
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      VB:
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Double
  PRace.Position.#ctor*:
    name:
      CSharp:
      - id: PRace.Position.#ctor*
        name: Position
        nameWithType: Position.Position
        qualifiedName: PRace.Position.Position
      VB:
      - id: PRace.Position.#ctor*
        name: Position
        nameWithType: Position.Position
        qualifiedName: PRace.Position.Position
    isDefinition: true
    commentId: Overload:PRace.Position.#ctor
  PRace.Position.Update*:
    name:
      CSharp:
      - id: PRace.Position.Update*
        name: Update
        nameWithType: Position.Update
        qualifiedName: PRace.Position.Update
      VB:
      - id: PRace.Position.Update*
        name: Update
        nameWithType: Position.Update
        qualifiedName: PRace.Position.Update
    isDefinition: true
    commentId: Overload:PRace.Position.Update
  PRace.Position.Coords:
    name:
      CSharp:
      - id: PRace.Position.Coords
        name: Position.Coords
        nameWithType: Position.Coords
        qualifiedName: PRace.Position.Coords
      VB:
      - id: PRace.Position.Coords
        name: Position.Coords
        nameWithType: Position.Coords
        qualifiedName: PRace.Position.Coords
    isDefinition: true
    parent: PRace
    commentId: T:PRace.Position.Coords
  PRace.Position.GetCoordLat*:
    name:
      CSharp:
      - id: PRace.Position.GetCoordLat*
        name: GetCoordLat
        nameWithType: Position.GetCoordLat
        qualifiedName: PRace.Position.GetCoordLat
      VB:
      - id: PRace.Position.GetCoordLat*
        name: GetCoordLat
        nameWithType: Position.GetCoordLat
        qualifiedName: PRace.Position.GetCoordLat
    isDefinition: true
    commentId: Overload:PRace.Position.GetCoordLat
  PRace.Position.GetCoordLong*:
    name:
      CSharp:
      - id: PRace.Position.GetCoordLong*
        name: GetCoordLong
        nameWithType: Position.GetCoordLong
        qualifiedName: PRace.Position.GetCoordLong
      VB:
      - id: PRace.Position.GetCoordLong*
        name: GetCoordLong
        nameWithType: Position.GetCoordLong
        qualifiedName: PRace.Position.GetCoordLong
    isDefinition: true
    commentId: Overload:PRace.Position.GetCoordLong
  PRace.Position.GetLongitude*:
    name:
      CSharp:
      - id: PRace.Position.GetLongitude*
        name: GetLongitude
        nameWithType: Position.GetLongitude
        qualifiedName: PRace.Position.GetLongitude
      VB:
      - id: PRace.Position.GetLongitude*
        name: GetLongitude
        nameWithType: Position.GetLongitude
        qualifiedName: PRace.Position.GetLongitude
    isDefinition: true
    commentId: Overload:PRace.Position.GetLongitude
  PRace.Position.GetLatitude*:
    name:
      CSharp:
      - id: PRace.Position.GetLatitude*
        name: GetLatitude
        nameWithType: Position.GetLatitude
        qualifiedName: PRace.Position.GetLatitude
      VB:
      - id: PRace.Position.GetLatitude*
        name: GetLatitude
        nameWithType: Position.GetLatitude
        qualifiedName: PRace.Position.GetLatitude
    isDefinition: true
    commentId: Overload:PRace.Position.GetLatitude
  PRace.Position.GetLatitudeAngle*:
    name:
      CSharp:
      - id: PRace.Position.GetLatitudeAngle*
        name: GetLatitudeAngle
        nameWithType: Position.GetLatitudeAngle
        qualifiedName: PRace.Position.GetLatitudeAngle
      VB:
      - id: PRace.Position.GetLatitudeAngle*
        name: GetLatitudeAngle
        nameWithType: Position.GetLatitudeAngle
        qualifiedName: PRace.Position.GetLatitudeAngle
    isDefinition: true
    commentId: Overload:PRace.Position.GetLatitudeAngle
  PRace.Position.GetLongitudeAngle*:
    name:
      CSharp:
      - id: PRace.Position.GetLongitudeAngle*
        name: GetLongitudeAngle
        nameWithType: Position.GetLongitudeAngle
        qualifiedName: PRace.Position.GetLongitudeAngle
      VB:
      - id: PRace.Position.GetLongitudeAngle*
        name: GetLongitudeAngle
        nameWithType: Position.GetLongitudeAngle
        qualifiedName: PRace.Position.GetLongitudeAngle
    isDefinition: true
    commentId: Overload:PRace.Position.GetLongitudeAngle
  PRace.Position.ToString*:
    name:
      CSharp:
      - id: PRace.Position.ToString*
        name: ToString
        nameWithType: Position.ToString
        qualifiedName: PRace.Position.ToString
      VB:
      - id: PRace.Position.ToString*
        name: ToString
        nameWithType: Position.ToString
        qualifiedName: PRace.Position.ToString
    isDefinition: true
    commentId: Overload:PRace.Position.ToString
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  PRace.Position.Equals*:
    name:
      CSharp:
      - id: PRace.Position.Equals*
        name: Equals
        nameWithType: Position.Equals
        qualifiedName: PRace.Position.Equals
      VB:
      - id: PRace.Position.Equals*
        name: Equals
        nameWithType: Position.Equals
        qualifiedName: PRace.Position.Equals
    isDefinition: true
    commentId: Overload:PRace.Position.Equals
  System.ValueType:
    name:
      CSharp:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
      VB:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.ValueType
  System.ValueType.Equals(System.Object):
    name:
      CSharp:
      - id: System.ValueType.Equals(System.Object)
        name: Equals
        nameWithType: ValueType.Equals
        qualifiedName: System.ValueType.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.Equals(System.Object)
        name: Equals
        nameWithType: ValueType.Equals
        qualifiedName: System.ValueType.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.Equals(System.Object)
  System.ValueType.GetHashCode:
    name:
      CSharp:
      - id: System.ValueType.GetHashCode
        name: GetHashCode
        nameWithType: ValueType.GetHashCode
        qualifiedName: System.ValueType.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.GetHashCode
        name: GetHashCode
        nameWithType: ValueType.GetHashCode
        qualifiedName: System.ValueType.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.GetHashCode
  System.Char:
    name:
      CSharp:
      - id: System.Char
        name: Char
        nameWithType: Char
        qualifiedName: System.Char
        isExternal: true
      VB:
      - id: System.Char
        name: Char
        nameWithType: Char
        qualifiedName: System.Char
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Char
  PRace.Position.Coords.#ctor*:
    name:
      CSharp:
      - id: PRace.Position.Coords.#ctor*
        name: Coords
        nameWithType: Position.Coords.Coords
        qualifiedName: PRace.Position.Coords.Coords
      VB:
      - id: PRace.Position.Coords.#ctor*
        name: Coords
        nameWithType: Position.Coords.Coords
        qualifiedName: PRace.Position.Coords.Coords
    isDefinition: true
    commentId: Overload:PRace.Position.Coords.#ctor
  PRace.Position.Coords.pos*:
    name:
      CSharp:
      - id: PRace.Position.Coords.pos*
        name: pos
        nameWithType: Position.Coords.pos
        qualifiedName: PRace.Position.Coords.pos
      VB:
      - id: PRace.Position.Coords.pos*
        name: pos
        nameWithType: Position.Coords.pos
        qualifiedName: PRace.Position.Coords.pos
    isDefinition: true
    commentId: Overload:PRace.Position.Coords.pos
  PRace.Position.Coords.degre*:
    name:
      CSharp:
      - id: PRace.Position.Coords.degre*
        name: degre
        nameWithType: Position.Coords.degre
        qualifiedName: PRace.Position.Coords.degre
      VB:
      - id: PRace.Position.Coords.degre*
        name: degre
        nameWithType: Position.Coords.degre
        qualifiedName: PRace.Position.Coords.degre
    isDefinition: true
    commentId: Overload:PRace.Position.Coords.degre
  PRace.Position.Coords.min*:
    name:
      CSharp:
      - id: PRace.Position.Coords.min*
        name: min
        nameWithType: Position.Coords.min
        qualifiedName: PRace.Position.Coords.min
      VB:
      - id: PRace.Position.Coords.min*
        name: min
        nameWithType: Position.Coords.min
        qualifiedName: PRace.Position.Coords.min
    isDefinition: true
    commentId: Overload:PRace.Position.Coords.min
  PRace.Position.Coords.sec*:
    name:
      CSharp:
      - id: PRace.Position.Coords.sec*
        name: sec
        nameWithType: Position.Coords.sec
        qualifiedName: PRace.Position.Coords.sec
      VB:
      - id: PRace.Position.Coords.sec*
        name: sec
        nameWithType: Position.Coords.sec
        qualifiedName: PRace.Position.Coords.sec
    isDefinition: true
    commentId: Overload:PRace.Position.Coords.sec
  System.ValueType.ToString:
    name:
      CSharp:
      - id: System.ValueType.ToString
        name: ToString
        nameWithType: ValueType.ToString
        qualifiedName: System.ValueType.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.ToString
        name: ToString
        nameWithType: ValueType.ToString
        qualifiedName: System.ValueType.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.ToString
  PRace.Position.Coords.ToString*:
    name:
      CSharp:
      - id: PRace.Position.Coords.ToString*
        name: ToString
        nameWithType: Position.Coords.ToString
        qualifiedName: PRace.Position.Coords.ToString
      VB:
      - id: PRace.Position.Coords.ToString*
        name: ToString
        nameWithType: Position.Coords.ToString
        qualifiedName: PRace.Position.Coords.ToString
    isDefinition: true
    commentId: Overload:PRace.Position.Coords.ToString
  PRace.Boat.#ctor*:
    name:
      CSharp:
      - id: PRace.Boat.#ctor*
        name: Boat
        nameWithType: Boat.Boat
        qualifiedName: PRace.Boat.Boat
      VB:
      - id: PRace.Boat.#ctor*
        name: Boat
        nameWithType: Boat.Boat
        qualifiedName: PRace.Boat.Boat
    isDefinition: true
    commentId: Overload:PRace.Boat.#ctor
  Communication.DataProcessing.Json:
    name:
      CSharp:
      - name: Communication.DataProcessing.Json
        nameWithType: Communication.DataProcessing.Json
        qualifiedName: Communication.DataProcessing.Json
      VB:
      - name: Communication.DataProcessing.Json
        nameWithType: Communication.DataProcessing.Json
        qualifiedName: Communication.DataProcessing.Json
    isDefinition: true
    commentId: N:Communication.DataProcessing.Json
  Communication.DataProcessing.Json.BoatType:
    name:
      CSharp:
      - id: Communication.DataProcessing.Json.BoatType
        name: BoatType
        nameWithType: BoatType
        qualifiedName: Communication.DataProcessing.Json.BoatType
      VB:
      - id: Communication.DataProcessing.Json.BoatType
        name: BoatType
        nameWithType: BoatType
        qualifiedName: Communication.DataProcessing.Json.BoatType
    isDefinition: true
    parent: Communication.DataProcessing.Json
    commentId: T:Communication.DataProcessing.Json.BoatType
  System.Collections.Generic.List`1:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.List`1
  System.Collections.Generic.List{PRace.Polaire}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: PRace.Polaire
        name: Polaire
        nameWithType: Polaire
        qualifiedName: PRace.Polaire
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: PRace.Polaire
        name: Polaire
        nameWithType: Polaire
        qualifiedName: PRace.Polaire
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{PRace.Polaire}
  PRace.Race:
    name:
      CSharp:
      - id: PRace.Race
        name: Race
        nameWithType: Race
        qualifiedName: PRace.Race
      VB:
      - id: PRace.Race
        name: Race
        nameWithType: Race
        qualifiedName: PRace.Race
    isDefinition: true
    parent: PRace
    commentId: T:PRace.Race
  PRace.Boat.init*:
    name:
      CSharp:
      - id: PRace.Boat.init*
        name: init
        nameWithType: Boat.init
        qualifiedName: PRace.Boat.init
      VB:
      - id: PRace.Boat.init*
        name: init
        nameWithType: Boat.init
        qualifiedName: PRace.Boat.init
    isDefinition: true
    commentId: Overload:PRace.Boat.init
  PRace.Boat.GetId*:
    name:
      CSharp:
      - id: PRace.Boat.GetId*
        name: GetId
        nameWithType: Boat.GetId
        qualifiedName: PRace.Boat.GetId
      VB:
      - id: PRace.Boat.GetId*
        name: GetId
        nameWithType: Boat.GetId
        qualifiedName: PRace.Boat.GetId
    isDefinition: true
    commentId: Overload:PRace.Boat.GetId
  PRace.Boat.getCap*:
    name:
      CSharp:
      - id: PRace.Boat.getCap*
        name: getCap
        nameWithType: Boat.getCap
        qualifiedName: PRace.Boat.getCap
      VB:
      - id: PRace.Boat.getCap*
        name: getCap
        nameWithType: Boat.getCap
        qualifiedName: PRace.Boat.getCap
    isDefinition: true
    commentId: Overload:PRace.Boat.getCap
  PRace.Boat.setCap*:
    name:
      CSharp:
      - id: PRace.Boat.setCap*
        name: setCap
        nameWithType: Boat.setCap
        qualifiedName: PRace.Boat.setCap
      VB:
      - id: PRace.Boat.setCap*
        name: setCap
        nameWithType: Boat.setCap
        qualifiedName: PRace.Boat.setCap
    isDefinition: true
    commentId: Overload:PRace.Boat.setCap
  PRace.Boat.getCapRad*:
    name:
      CSharp:
      - id: PRace.Boat.getCapRad*
        name: getCapRad
        nameWithType: Boat.getCapRad
        qualifiedName: PRace.Boat.getCapRad
      VB:
      - id: PRace.Boat.getCapRad*
        name: getCapRad
        nameWithType: Boat.getCapRad
        qualifiedName: PRace.Boat.getCapRad
    isDefinition: true
    commentId: Overload:PRace.Boat.getCapRad
  PRace.Boat.setCapRad*:
    name:
      CSharp:
      - id: PRace.Boat.setCapRad*
        name: setCapRad
        nameWithType: Boat.setCapRad
        qualifiedName: PRace.Boat.setCapRad
      VB:
      - id: PRace.Boat.setCapRad*
        name: setCapRad
        nameWithType: Boat.setCapRad
        qualifiedName: PRace.Boat.setCapRad
    isDefinition: true
    commentId: Overload:PRace.Boat.setCapRad
  PRace.Boat.GetCapRegulateurAmure*:
    name:
      CSharp:
      - id: PRace.Boat.GetCapRegulateurAmure*
        name: GetCapRegulateurAmure
        nameWithType: Boat.GetCapRegulateurAmure
        qualifiedName: PRace.Boat.GetCapRegulateurAmure
      VB:
      - id: PRace.Boat.GetCapRegulateurAmure*
        name: GetCapRegulateurAmure
        nameWithType: Boat.GetCapRegulateurAmure
        qualifiedName: PRace.Boat.GetCapRegulateurAmure
    isDefinition: true
    commentId: Overload:PRace.Boat.GetCapRegulateurAmure
  PRace.Boat.GetPosition*:
    name:
      CSharp:
      - id: PRace.Boat.GetPosition*
        name: GetPosition
        nameWithType: Boat.GetPosition
        qualifiedName: PRace.Boat.GetPosition
      VB:
      - id: PRace.Boat.GetPosition*
        name: GetPosition
        nameWithType: Boat.GetPosition
        qualifiedName: PRace.Boat.GetPosition
    isDefinition: true
    commentId: Overload:PRace.Boat.GetPosition
  PRace.Boat.SetModeCommande*:
    name:
      CSharp:
      - id: PRace.Boat.SetModeCommande*
        name: SetModeCommande
        nameWithType: Boat.SetModeCommande
        qualifiedName: PRace.Boat.SetModeCommande
      VB:
      - id: PRace.Boat.SetModeCommande*
        name: SetModeCommande
        nameWithType: Boat.SetModeCommande
        qualifiedName: PRace.Boat.SetModeCommande
    isDefinition: true
    commentId: Overload:PRace.Boat.SetModeCommande
  PRace.Boat.switchCommande*:
    name:
      CSharp:
      - id: PRace.Boat.switchCommande*
        name: switchCommande
        nameWithType: Boat.switchCommande
        qualifiedName: PRace.Boat.switchCommande
      VB:
      - id: PRace.Boat.switchCommande*
        name: switchCommande
        nameWithType: Boat.switchCommande
        qualifiedName: PRace.Boat.switchCommande
    isDefinition: true
    commentId: Overload:PRace.Boat.switchCommande
  PRace.Boat.GetModeCommande*:
    name:
      CSharp:
      - id: PRace.Boat.GetModeCommande*
        name: GetModeCommande
        nameWithType: Boat.GetModeCommande
        qualifiedName: PRace.Boat.GetModeCommande
      VB:
      - id: PRace.Boat.GetModeCommande*
        name: GetModeCommande
        nameWithType: Boat.GetModeCommande
        qualifiedName: PRace.Boat.GetModeCommande
    isDefinition: true
    commentId: Overload:PRace.Boat.GetModeCommande
  Environement:
    name:
      CSharp:
      - name: Environement
        nameWithType: Environement
        qualifiedName: Environement
      VB:
      - name: Environement
        nameWithType: Environement
        qualifiedName: Environement
    isDefinition: true
    commentId: N:Environement
  Environement.Environment:
    name:
      CSharp:
      - id: Environement.Environment
        name: Environment
        nameWithType: Environment
        qualifiedName: Environement.Environment
      VB:
      - id: Environement.Environment
        name: Environment
        nameWithType: Environment
        qualifiedName: Environement.Environment
    isDefinition: true
    parent: Environement
    commentId: T:Environement.Environment
  PRace.Boat.UpdateCap*:
    name:
      CSharp:
      - id: PRace.Boat.UpdateCap*
        name: UpdateCap
        nameWithType: Boat.UpdateCap
        qualifiedName: PRace.Boat.UpdateCap
      VB:
      - id: PRace.Boat.UpdateCap*
        name: UpdateCap
        nameWithType: Boat.UpdateCap
        qualifiedName: PRace.Boat.UpdateCap
    isDefinition: true
    commentId: Overload:PRace.Boat.UpdateCap
  PRace.Boat.setPosition*:
    name:
      CSharp:
      - id: PRace.Boat.setPosition*
        name: setPosition
        nameWithType: Boat.setPosition
        qualifiedName: PRace.Boat.setPosition
      VB:
      - id: PRace.Boat.setPosition*
        name: setPosition
        nameWithType: Boat.setPosition
        qualifiedName: PRace.Boat.setPosition
    isDefinition: true
    commentId: Overload:PRace.Boat.setPosition
  PRace.Boat.SetAvailablePolaire*:
    name:
      CSharp:
      - id: PRace.Boat.SetAvailablePolaire*
        name: SetAvailablePolaire
        nameWithType: Boat.SetAvailablePolaire
        qualifiedName: PRace.Boat.SetAvailablePolaire
      VB:
      - id: PRace.Boat.SetAvailablePolaire*
        name: SetAvailablePolaire
        nameWithType: Boat.SetAvailablePolaire
        qualifiedName: PRace.Boat.SetAvailablePolaire
    isDefinition: true
    commentId: Overload:PRace.Boat.SetAvailablePolaire
  PRace.Boat.getAvailablePolaire*:
    name:
      CSharp:
      - id: PRace.Boat.getAvailablePolaire*
        name: getAvailablePolaire
        nameWithType: Boat.getAvailablePolaire
        qualifiedName: PRace.Boat.getAvailablePolaire
      VB:
      - id: PRace.Boat.getAvailablePolaire*
        name: getAvailablePolaire
        nameWithType: Boat.getAvailablePolaire
        qualifiedName: PRace.Boat.getAvailablePolaire
    isDefinition: true
    commentId: Overload:PRace.Boat.getAvailablePolaire
  PRace.DegreeIncrement:
    name:
      CSharp:
      - id: PRace.DegreeIncrement
        name: DegreeIncrement
        nameWithType: DegreeIncrement
        qualifiedName: PRace.DegreeIncrement
      VB:
      - id: PRace.DegreeIncrement
        name: DegreeIncrement
        nameWithType: DegreeIncrement
        qualifiedName: PRace.DegreeIncrement
    isDefinition: true
    parent: PRace
    commentId: T:PRace.DegreeIncrement
  PRace.Boat.IncrementCap*:
    name:
      CSharp:
      - id: PRace.Boat.IncrementCap*
        name: IncrementCap
        nameWithType: Boat.IncrementCap
        qualifiedName: PRace.Boat.IncrementCap
      VB:
      - id: PRace.Boat.IncrementCap*
        name: IncrementCap
        nameWithType: Boat.IncrementCap
        qualifiedName: PRace.Boat.IncrementCap
    isDefinition: true
    commentId: Overload:PRace.Boat.IncrementCap
  PRace.Boat.SetCurrentPolaire*:
    name:
      CSharp:
      - id: PRace.Boat.SetCurrentPolaire*
        name: SetCurrentPolaire
        nameWithType: Boat.SetCurrentPolaire
        qualifiedName: PRace.Boat.SetCurrentPolaire
      VB:
      - id: PRace.Boat.SetCurrentPolaire*
        name: SetCurrentPolaire
        nameWithType: Boat.SetCurrentPolaire
        qualifiedName: PRace.Boat.SetCurrentPolaire
    isDefinition: true
    commentId: Overload:PRace.Boat.SetCurrentPolaire
  PRace.Boat.GetCurrentPolaire*:
    name:
      CSharp:
      - id: PRace.Boat.GetCurrentPolaire*
        name: GetCurrentPolaire
        nameWithType: Boat.GetCurrentPolaire
        qualifiedName: PRace.Boat.GetCurrentPolaire
      VB:
      - id: PRace.Boat.GetCurrentPolaire*
        name: GetCurrentPolaire
        nameWithType: Boat.GetCurrentPolaire
        qualifiedName: PRace.Boat.GetCurrentPolaire
    isDefinition: true
    commentId: Overload:PRace.Boat.GetCurrentPolaire
  PRace.Boat.GetAllureCap*:
    name:
      CSharp:
      - id: PRace.Boat.GetAllureCap*
        name: GetAllureCap
        nameWithType: Boat.GetAllureCap
        qualifiedName: PRace.Boat.GetAllureCap
      VB:
      - id: PRace.Boat.GetAllureCap*
        name: GetAllureCap
        nameWithType: Boat.GetAllureCap
        qualifiedName: PRace.Boat.GetAllureCap
    isDefinition: true
    commentId: Overload:PRace.Boat.GetAllureCap
  PRace.Boat.setNullCurrentPolar*:
    name:
      CSharp:
      - id: PRace.Boat.setNullCurrentPolar*
        name: setNullCurrentPolar
        nameWithType: Boat.setNullCurrentPolar
        qualifiedName: PRace.Boat.setNullCurrentPolar
      VB:
      - id: PRace.Boat.setNullCurrentPolar*
        name: setNullCurrentPolar
        nameWithType: Boat.setNullCurrentPolar
        qualifiedName: PRace.Boat.setNullCurrentPolar
    isDefinition: true
    commentId: Overload:PRace.Boat.setNullCurrentPolar
  PRace.Boat:
    name:
      CSharp:
      - id: PRace.Boat
        name: Boat
        nameWithType: Boat
        qualifiedName: PRace.Boat
      VB:
      - id: PRace.Boat
        name: Boat
        nameWithType: Boat
        qualifiedName: PRace.Boat
    isDefinition: true
    parent: PRace
    commentId: T:PRace.Boat
  PRace.WayPoint.#ctor*:
    name:
      CSharp:
      - id: PRace.WayPoint.#ctor*
        name: WayPoint
        nameWithType: WayPoint.WayPoint
        qualifiedName: PRace.WayPoint.WayPoint
      VB:
      - id: PRace.WayPoint.#ctor*
        name: WayPoint
        nameWithType: WayPoint.WayPoint
        qualifiedName: PRace.WayPoint.WayPoint
    isDefinition: true
    commentId: Overload:PRace.WayPoint.#ctor
  PRace.WayPoint.GetId*:
    name:
      CSharp:
      - id: PRace.WayPoint.GetId*
        name: GetId
        nameWithType: WayPoint.GetId
        qualifiedName: PRace.WayPoint.GetId
      VB:
      - id: PRace.WayPoint.GetId*
        name: GetId
        nameWithType: WayPoint.GetId
        qualifiedName: PRace.WayPoint.GetId
    isDefinition: true
    commentId: Overload:PRace.WayPoint.GetId
  PRace.WayPoint.Getnom*:
    name:
      CSharp:
      - id: PRace.WayPoint.Getnom*
        name: Getnom
        nameWithType: WayPoint.Getnom
        qualifiedName: PRace.WayPoint.Getnom
      VB:
      - id: PRace.WayPoint.Getnom*
        name: Getnom
        nameWithType: WayPoint.Getnom
        qualifiedName: PRace.WayPoint.Getnom
    isDefinition: true
    commentId: Overload:PRace.WayPoint.Getnom
  PRace.WayPoint.GetPosition*:
    name:
      CSharp:
      - id: PRace.WayPoint.GetPosition*
        name: GetPosition
        nameWithType: WayPoint.GetPosition
        qualifiedName: PRace.WayPoint.GetPosition
      VB:
      - id: PRace.WayPoint.GetPosition*
        name: GetPosition
        nameWithType: WayPoint.GetPosition
        qualifiedName: PRace.WayPoint.GetPosition
    isDefinition: true
    commentId: Overload:PRace.WayPoint.GetPosition
  PRace.WayPoint.SetPosition*:
    name:
      CSharp:
      - id: PRace.WayPoint.SetPosition*
        name: SetPosition
        nameWithType: WayPoint.SetPosition
        qualifiedName: PRace.WayPoint.SetPosition
      VB:
      - id: PRace.WayPoint.SetPosition*
        name: SetPosition
        nameWithType: WayPoint.SetPosition
        qualifiedName: PRace.WayPoint.SetPosition
    isDefinition: true
    commentId: Overload:PRace.WayPoint.SetPosition
  PRace.WayPoint:
    name:
      CSharp:
      - id: PRace.WayPoint
        name: WayPoint
        nameWithType: WayPoint
        qualifiedName: PRace.WayPoint
      VB:
      - id: PRace.WayPoint
        name: WayPoint
        nameWithType: WayPoint
        qualifiedName: PRace.WayPoint
    isDefinition: true
    commentId: T:PRace.WayPoint
  PRace.Mode:
    name:
      CSharp:
      - id: PRace.Mode
        name: Mode
        nameWithType: Mode
        qualifiedName: PRace.Mode
      VB:
      - id: PRace.Mode
        name: Mode
        nameWithType: Mode
        qualifiedName: PRace.Mode
    isDefinition: true
    parent: PRace
    commentId: T:PRace.Mode
  PRace.ModeCommande.RegulateurAmure:
    commentId: F:PRace.ModeCommande.RegulateurAmure
  PRace.RegulateurAmure.#ctor*:
    name:
      CSharp:
      - id: PRace.RegulateurAmure.#ctor*
        name: RegulateurAmure
        nameWithType: RegulateurAmure.RegulateurAmure
        qualifiedName: PRace.RegulateurAmure.RegulateurAmure
      VB:
      - id: PRace.RegulateurAmure.#ctor*
        name: RegulateurAmure
        nameWithType: RegulateurAmure.RegulateurAmure
        qualifiedName: PRace.RegulateurAmure.RegulateurAmure
    isDefinition: true
    commentId: Overload:PRace.RegulateurAmure.#ctor
  PRace.RegulateurAmure.Update_cap*:
    name:
      CSharp:
      - id: PRace.RegulateurAmure.Update_cap*
        name: Update_cap
        nameWithType: RegulateurAmure.Update_cap
        qualifiedName: PRace.RegulateurAmure.Update_cap
      VB:
      - id: PRace.RegulateurAmure.Update_cap*
        name: Update_cap
        nameWithType: RegulateurAmure.Update_cap
        qualifiedName: PRace.RegulateurAmure.Update_cap
    isDefinition: true
    commentId: Overload:PRace.RegulateurAmure.Update_cap
  PRace.RegulateurAmure.Get_cap*:
    name:
      CSharp:
      - id: PRace.RegulateurAmure.Get_cap*
        name: Get_cap
        nameWithType: RegulateurAmure.Get_cap
        qualifiedName: PRace.RegulateurAmure.Get_cap
      VB:
      - id: PRace.RegulateurAmure.Get_cap*
        name: Get_cap
        nameWithType: RegulateurAmure.Get_cap
        qualifiedName: PRace.RegulateurAmure.Get_cap
    isDefinition: true
    commentId: Overload:PRace.RegulateurAmure.Get_cap
  PRace.RegulateurAmure.SetCap*:
    name:
      CSharp:
      - id: PRace.RegulateurAmure.SetCap*
        name: SetCap
        nameWithType: RegulateurAmure.SetCap
        qualifiedName: PRace.RegulateurAmure.SetCap
      VB:
      - id: PRace.RegulateurAmure.SetCap*
        name: SetCap
        nameWithType: RegulateurAmure.SetCap
        qualifiedName: PRace.RegulateurAmure.SetCap
    isDefinition: true
    commentId: Overload:PRace.RegulateurAmure.SetCap
  PRace.RegulateurAmure:
    name:
      CSharp:
      - id: PRace.RegulateurAmure
        name: RegulateurAmure
        nameWithType: RegulateurAmure
        qualifiedName: PRace.RegulateurAmure
      VB:
      - id: PRace.RegulateurAmure
        name: RegulateurAmure
        nameWithType: RegulateurAmure
        qualifiedName: PRace.RegulateurAmure
    isDefinition: true
    commentId: T:PRace.RegulateurAmure
  PRace.Clock.#ctor*:
    name:
      CSharp:
      - id: PRace.Clock.#ctor*
        name: Clock
        nameWithType: Clock.Clock
        qualifiedName: PRace.Clock.Clock
      VB:
      - id: PRace.Clock.#ctor*
        name: Clock
        nameWithType: Clock.Clock
        qualifiedName: PRace.Clock.Clock
    isDefinition: true
    commentId: Overload:PRace.Clock.#ctor
  System.DateTime:
    name:
      CSharp:
      - id: System.DateTime
        name: DateTime
        nameWithType: DateTime
        qualifiedName: System.DateTime
        isExternal: true
      VB:
      - id: System.DateTime
        name: DateTime
        nameWithType: DateTime
        qualifiedName: System.DateTime
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.DateTime
  PRace.Clock.GetCurrentMoment*:
    name:
      CSharp:
      - id: PRace.Clock.GetCurrentMoment*
        name: GetCurrentMoment
        nameWithType: Clock.GetCurrentMoment
        qualifiedName: PRace.Clock.GetCurrentMoment
      VB:
      - id: PRace.Clock.GetCurrentMoment*
        name: GetCurrentMoment
        nameWithType: Clock.GetCurrentMoment
        qualifiedName: PRace.Clock.GetCurrentMoment
    isDefinition: true
    commentId: Overload:PRace.Clock.GetCurrentMoment
  PRace.Clock.IncrementTime*:
    name:
      CSharp:
      - id: PRace.Clock.IncrementTime*
        name: IncrementTime
        nameWithType: Clock.IncrementTime
        qualifiedName: PRace.Clock.IncrementTime
      VB:
      - id: PRace.Clock.IncrementTime*
        name: IncrementTime
        nameWithType: Clock.IncrementTime
        qualifiedName: PRace.Clock.IncrementTime
    isDefinition: true
    commentId: Overload:PRace.Clock.IncrementTime
  PRace.Clock.pause*:
    name:
      CSharp:
      - id: PRace.Clock.pause*
        name: pause
        nameWithType: Clock.pause
        qualifiedName: PRace.Clock.pause
      VB:
      - id: PRace.Clock.pause*
        name: pause
        nameWithType: Clock.pause
        qualifiedName: PRace.Clock.pause
    isDefinition: true
    commentId: Overload:PRace.Clock.pause
  PRace.Clock.Run*:
    name:
      CSharp:
      - id: PRace.Clock.Run*
        name: Run
        nameWithType: Clock.Run
        qualifiedName: PRace.Clock.Run
      VB:
      - id: PRace.Clock.Run*
        name: Run
        nameWithType: Clock.Run
        qualifiedName: PRace.Clock.Run
    isDefinition: true
    commentId: Overload:PRace.Clock.Run
  PRace.Clock.nextIteration*:
    name:
      CSharp:
      - id: PRace.Clock.nextIteration*
        name: nextIteration
        nameWithType: Clock.nextIteration
        qualifiedName: PRace.Clock.nextIteration
      VB:
      - id: PRace.Clock.nextIteration*
        name: nextIteration
        nameWithType: Clock.nextIteration
        qualifiedName: PRace.Clock.nextIteration
    isDefinition: true
    commentId: Overload:PRace.Clock.nextIteration
  PRace.Clock.waitTick*:
    name:
      CSharp:
      - id: PRace.Clock.waitTick*
        name: waitTick
        nameWithType: Clock.waitTick
        qualifiedName: PRace.Clock.waitTick
      VB:
      - id: PRace.Clock.waitTick*
        name: waitTick
        nameWithType: Clock.waitTick
        qualifiedName: PRace.Clock.waitTick
    isDefinition: true
    commentId: Overload:PRace.Clock.waitTick
  PRace.Clock.cantKeepUp*:
    name:
      CSharp:
      - id: PRace.Clock.cantKeepUp*
        name: cantKeepUp
        nameWithType: Clock.cantKeepUp
        qualifiedName: PRace.Clock.cantKeepUp
      VB:
      - id: PRace.Clock.cantKeepUp*
        name: cantKeepUp
        nameWithType: Clock.cantKeepUp
        qualifiedName: PRace.Clock.cantKeepUp
    isDefinition: true
    commentId: Overload:PRace.Clock.cantKeepUp
  PRace.Clock.SetCurrentMoment*:
    name:
      CSharp:
      - id: PRace.Clock.SetCurrentMoment*
        name: SetCurrentMoment
        nameWithType: Clock.SetCurrentMoment
        qualifiedName: PRace.Clock.SetCurrentMoment
      VB:
      - id: PRace.Clock.SetCurrentMoment*
        name: SetCurrentMoment
        nameWithType: Clock.SetCurrentMoment
        qualifiedName: PRace.Clock.SetCurrentMoment
    isDefinition: true
    commentId: Overload:PRace.Clock.SetCurrentMoment
  PRace.Clock.GetIsPause*:
    name:
      CSharp:
      - id: PRace.Clock.GetIsPause*
        name: GetIsPause
        nameWithType: Clock.GetIsPause
        qualifiedName: PRace.Clock.GetIsPause
      VB:
      - id: PRace.Clock.GetIsPause*
        name: GetIsPause
        nameWithType: Clock.GetIsPause
        qualifiedName: PRace.Clock.GetIsPause
    isDefinition: true
    commentId: Overload:PRace.Clock.GetIsPause
  PRace.Clock:
    name:
      CSharp:
      - id: PRace.Clock
        name: Clock
        nameWithType: Clock
        qualifiedName: PRace.Clock
      VB:
      - id: PRace.Clock
        name: Clock
        nameWithType: Clock
        qualifiedName: PRace.Clock
    isDefinition: true
    commentId: T:PRace.Clock
  Model.RaceModel:
    name:
      CSharp:
      - id: Model.RaceModel
        name: RaceModel
        nameWithType: RaceModel
        qualifiedName: Model.RaceModel
      VB:
      - id: Model.RaceModel
        name: RaceModel
        nameWithType: RaceModel
        qualifiedName: Model.RaceModel
    isDefinition: true
    parent: Model
    commentId: T:Model.RaceModel
  AquitisionCommunication.RaceSave.JsonRace:
    name:
      CSharp:
      - id: AquitisionCommunication.RaceSave.JsonRace
        name: RaceSave.JsonRace
        nameWithType: RaceSave.JsonRace
        qualifiedName: AquitisionCommunication.RaceSave.JsonRace
      VB:
      - id: AquitisionCommunication.RaceSave.JsonRace
        name: RaceSave.JsonRace
        nameWithType: RaceSave.JsonRace
        qualifiedName: AquitisionCommunication.RaceSave.JsonRace
    isDefinition: true
    parent: AquitisionCommunication
    commentId: T:AquitisionCommunication.RaceSave.JsonRace
  Model:
    name:
      CSharp:
      - name: Model
        nameWithType: Model
        qualifiedName: Model
      VB:
      - name: Model
        nameWithType: Model
        qualifiedName: Model
    isDefinition: true
    commentId: N:Model
  AquitisionCommunication:
    name:
      CSharp:
      - name: AquitisionCommunication
        nameWithType: AquitisionCommunication
        qualifiedName: AquitisionCommunication
      VB:
      - name: AquitisionCommunication
        nameWithType: AquitisionCommunication
        qualifiedName: AquitisionCommunication
    isDefinition: true
    commentId: N:AquitisionCommunication
  PRace.Race.#ctor*:
    name:
      CSharp:
      - id: PRace.Race.#ctor*
        name: Race
        nameWithType: Race.Race
        qualifiedName: PRace.Race.Race
      VB:
      - id: PRace.Race.#ctor*
        name: Race
        nameWithType: Race.Race
        qualifiedName: PRace.Race.Race
    isDefinition: true
    commentId: Overload:PRace.Race.#ctor
  PRace.Race.GetId*:
    name:
      CSharp:
      - id: PRace.Race.GetId*
        name: GetId
        nameWithType: Race.GetId
        qualifiedName: PRace.Race.GetId
      VB:
      - id: PRace.Race.GetId*
        name: GetId
        nameWithType: Race.GetId
        qualifiedName: PRace.Race.GetId
    isDefinition: true
    commentId: Overload:PRace.Race.GetId
  PRace.Race.GetCurrentInstant*:
    name:
      CSharp:
      - id: PRace.Race.GetCurrentInstant*
        name: GetCurrentInstant
        nameWithType: Race.GetCurrentInstant
        qualifiedName: PRace.Race.GetCurrentInstant
      VB:
      - id: PRace.Race.GetCurrentInstant*
        name: GetCurrentInstant
        nameWithType: Race.GetCurrentInstant
        qualifiedName: PRace.Race.GetCurrentInstant
    isDefinition: true
    commentId: Overload:PRace.Race.GetCurrentInstant
  System.Collections.Generic.List{PRace.WayPoint}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: PRace.WayPoint
        name: WayPoint
        nameWithType: WayPoint
        qualifiedName: PRace.WayPoint
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: PRace.WayPoint
        name: WayPoint
        nameWithType: WayPoint
        qualifiedName: PRace.WayPoint
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{PRace.WayPoint}
  PRace.Race.GetWayPoint*:
    name:
      CSharp:
      - id: PRace.Race.GetWayPoint*
        name: GetWayPoint
        nameWithType: Race.GetWayPoint
        qualifiedName: PRace.Race.GetWayPoint
      VB:
      - id: PRace.Race.GetWayPoint*
        name: GetWayPoint
        nameWithType: Race.GetWayPoint
        qualifiedName: PRace.Race.GetWayPoint
    isDefinition: true
    commentId: Overload:PRace.Race.GetWayPoint
  PRace.Race.SetBoatCap*:
    name:
      CSharp:
      - id: PRace.Race.SetBoatCap*
        name: SetBoatCap
        nameWithType: Race.SetBoatCap
        qualifiedName: PRace.Race.SetBoatCap
      VB:
      - id: PRace.Race.SetBoatCap*
        name: SetBoatCap
        nameWithType: Race.SetBoatCap
        qualifiedName: PRace.Race.SetBoatCap
    isDefinition: true
    commentId: Overload:PRace.Race.SetBoatCap
  PRace.Race.GetEnvironment*:
    name:
      CSharp:
      - id: PRace.Race.GetEnvironment*
        name: GetEnvironment
        nameWithType: Race.GetEnvironment
        qualifiedName: PRace.Race.GetEnvironment
      VB:
      - id: PRace.Race.GetEnvironment*
        name: GetEnvironment
        nameWithType: Race.GetEnvironment
        qualifiedName: PRace.Race.GetEnvironment
    isDefinition: true
    commentId: Overload:PRace.Race.GetEnvironment
  PRace.Boat.GetCurrentPolaire:
    commentId: M:PRace.Boat.GetCurrentPolaire
  PRace.Race.GetCurrentPolaire*:
    name:
      CSharp:
      - id: PRace.Race.GetCurrentPolaire*
        name: GetCurrentPolaire
        nameWithType: Race.GetCurrentPolaire
        qualifiedName: PRace.Race.GetCurrentPolaire
      VB:
      - id: PRace.Race.GetCurrentPolaire*
        name: GetCurrentPolaire
        nameWithType: Race.GetCurrentPolaire
        qualifiedName: PRace.Race.GetCurrentPolaire
    isDefinition: true
    commentId: Overload:PRace.Race.GetCurrentPolaire
  PRace.Boat.getAvailablePolaire:
    commentId: M:PRace.Boat.getAvailablePolaire
  PRace.Race.GetAllPolaire*:
    name:
      CSharp:
      - id: PRace.Race.GetAllPolaire*
        name: GetAllPolaire
        nameWithType: Race.GetAllPolaire
        qualifiedName: PRace.Race.GetAllPolaire
      VB:
      - id: PRace.Race.GetAllPolaire*
        name: GetAllPolaire
        nameWithType: Race.GetAllPolaire
        qualifiedName: PRace.Race.GetAllPolaire
    isDefinition: true
    commentId: Overload:PRace.Race.GetAllPolaire
  PRace.Boat.GetId:
    commentId: M:PRace.Boat.GetId
  PRace.Race.GetBoatId*:
    name:
      CSharp:
      - id: PRace.Race.GetBoatId*
        name: GetBoatId
        nameWithType: Race.GetBoatId
        qualifiedName: PRace.Race.GetBoatId
      VB:
      - id: PRace.Race.GetBoatId*
        name: GetBoatId
        nameWithType: Race.GetBoatId
        qualifiedName: PRace.Race.GetBoatId
    isDefinition: true
    commentId: Overload:PRace.Race.GetBoatId
  PRace.Boat.getCap:
    commentId: M:PRace.Boat.getCap
  PRace.Race.GetBoatCap*:
    name:
      CSharp:
      - id: PRace.Race.GetBoatCap*
        name: GetBoatCap
        nameWithType: Race.GetBoatCap
        qualifiedName: PRace.Race.GetBoatCap
      VB:
      - id: PRace.Race.GetBoatCap*
        name: GetBoatCap
        nameWithType: Race.GetBoatCap
        qualifiedName: PRace.Race.GetBoatCap
    isDefinition: true
    commentId: Overload:PRace.Race.GetBoatCap
  System.Collections.Generic.List{PRace.Competitor}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: PRace.Competitor
        name: Competitor
        nameWithType: Competitor
        qualifiedName: PRace.Competitor
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: PRace.Competitor
        name: Competitor
        nameWithType: Competitor
        qualifiedName: PRace.Competitor
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{PRace.Competitor}
  PRace.Race.GetCompetitors*:
    name:
      CSharp:
      - id: PRace.Race.GetCompetitors*
        name: GetCompetitors
        nameWithType: Race.GetCompetitors
        qualifiedName: PRace.Race.GetCompetitors
      VB:
      - id: PRace.Race.GetCompetitors*
        name: GetCompetitors
        nameWithType: Race.GetCompetitors
        qualifiedName: PRace.Race.GetCompetitors
    isDefinition: true
    commentId: Overload:PRace.Race.GetCompetitors
  PRace.Race.SetAccFactor*:
    name:
      CSharp:
      - id: PRace.Race.SetAccFactor*
        name: SetAccFactor
        nameWithType: Race.SetAccFactor
        qualifiedName: PRace.Race.SetAccFactor
      VB:
      - id: PRace.Race.SetAccFactor*
        name: SetAccFactor
        nameWithType: Race.SetAccFactor
        qualifiedName: PRace.Race.SetAccFactor
    isDefinition: true
    commentId: Overload:PRace.Race.SetAccFactor
  PRace.Race.GetAccFactor*:
    name:
      CSharp:
      - id: PRace.Race.GetAccFactor*
        name: GetAccFactor
        nameWithType: Race.GetAccFactor
        qualifiedName: PRace.Race.GetAccFactor
      VB:
      - id: PRace.Race.GetAccFactor*
        name: GetAccFactor
        nameWithType: Race.GetAccFactor
        qualifiedName: PRace.Race.GetAccFactor
    isDefinition: true
    commentId: Overload:PRace.Race.GetAccFactor
  System.Collections.Generic.List{System.Int32}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.Int32}
  System.Collections.Generic.List{System.Single}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.Single}
  PRace.Race.SetCompetitors*:
    name:
      CSharp:
      - id: PRace.Race.SetCompetitors*
        name: SetCompetitors
        nameWithType: Race.SetCompetitors
        qualifiedName: PRace.Race.SetCompetitors
      VB:
      - id: PRace.Race.SetCompetitors*
        name: SetCompetitors
        nameWithType: Race.SetCompetitors
        qualifiedName: PRace.Race.SetCompetitors
    isDefinition: true
    commentId: Overload:PRace.Race.SetCompetitors
  PRace.Race.GetBoat*:
    name:
      CSharp:
      - id: PRace.Race.GetBoat*
        name: GetBoat
        nameWithType: Race.GetBoat
        qualifiedName: PRace.Race.GetBoat
      VB:
      - id: PRace.Race.GetBoat*
        name: GetBoat
        nameWithType: Race.GetBoat
        qualifiedName: PRace.Race.GetBoat
    isDefinition: true
    commentId: Overload:PRace.Race.GetBoat
  System.ValueTuple`2:
    name:
      CSharp:
      - id: System.ValueTuple`2
        name: (T1, T2)
        nameWithType: (T1, T2)
        qualifiedName: System.ValueTuple
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.ValueTuple`2
        name: (T1, T2)
        nameWithType: (T1, T2)
        qualifiedName: System.ValueTuple
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.ValueTuple`2
  System.ValueTuple{System.Double,System.Double}:
    name:
      CSharp:
      - id: System.ValueTuple`2
        name: (T1, T2)
        nameWithType: (T1, T2)
        qualifiedName: System.ValueTuple
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.ValueTuple`2
        name: (T1, T2)
        nameWithType: (T1, T2)
        qualifiedName: System.ValueTuple
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.ValueTuple`2
    parent: System
    commentId: T:System.ValueTuple{System.Double,System.Double}
  PRace.Race.GetPosition*:
    name:
      CSharp:
      - id: PRace.Race.GetPosition*
        name: GetPosition
        nameWithType: Race.GetPosition
        qualifiedName: PRace.Race.GetPosition
      VB:
      - id: PRace.Race.GetPosition*
        name: GetPosition
        nameWithType: Race.GetPosition
        qualifiedName: PRace.Race.GetPosition
    isDefinition: true
    commentId: Overload:PRace.Race.GetPosition
  PRace.Race.SetWayPoint*:
    name:
      CSharp:
      - id: PRace.Race.SetWayPoint*
        name: SetWayPoint
        nameWithType: Race.SetWayPoint
        qualifiedName: PRace.Race.SetWayPoint
      VB:
      - id: PRace.Race.SetWayPoint*
        name: SetWayPoint
        nameWithType: Race.SetWayPoint
        qualifiedName: PRace.Race.SetWayPoint
    isDefinition: true
    commentId: Overload:PRace.Race.SetWayPoint
  Environement.Environment.setEnvironment(System.Collections.Generic.Dictionary{Environement.Conditions,System.Single}):
    commentId: M:Environement.Environment.setEnvironment(System.Collections.Generic.Dictionary{Environement.Conditions,System.Single})
  System.Collections.Generic.Dictionary{Environement.Conditions,System.Single}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Environement.Conditions
        name: Conditions
        nameWithType: Conditions
        qualifiedName: Environement.Conditions
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Environement.Conditions
        name: Conditions
        nameWithType: Conditions
        qualifiedName: Environement.Conditions
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{Environement.Conditions,System.Single}
  PRace.Race.change_Env*:
    name:
      CSharp:
      - id: PRace.Race.change_Env*
        name: change_Env
        nameWithType: Race.change_Env
        qualifiedName: PRace.Race.change_Env
      VB:
      - id: PRace.Race.change_Env*
        name: change_Env
        nameWithType: Race.change_Env
        qualifiedName: PRace.Race.change_Env
    isDefinition: true
    commentId: Overload:PRace.Race.change_Env
  PRace.Race.sendPosition*:
    name:
      CSharp:
      - id: PRace.Race.sendPosition*
        name: sendPosition
        nameWithType: Race.sendPosition
        qualifiedName: PRace.Race.sendPosition
      VB:
      - id: PRace.Race.sendPosition*
        name: sendPosition
        nameWithType: Race.sendPosition
        qualifiedName: PRace.Race.sendPosition
    isDefinition: true
    commentId: Overload:PRace.Race.sendPosition
  PRace.Race.getMode*:
    name:
      CSharp:
      - id: PRace.Race.getMode*
        name: getMode
        nameWithType: Race.getMode
        qualifiedName: PRace.Race.getMode
      VB:
      - id: PRace.Race.getMode*
        name: getMode
        nameWithType: Race.getMode
        qualifiedName: PRace.Race.getMode
    isDefinition: true
    commentId: Overload:PRace.Race.getMode
  PRace.Race.setacceleratorFactor*:
    name:
      CSharp:
      - id: PRace.Race.setacceleratorFactor*
        name: setacceleratorFactor
        nameWithType: Race.setacceleratorFactor
        qualifiedName: PRace.Race.setacceleratorFactor
      VB:
      - id: PRace.Race.setacceleratorFactor*
        name: setacceleratorFactor
        nameWithType: Race.setacceleratorFactor
        qualifiedName: PRace.Race.setacceleratorFactor
    isDefinition: true
    commentId: Overload:PRace.Race.setacceleratorFactor
  PRace.Clock.pause:
    commentId: M:PRace.Clock.pause
  PRace.Race.Pause*:
    name:
      CSharp:
      - id: PRace.Race.Pause*
        name: Pause
        nameWithType: Race.Pause
        qualifiedName: PRace.Race.Pause
      VB:
      - id: PRace.Race.Pause*
        name: Pause
        nameWithType: Race.Pause
        qualifiedName: PRace.Race.Pause
    isDefinition: true
    commentId: Overload:PRace.Race.Pause
  PRace.Clock.Run:
    commentId: M:PRace.Clock.Run
  PRace.Race.Run*:
    name:
      CSharp:
      - id: PRace.Race.Run*
        name: Run
        nameWithType: Race.Run
        qualifiedName: PRace.Race.Run
      VB:
      - id: PRace.Race.Run*
        name: Run
        nameWithType: Race.Run
        qualifiedName: PRace.Race.Run
    isDefinition: true
    commentId: Overload:PRace.Race.Run
  PRace.Race.nextIteration*:
    name:
      CSharp:
      - id: PRace.Race.nextIteration*
        name: nextIteration
        nameWithType: Race.nextIteration
        qualifiedName: PRace.Race.nextIteration
      VB:
      - id: PRace.Race.nextIteration*
        name: nextIteration
        nameWithType: Race.nextIteration
        qualifiedName: PRace.Race.nextIteration
    isDefinition: true
    commentId: Overload:PRace.Race.nextIteration
  PRace.Race.GetisPause*:
    name:
      CSharp:
      - id: PRace.Race.GetisPause*
        name: GetisPause
        nameWithType: Race.GetisPause
        qualifiedName: PRace.Race.GetisPause
      VB:
      - id: PRace.Race.GetisPause*
        name: GetisPause
        nameWithType: Race.GetisPause
        qualifiedName: PRace.Race.GetisPause
    isDefinition: true
    commentId: Overload:PRace.Race.GetisPause
  System.Collections.Generic.List{System.Double}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.Double}
  PRace.Race.GetBoatStatus*:
    name:
      CSharp:
      - id: PRace.Race.GetBoatStatus*
        name: GetBoatStatus
        nameWithType: Race.GetBoatStatus
        qualifiedName: PRace.Race.GetBoatStatus
      VB:
      - id: PRace.Race.GetBoatStatus*
        name: GetBoatStatus
        nameWithType: Race.GetBoatStatus
        qualifiedName: PRace.Race.GetBoatStatus
    isDefinition: true
    commentId: Overload:PRace.Race.GetBoatStatus
  AquitisionCommunication.Aquisition:
    name:
      CSharp:
      - id: AquitisionCommunication.Aquisition
        name: Aquisition
        nameWithType: Aquisition
        qualifiedName: AquitisionCommunication.Aquisition
      VB:
      - id: AquitisionCommunication.Aquisition
        name: Aquisition
        nameWithType: Aquisition
        qualifiedName: AquitisionCommunication.Aquisition
    isDefinition: true
    parent: AquitisionCommunication
    commentId: T:AquitisionCommunication.Aquisition
  PRace.Race.GetAquisition*:
    name:
      CSharp:
      - id: PRace.Race.GetAquisition*
        name: GetAquisition
        nameWithType: Race.GetAquisition
        qualifiedName: PRace.Race.GetAquisition
      VB:
      - id: PRace.Race.GetAquisition*
        name: GetAquisition
        nameWithType: Race.GetAquisition
        qualifiedName: PRace.Race.GetAquisition
    isDefinition: true
    commentId: Overload:PRace.Race.GetAquisition
  PRace.Race.getCurrentMoment*:
    name:
      CSharp:
      - id: PRace.Race.getCurrentMoment*
        name: getCurrentMoment
        nameWithType: Race.getCurrentMoment
        qualifiedName: PRace.Race.getCurrentMoment
      VB:
      - id: PRace.Race.getCurrentMoment*
        name: getCurrentMoment
        nameWithType: Race.getCurrentMoment
        qualifiedName: PRace.Race.getCurrentMoment
    isDefinition: true
    commentId: Overload:PRace.Race.getCurrentMoment
  System.Net.Sockets:
    name:
      CSharp:
      - name: System.Net.Sockets
        nameWithType: System.Net.Sockets
        qualifiedName: System.Net.Sockets
        isExternal: true
      VB:
      - name: System.Net.Sockets
        nameWithType: System.Net.Sockets
        qualifiedName: System.Net.Sockets
    isDefinition: true
    commentId: N:System.Net.Sockets
  System.Net.Sockets.Socket:
    name:
      CSharp:
      - id: System.Net.Sockets.Socket
        name: Socket
        nameWithType: Socket
        qualifiedName: System.Net.Sockets.Socket
        isExternal: true
      VB:
      - id: System.Net.Sockets.Socket
        name: Socket
        nameWithType: Socket
        qualifiedName: System.Net.Sockets.Socket
        isExternal: true
    isDefinition: true
    parent: System.Net.Sockets
    commentId: T:System.Net.Sockets.Socket
  System.Byte[]:
    name:
      CSharp:
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  System.Text:
    name:
      CSharp:
      - name: System.Text
        nameWithType: System.Text
        qualifiedName: System.Text
        isExternal: true
      VB:
      - name: System.Text
        nameWithType: System.Text
        qualifiedName: System.Text
    isDefinition: true
    commentId: N:System.Text
  System.Text.StringBuilder:
    name:
      CSharp:
      - id: System.Text.StringBuilder
        name: StringBuilder
        nameWithType: StringBuilder
        qualifiedName: System.Text.StringBuilder
        isExternal: true
      VB:
      - id: System.Text.StringBuilder
        name: StringBuilder
        nameWithType: StringBuilder
        qualifiedName: System.Text.StringBuilder
        isExternal: true
    isDefinition: true
    parent: System.Text
    commentId: T:System.Text.StringBuilder
  Communication.StateObject:
    name:
      CSharp:
      - id: Communication.StateObject
        name: StateObject
        nameWithType: StateObject
        qualifiedName: Communication.StateObject
      VB:
      - id: Communication.StateObject
        name: StateObject
        nameWithType: StateObject
        qualifiedName: Communication.StateObject
    isDefinition: true
    commentId: T:Communication.StateObject
  Communication.DataProcessing:
    name:
      CSharp:
      - name: Communication.DataProcessing
        nameWithType: Communication.DataProcessing
        qualifiedName: Communication.DataProcessing
      VB:
      - name: Communication.DataProcessing
        nameWithType: Communication.DataProcessing
        qualifiedName: Communication.DataProcessing
    isDefinition: true
    commentId: N:Communication.DataProcessing
  Communication.DataProcessing.IMessageType:
    name:
      CSharp:
      - id: Communication.DataProcessing.IMessageType
        name: IMessageType
        nameWithType: IMessageType
        qualifiedName: Communication.DataProcessing.IMessageType
      VB:
      - id: Communication.DataProcessing.IMessageType
        name: IMessageType
        nameWithType: IMessageType
        qualifiedName: Communication.DataProcessing.IMessageType
    isDefinition: true
    parent: Communication.DataProcessing
    commentId: T:Communication.DataProcessing.IMessageType
  Communication.AsynchronousClient.StartClient*:
    name:
      CSharp:
      - id: Communication.AsynchronousClient.StartClient*
        name: StartClient
        nameWithType: AsynchronousClient.StartClient
        qualifiedName: Communication.AsynchronousClient.StartClient
      VB:
      - id: Communication.AsynchronousClient.StartClient*
        name: StartClient
        nameWithType: AsynchronousClient.StartClient
        qualifiedName: Communication.AsynchronousClient.StartClient
    isDefinition: true
    commentId: Overload:Communication.AsynchronousClient.StartClient
  System.String[]:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Communication.AsynchronousClient.Main*:
    name:
      CSharp:
      - id: Communication.AsynchronousClient.Main*
        name: Main
        nameWithType: AsynchronousClient.Main
        qualifiedName: Communication.AsynchronousClient.Main
      VB:
      - id: Communication.AsynchronousClient.Main*
        name: Main
        nameWithType: AsynchronousClient.Main
        qualifiedName: Communication.AsynchronousClient.Main
    isDefinition: true
    commentId: Overload:Communication.AsynchronousClient.Main
  Communication.AsynchronousClient:
    name:
      CSharp:
      - id: Communication.AsynchronousClient
        name: AsynchronousClient
        nameWithType: AsynchronousClient
        qualifiedName: Communication.AsynchronousClient
      VB:
      - id: Communication.AsynchronousClient
        name: AsynchronousClient
        nameWithType: AsynchronousClient
        qualifiedName: Communication.AsynchronousClient
    isDefinition: true
    commentId: T:Communication.AsynchronousClient
  Communication:
    name:
      CSharp:
      - name: Communication
        nameWithType: Communication
        qualifiedName: Communication
      VB:
      - name: Communication
        nameWithType: Communication
        qualifiedName: Communication
    isDefinition: true
    commentId: N:Communication
  Communication.DataProcessing.OMessageType:
    name:
      CSharp:
      - id: Communication.DataProcessing.OMessageType
        name: OMessageType
        nameWithType: OMessageType
        qualifiedName: Communication.DataProcessing.OMessageType
      VB:
      - id: Communication.DataProcessing.OMessageType
        name: OMessageType
        nameWithType: OMessageType
        qualifiedName: Communication.DataProcessing.OMessageType
    isDefinition: true
    parent: Communication.DataProcessing
    commentId: T:Communication.DataProcessing.OMessageType
  System.Int64:
    name:
      CSharp:
      - id: System.Int64
        name: Int64
        nameWithType: Int64
        qualifiedName: System.Int64
        isExternal: true
      VB:
      - id: System.Int64
        name: Int64
        nameWithType: Int64
        qualifiedName: System.Int64
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int64
  Communication.DataProcessing.Json.BoatType.ID*:
    name:
      CSharp:
      - id: Communication.DataProcessing.Json.BoatType.ID*
        name: ID
        nameWithType: BoatType.ID
        qualifiedName: Communication.DataProcessing.Json.BoatType.ID
      VB:
      - id: Communication.DataProcessing.Json.BoatType.ID*
        name: ID
        nameWithType: BoatType.ID
        qualifiedName: Communication.DataProcessing.Json.BoatType.ID
    isDefinition: true
    commentId: Overload:Communication.DataProcessing.Json.BoatType.ID
  Communication.DataProcessing.Json.BoatType.Name*:
    name:
      CSharp:
      - id: Communication.DataProcessing.Json.BoatType.Name*
        name: Name
        nameWithType: BoatType.Name
        qualifiedName: Communication.DataProcessing.Json.BoatType.Name
      VB:
      - id: Communication.DataProcessing.Json.BoatType.Name*
        name: Name
        nameWithType: BoatType.Name
        qualifiedName: Communication.DataProcessing.Json.BoatType.Name
    isDefinition: true
    commentId: Overload:Communication.DataProcessing.Json.BoatType.Name
  Communication.DataProcessing.Json.BoatType.HullLength*:
    name:
      CSharp:
      - id: Communication.DataProcessing.Json.BoatType.HullLength*
        name: HullLength
        nameWithType: BoatType.HullLength
        qualifiedName: Communication.DataProcessing.Json.BoatType.HullLength
      VB:
      - id: Communication.DataProcessing.Json.BoatType.HullLength*
        name: HullLength
        nameWithType: BoatType.HullLength
        qualifiedName: Communication.DataProcessing.Json.BoatType.HullLength
    isDefinition: true
    commentId: Overload:Communication.DataProcessing.Json.BoatType.HullLength
  Communication.DataProcessing.Json.BoatType.OverallLength*:
    name:
      CSharp:
      - id: Communication.DataProcessing.Json.BoatType.OverallLength*
        name: OverallLength
        nameWithType: BoatType.OverallLength
        qualifiedName: Communication.DataProcessing.Json.BoatType.OverallLength
      VB:
      - id: Communication.DataProcessing.Json.BoatType.OverallLength*
        name: OverallLength
        nameWithType: BoatType.OverallLength
        qualifiedName: Communication.DataProcessing.Json.BoatType.OverallLength
    isDefinition: true
    commentId: Overload:Communication.DataProcessing.Json.BoatType.OverallLength
  Communication.DataProcessing.Json.BoatType.HullWidth*:
    name:
      CSharp:
      - id: Communication.DataProcessing.Json.BoatType.HullWidth*
        name: HullWidth
        nameWithType: BoatType.HullWidth
        qualifiedName: Communication.DataProcessing.Json.BoatType.HullWidth
      VB:
      - id: Communication.DataProcessing.Json.BoatType.HullWidth*
        name: HullWidth
        nameWithType: BoatType.HullWidth
        qualifiedName: Communication.DataProcessing.Json.BoatType.HullWidth
    isDefinition: true
    commentId: Overload:Communication.DataProcessing.Json.BoatType.HullWidth
  Communication.DataProcessing.Json.BoatType.OverallWidth*:
    name:
      CSharp:
      - id: Communication.DataProcessing.Json.BoatType.OverallWidth*
        name: OverallWidth
        nameWithType: BoatType.OverallWidth
        qualifiedName: Communication.DataProcessing.Json.BoatType.OverallWidth
      VB:
      - id: Communication.DataProcessing.Json.BoatType.OverallWidth*
        name: OverallWidth
        nameWithType: BoatType.OverallWidth
        qualifiedName: Communication.DataProcessing.Json.BoatType.OverallWidth
    isDefinition: true
    commentId: Overload:Communication.DataProcessing.Json.BoatType.OverallWidth
  Communication.DataProcessing.Json.BoatType.Draft*:
    name:
      CSharp:
      - id: Communication.DataProcessing.Json.BoatType.Draft*
        name: Draft
        nameWithType: BoatType.Draft
        qualifiedName: Communication.DataProcessing.Json.BoatType.Draft
      VB:
      - id: Communication.DataProcessing.Json.BoatType.Draft*
        name: Draft
        nameWithType: BoatType.Draft
        qualifiedName: Communication.DataProcessing.Json.BoatType.Draft
    isDefinition: true
    commentId: Overload:Communication.DataProcessing.Json.BoatType.Draft
  Communication.DataProcessing.Json.BoatType.AirDraft*:
    name:
      CSharp:
      - id: Communication.DataProcessing.Json.BoatType.AirDraft*
        name: AirDraft
        nameWithType: BoatType.AirDraft
        qualifiedName: Communication.DataProcessing.Json.BoatType.AirDraft
      VB:
      - id: Communication.DataProcessing.Json.BoatType.AirDraft*
        name: AirDraft
        nameWithType: BoatType.AirDraft
        qualifiedName: Communication.DataProcessing.Json.BoatType.AirDraft
    isDefinition: true
    commentId: Overload:Communication.DataProcessing.Json.BoatType.AirDraft
  Communication.DataProcessing.Json.BoatType.Weight*:
    name:
      CSharp:
      - id: Communication.DataProcessing.Json.BoatType.Weight*
        name: Weight
        nameWithType: BoatType.Weight
        qualifiedName: Communication.DataProcessing.Json.BoatType.Weight
      VB:
      - id: Communication.DataProcessing.Json.BoatType.Weight*
        name: Weight
        nameWithType: BoatType.Weight
        qualifiedName: Communication.DataProcessing.Json.BoatType.Weight
    isDefinition: true
    commentId: Overload:Communication.DataProcessing.Json.BoatType.Weight
  System.Collections.Generic.List{Communication.DataProcessing.Json.Polar}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Communication.DataProcessing.Json.Polar
        name: Polar
        nameWithType: Polar
        qualifiedName: Communication.DataProcessing.Json.Polar
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Communication.DataProcessing.Json.Polar
        name: Polar
        nameWithType: Polar
        qualifiedName: Communication.DataProcessing.Json.Polar
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Communication.DataProcessing.Json.Polar}
  Communication.DataProcessing.Json.BoatType.PolarFileList*:
    name:
      CSharp:
      - id: Communication.DataProcessing.Json.BoatType.PolarFileList*
        name: PolarFileList
        nameWithType: BoatType.PolarFileList
        qualifiedName: Communication.DataProcessing.Json.BoatType.PolarFileList
      VB:
      - id: Communication.DataProcessing.Json.BoatType.PolarFileList*
        name: PolarFileList
        nameWithType: BoatType.PolarFileList
        qualifiedName: Communication.DataProcessing.Json.BoatType.PolarFileList
    isDefinition: true
    commentId: Overload:Communication.DataProcessing.Json.BoatType.PolarFileList
  System.Collections.Generic.List{Communication.DataProcessing.Json.BoatType}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Communication.DataProcessing.Json.BoatType
        name: BoatType
        nameWithType: BoatType
        qualifiedName: Communication.DataProcessing.Json.BoatType
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Communication.DataProcessing.Json.BoatType
        name: BoatType
        nameWithType: BoatType
        qualifiedName: Communication.DataProcessing.Json.BoatType
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Communication.DataProcessing.Json.BoatType}
  Communication.DataProcessing.Json.JsonParse.JsonDeserialize*:
    name:
      CSharp:
      - id: Communication.DataProcessing.Json.JsonParse.JsonDeserialize*
        name: JsonDeserialize
        nameWithType: JsonParse.JsonDeserialize
        qualifiedName: Communication.DataProcessing.Json.JsonParse.JsonDeserialize
      VB:
      - id: Communication.DataProcessing.Json.JsonParse.JsonDeserialize*
        name: JsonDeserialize
        nameWithType: JsonParse.JsonDeserialize
        qualifiedName: Communication.DataProcessing.Json.JsonParse.JsonDeserialize
    isDefinition: true
    commentId: Overload:Communication.DataProcessing.Json.JsonParse.JsonDeserialize
  Communication.DataProcessing.Json.JsonParse.JsonSerialiseConnection*:
    name:
      CSharp:
      - id: Communication.DataProcessing.Json.JsonParse.JsonSerialiseConnection*
        name: JsonSerialiseConnection
        nameWithType: JsonParse.JsonSerialiseConnection
        qualifiedName: Communication.DataProcessing.Json.JsonParse.JsonSerialiseConnection
      VB:
      - id: Communication.DataProcessing.Json.JsonParse.JsonSerialiseConnection*
        name: JsonSerialiseConnection
        nameWithType: JsonParse.JsonSerialiseConnection
        qualifiedName: Communication.DataProcessing.Json.JsonParse.JsonSerialiseConnection
    isDefinition: true
    commentId: Overload:Communication.DataProcessing.Json.JsonParse.JsonSerialiseConnection
  Communication.DataProcessing.Json.JsonParse.JsonSerialiseIConnection*:
    name:
      CSharp:
      - id: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIConnection*
        name: JsonSerialiseIConnection
        nameWithType: JsonParse.JsonSerialiseIConnection
        qualifiedName: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIConnection
      VB:
      - id: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIConnection*
        name: JsonSerialiseIConnection
        nameWithType: JsonParse.JsonSerialiseIConnection
        qualifiedName: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIConnection
    isDefinition: true
    commentId: Overload:Communication.DataProcessing.Json.JsonParse.JsonSerialiseIConnection
  Communication.DataProcessing.Json.JsonParse.JsonSerialiseIDisconnection*:
    name:
      CSharp:
      - id: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIDisconnection*
        name: JsonSerialiseIDisconnection
        nameWithType: JsonParse.JsonSerialiseIDisconnection
        qualifiedName: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIDisconnection
      VB:
      - id: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIDisconnection*
        name: JsonSerialiseIDisconnection
        nameWithType: JsonParse.JsonSerialiseIDisconnection
        qualifiedName: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIDisconnection
    isDefinition: true
    commentId: Overload:Communication.DataProcessing.Json.JsonParse.JsonSerialiseIDisconnection
  Communication.DataProcessing.Json.JsonParse.JsonSerialiseIPlayerInfo*:
    name:
      CSharp:
      - id: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIPlayerInfo*
        name: JsonSerialiseIPlayerInfo
        nameWithType: JsonParse.JsonSerialiseIPlayerInfo
        qualifiedName: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIPlayerInfo
      VB:
      - id: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIPlayerInfo*
        name: JsonSerialiseIPlayerInfo
        nameWithType: JsonParse.JsonSerialiseIPlayerInfo
        qualifiedName: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIPlayerInfo
    isDefinition: true
    commentId: Overload:Communication.DataProcessing.Json.JsonParse.JsonSerialiseIPlayerInfo
  Communication.DataProcessing.Json.JsonParse.JsonSerialiseIBoatSelect*:
    name:
      CSharp:
      - id: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIBoatSelect*
        name: JsonSerialiseIBoatSelect
        nameWithType: JsonParse.JsonSerialiseIBoatSelect
        qualifiedName: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIBoatSelect
      VB:
      - id: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIBoatSelect*
        name: JsonSerialiseIBoatSelect
        nameWithType: JsonParse.JsonSerialiseIBoatSelect
        qualifiedName: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIBoatSelect
    isDefinition: true
    commentId: Overload:Communication.DataProcessing.Json.JsonParse.JsonSerialiseIBoatSelect
  Communication.DataProcessing.Json.JsonParse.JsonSerialiseIBoatListRequest*:
    name:
      CSharp:
      - id: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIBoatListRequest*
        name: JsonSerialiseIBoatListRequest
        nameWithType: JsonParse.JsonSerialiseIBoatListRequest
        qualifiedName: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIBoatListRequest
      VB:
      - id: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIBoatListRequest*
        name: JsonSerialiseIBoatListRequest
        nameWithType: JsonParse.JsonSerialiseIBoatListRequest
        qualifiedName: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIBoatListRequest
    isDefinition: true
    commentId: Overload:Communication.DataProcessing.Json.JsonParse.JsonSerialiseIBoatListRequest
  Communication.DataProcessing.Json.JsonParse.JsonSerialiseIEndRace*:
    name:
      CSharp:
      - id: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIEndRace*
        name: JsonSerialiseIEndRace
        nameWithType: JsonParse.JsonSerialiseIEndRace
        qualifiedName: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIEndRace
      VB:
      - id: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIEndRace*
        name: JsonSerialiseIEndRace
        nameWithType: JsonParse.JsonSerialiseIEndRace
        qualifiedName: Communication.DataProcessing.Json.JsonParse.JsonSerialiseIEndRace
    isDefinition: true
    commentId: Overload:Communication.DataProcessing.Json.JsonParse.JsonSerialiseIEndRace
  Communication.DataProcessing.Json.JsonParse.JsonSerialiseOConnection*:
    name:
      CSharp:
      - id: Communication.DataProcessing.Json.JsonParse.JsonSerialiseOConnection*
        name: JsonSerialiseOConnection
        nameWithType: JsonParse.JsonSerialiseOConnection
        qualifiedName: Communication.DataProcessing.Json.JsonParse.JsonSerialiseOConnection
      VB:
      - id: Communication.DataProcessing.Json.JsonParse.JsonSerialiseOConnection*
        name: JsonSerialiseOConnection
        nameWithType: JsonParse.JsonSerialiseOConnection
        qualifiedName: Communication.DataProcessing.Json.JsonParse.JsonSerialiseOConnection
    isDefinition: true
    commentId: Overload:Communication.DataProcessing.Json.JsonParse.JsonSerialiseOConnection
  Communication.DataProcessing.Json.JsonParse.JsonSerialiseODisconnection*:
    name:
      CSharp:
      - id: Communication.DataProcessing.Json.JsonParse.JsonSerialiseODisconnection*
        name: JsonSerialiseODisconnection
        nameWithType: JsonParse.JsonSerialiseODisconnection
        qualifiedName: Communication.DataProcessing.Json.JsonParse.JsonSerialiseODisconnection
      VB:
      - id: Communication.DataProcessing.Json.JsonParse.JsonSerialiseODisconnection*
        name: JsonSerialiseODisconnection
        nameWithType: JsonParse.JsonSerialiseODisconnection
        qualifiedName: Communication.DataProcessing.Json.JsonParse.JsonSerialiseODisconnection
    isDefinition: true
    commentId: Overload:Communication.DataProcessing.Json.JsonParse.JsonSerialiseODisconnection
  Communication.DataProcessing.Json.JsonParse.JsonSerialiseOInitRace*:
    name:
      CSharp:
      - id: Communication.DataProcessing.Json.JsonParse.JsonSerialiseOInitRace*
        name: JsonSerialiseOInitRace
        nameWithType: JsonParse.JsonSerialiseOInitRace
        qualifiedName: Communication.DataProcessing.Json.JsonParse.JsonSerialiseOInitRace
      VB:
      - id: Communication.DataProcessing.Json.JsonParse.JsonSerialiseOInitRace*
        name: JsonSerialiseOInitRace
        nameWithType: JsonParse.JsonSerialiseOInitRace
        qualifiedName: Communication.DataProcessing.Json.JsonParse.JsonSerialiseOInitRace
    isDefinition: true
    commentId: Overload:Communication.DataProcessing.Json.JsonParse.JsonSerialiseOInitRace
  Communication.DataProcessing.Json.JsonParse.JsonSerialiseOEnvironmentInfo*:
    name:
      CSharp:
      - id: Communication.DataProcessing.Json.JsonParse.JsonSerialiseOEnvironmentInfo*
        name: JsonSerialiseOEnvironmentInfo
        nameWithType: JsonParse.JsonSerialiseOEnvironmentInfo
        qualifiedName: Communication.DataProcessing.Json.JsonParse.JsonSerialiseOEnvironmentInfo
      VB:
      - id: Communication.DataProcessing.Json.JsonParse.JsonSerialiseOEnvironmentInfo*
        name: JsonSerialiseOEnvironmentInfo
        nameWithType: JsonParse.JsonSerialiseOEnvironmentInfo
        qualifiedName: Communication.DataProcessing.Json.JsonParse.JsonSerialiseOEnvironmentInfo
    isDefinition: true
    commentId: Overload:Communication.DataProcessing.Json.JsonParse.JsonSerialiseOEnvironmentInfo
  Communication.DataProcessing.Json.JsonParse.JsonSerialiseOBoatList*:
    name:
      CSharp:
      - id: Communication.DataProcessing.Json.JsonParse.JsonSerialiseOBoatList*
        name: JsonSerialiseOBoatList
        nameWithType: JsonParse.JsonSerialiseOBoatList
        qualifiedName: Communication.DataProcessing.Json.JsonParse.JsonSerialiseOBoatList
      VB:
      - id: Communication.DataProcessing.Json.JsonParse.JsonSerialiseOBoatList*
        name: JsonSerialiseOBoatList
        nameWithType: JsonParse.JsonSerialiseOBoatList
        qualifiedName: Communication.DataProcessing.Json.JsonParse.JsonSerialiseOBoatList
    isDefinition: true
    commentId: Overload:Communication.DataProcessing.Json.JsonParse.JsonSerialiseOBoatList
  Communication.DataProcessing.Json.JsonParse.JsonSerialiseOEndRace*:
    name:
      CSharp:
      - id: Communication.DataProcessing.Json.JsonParse.JsonSerialiseOEndRace*
        name: JsonSerialiseOEndRace
        nameWithType: JsonParse.JsonSerialiseOEndRace
        qualifiedName: Communication.DataProcessing.Json.JsonParse.JsonSerialiseOEndRace
      VB:
      - id: Communication.DataProcessing.Json.JsonParse.JsonSerialiseOEndRace*
        name: JsonSerialiseOEndRace
        nameWithType: JsonParse.JsonSerialiseOEndRace
        qualifiedName: Communication.DataProcessing.Json.JsonParse.JsonSerialiseOEndRace
    isDefinition: true
    commentId: Overload:Communication.DataProcessing.Json.JsonParse.JsonSerialiseOEndRace
  Communication.DataProcessing.Json.JsonParse:
    name:
      CSharp:
      - id: Communication.DataProcessing.Json.JsonParse
        name: JsonParse
        nameWithType: JsonParse
        qualifiedName: Communication.DataProcessing.Json.JsonParse
      VB:
      - id: Communication.DataProcessing.Json.JsonParse
        name: JsonParse
        nameWithType: JsonParse
        qualifiedName: Communication.DataProcessing.Json.JsonParse
    isDefinition: true
    commentId: T:Communication.DataProcessing.Json.JsonParse
  Communication.DataProcessing.Json.Polar.Name*:
    name:
      CSharp:
      - id: Communication.DataProcessing.Json.Polar.Name*
        name: Name
        nameWithType: Polar.Name
        qualifiedName: Communication.DataProcessing.Json.Polar.Name
      VB:
      - id: Communication.DataProcessing.Json.Polar.Name*
        name: Name
        nameWithType: Polar.Name
        qualifiedName: Communication.DataProcessing.Json.Polar.Name
    isDefinition: true
    commentId: Overload:Communication.DataProcessing.Json.Polar.Name
  Communication.DataProcessing.Json.Polar.File*:
    name:
      CSharp:
      - id: Communication.DataProcessing.Json.Polar.File*
        name: File
        nameWithType: Polar.File
        qualifiedName: Communication.DataProcessing.Json.Polar.File
      VB:
      - id: Communication.DataProcessing.Json.Polar.File*
        name: File
        nameWithType: Polar.File
        qualifiedName: Communication.DataProcessing.Json.Polar.File
    isDefinition: true
    commentId: Overload:Communication.DataProcessing.Json.Polar.File
  Communication.DataProcessing.Json.Polar.ID*:
    name:
      CSharp:
      - id: Communication.DataProcessing.Json.Polar.ID*
        name: ID
        nameWithType: Polar.ID
        qualifiedName: Communication.DataProcessing.Json.Polar.ID
      VB:
      - id: Communication.DataProcessing.Json.Polar.ID*
        name: ID
        nameWithType: Polar.ID
        qualifiedName: Communication.DataProcessing.Json.Polar.ID
    isDefinition: true
    commentId: Overload:Communication.DataProcessing.Json.Polar.ID
  Communication.DataProcessing.Json.Polar:
    name:
      CSharp:
      - id: Communication.DataProcessing.Json.Polar
        name: Polar
        nameWithType: Polar
        qualifiedName: Communication.DataProcessing.Json.Polar
      VB:
      - id: Communication.DataProcessing.Json.Polar
        name: Polar
        nameWithType: Polar
        qualifiedName: Communication.DataProcessing.Json.Polar
    isDefinition: true
    commentId: T:Communication.DataProcessing.Json.Polar
  Communication.DataProcessing.Json.PolFile.PolaireFile*:
    name:
      CSharp:
      - id: Communication.DataProcessing.Json.PolFile.PolaireFile*
        name: PolaireFile
        nameWithType: PolFile.PolaireFile
        qualifiedName: Communication.DataProcessing.Json.PolFile.PolaireFile
      VB:
      - id: Communication.DataProcessing.Json.PolFile.PolaireFile*
        name: PolaireFile
        nameWithType: PolFile.PolaireFile
        qualifiedName: Communication.DataProcessing.Json.PolFile.PolaireFile
    isDefinition: true
    commentId: Overload:Communication.DataProcessing.Json.PolFile.PolaireFile
  Communication.DataProcessing.Json.PolFile:
    name:
      CSharp:
      - id: Communication.DataProcessing.Json.PolFile
        name: PolFile
        nameWithType: PolFile
        qualifiedName: Communication.DataProcessing.Json.PolFile
      VB:
      - id: Communication.DataProcessing.Json.PolFile
        name: PolFile
        nameWithType: PolFile
        qualifiedName: Communication.DataProcessing.Json.PolFile
    isDefinition: true
    commentId: T:Communication.DataProcessing.Json.PolFile
  Communication.DataProcessing.Files.FileManageData.CreateFilePolaire*:
    name:
      CSharp:
      - id: Communication.DataProcessing.Files.FileManageData.CreateFilePolaire*
        name: CreateFilePolaire
        nameWithType: FileManageData.CreateFilePolaire
        qualifiedName: Communication.DataProcessing.Files.FileManageData.CreateFilePolaire
      VB:
      - id: Communication.DataProcessing.Files.FileManageData.CreateFilePolaire*
        name: CreateFilePolaire
        nameWithType: FileManageData.CreateFilePolaire
        qualifiedName: Communication.DataProcessing.Files.FileManageData.CreateFilePolaire
    isDefinition: true
    commentId: Overload:Communication.DataProcessing.Files.FileManageData.CreateFilePolaire
  Communication.DataProcessing.Files.FileManageData.SaveData*:
    name:
      CSharp:
      - id: Communication.DataProcessing.Files.FileManageData.SaveData*
        name: SaveData
        nameWithType: FileManageData.SaveData
        qualifiedName: Communication.DataProcessing.Files.FileManageData.SaveData
      VB:
      - id: Communication.DataProcessing.Files.FileManageData.SaveData*
        name: SaveData
        nameWithType: FileManageData.SaveData
        qualifiedName: Communication.DataProcessing.Files.FileManageData.SaveData
    isDefinition: true
    commentId: Overload:Communication.DataProcessing.Files.FileManageData.SaveData
  Communication.DataProcessing.Files.FileManageData.CheckFilesFolderData*:
    name:
      CSharp:
      - id: Communication.DataProcessing.Files.FileManageData.CheckFilesFolderData*
        name: CheckFilesFolderData
        nameWithType: FileManageData.CheckFilesFolderData
        qualifiedName: Communication.DataProcessing.Files.FileManageData.CheckFilesFolderData
      VB:
      - id: Communication.DataProcessing.Files.FileManageData.CheckFilesFolderData*
        name: CheckFilesFolderData
        nameWithType: FileManageData.CheckFilesFolderData
        qualifiedName: Communication.DataProcessing.Files.FileManageData.CheckFilesFolderData
    isDefinition: true
    commentId: Overload:Communication.DataProcessing.Files.FileManageData.CheckFilesFolderData
  Communication.DataProcessing.Files.FileManageData.DeleteFile*:
    name:
      CSharp:
      - id: Communication.DataProcessing.Files.FileManageData.DeleteFile*
        name: DeleteFile
        nameWithType: FileManageData.DeleteFile
        qualifiedName: Communication.DataProcessing.Files.FileManageData.DeleteFile
      VB:
      - id: Communication.DataProcessing.Files.FileManageData.DeleteFile*
        name: DeleteFile
        nameWithType: FileManageData.DeleteFile
        qualifiedName: Communication.DataProcessing.Files.FileManageData.DeleteFile
    isDefinition: true
    commentId: Overload:Communication.DataProcessing.Files.FileManageData.DeleteFile
  Communication.DataProcessing.Files.FileManageData.ReadFilePath*:
    name:
      CSharp:
      - id: Communication.DataProcessing.Files.FileManageData.ReadFilePath*
        name: ReadFilePath
        nameWithType: FileManageData.ReadFilePath
        qualifiedName: Communication.DataProcessing.Files.FileManageData.ReadFilePath
      VB:
      - id: Communication.DataProcessing.Files.FileManageData.ReadFilePath*
        name: ReadFilePath
        nameWithType: FileManageData.ReadFilePath
        qualifiedName: Communication.DataProcessing.Files.FileManageData.ReadFilePath
    isDefinition: true
    commentId: Overload:Communication.DataProcessing.Files.FileManageData.ReadFilePath
  Communication.DataProcessing.Files.FileManageData.CheckDirectory*:
    name:
      CSharp:
      - id: Communication.DataProcessing.Files.FileManageData.CheckDirectory*
        name: CheckDirectory
        nameWithType: FileManageData.CheckDirectory
        qualifiedName: Communication.DataProcessing.Files.FileManageData.CheckDirectory
      VB:
      - id: Communication.DataProcessing.Files.FileManageData.CheckDirectory*
        name: CheckDirectory
        nameWithType: FileManageData.CheckDirectory
        qualifiedName: Communication.DataProcessing.Files.FileManageData.CheckDirectory
    isDefinition: true
    commentId: Overload:Communication.DataProcessing.Files.FileManageData.CheckDirectory
  Communication.DataProcessing.Files.FileManageData.CreateDirectory*:
    name:
      CSharp:
      - id: Communication.DataProcessing.Files.FileManageData.CreateDirectory*
        name: CreateDirectory
        nameWithType: FileManageData.CreateDirectory
        qualifiedName: Communication.DataProcessing.Files.FileManageData.CreateDirectory
      VB:
      - id: Communication.DataProcessing.Files.FileManageData.CreateDirectory*
        name: CreateDirectory
        nameWithType: FileManageData.CreateDirectory
        qualifiedName: Communication.DataProcessing.Files.FileManageData.CreateDirectory
    isDefinition: true
    commentId: Overload:Communication.DataProcessing.Files.FileManageData.CreateDirectory
  Communication.DataProcessing.Files.FileManageData.CreateBoatJson*:
    name:
      CSharp:
      - id: Communication.DataProcessing.Files.FileManageData.CreateBoatJson*
        name: CreateBoatJson
        nameWithType: FileManageData.CreateBoatJson
        qualifiedName: Communication.DataProcessing.Files.FileManageData.CreateBoatJson
      VB:
      - id: Communication.DataProcessing.Files.FileManageData.CreateBoatJson*
        name: CreateBoatJson
        nameWithType: FileManageData.CreateBoatJson
        qualifiedName: Communication.DataProcessing.Files.FileManageData.CreateBoatJson
    isDefinition: true
    commentId: Overload:Communication.DataProcessing.Files.FileManageData.CreateBoatJson
  Communication.DataProcessing.Files.FileManageData.UpdateAllBoatTypesList*:
    name:
      CSharp:
      - id: Communication.DataProcessing.Files.FileManageData.UpdateAllBoatTypesList*
        name: UpdateAllBoatTypesList
        nameWithType: FileManageData.UpdateAllBoatTypesList
        qualifiedName: Communication.DataProcessing.Files.FileManageData.UpdateAllBoatTypesList
      VB:
      - id: Communication.DataProcessing.Files.FileManageData.UpdateAllBoatTypesList*
        name: UpdateAllBoatTypesList
        nameWithType: FileManageData.UpdateAllBoatTypesList
        qualifiedName: Communication.DataProcessing.Files.FileManageData.UpdateAllBoatTypesList
    isDefinition: true
    commentId: Overload:Communication.DataProcessing.Files.FileManageData.UpdateAllBoatTypesList
  Communication.DataProcessing.Files.FileManageData.UpdateBoatTypesList*:
    name:
      CSharp:
      - id: Communication.DataProcessing.Files.FileManageData.UpdateBoatTypesList*
        name: UpdateBoatTypesList
        nameWithType: FileManageData.UpdateBoatTypesList
        qualifiedName: Communication.DataProcessing.Files.FileManageData.UpdateBoatTypesList
      VB:
      - id: Communication.DataProcessing.Files.FileManageData.UpdateBoatTypesList*
        name: UpdateBoatTypesList
        nameWithType: FileManageData.UpdateBoatTypesList
        qualifiedName: Communication.DataProcessing.Files.FileManageData.UpdateBoatTypesList
    isDefinition: true
    commentId: Overload:Communication.DataProcessing.Files.FileManageData.UpdateBoatTypesList
  Communication.DataProcessing.Files.FileManageData.ResetAllFiles*:
    name:
      CSharp:
      - id: Communication.DataProcessing.Files.FileManageData.ResetAllFiles*
        name: ResetAllFiles
        nameWithType: FileManageData.ResetAllFiles
        qualifiedName: Communication.DataProcessing.Files.FileManageData.ResetAllFiles
      VB:
      - id: Communication.DataProcessing.Files.FileManageData.ResetAllFiles*
        name: ResetAllFiles
        nameWithType: FileManageData.ResetAllFiles
        qualifiedName: Communication.DataProcessing.Files.FileManageData.ResetAllFiles
    isDefinition: true
    commentId: Overload:Communication.DataProcessing.Files.FileManageData.ResetAllFiles
  Communication.DataProcessing.Files.FileManageData.ResetBoatList*:
    name:
      CSharp:
      - id: Communication.DataProcessing.Files.FileManageData.ResetBoatList*
        name: ResetBoatList
        nameWithType: FileManageData.ResetBoatList
        qualifiedName: Communication.DataProcessing.Files.FileManageData.ResetBoatList
      VB:
      - id: Communication.DataProcessing.Files.FileManageData.ResetBoatList*
        name: ResetBoatList
        nameWithType: FileManageData.ResetBoatList
        qualifiedName: Communication.DataProcessing.Files.FileManageData.ResetBoatList
    isDefinition: true
    commentId: Overload:Communication.DataProcessing.Files.FileManageData.ResetBoatList
  Communication.DataProcessing.Files.FileManageData:
    name:
      CSharp:
      - id: Communication.DataProcessing.Files.FileManageData
        name: FileManageData
        nameWithType: FileManageData
        qualifiedName: Communication.DataProcessing.Files.FileManageData
      VB:
      - id: Communication.DataProcessing.Files.FileManageData
        name: FileManageData
        nameWithType: FileManageData
        qualifiedName: Communication.DataProcessing.Files.FileManageData
    isDefinition: true
    commentId: T:Communication.DataProcessing.Files.FileManageData
  Communication.DataProcessing.Files.FileManageData.WriteInFile.WriteFilePath*:
    name:
      CSharp:
      - id: Communication.DataProcessing.Files.FileManageData.WriteInFile.WriteFilePath*
        name: WriteFilePath
        nameWithType: FileManageData.WriteInFile.WriteFilePath
        qualifiedName: Communication.DataProcessing.Files.FileManageData.WriteInFile.WriteFilePath
      VB:
      - id: Communication.DataProcessing.Files.FileManageData.WriteInFile.WriteFilePath*
        name: WriteFilePath
        nameWithType: FileManageData.WriteInFile.WriteFilePath
        qualifiedName: Communication.DataProcessing.Files.FileManageData.WriteInFile.WriteFilePath
    isDefinition: true
    commentId: Overload:Communication.DataProcessing.Files.FileManageData.WriteInFile.WriteFilePath
  Communication.DataProcessing.Files.FileManageData.WriteInFile:
    name:
      CSharp:
      - id: Communication.DataProcessing.Files.FileManageData.WriteInFile
        name: FileManageData.WriteInFile
        nameWithType: FileManageData.WriteInFile
        qualifiedName: Communication.DataProcessing.Files.FileManageData.WriteInFile
      VB:
      - id: Communication.DataProcessing.Files.FileManageData.WriteInFile
        name: FileManageData.WriteInFile
        nameWithType: FileManageData.WriteInFile
        qualifiedName: Communication.DataProcessing.Files.FileManageData.WriteInFile
    isDefinition: true
    commentId: T:Communication.DataProcessing.Files.FileManageData.WriteInFile
  Communication.DataProcessing.Files:
    name:
      CSharp:
      - name: Communication.DataProcessing.Files
        nameWithType: Communication.DataProcessing.Files
        qualifiedName: Communication.DataProcessing.Files
      VB:
      - name: Communication.DataProcessing.Files
        nameWithType: Communication.DataProcessing.Files
        qualifiedName: Communication.DataProcessing.Files
    isDefinition: true
    commentId: N:Communication.DataProcessing.Files
  Environement.Conditions:
    name:
      CSharp:
      - id: Environement.Conditions
        name: Conditions
        nameWithType: Conditions
        qualifiedName: Environement.Conditions
      VB:
      - id: Environement.Conditions
        name: Conditions
        nameWithType: Conditions
        qualifiedName: Environement.Conditions
    isDefinition: true
    parent: Environement
    commentId: T:Environement.Conditions
  Environement.Wave.#ctor*:
    name:
      CSharp:
      - id: Environement.Wave.#ctor*
        name: Wave
        nameWithType: Wave.Wave
        qualifiedName: Environement.Wave.Wave
      VB:
      - id: Environement.Wave.#ctor*
        name: Wave
        nameWithType: Wave.Wave
        qualifiedName: Environement.Wave.Wave
    isDefinition: true
    commentId: Overload:Environement.Wave.#ctor
  Environement.Wave.Update*:
    name:
      CSharp:
      - id: Environement.Wave.Update*
        name: Update
        nameWithType: Wave.Update
        qualifiedName: Environement.Wave.Update
      VB:
      - id: Environement.Wave.Update*
        name: Update
        nameWithType: Wave.Update
        qualifiedName: Environement.Wave.Update
    isDefinition: true
    commentId: Overload:Environement.Wave.Update
  Environement.Wave.SetWaveDirection*:
    name:
      CSharp:
      - id: Environement.Wave.SetWaveDirection*
        name: SetWaveDirection
        nameWithType: Wave.SetWaveDirection
        qualifiedName: Environement.Wave.SetWaveDirection
      VB:
      - id: Environement.Wave.SetWaveDirection*
        name: SetWaveDirection
        nameWithType: Wave.SetWaveDirection
        qualifiedName: Environement.Wave.SetWaveDirection
    isDefinition: true
    commentId: Overload:Environement.Wave.SetWaveDirection
  Environement.Wave.SetWaveAmplitude*:
    name:
      CSharp:
      - id: Environement.Wave.SetWaveAmplitude*
        name: SetWaveAmplitude
        nameWithType: Wave.SetWaveAmplitude
        qualifiedName: Environement.Wave.SetWaveAmplitude
      VB:
      - id: Environement.Wave.SetWaveAmplitude*
        name: SetWaveAmplitude
        nameWithType: Wave.SetWaveAmplitude
        qualifiedName: Environement.Wave.SetWaveAmplitude
    isDefinition: true
    commentId: Overload:Environement.Wave.SetWaveAmplitude
  Environement.Wave.SetWaveLength*:
    name:
      CSharp:
      - id: Environement.Wave.SetWaveLength*
        name: SetWaveLength
        nameWithType: Wave.SetWaveLength
        qualifiedName: Environement.Wave.SetWaveLength
      VB:
      - id: Environement.Wave.SetWaveLength*
        name: SetWaveLength
        nameWithType: Wave.SetWaveLength
        qualifiedName: Environement.Wave.SetWaveLength
    isDefinition: true
    commentId: Overload:Environement.Wave.SetWaveLength
  Environement.Wave.GetDirection*:
    name:
      CSharp:
      - id: Environement.Wave.GetDirection*
        name: GetDirection
        nameWithType: Wave.GetDirection
        qualifiedName: Environement.Wave.GetDirection
      VB:
      - id: Environement.Wave.GetDirection*
        name: GetDirection
        nameWithType: Wave.GetDirection
        qualifiedName: Environement.Wave.GetDirection
    isDefinition: true
    commentId: Overload:Environement.Wave.GetDirection
  Environement.Wave.GetAmplitude*:
    name:
      CSharp:
      - id: Environement.Wave.GetAmplitude*
        name: GetAmplitude
        nameWithType: Wave.GetAmplitude
        qualifiedName: Environement.Wave.GetAmplitude
      VB:
      - id: Environement.Wave.GetAmplitude*
        name: GetAmplitude
        nameWithType: Wave.GetAmplitude
        qualifiedName: Environement.Wave.GetAmplitude
    isDefinition: true
    commentId: Overload:Environement.Wave.GetAmplitude
  Environement.Wave.GetWaveLength*:
    name:
      CSharp:
      - id: Environement.Wave.GetWaveLength*
        name: GetWaveLength
        nameWithType: Wave.GetWaveLength
        qualifiedName: Environement.Wave.GetWaveLength
      VB:
      - id: Environement.Wave.GetWaveLength*
        name: GetWaveLength
        nameWithType: Wave.GetWaveLength
        qualifiedName: Environement.Wave.GetWaveLength
    isDefinition: true
    commentId: Overload:Environement.Wave.GetWaveLength
  Environement.Wave:
    name:
      CSharp:
      - id: Environement.Wave
        name: Wave
        nameWithType: Wave
        qualifiedName: Environement.Wave
      VB:
      - id: Environement.Wave
        name: Wave
        nameWithType: Wave
        qualifiedName: Environement.Wave
    isDefinition: true
    commentId: T:Environement.Wave
  Environement.Current:
    name:
      CSharp:
      - id: Environement.Current
        name: Current
        nameWithType: Current
        qualifiedName: Environement.Current
      VB:
      - id: Environement.Current
        name: Current
        nameWithType: Current
        qualifiedName: Environement.Current
    isDefinition: true
    commentId: T:Environement.Current
  Environement.Wind:
    name:
      CSharp:
      - id: Environement.Wind
        name: Wind
        nameWithType: Wind
        qualifiedName: Environement.Wind
      VB:
      - id: Environement.Wind
        name: Wind
        nameWithType: Wind
        qualifiedName: Environement.Wind
    isDefinition: true
    commentId: T:Environement.Wind
  Environement.Environment.#ctor*:
    name:
      CSharp:
      - id: Environement.Environment.#ctor*
        name: Environment
        nameWithType: Environment.Environment
        qualifiedName: Environement.Environment.Environment
      VB:
      - id: Environement.Environment.#ctor*
        name: Environment
        nameWithType: Environment.Environment
        qualifiedName: Environement.Environment.Environment
    isDefinition: true
    commentId: Overload:Environement.Environment.#ctor
  Environement.Environment.UpdateWind*:
    name:
      CSharp:
      - id: Environement.Environment.UpdateWind*
        name: UpdateWind
        nameWithType: Environment.UpdateWind
        qualifiedName: Environement.Environment.UpdateWind
      VB:
      - id: Environement.Environment.UpdateWind*
        name: UpdateWind
        nameWithType: Environment.UpdateWind
        qualifiedName: Environement.Environment.UpdateWind
    isDefinition: true
    commentId: Overload:Environement.Environment.UpdateWind
  Environement.Environment.UpdateWave*:
    name:
      CSharp:
      - id: Environement.Environment.UpdateWave*
        name: UpdateWave
        nameWithType: Environment.UpdateWave
        qualifiedName: Environement.Environment.UpdateWave
      VB:
      - id: Environement.Environment.UpdateWave*
        name: UpdateWave
        nameWithType: Environment.UpdateWave
        qualifiedName: Environement.Environment.UpdateWave
    isDefinition: true
    commentId: Overload:Environement.Environment.UpdateWave
  Environement.Environment.UpdateCurrent*:
    name:
      CSharp:
      - id: Environement.Environment.UpdateCurrent*
        name: UpdateCurrent
        nameWithType: Environment.UpdateCurrent
        qualifiedName: Environement.Environment.UpdateCurrent
      VB:
      - id: Environement.Environment.UpdateCurrent*
        name: UpdateCurrent
        nameWithType: Environment.UpdateCurrent
        qualifiedName: Environement.Environment.UpdateCurrent
    isDefinition: true
    commentId: Overload:Environement.Environment.UpdateCurrent
  Environement.Environment.setEnvironment*:
    name:
      CSharp:
      - id: Environement.Environment.setEnvironment*
        name: setEnvironment
        nameWithType: Environment.setEnvironment
        qualifiedName: Environement.Environment.setEnvironment
      VB:
      - id: Environement.Environment.setEnvironment*
        name: setEnvironment
        nameWithType: Environment.setEnvironment
        qualifiedName: Environement.Environment.setEnvironment
    isDefinition: true
    commentId: Overload:Environement.Environment.setEnvironment
  Environement.Environment.getEnvState*:
    name:
      CSharp:
      - id: Environement.Environment.getEnvState*
        name: getEnvState
        nameWithType: Environment.getEnvState
        qualifiedName: Environement.Environment.getEnvState
      VB:
      - id: Environement.Environment.getEnvState*
        name: getEnvState
        nameWithType: Environment.getEnvState
        qualifiedName: Environement.Environment.getEnvState
    isDefinition: true
    commentId: Overload:Environement.Environment.getEnvState
  Environement.Current.#ctor*:
    name:
      CSharp:
      - id: Environement.Current.#ctor*
        name: Current
        nameWithType: Current.Current
        qualifiedName: Environement.Current.Current
      VB:
      - id: Environement.Current.#ctor*
        name: Current
        nameWithType: Current.Current
        qualifiedName: Environement.Current.Current
    isDefinition: true
    commentId: Overload:Environement.Current.#ctor
  Environement.Current.Update*:
    name:
      CSharp:
      - id: Environement.Current.Update*
        name: Update
        nameWithType: Current.Update
        qualifiedName: Environement.Current.Update
      VB:
      - id: Environement.Current.Update*
        name: Update
        nameWithType: Current.Update
        qualifiedName: Environement.Current.Update
    isDefinition: true
    commentId: Overload:Environement.Current.Update
  Environement.Current.SetCurrentSpeed*:
    name:
      CSharp:
      - id: Environement.Current.SetCurrentSpeed*
        name: SetCurrentSpeed
        nameWithType: Current.SetCurrentSpeed
        qualifiedName: Environement.Current.SetCurrentSpeed
      VB:
      - id: Environement.Current.SetCurrentSpeed*
        name: SetCurrentSpeed
        nameWithType: Current.SetCurrentSpeed
        qualifiedName: Environement.Current.SetCurrentSpeed
    isDefinition: true
    commentId: Overload:Environement.Current.SetCurrentSpeed
  Environement.Current.SetCurrentDirection*:
    name:
      CSharp:
      - id: Environement.Current.SetCurrentDirection*
        name: SetCurrentDirection
        nameWithType: Current.SetCurrentDirection
        qualifiedName: Environement.Current.SetCurrentDirection
      VB:
      - id: Environement.Current.SetCurrentDirection*
        name: SetCurrentDirection
        nameWithType: Current.SetCurrentDirection
        qualifiedName: Environement.Current.SetCurrentDirection
    isDefinition: true
    commentId: Overload:Environement.Current.SetCurrentDirection
  Environement.Current.GetCurrentSpeed*:
    name:
      CSharp:
      - id: Environement.Current.GetCurrentSpeed*
        name: GetCurrentSpeed
        nameWithType: Current.GetCurrentSpeed
        qualifiedName: Environement.Current.GetCurrentSpeed
      VB:
      - id: Environement.Current.GetCurrentSpeed*
        name: GetCurrentSpeed
        nameWithType: Current.GetCurrentSpeed
        qualifiedName: Environement.Current.GetCurrentSpeed
    isDefinition: true
    commentId: Overload:Environement.Current.GetCurrentSpeed
  Environement.Current.GetCurrentDirection*:
    name:
      CSharp:
      - id: Environement.Current.GetCurrentDirection*
        name: GetCurrentDirection
        nameWithType: Current.GetCurrentDirection
        qualifiedName: Environement.Current.GetCurrentDirection
      VB:
      - id: Environement.Current.GetCurrentDirection*
        name: GetCurrentDirection
        nameWithType: Current.GetCurrentDirection
        qualifiedName: Environement.Current.GetCurrentDirection
    isDefinition: true
    commentId: Overload:Environement.Current.GetCurrentDirection
  Environement.Wind.#ctor*:
    name:
      CSharp:
      - id: Environement.Wind.#ctor*
        name: Wind
        nameWithType: Wind.Wind
        qualifiedName: Environement.Wind.Wind
      VB:
      - id: Environement.Wind.#ctor*
        name: Wind
        nameWithType: Wind.Wind
        qualifiedName: Environement.Wind.Wind
    isDefinition: true
    commentId: Overload:Environement.Wind.#ctor
  Environement.Wind.Update*:
    name:
      CSharp:
      - id: Environement.Wind.Update*
        name: Update
        nameWithType: Wind.Update
        qualifiedName: Environement.Wind.Update
      VB:
      - id: Environement.Wind.Update*
        name: Update
        nameWithType: Wind.Update
        qualifiedName: Environement.Wind.Update
    isDefinition: true
    commentId: Overload:Environement.Wind.Update
  Environement.Wind.SetWindSpeed*:
    name:
      CSharp:
      - id: Environement.Wind.SetWindSpeed*
        name: SetWindSpeed
        nameWithType: Wind.SetWindSpeed
        qualifiedName: Environement.Wind.SetWindSpeed
      VB:
      - id: Environement.Wind.SetWindSpeed*
        name: SetWindSpeed
        nameWithType: Wind.SetWindSpeed
        qualifiedName: Environement.Wind.SetWindSpeed
    isDefinition: true
    commentId: Overload:Environement.Wind.SetWindSpeed
  Environement.Wind.SetWindDirection*:
    name:
      CSharp:
      - id: Environement.Wind.SetWindDirection*
        name: SetWindDirection
        nameWithType: Wind.SetWindDirection
        qualifiedName: Environement.Wind.SetWindDirection
      VB:
      - id: Environement.Wind.SetWindDirection*
        name: SetWindDirection
        nameWithType: Wind.SetWindDirection
        qualifiedName: Environement.Wind.SetWindDirection
    isDefinition: true
    commentId: Overload:Environement.Wind.SetWindDirection
  Environement.Wind.GetWindSpeed*:
    name:
      CSharp:
      - id: Environement.Wind.GetWindSpeed*
        name: GetWindSpeed
        nameWithType: Wind.GetWindSpeed
        qualifiedName: Environement.Wind.GetWindSpeed
      VB:
      - id: Environement.Wind.GetWindSpeed*
        name: GetWindSpeed
        nameWithType: Wind.GetWindSpeed
        qualifiedName: Environement.Wind.GetWindSpeed
    isDefinition: true
    commentId: Overload:Environement.Wind.GetWindSpeed
  Environement.Wind.GetWindDirection*:
    name:
      CSharp:
      - id: Environement.Wind.GetWindDirection*
        name: GetWindDirection
        nameWithType: Wind.GetWindDirection
        qualifiedName: Environement.Wind.GetWindDirection
      VB:
      - id: Environement.Wind.GetWindDirection*
        name: GetWindDirection
        nameWithType: Wind.GetWindDirection
        qualifiedName: Environement.Wind.GetWindDirection
    isDefinition: true
    commentId: Overload:Environement.Wind.GetWindDirection
  Unityscript:
    name:
      CSharp:
      - name: Unityscript
        nameWithType: Unityscript
        qualifiedName: Unityscript
      VB:
      - name: Unityscript
        nameWithType: Unityscript
        qualifiedName: Unityscript
    isDefinition: true
    commentId: N:Unityscript
  Unityscript.SwitchMode:
    name:
      CSharp:
      - id: Unityscript.SwitchMode
        name: SwitchMode
        nameWithType: SwitchMode
        qualifiedName: Unityscript.SwitchMode
      VB:
      - id: Unityscript.SwitchMode
        name: SwitchMode
        nameWithType: SwitchMode
        qualifiedName: Unityscript.SwitchMode
    isDefinition: true
    parent: Unityscript
    commentId: T:Unityscript.SwitchMode
  EnvPanel:
    name:
      CSharp:
      - id: EnvPanel
        name: EnvPanel
        nameWithType: EnvPanel
        qualifiedName: EnvPanel
      VB:
      - id: EnvPanel
        name: EnvPanel
        nameWithType: EnvPanel
        qualifiedName: EnvPanel
    isDefinition: true
    commentId: T:EnvPanel
  Unityscript.keyPress:
    name:
      CSharp:
      - id: Unityscript.keyPress
        name: keyPress
        nameWithType: keyPress
        qualifiedName: Unityscript.keyPress
      VB:
      - id: Unityscript.keyPress
        name: keyPress
        nameWithType: keyPress
        qualifiedName: Unityscript.keyPress
    isDefinition: true
    commentId: T:Unityscript.keyPress
  Unityscript.Controler.Start*:
    name:
      CSharp:
      - id: Unityscript.Controler.Start*
        name: Start
        nameWithType: Controler.Start
        qualifiedName: Unityscript.Controler.Start
      VB:
      - id: Unityscript.Controler.Start*
        name: Start
        nameWithType: Controler.Start
        qualifiedName: Unityscript.Controler.Start
    isDefinition: true
    commentId: Overload:Unityscript.Controler.Start
  Unityscript.Controler.DisplayCap*:
    name:
      CSharp:
      - id: Unityscript.Controler.DisplayCap*
        name: DisplayCap
        nameWithType: Controler.DisplayCap
        qualifiedName: Unityscript.Controler.DisplayCap
      VB:
      - id: Unityscript.Controler.DisplayCap*
        name: DisplayCap
        nameWithType: Controler.DisplayCap
        qualifiedName: Unityscript.Controler.DisplayCap
    isDefinition: true
    commentId: Overload:Unityscript.Controler.DisplayCap
  Unityscript.Controler.changeCap*:
    name:
      CSharp:
      - id: Unityscript.Controler.changeCap*
        name: changeCap
        nameWithType: Controler.changeCap
        qualifiedName: Unityscript.Controler.changeCap
      VB:
      - id: Unityscript.Controler.changeCap*
        name: changeCap
        nameWithType: Controler.changeCap
        qualifiedName: Unityscript.Controler.changeCap
    isDefinition: true
    commentId: Overload:Unityscript.Controler.changeCap
  Unityscript.Controler:
    name:
      CSharp:
      - id: Unityscript.Controler
        name: Controler
        nameWithType: Controler
        qualifiedName: Unityscript.Controler
      VB:
      - id: Unityscript.Controler
        name: Controler
        nameWithType: Controler
        qualifiedName: Unityscript.Controler
    isDefinition: true
    commentId: T:Unityscript.Controler
  UnityEngine.GameObject:
    name:
      CSharp:
      - id: UnityEngine.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: UnityEngine.GameObject
        isExternal: true
      VB:
      - id: UnityEngine.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: UnityEngine.GameObject
        isExternal: true
    isDefinition: true
    parent: UnityEngine
    commentId: T:UnityEngine.GameObject
  Unityscript.CreateSave.Save*:
    name:
      CSharp:
      - id: Unityscript.CreateSave.Save*
        name: Save
        nameWithType: CreateSave.Save
        qualifiedName: Unityscript.CreateSave.Save
      VB:
      - id: Unityscript.CreateSave.Save*
        name: Save
        nameWithType: CreateSave.Save
        qualifiedName: Unityscript.CreateSave.Save
    isDefinition: true
    commentId: Overload:Unityscript.CreateSave.Save
  Unityscript.CreateSave:
    name:
      CSharp:
      - id: Unityscript.CreateSave
        name: CreateSave
        nameWithType: CreateSave
        qualifiedName: Unityscript.CreateSave
      VB:
      - id: Unityscript.CreateSave
        name: CreateSave
        nameWithType: CreateSave
        qualifiedName: Unityscript.CreateSave
    isDefinition: true
    commentId: T:Unityscript.CreateSave
  Unityscript.BoatPhys:
    name:
      CSharp:
      - id: Unityscript.BoatPhys
        name: BoatPhys
        nameWithType: BoatPhys
        qualifiedName: Unityscript.BoatPhys
      VB:
      - id: Unityscript.BoatPhys
        name: BoatPhys
        nameWithType: BoatPhys
        qualifiedName: Unityscript.BoatPhys
    isDefinition: true
    parent: Unityscript
    commentId: T:Unityscript.BoatPhys
  UnityEngine.Rigidbody2D:
    name:
      CSharp:
      - id: UnityEngine.Rigidbody2D
        name: Rigidbody2D
        nameWithType: Rigidbody2D
        qualifiedName: UnityEngine.Rigidbody2D
        isExternal: true
      VB:
      - id: UnityEngine.Rigidbody2D
        name: Rigidbody2D
        nameWithType: Rigidbody2D
        qualifiedName: UnityEngine.Rigidbody2D
        isExternal: true
    isDefinition: true
    parent: UnityEngine
    commentId: T:UnityEngine.Rigidbody2D
  UnityEngine.Vector2:
    name:
      CSharp:
      - id: UnityEngine.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: UnityEngine.Vector2
        isExternal: true
      VB:
      - id: UnityEngine.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: UnityEngine.Vector2
        isExternal: true
    isDefinition: true
    parent: UnityEngine
    commentId: T:UnityEngine.Vector2
  Unityscript.ShowValue.ShowInitValue*:
    name:
      CSharp:
      - id: Unityscript.ShowValue.ShowInitValue*
        name: ShowInitValue
        nameWithType: ShowValue.ShowInitValue
        qualifiedName: Unityscript.ShowValue.ShowInitValue
      VB:
      - id: Unityscript.ShowValue.ShowInitValue*
        name: ShowInitValue
        nameWithType: ShowValue.ShowInitValue
        qualifiedName: Unityscript.ShowValue.ShowInitValue
    isDefinition: true
    commentId: Overload:Unityscript.ShowValue.ShowInitValue
  Unityscript.ShowValue:
    name:
      CSharp:
      - id: Unityscript.ShowValue
        name: ShowValue
        nameWithType: ShowValue
        qualifiedName: Unityscript.ShowValue
      VB:
      - id: Unityscript.ShowValue
        name: ShowValue
        nameWithType: ShowValue
        qualifiedName: Unityscript.ShowValue
    isDefinition: true
    commentId: T:Unityscript.ShowValue
  System.Collections.Generic.List{System.String}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.String}
  Unityscript.ButtonsSavesControl.GenerateList*:
    name:
      CSharp:
      - id: Unityscript.ButtonsSavesControl.GenerateList*
        name: GenerateList
        nameWithType: ButtonsSavesControl.GenerateList
        qualifiedName: Unityscript.ButtonsSavesControl.GenerateList
      VB:
      - id: Unityscript.ButtonsSavesControl.GenerateList*
        name: GenerateList
        nameWithType: ButtonsSavesControl.GenerateList
        qualifiedName: Unityscript.ButtonsSavesControl.GenerateList
    isDefinition: true
    commentId: Overload:Unityscript.ButtonsSavesControl.GenerateList
  Unityscript.ButtonsSavesControl.LoadSavesOnClick*:
    name:
      CSharp:
      - id: Unityscript.ButtonsSavesControl.LoadSavesOnClick*
        name: LoadSavesOnClick
        nameWithType: ButtonsSavesControl.LoadSavesOnClick
        qualifiedName: Unityscript.ButtonsSavesControl.LoadSavesOnClick
      VB:
      - id: Unityscript.ButtonsSavesControl.LoadSavesOnClick*
        name: LoadSavesOnClick
        nameWithType: ButtonsSavesControl.LoadSavesOnClick
        qualifiedName: Unityscript.ButtonsSavesControl.LoadSavesOnClick
    isDefinition: true
    commentId: Overload:Unityscript.ButtonsSavesControl.LoadSavesOnClick
  Unityscript.ButtonsSavesControl:
    name:
      CSharp:
      - id: Unityscript.ButtonsSavesControl
        name: ButtonsSavesControl
        nameWithType: ButtonsSavesControl
        qualifiedName: Unityscript.ButtonsSavesControl
      VB:
      - id: Unityscript.ButtonsSavesControl
        name: ButtonsSavesControl
        nameWithType: ButtonsSavesControl
        qualifiedName: Unityscript.ButtonsSavesControl
    isDefinition: true
    commentId: T:Unityscript.ButtonsSavesControl
  Unityscript.ButtonWaypoint.GenerateList*:
    name:
      CSharp:
      - id: Unityscript.ButtonWaypoint.GenerateList*
        name: GenerateList
        nameWithType: ButtonWaypoint.GenerateList
        qualifiedName: Unityscript.ButtonWaypoint.GenerateList
      VB:
      - id: Unityscript.ButtonWaypoint.GenerateList*
        name: GenerateList
        nameWithType: ButtonWaypoint.GenerateList
        qualifiedName: Unityscript.ButtonWaypoint.GenerateList
    isDefinition: true
    commentId: Overload:Unityscript.ButtonWaypoint.GenerateList
  Unityscript.ButtonWaypoint.LoadWaypointOnClick*:
    name:
      CSharp:
      - id: Unityscript.ButtonWaypoint.LoadWaypointOnClick*
        name: LoadWaypointOnClick
        nameWithType: ButtonWaypoint.LoadWaypointOnClick
        qualifiedName: Unityscript.ButtonWaypoint.LoadWaypointOnClick
      VB:
      - id: Unityscript.ButtonWaypoint.LoadWaypointOnClick*
        name: LoadWaypointOnClick
        nameWithType: ButtonWaypoint.LoadWaypointOnClick
        qualifiedName: Unityscript.ButtonWaypoint.LoadWaypointOnClick
    isDefinition: true
    commentId: Overload:Unityscript.ButtonWaypoint.LoadWaypointOnClick
  Unityscript.ButtonWaypoint:
    name:
      CSharp:
      - id: Unityscript.ButtonWaypoint
        name: ButtonWaypoint
        nameWithType: ButtonWaypoint
        qualifiedName: Unityscript.ButtonWaypoint
      VB:
      - id: Unityscript.ButtonWaypoint
        name: ButtonWaypoint
        nameWithType: ButtonWaypoint
        qualifiedName: Unityscript.ButtonWaypoint
    isDefinition: true
    commentId: T:Unityscript.ButtonWaypoint
  Unityscript.PanelSwitch.showPanelQTVLM*:
    name:
      CSharp:
      - id: Unityscript.PanelSwitch.showPanelQTVLM*
        name: showPanelQTVLM
        nameWithType: PanelSwitch.showPanelQTVLM
        qualifiedName: Unityscript.PanelSwitch.showPanelQTVLM
      VB:
      - id: Unityscript.PanelSwitch.showPanelQTVLM*
        name: showPanelQTVLM
        nameWithType: PanelSwitch.showPanelQTVLM
        qualifiedName: Unityscript.PanelSwitch.showPanelQTVLM
    isDefinition: true
    commentId: Overload:Unityscript.PanelSwitch.showPanelQTVLM
  Unityscript.PanelSwitch.showPanelRM*:
    name:
      CSharp:
      - id: Unityscript.PanelSwitch.showPanelRM*
        name: showPanelRM
        nameWithType: PanelSwitch.showPanelRM
        qualifiedName: Unityscript.PanelSwitch.showPanelRM
      VB:
      - id: Unityscript.PanelSwitch.showPanelRM*
        name: showPanelRM
        nameWithType: PanelSwitch.showPanelRM
        qualifiedName: Unityscript.PanelSwitch.showPanelRM
    isDefinition: true
    commentId: Overload:Unityscript.PanelSwitch.showPanelRM
  Unityscript.PanelSwitch.showPanelLang*:
    name:
      CSharp:
      - id: Unityscript.PanelSwitch.showPanelLang*
        name: showPanelLang
        nameWithType: PanelSwitch.showPanelLang
        qualifiedName: Unityscript.PanelSwitch.showPanelLang
      VB:
      - id: Unityscript.PanelSwitch.showPanelLang*
        name: showPanelLang
        nameWithType: PanelSwitch.showPanelLang
        qualifiedName: Unityscript.PanelSwitch.showPanelLang
    isDefinition: true
    commentId: Overload:Unityscript.PanelSwitch.showPanelLang
  Unityscript.PanelSwitch:
    name:
      CSharp:
      - id: Unityscript.PanelSwitch
        name: PanelSwitch
        nameWithType: PanelSwitch
        qualifiedName: Unityscript.PanelSwitch
      VB:
      - id: Unityscript.PanelSwitch
        name: PanelSwitch
        nameWithType: PanelSwitch
        qualifiedName: Unityscript.PanelSwitch
    isDefinition: true
    commentId: T:Unityscript.PanelSwitch
  Unityscript.eventOnClick.exitApp*:
    name:
      CSharp:
      - id: Unityscript.eventOnClick.exitApp*
        name: exitApp
        nameWithType: eventOnClick.exitApp
        qualifiedName: Unityscript.eventOnClick.exitApp
      VB:
      - id: Unityscript.eventOnClick.exitApp*
        name: exitApp
        nameWithType: eventOnClick.exitApp
        qualifiedName: Unityscript.eventOnClick.exitApp
    isDefinition: true
    commentId: Overload:Unityscript.eventOnClick.exitApp
  Unityscript.eventOnClick.continueRace*:
    name:
      CSharp:
      - id: Unityscript.eventOnClick.continueRace*
        name: continueRace
        nameWithType: eventOnClick.continueRace
        qualifiedName: Unityscript.eventOnClick.continueRace
      VB:
      - id: Unityscript.eventOnClick.continueRace*
        name: continueRace
        nameWithType: eventOnClick.continueRace
        qualifiedName: Unityscript.eventOnClick.continueRace
    isDefinition: true
    commentId: Overload:Unityscript.eventOnClick.continueRace
  Unityscript.eventOnClick.startNewGame*:
    name:
      CSharp:
      - id: Unityscript.eventOnClick.startNewGame*
        name: startNewGame
        nameWithType: eventOnClick.startNewGame
        qualifiedName: Unityscript.eventOnClick.startNewGame
      VB:
      - id: Unityscript.eventOnClick.startNewGame*
        name: startNewGame
        nameWithType: eventOnClick.startNewGame
        qualifiedName: Unityscript.eventOnClick.startNewGame
    isDefinition: true
    commentId: Overload:Unityscript.eventOnClick.startNewGame
  Unityscript.eventOnClick.Menu*:
    name:
      CSharp:
      - id: Unityscript.eventOnClick.Menu*
        name: Menu
        nameWithType: eventOnClick.Menu
        qualifiedName: Unityscript.eventOnClick.Menu
      VB:
      - id: Unityscript.eventOnClick.Menu*
        name: Menu
        nameWithType: eventOnClick.Menu
        qualifiedName: Unityscript.eventOnClick.Menu
    isDefinition: true
    commentId: Overload:Unityscript.eventOnClick.Menu
  Unityscript.eventOnClick.configIPfromMode*:
    name:
      CSharp:
      - id: Unityscript.eventOnClick.configIPfromMode*
        name: configIPfromMode
        nameWithType: eventOnClick.configIPfromMode
        qualifiedName: Unityscript.eventOnClick.configIPfromMode
      VB:
      - id: Unityscript.eventOnClick.configIPfromMode*
        name: configIPfromMode
        nameWithType: eventOnClick.configIPfromMode
        qualifiedName: Unityscript.eventOnClick.configIPfromMode
    isDefinition: true
    commentId: Overload:Unityscript.eventOnClick.configIPfromMode
  Unityscript.eventOnClick.ConfigIpFromMenu*:
    name:
      CSharp:
      - id: Unityscript.eventOnClick.ConfigIpFromMenu*
        name: ConfigIpFromMenu
        nameWithType: eventOnClick.ConfigIpFromMenu
        qualifiedName: Unityscript.eventOnClick.ConfigIpFromMenu
      VB:
      - id: Unityscript.eventOnClick.ConfigIpFromMenu*
        name: ConfigIpFromMenu
        nameWithType: eventOnClick.ConfigIpFromMenu
        qualifiedName: Unityscript.eventOnClick.ConfigIpFromMenu
    isDefinition: true
    commentId: Overload:Unityscript.eventOnClick.ConfigIpFromMenu
  Unityscript.eventOnClick.loadRMBoatList*:
    name:
      CSharp:
      - id: Unityscript.eventOnClick.loadRMBoatList*
        name: loadRMBoatList
        nameWithType: eventOnClick.loadRMBoatList
        qualifiedName: Unityscript.eventOnClick.loadRMBoatList
      VB:
      - id: Unityscript.eventOnClick.loadRMBoatList*
        name: loadRMBoatList
        nameWithType: eventOnClick.loadRMBoatList
        qualifiedName: Unityscript.eventOnClick.loadRMBoatList
    isDefinition: true
    commentId: Overload:Unityscript.eventOnClick.loadRMBoatList
  Unityscript.eventOnClick.initVerify*:
    name:
      CSharp:
      - id: Unityscript.eventOnClick.initVerify*
        name: initVerify
        nameWithType: eventOnClick.initVerify
        qualifiedName: Unityscript.eventOnClick.initVerify
      VB:
      - id: Unityscript.eventOnClick.initVerify*
        name: initVerify
        nameWithType: eventOnClick.initVerify
        qualifiedName: Unityscript.eventOnClick.initVerify
    isDefinition: true
    commentId: Overload:Unityscript.eventOnClick.initVerify
  Unityscript.eventOnClick.waypointLoadScene*:
    name:
      CSharp:
      - id: Unityscript.eventOnClick.waypointLoadScene*
        name: waypointLoadScene
        nameWithType: eventOnClick.waypointLoadScene
        qualifiedName: Unityscript.eventOnClick.waypointLoadScene
      VB:
      - id: Unityscript.eventOnClick.waypointLoadScene*
        name: waypointLoadScene
        nameWithType: eventOnClick.waypointLoadScene
        qualifiedName: Unityscript.eventOnClick.waypointLoadScene
    isDefinition: true
    commentId: Overload:Unityscript.eventOnClick.waypointLoadScene
  Unityscript.eventOnClick.loadDocumentation*:
    name:
      CSharp:
      - id: Unityscript.eventOnClick.loadDocumentation*
        name: loadDocumentation
        nameWithType: eventOnClick.loadDocumentation
        qualifiedName: Unityscript.eventOnClick.loadDocumentation
      VB:
      - id: Unityscript.eventOnClick.loadDocumentation*
        name: loadDocumentation
        nameWithType: eventOnClick.loadDocumentation
        qualifiedName: Unityscript.eventOnClick.loadDocumentation
    isDefinition: true
    commentId: Overload:Unityscript.eventOnClick.loadDocumentation
  Unityscript.eventOnClick:
    name:
      CSharp:
      - id: Unityscript.eventOnClick
        name: eventOnClick
        nameWithType: eventOnClick
        qualifiedName: Unityscript.eventOnClick
      VB:
      - id: Unityscript.eventOnClick
        name: eventOnClick
        nameWithType: eventOnClick
        qualifiedName: Unityscript.eventOnClick
    isDefinition: true
    commentId: T:Unityscript.eventOnClick
  Unityscript.PolarSelection.GenerateList*:
    name:
      CSharp:
      - id: Unityscript.PolarSelection.GenerateList*
        name: GenerateList
        nameWithType: PolarSelection.GenerateList
        qualifiedName: Unityscript.PolarSelection.GenerateList
      VB:
      - id: Unityscript.PolarSelection.GenerateList*
        name: GenerateList
        nameWithType: PolarSelection.GenerateList
        qualifiedName: Unityscript.PolarSelection.GenerateList
    isDefinition: true
    commentId: Overload:Unityscript.PolarSelection.GenerateList
  Unityscript.PolarSelection.LoadPolarOnClick*:
    name:
      CSharp:
      - id: Unityscript.PolarSelection.LoadPolarOnClick*
        name: LoadPolarOnClick
        nameWithType: PolarSelection.LoadPolarOnClick
        qualifiedName: Unityscript.PolarSelection.LoadPolarOnClick
      VB:
      - id: Unityscript.PolarSelection.LoadPolarOnClick*
        name: LoadPolarOnClick
        nameWithType: PolarSelection.LoadPolarOnClick
        qualifiedName: Unityscript.PolarSelection.LoadPolarOnClick
    isDefinition: true
    commentId: Overload:Unityscript.PolarSelection.LoadPolarOnClick
  Unityscript.PolarSelection.setNullCurrentPolar*:
    name:
      CSharp:
      - id: Unityscript.PolarSelection.setNullCurrentPolar*
        name: setNullCurrentPolar
        nameWithType: PolarSelection.setNullCurrentPolar
        qualifiedName: Unityscript.PolarSelection.setNullCurrentPolar
      VB:
      - id: Unityscript.PolarSelection.setNullCurrentPolar*
        name: setNullCurrentPolar
        nameWithType: PolarSelection.setNullCurrentPolar
        qualifiedName: Unityscript.PolarSelection.setNullCurrentPolar
    isDefinition: true
    commentId: Overload:Unityscript.PolarSelection.setNullCurrentPolar
  Unityscript.PolarSelection:
    name:
      CSharp:
      - id: Unityscript.PolarSelection
        name: PolarSelection
        nameWithType: PolarSelection
        qualifiedName: Unityscript.PolarSelection
      VB:
      - id: Unityscript.PolarSelection
        name: PolarSelection
        nameWithType: PolarSelection
        qualifiedName: Unityscript.PolarSelection
    isDefinition: true
    commentId: T:Unityscript.PolarSelection
  Unityscript.DisplayCadran.displayInfo*:
    name:
      CSharp:
      - id: Unityscript.DisplayCadran.displayInfo*
        name: displayInfo
        nameWithType: DisplayCadran.displayInfo
        qualifiedName: Unityscript.DisplayCadran.displayInfo
      VB:
      - id: Unityscript.DisplayCadran.displayInfo*
        name: displayInfo
        nameWithType: DisplayCadran.displayInfo
        qualifiedName: Unityscript.DisplayCadran.displayInfo
    isDefinition: true
    commentId: Overload:Unityscript.DisplayCadran.displayInfo
  Unityscript.DisplayCadran.parseFloat*:
    name:
      CSharp:
      - id: Unityscript.DisplayCadran.parseFloat*
        name: parseFloat
        nameWithType: DisplayCadran.parseFloat
        qualifiedName: Unityscript.DisplayCadran.parseFloat
      VB:
      - id: Unityscript.DisplayCadran.parseFloat*
        name: parseFloat
        nameWithType: DisplayCadran.parseFloat
        qualifiedName: Unityscript.DisplayCadran.parseFloat
    isDefinition: true
    commentId: Overload:Unityscript.DisplayCadran.parseFloat
  Unityscript.DisplayCadran:
    name:
      CSharp:
      - id: Unityscript.DisplayCadran
        name: DisplayCadran
        nameWithType: DisplayCadran
        qualifiedName: Unityscript.DisplayCadran
      VB:
      - id: Unityscript.DisplayCadran
        name: DisplayCadran
        nameWithType: DisplayCadran
        qualifiedName: Unityscript.DisplayCadran
    isDefinition: true
    commentId: T:Unityscript.DisplayCadran
  TMPro.TMP_Dropdown:
    name:
      CSharp:
      - id: TMPro.TMP_Dropdown
        name: TMP_Dropdown
        nameWithType: TMP_Dropdown
        qualifiedName: TMPro.TMP_Dropdown
        isExternal: true
      VB:
      - id: TMPro.TMP_Dropdown
        name: TMP_Dropdown
        nameWithType: TMP_Dropdown
        qualifiedName: TMPro.TMP_Dropdown
        isExternal: true
    isDefinition: true
    parent: TMPro
    commentId: T:TMPro.TMP_Dropdown
  Unityscript.setConfig.SetNMEA*:
    name:
      CSharp:
      - id: Unityscript.setConfig.SetNMEA*
        name: SetNMEA
        nameWithType: setConfig.SetNMEA
        qualifiedName: Unityscript.setConfig.SetNMEA
      VB:
      - id: Unityscript.setConfig.SetNMEA*
        name: SetNMEA
        nameWithType: setConfig.SetNMEA
        qualifiedName: Unityscript.setConfig.SetNMEA
    isDefinition: true
    commentId: Overload:Unityscript.setConfig.SetNMEA
  Unityscript.setConfig.SetRM*:
    name:
      CSharp:
      - id: Unityscript.setConfig.SetRM*
        name: SetRM
        nameWithType: setConfig.SetRM
        qualifiedName: Unityscript.setConfig.SetRM
      VB:
      - id: Unityscript.setConfig.SetRM*
        name: SetRM
        nameWithType: setConfig.SetRM
        qualifiedName: Unityscript.setConfig.SetRM
    isDefinition: true
    commentId: Overload:Unityscript.setConfig.SetRM
  Unityscript.setConfig.SetLang*:
    name:
      CSharp:
      - id: Unityscript.setConfig.SetLang*
        name: SetLang
        nameWithType: setConfig.SetLang
        qualifiedName: Unityscript.setConfig.SetLang
      VB:
      - id: Unityscript.setConfig.SetLang*
        name: SetLang
        nameWithType: setConfig.SetLang
        qualifiedName: Unityscript.setConfig.SetLang
    isDefinition: true
    commentId: Overload:Unityscript.setConfig.SetLang
  Unityscript.setConfig.ShowConfig*:
    name:
      CSharp:
      - id: Unityscript.setConfig.ShowConfig*
        name: ShowConfig
        nameWithType: setConfig.ShowConfig
        qualifiedName: Unityscript.setConfig.ShowConfig
      VB:
      - id: Unityscript.setConfig.ShowConfig*
        name: ShowConfig
        nameWithType: setConfig.ShowConfig
        qualifiedName: Unityscript.setConfig.ShowConfig
    isDefinition: true
    commentId: Overload:Unityscript.setConfig.ShowConfig
  Unityscript.setConfig:
    name:
      CSharp:
      - id: Unityscript.setConfig
        name: setConfig
        nameWithType: setConfig
        qualifiedName: Unityscript.setConfig
      VB:
      - id: Unityscript.setConfig
        name: setConfig
        nameWithType: setConfig
        qualifiedName: Unityscript.setConfig
    isDefinition: true
    commentId: T:Unityscript.setConfig
  Unityscript.Run:
    name:
      CSharp:
      - id: Unityscript.Run
        name: Run
        nameWithType: Run
        qualifiedName: Unityscript.Run
      VB:
      - id: Unityscript.Run
        name: Run
        nameWithType: Run
        qualifiedName: Unityscript.Run
    isDefinition: true
    commentId: T:Unityscript.Run
  Unityscript.ButtonListButton.SetText*:
    name:
      CSharp:
      - id: Unityscript.ButtonListButton.SetText*
        name: SetText
        nameWithType: ButtonListButton.SetText
        qualifiedName: Unityscript.ButtonListButton.SetText
      VB:
      - id: Unityscript.ButtonListButton.SetText*
        name: SetText
        nameWithType: ButtonListButton.SetText
        qualifiedName: Unityscript.ButtonListButton.SetText
    isDefinition: true
    commentId: Overload:Unityscript.ButtonListButton.SetText
  Unityscript.ButtonListButton.OnClick*:
    name:
      CSharp:
      - id: Unityscript.ButtonListButton.OnClick*
        name: OnClick
        nameWithType: ButtonListButton.OnClick
        qualifiedName: Unityscript.ButtonListButton.OnClick
      VB:
      - id: Unityscript.ButtonListButton.OnClick*
        name: OnClick
        nameWithType: ButtonListButton.OnClick
        qualifiedName: Unityscript.ButtonListButton.OnClick
    isDefinition: true
    commentId: Overload:Unityscript.ButtonListButton.OnClick
  Unityscript.ButtonListButton:
    name:
      CSharp:
      - id: Unityscript.ButtonListButton
        name: ButtonListButton
        nameWithType: ButtonListButton
        qualifiedName: Unityscript.ButtonListButton
      VB:
      - id: Unityscript.ButtonListButton
        name: ButtonListButton
        nameWithType: ButtonListButton
        qualifiedName: Unityscript.ButtonListButton
    isDefinition: true
    commentId: T:Unityscript.ButtonListButton
  Unityscript.SwitchMode.showCappanel*:
    name:
      CSharp:
      - id: Unityscript.SwitchMode.showCappanel*
        name: showCappanel
        nameWithType: SwitchMode.showCappanel
        qualifiedName: Unityscript.SwitchMode.showCappanel
      VB:
      - id: Unityscript.SwitchMode.showCappanel*
        name: showCappanel
        nameWithType: SwitchMode.showCappanel
        qualifiedName: Unityscript.SwitchMode.showCappanel
    isDefinition: true
    commentId: Overload:Unityscript.SwitchMode.showCappanel
  Unityscript.SwitchMode.showWindpanel*:
    name:
      CSharp:
      - id: Unityscript.SwitchMode.showWindpanel*
        name: showWindpanel
        nameWithType: SwitchMode.showWindpanel
        qualifiedName: Unityscript.SwitchMode.showWindpanel
      VB:
      - id: Unityscript.SwitchMode.showWindpanel*
        name: showWindpanel
        nameWithType: SwitchMode.showWindpanel
        qualifiedName: Unityscript.SwitchMode.showWindpanel
    isDefinition: true
    commentId: Overload:Unityscript.SwitchMode.showWindpanel
  Unityscript.SwitchMode.tabpress*:
    name:
      CSharp:
      - id: Unityscript.SwitchMode.tabpress*
        name: tabpress
        nameWithType: SwitchMode.tabpress
        qualifiedName: Unityscript.SwitchMode.tabpress
      VB:
      - id: Unityscript.SwitchMode.tabpress*
        name: tabpress
        nameWithType: SwitchMode.tabpress
        qualifiedName: Unityscript.SwitchMode.tabpress
    isDefinition: true
    commentId: Overload:Unityscript.SwitchMode.tabpress
  Unityscript.Creation:
    name:
      CSharp:
      - id: Unityscript.Creation
        name: Creation
        nameWithType: Creation
        qualifiedName: Unityscript.Creation
      VB:
      - id: Unityscript.Creation
        name: Creation
        nameWithType: Creation
        qualifiedName: Unityscript.Creation
    isDefinition: true
    parent: Unityscript
    commentId: T:Unityscript.Creation
  Model.Observer:
    name:
      CSharp:
      - id: Model.Observer
        name: Observer
        nameWithType: Observer
        qualifiedName: Model.Observer
      VB:
      - id: Model.Observer
        name: Observer
        nameWithType: Observer
        qualifiedName: Model.Observer
    isDefinition: true
    parent: Model
    commentId: T:Model.Observer
  Unityscript.Creation.changeBoatInfo*:
    name:
      CSharp:
      - id: Unityscript.Creation.changeBoatInfo*
        name: changeBoatInfo
        nameWithType: Creation.changeBoatInfo
        qualifiedName: Unityscript.Creation.changeBoatInfo
      VB:
      - id: Unityscript.Creation.changeBoatInfo*
        name: changeBoatInfo
        nameWithType: Creation.changeBoatInfo
        qualifiedName: Unityscript.Creation.changeBoatInfo
    isDefinition: true
    commentId: Overload:Unityscript.Creation.changeBoatInfo
  Unityscript.Creation.setCurrent*:
    name:
      CSharp:
      - id: Unityscript.Creation.setCurrent*
        name: setCurrent
        nameWithType: Creation.setCurrent
        qualifiedName: Unityscript.Creation.setCurrent
      VB:
      - id: Unityscript.Creation.setCurrent*
        name: setCurrent
        nameWithType: Creation.setCurrent
        qualifiedName: Unityscript.Creation.setCurrent
    isDefinition: true
    commentId: Overload:Unityscript.Creation.setCurrent
  Unityscript.Creation.setWind*:
    name:
      CSharp:
      - id: Unityscript.Creation.setWind*
        name: setWind
        nameWithType: Creation.setWind
        qualifiedName: Unityscript.Creation.setWind
      VB:
      - id: Unityscript.Creation.setWind*
        name: setWind
        nameWithType: Creation.setWind
        qualifiedName: Unityscript.Creation.setWind
    isDefinition: true
    commentId: Overload:Unityscript.Creation.setWind
  Unityscript.Creation.setWave*:
    name:
      CSharp:
      - id: Unityscript.Creation.setWave*
        name: setWave
        nameWithType: Creation.setWave
        qualifiedName: Unityscript.Creation.setWave
      VB:
      - id: Unityscript.Creation.setWave*
        name: setWave
        nameWithType: Creation.setWave
        qualifiedName: Unityscript.Creation.setWave
    isDefinition: true
    commentId: Overload:Unityscript.Creation.setWave
  Unityscript.Creation.setFactorAcc*:
    name:
      CSharp:
      - id: Unityscript.Creation.setFactorAcc*
        name: setFactorAcc
        nameWithType: Creation.setFactorAcc
        qualifiedName: Unityscript.Creation.setFactorAcc
      VB:
      - id: Unityscript.Creation.setFactorAcc*
        name: setFactorAcc
        nameWithType: Creation.setFactorAcc
        qualifiedName: Unityscript.Creation.setFactorAcc
    isDefinition: true
    commentId: Overload:Unityscript.Creation.setFactorAcc
  Unityscript.Creation.switchCommande*:
    name:
      CSharp:
      - id: Unityscript.Creation.switchCommande*
        name: switchCommande
        nameWithType: Creation.switchCommande
        qualifiedName: Unityscript.Creation.switchCommande
      VB:
      - id: Unityscript.Creation.switchCommande*
        name: switchCommande
        nameWithType: Creation.switchCommande
        qualifiedName: Unityscript.Creation.switchCommande
    isDefinition: true
    commentId: Overload:Unityscript.Creation.switchCommande
  Unityscript.Creation.showCap*:
    name:
      CSharp:
      - id: Unityscript.Creation.showCap*
        name: showCap
        nameWithType: Creation.showCap
        qualifiedName: Unityscript.Creation.showCap
      VB:
      - id: Unityscript.Creation.showCap*
        name: showCap
        nameWithType: Creation.showCap
        qualifiedName: Unityscript.Creation.showCap
    isDefinition: true
    commentId: Overload:Unityscript.Creation.showCap
  Unityscript.Creation.ShowRegulateurCap*:
    name:
      CSharp:
      - id: Unityscript.Creation.ShowRegulateurCap*
        name: ShowRegulateurCap
        nameWithType: Creation.ShowRegulateurCap
        qualifiedName: Unityscript.Creation.ShowRegulateurCap
      VB:
      - id: Unityscript.Creation.ShowRegulateurCap*
        name: ShowRegulateurCap
        nameWithType: Creation.ShowRegulateurCap
        qualifiedName: Unityscript.Creation.ShowRegulateurCap
    isDefinition: true
    commentId: Overload:Unityscript.Creation.ShowRegulateurCap
  Unityscript.Creation.capChange*:
    name:
      CSharp:
      - id: Unityscript.Creation.capChange*
        name: capChange
        nameWithType: Creation.capChange
        qualifiedName: Unityscript.Creation.capChange
      VB:
      - id: Unityscript.Creation.capChange*
        name: capChange
        nameWithType: Creation.capChange
        qualifiedName: Unityscript.Creation.capChange
    isDefinition: true
    commentId: Overload:Unityscript.Creation.capChange
  Unityscript.Creation.getFactorAcc*:
    name:
      CSharp:
      - id: Unityscript.Creation.getFactorAcc*
        name: getFactorAcc
        nameWithType: Creation.getFactorAcc
        qualifiedName: Unityscript.Creation.getFactorAcc
      VB:
      - id: Unityscript.Creation.getFactorAcc*
        name: getFactorAcc
        nameWithType: Creation.getFactorAcc
        qualifiedName: Unityscript.Creation.getFactorAcc
    isDefinition: true
    commentId: Overload:Unityscript.Creation.getFactorAcc
  Unityscript.Creation.getWindSpeed*:
    name:
      CSharp:
      - id: Unityscript.Creation.getWindSpeed*
        name: getWindSpeed
        nameWithType: Creation.getWindSpeed
        qualifiedName: Unityscript.Creation.getWindSpeed
      VB:
      - id: Unityscript.Creation.getWindSpeed*
        name: getWindSpeed
        nameWithType: Creation.getWindSpeed
        qualifiedName: Unityscript.Creation.getWindSpeed
    isDefinition: true
    commentId: Overload:Unityscript.Creation.getWindSpeed
  Unityscript.Creation.getWindDir*:
    name:
      CSharp:
      - id: Unityscript.Creation.getWindDir*
        name: getWindDir
        nameWithType: Creation.getWindDir
        qualifiedName: Unityscript.Creation.getWindDir
      VB:
      - id: Unityscript.Creation.getWindDir*
        name: getWindDir
        nameWithType: Creation.getWindDir
        qualifiedName: Unityscript.Creation.getWindDir
    isDefinition: true
    commentId: Overload:Unityscript.Creation.getWindDir
  Unityscript.Creation.getWaveAmpl*:
    name:
      CSharp:
      - id: Unityscript.Creation.getWaveAmpl*
        name: getWaveAmpl
        nameWithType: Creation.getWaveAmpl
        qualifiedName: Unityscript.Creation.getWaveAmpl
      VB:
      - id: Unityscript.Creation.getWaveAmpl*
        name: getWaveAmpl
        nameWithType: Creation.getWaveAmpl
        qualifiedName: Unityscript.Creation.getWaveAmpl
    isDefinition: true
    commentId: Overload:Unityscript.Creation.getWaveAmpl
  Unityscript.Creation.getWaveDir*:
    name:
      CSharp:
      - id: Unityscript.Creation.getWaveDir*
        name: getWaveDir
        nameWithType: Creation.getWaveDir
        qualifiedName: Unityscript.Creation.getWaveDir
      VB:
      - id: Unityscript.Creation.getWaveDir*
        name: getWaveDir
        nameWithType: Creation.getWaveDir
        qualifiedName: Unityscript.Creation.getWaveDir
    isDefinition: true
    commentId: Overload:Unityscript.Creation.getWaveDir
  Unityscript.Creation.getWaveLength*:
    name:
      CSharp:
      - id: Unityscript.Creation.getWaveLength*
        name: getWaveLength
        nameWithType: Creation.getWaveLength
        qualifiedName: Unityscript.Creation.getWaveLength
      VB:
      - id: Unityscript.Creation.getWaveLength*
        name: getWaveLength
        nameWithType: Creation.getWaveLength
        qualifiedName: Unityscript.Creation.getWaveLength
    isDefinition: true
    commentId: Overload:Unityscript.Creation.getWaveLength
  Unityscript.Creation.getWaterSpeed*:
    name:
      CSharp:
      - id: Unityscript.Creation.getWaterSpeed*
        name: getWaterSpeed
        nameWithType: Creation.getWaterSpeed
        qualifiedName: Unityscript.Creation.getWaterSpeed
      VB:
      - id: Unityscript.Creation.getWaterSpeed*
        name: getWaterSpeed
        nameWithType: Creation.getWaterSpeed
        qualifiedName: Unityscript.Creation.getWaterSpeed
    isDefinition: true
    commentId: Overload:Unityscript.Creation.getWaterSpeed
  Unityscript.Creation.getWaterDir*:
    name:
      CSharp:
      - id: Unityscript.Creation.getWaterDir*
        name: getWaterDir
        nameWithType: Creation.getWaterDir
        qualifiedName: Unityscript.Creation.getWaterDir
      VB:
      - id: Unityscript.Creation.getWaterDir*
        name: getWaterDir
        nameWithType: Creation.getWaterDir
        qualifiedName: Unityscript.Creation.getWaterDir
    isDefinition: true
    commentId: Overload:Unityscript.Creation.getWaterDir
  Unityscript.Creation.getSTW*:
    name:
      CSharp:
      - id: Unityscript.Creation.getSTW*
        name: getSTW
        nameWithType: Creation.getSTW
        qualifiedName: Unityscript.Creation.getSTW
      VB:
      - id: Unityscript.Creation.getSTW*
        name: getSTW
        nameWithType: Creation.getSTW
        qualifiedName: Unityscript.Creation.getSTW
    isDefinition: true
    commentId: Overload:Unityscript.Creation.getSTW
  Unityscript.Creation.setNMEA*:
    name:
      CSharp:
      - id: Unityscript.Creation.setNMEA*
        name: setNMEA
        nameWithType: Creation.setNMEA
        qualifiedName: Unityscript.Creation.setNMEA
      VB:
      - id: Unityscript.Creation.setNMEA*
        name: setNMEA
        nameWithType: Creation.setNMEA
        qualifiedName: Unityscript.Creation.setNMEA
    isDefinition: true
    commentId: Overload:Unityscript.Creation.setNMEA
  Unityscript.Creation.getPortNMEA*:
    name:
      CSharp:
      - id: Unityscript.Creation.getPortNMEA*
        name: getPortNMEA
        nameWithType: Creation.getPortNMEA
        qualifiedName: Unityscript.Creation.getPortNMEA
      VB:
      - id: Unityscript.Creation.getPortNMEA*
        name: getPortNMEA
        nameWithType: Creation.getPortNMEA
        qualifiedName: Unityscript.Creation.getPortNMEA
    isDefinition: true
    commentId: Overload:Unityscript.Creation.getPortNMEA
  Unityscript.Creation.getIpNMEA*:
    name:
      CSharp:
      - id: Unityscript.Creation.getIpNMEA*
        name: getIpNMEA
        nameWithType: Creation.getIpNMEA
        qualifiedName: Unityscript.Creation.getIpNMEA
      VB:
      - id: Unityscript.Creation.getIpNMEA*
        name: getIpNMEA
        nameWithType: Creation.getIpNMEA
        qualifiedName: Unityscript.Creation.getIpNMEA
    isDefinition: true
    commentId: Overload:Unityscript.Creation.getIpNMEA
  Unityscript.Creation.getBoatList*:
    name:
      CSharp:
      - id: Unityscript.Creation.getBoatList*
        name: getBoatList
        nameWithType: Creation.getBoatList
        qualifiedName: Unityscript.Creation.getBoatList
      VB:
      - id: Unityscript.Creation.getBoatList*
        name: getBoatList
        nameWithType: Creation.getBoatList
        qualifiedName: Unityscript.Creation.getBoatList
    isDefinition: true
    commentId: Overload:Unityscript.Creation.getBoatList
  Unityscript.Creation.getPolars*:
    name:
      CSharp:
      - id: Unityscript.Creation.getPolars*
        name: getPolars
        nameWithType: Creation.getPolars
        qualifiedName: Unityscript.Creation.getPolars
      VB:
      - id: Unityscript.Creation.getPolars*
        name: getPolars
        nameWithType: Creation.getPolars
        qualifiedName: Unityscript.Creation.getPolars
    isDefinition: true
    commentId: Overload:Unityscript.Creation.getPolars
  Unityscript.Creation.setPolar*:
    name:
      CSharp:
      - id: Unityscript.Creation.setPolar*
        name: setPolar
        nameWithType: Creation.setPolar
        qualifiedName: Unityscript.Creation.setPolar
      VB:
      - id: Unityscript.Creation.setPolar*
        name: setPolar
        nameWithType: Creation.setPolar
        qualifiedName: Unityscript.Creation.setPolar
    isDefinition: true
    commentId: Overload:Unityscript.Creation.setPolar
  Unityscript.Creation.setNullPolar*:
    name:
      CSharp:
      - id: Unityscript.Creation.setNullPolar*
        name: setNullPolar
        nameWithType: Creation.setNullPolar
        qualifiedName: Unityscript.Creation.setNullPolar
      VB:
      - id: Unityscript.Creation.setNullPolar*
        name: setNullPolar
        nameWithType: Creation.setNullPolar
        qualifiedName: Unityscript.Creation.setNullPolar
    isDefinition: true
    commentId: Overload:Unityscript.Creation.setNullPolar
  Unityscript.Creation.setWaypoint*:
    name:
      CSharp:
      - id: Unityscript.Creation.setWaypoint*
        name: setWaypoint
        nameWithType: Creation.setWaypoint
        qualifiedName: Unityscript.Creation.setWaypoint
      VB:
      - id: Unityscript.Creation.setWaypoint*
        name: setWaypoint
        nameWithType: Creation.setWaypoint
        qualifiedName: Unityscript.Creation.setWaypoint
    isDefinition: true
    commentId: Overload:Unityscript.Creation.setWaypoint
  Unityscript.Creation.getClock*:
    name:
      CSharp:
      - id: Unityscript.Creation.getClock*
        name: getClock
        nameWithType: Creation.getClock
        qualifiedName: Unityscript.Creation.getClock
      VB:
      - id: Unityscript.Creation.getClock*
        name: getClock
        nameWithType: Creation.getClock
        qualifiedName: Unityscript.Creation.getClock
    isDefinition: true
    commentId: Overload:Unityscript.Creation.getClock
  UnityEngine.Transform:
    name:
      CSharp:
      - id: UnityEngine.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: UnityEngine.Transform
        isExternal: true
      VB:
      - id: UnityEngine.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: UnityEngine.Transform
        isExternal: true
    isDefinition: true
    parent: UnityEngine
    commentId: T:UnityEngine.Transform
  UnityEngine.Vector3:
    name:
      CSharp:
      - id: UnityEngine.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: UnityEngine.Vector3
        isExternal: true
      VB:
      - id: UnityEngine.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: UnityEngine.Vector3
        isExternal: true
    isDefinition: true
    parent: UnityEngine
    commentId: T:UnityEngine.Vector3
  SimpleSimulator.AquitisionCommunication.Trame:
    name:
      CSharp:
      - name: SimpleSimulator.AquitisionCommunication.Trame
        nameWithType: SimpleSimulator.AquitisionCommunication.Trame
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame
      VB:
      - name: SimpleSimulator.AquitisionCommunication.Trame
        nameWithType: SimpleSimulator.AquitisionCommunication.Trame
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame
    isDefinition: true
    commentId: N:SimpleSimulator.AquitisionCommunication.Trame
  SimpleSimulator.AquitisionCommunication.Trame.Sender:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.Sender
        name: Sender
        nameWithType: Sender
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.Sender
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.Sender
        name: Sender
        nameWithType: Sender
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.Sender
    isDefinition: true
    parent: SimpleSimulator.AquitisionCommunication.Trame
    commentId: T:SimpleSimulator.AquitisionCommunication.Trame.Sender
  SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA
        name: TrameNMEA
        nameWithType: TrameNMEA
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA
        name: TrameNMEA
        nameWithType: TrameNMEA
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA
    isDefinition: true
    parent: SimpleSimulator.AquitisionCommunication.Trame
    commentId: T:SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA
  Unityscript.Initialisation:
    name:
      CSharp:
      - id: Unityscript.Initialisation
        name: Initialisation
        nameWithType: Initialisation
        qualifiedName: Unityscript.Initialisation
      VB:
      - id: Unityscript.Initialisation
        name: Initialisation
        nameWithType: Initialisation
        qualifiedName: Unityscript.Initialisation
    isDefinition: true
    commentId: T:Unityscript.Initialisation
  Unityscript.ButtonListControl.GenerateList*:
    name:
      CSharp:
      - id: Unityscript.ButtonListControl.GenerateList*
        name: GenerateList
        nameWithType: ButtonListControl.GenerateList
        qualifiedName: Unityscript.ButtonListControl.GenerateList
      VB:
      - id: Unityscript.ButtonListControl.GenerateList*
        name: GenerateList
        nameWithType: ButtonListControl.GenerateList
        qualifiedName: Unityscript.ButtonListControl.GenerateList
    isDefinition: true
    commentId: Overload:Unityscript.ButtonListControl.GenerateList
  Unityscript.ButtonListControl.SelectBoatType*:
    name:
      CSharp:
      - id: Unityscript.ButtonListControl.SelectBoatType*
        name: SelectBoatType
        nameWithType: ButtonListControl.SelectBoatType
        qualifiedName: Unityscript.ButtonListControl.SelectBoatType
      VB:
      - id: Unityscript.ButtonListControl.SelectBoatType*
        name: SelectBoatType
        nameWithType: ButtonListControl.SelectBoatType
        qualifiedName: Unityscript.ButtonListControl.SelectBoatType
    isDefinition: true
    commentId: Overload:Unityscript.ButtonListControl.SelectBoatType
  Unityscript.ButtonListControl.refresh*:
    name:
      CSharp:
      - id: Unityscript.ButtonListControl.refresh*
        name: refresh
        nameWithType: ButtonListControl.refresh
        qualifiedName: Unityscript.ButtonListControl.refresh
      VB:
      - id: Unityscript.ButtonListControl.refresh*
        name: refresh
        nameWithType: ButtonListControl.refresh
        qualifiedName: Unityscript.ButtonListControl.refresh
    isDefinition: true
    commentId: Overload:Unityscript.ButtonListControl.refresh
  Unityscript.ButtonListControl.LoadBoatSelected*:
    name:
      CSharp:
      - id: Unityscript.ButtonListControl.LoadBoatSelected*
        name: LoadBoatSelected
        nameWithType: ButtonListControl.LoadBoatSelected
        qualifiedName: Unityscript.ButtonListControl.LoadBoatSelected
      VB:
      - id: Unityscript.ButtonListControl.LoadBoatSelected*
        name: LoadBoatSelected
        nameWithType: ButtonListControl.LoadBoatSelected
        qualifiedName: Unityscript.ButtonListControl.LoadBoatSelected
    isDefinition: true
    commentId: Overload:Unityscript.ButtonListControl.LoadBoatSelected
  Unityscript.ButtonListControl:
    name:
      CSharp:
      - id: Unityscript.ButtonListControl
        name: ButtonListControl
        nameWithType: ButtonListControl
        qualifiedName: Unityscript.ButtonListControl
      VB:
      - id: Unityscript.ButtonListControl
        name: ButtonListControl
        nameWithType: ButtonListControl
        qualifiedName: Unityscript.ButtonListControl
    isDefinition: true
    commentId: T:Unityscript.ButtonListControl
  Unityscript.SetEnv.setWind*:
    name:
      CSharp:
      - id: Unityscript.SetEnv.setWind*
        name: setWind
        nameWithType: SetEnv.setWind
        qualifiedName: Unityscript.SetEnv.setWind
      VB:
      - id: Unityscript.SetEnv.setWind*
        name: setWind
        nameWithType: SetEnv.setWind
        qualifiedName: Unityscript.SetEnv.setWind
    isDefinition: true
    commentId: Overload:Unityscript.SetEnv.setWind
  Unityscript.SetEnv.setWave*:
    name:
      CSharp:
      - id: Unityscript.SetEnv.setWave*
        name: setWave
        nameWithType: SetEnv.setWave
        qualifiedName: Unityscript.SetEnv.setWave
      VB:
      - id: Unityscript.SetEnv.setWave*
        name: setWave
        nameWithType: SetEnv.setWave
        qualifiedName: Unityscript.SetEnv.setWave
    isDefinition: true
    commentId: Overload:Unityscript.SetEnv.setWave
  Unityscript.SetEnv.setWater*:
    name:
      CSharp:
      - id: Unityscript.SetEnv.setWater*
        name: setWater
        nameWithType: SetEnv.setWater
        qualifiedName: Unityscript.SetEnv.setWater
      VB:
      - id: Unityscript.SetEnv.setWater*
        name: setWater
        nameWithType: SetEnv.setWater
        qualifiedName: Unityscript.SetEnv.setWater
    isDefinition: true
    commentId: Overload:Unityscript.SetEnv.setWater
  Unityscript.SetEnv:
    name:
      CSharp:
      - id: Unityscript.SetEnv
        name: SetEnv
        nameWithType: SetEnv
        qualifiedName: Unityscript.SetEnv
      VB:
      - id: Unityscript.SetEnv
        name: SetEnv
        nameWithType: SetEnv
        qualifiedName: Unityscript.SetEnv
    isDefinition: true
    commentId: T:Unityscript.SetEnv
  Unityscript.SetAcc.setacc*:
    name:
      CSharp:
      - id: Unityscript.SetAcc.setacc*
        name: setacc
        nameWithType: SetAcc.setacc
        qualifiedName: Unityscript.SetAcc.setacc
      VB:
      - id: Unityscript.SetAcc.setacc*
        name: setacc
        nameWithType: SetAcc.setacc
        qualifiedName: Unityscript.SetAcc.setacc
    isDefinition: true
    commentId: Overload:Unityscript.SetAcc.setacc
  Unityscript.SetAcc:
    name:
      CSharp:
      - id: Unityscript.SetAcc
        name: SetAcc
        nameWithType: SetAcc
        qualifiedName: Unityscript.SetAcc
      VB:
      - id: Unityscript.SetAcc
        name: SetAcc
        nameWithType: SetAcc
        qualifiedName: Unityscript.SetAcc
    isDefinition: true
    commentId: T:Unityscript.SetAcc
  Unityscript.Follow:
    name:
      CSharp:
      - id: Unityscript.Follow
        name: Follow
        nameWithType: Follow
        qualifiedName: Unityscript.Follow
      VB:
      - id: Unityscript.Follow
        name: Follow
        nameWithType: Follow
        qualifiedName: Unityscript.Follow
    isDefinition: true
    commentId: T:Unityscript.Follow
  Model.IObserver:
    name:
      CSharp:
      - id: Model.IObserver
        name: IObserver
        nameWithType: IObserver
        qualifiedName: Model.IObserver
      VB:
      - id: Model.IObserver
        name: IObserver
        nameWithType: IObserver
        qualifiedName: Model.IObserver
    isDefinition: true
    parent: Model
    commentId: T:Model.IObserver
  Model.ISubject.Attach*:
    name:
      CSharp:
      - id: Model.ISubject.Attach*
        name: Attach
        nameWithType: ISubject.Attach
        qualifiedName: Model.ISubject.Attach
      VB:
      - id: Model.ISubject.Attach*
        name: Attach
        nameWithType: ISubject.Attach
        qualifiedName: Model.ISubject.Attach
    isDefinition: true
    commentId: Overload:Model.ISubject.Attach
  Model.ISubject.Notify*:
    name:
      CSharp:
      - id: Model.ISubject.Notify*
        name: Notify
        nameWithType: ISubject.Notify
        qualifiedName: Model.ISubject.Notify
      VB:
      - id: Model.ISubject.Notify*
        name: Notify
        nameWithType: ISubject.Notify
        qualifiedName: Model.ISubject.Notify
    isDefinition: true
    commentId: Overload:Model.ISubject.Notify
  System.Collections.Generic.Dictionary{Model.BoatInfo,System.Double}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Model.BoatInfo
        name: BoatInfo
        nameWithType: BoatInfo
        qualifiedName: Model.BoatInfo
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Model.BoatInfo
        name: BoatInfo
        nameWithType: BoatInfo
        qualifiedName: Model.BoatInfo
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{Model.BoatInfo,System.Double}
  Model.ISubject.GetBoatStatus*:
    name:
      CSharp:
      - id: Model.ISubject.GetBoatStatus*
        name: GetBoatStatus
        nameWithType: ISubject.GetBoatStatus
        qualifiedName: Model.ISubject.GetBoatStatus
      VB:
      - id: Model.ISubject.GetBoatStatus*
        name: GetBoatStatus
        nameWithType: ISubject.GetBoatStatus
        qualifiedName: Model.ISubject.GetBoatStatus
    isDefinition: true
    commentId: Overload:Model.ISubject.GetBoatStatus
  Model.ISubject:
    name:
      CSharp:
      - id: Model.ISubject
        name: ISubject
        nameWithType: ISubject
        qualifiedName: Model.ISubject
      VB:
      - id: Model.ISubject
        name: ISubject
        nameWithType: ISubject
        qualifiedName: Model.ISubject
    isDefinition: true
    parent: Model
    commentId: T:Model.ISubject
  Model.RaceModel.#ctor*:
    name:
      CSharp:
      - id: Model.RaceModel.#ctor*
        name: RaceModel
        nameWithType: RaceModel.RaceModel
        qualifiedName: Model.RaceModel.RaceModel
      VB:
      - id: Model.RaceModel.#ctor*
        name: RaceModel
        nameWithType: RaceModel.RaceModel
        qualifiedName: Model.RaceModel.RaceModel
    isDefinition: true
    commentId: Overload:Model.RaceModel.#ctor
  System.Nullable`1:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Nullable`1
  System.Nullable{PRace.Mode}:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: PRace.Mode
        name: Mode
        nameWithType: Mode
        qualifiedName: PRace.Mode
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: PRace.Mode
        name: Mode
        nameWithType: Mode
        qualifiedName: PRace.Mode
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{PRace.Mode}
  Model.RaceModel.Set_Up*:
    name:
      CSharp:
      - id: Model.RaceModel.Set_Up*
        name: Set_Up
        nameWithType: RaceModel.Set_Up
        qualifiedName: Model.RaceModel.Set_Up
      VB:
      - id: Model.RaceModel.Set_Up*
        name: Set_Up
        nameWithType: RaceModel.Set_Up
        qualifiedName: Model.RaceModel.Set_Up
    isDefinition: true
    commentId: Overload:Model.RaceModel.Set_Up
  Model.RaceModel.Attach*:
    name:
      CSharp:
      - id: Model.RaceModel.Attach*
        name: Attach
        nameWithType: RaceModel.Attach
        qualifiedName: Model.RaceModel.Attach
      VB:
      - id: Model.RaceModel.Attach*
        name: Attach
        nameWithType: RaceModel.Attach
        qualifiedName: Model.RaceModel.Attach
    isDefinition: true
    commentId: Overload:Model.RaceModel.Attach
  Model.ISubject.Attach(Model.IObserver):
    name:
      CSharp:
      - id: Model.ISubject.Attach(Model.IObserver)
        name: Attach
        nameWithType: ISubject.Attach
        qualifiedName: Model.ISubject.Attach
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Model.IObserver
        name: IObserver
        nameWithType: IObserver
        qualifiedName: Model.IObserver
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Model.ISubject.Attach(Model.IObserver)
        name: Attach
        nameWithType: ISubject.Attach
        qualifiedName: Model.ISubject.Attach
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Model.IObserver
        name: IObserver
        nameWithType: IObserver
        qualifiedName: Model.IObserver
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Model.ISubject
    commentId: M:Model.ISubject.Attach(Model.IObserver)
  Model.RaceModel.Notify*:
    name:
      CSharp:
      - id: Model.RaceModel.Notify*
        name: Notify
        nameWithType: RaceModel.Notify
        qualifiedName: Model.RaceModel.Notify
      VB:
      - id: Model.RaceModel.Notify*
        name: Notify
        nameWithType: RaceModel.Notify
        qualifiedName: Model.RaceModel.Notify
    isDefinition: true
    commentId: Overload:Model.RaceModel.Notify
  Model.ISubject.Notify:
    name:
      CSharp:
      - id: Model.ISubject.Notify
        name: Notify
        nameWithType: ISubject.Notify
        qualifiedName: Model.ISubject.Notify
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Model.ISubject.Notify
        name: Notify
        nameWithType: ISubject.Notify
        qualifiedName: Model.ISubject.Notify
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Model.ISubject
    commentId: M:Model.ISubject.Notify
  Model.RaceModel.GetRace*:
    name:
      CSharp:
      - id: Model.RaceModel.GetRace*
        name: GetRace
        nameWithType: RaceModel.GetRace
        qualifiedName: Model.RaceModel.GetRace
      VB:
      - id: Model.RaceModel.GetRace*
        name: GetRace
        nameWithType: RaceModel.GetRace
        qualifiedName: Model.RaceModel.GetRace
    isDefinition: true
    commentId: Overload:Model.RaceModel.GetRace
  Model.RaceModel.ListSavePath*:
    name:
      CSharp:
      - id: Model.RaceModel.ListSavePath*
        name: ListSavePath
        nameWithType: RaceModel.ListSavePath
        qualifiedName: Model.RaceModel.ListSavePath
      VB:
      - id: Model.RaceModel.ListSavePath*
        name: ListSavePath
        nameWithType: RaceModel.ListSavePath
        qualifiedName: Model.RaceModel.ListSavePath
    isDefinition: true
    commentId: Overload:Model.RaceModel.ListSavePath
  Model.RaceModel.Save*:
    name:
      CSharp:
      - id: Model.RaceModel.Save*
        name: Save
        nameWithType: RaceModel.Save
        qualifiedName: Model.RaceModel.Save
      VB:
      - id: Model.RaceModel.Save*
        name: Save
        nameWithType: RaceModel.Save
        qualifiedName: Model.RaceModel.Save
    isDefinition: true
    commentId: Overload:Model.RaceModel.Save
  Model.RaceModel.getBoatList*:
    name:
      CSharp:
      - id: Model.RaceModel.getBoatList*
        name: getBoatList
        nameWithType: RaceModel.getBoatList
        qualifiedName: Model.RaceModel.getBoatList
      VB:
      - id: Model.RaceModel.getBoatList*
        name: getBoatList
        nameWithType: RaceModel.getBoatList
        qualifiedName: Model.RaceModel.getBoatList
    isDefinition: true
    commentId: Overload:Model.RaceModel.getBoatList
  Model.RaceModel.Run*:
    name:
      CSharp:
      - id: Model.RaceModel.Run*
        name: Run
        nameWithType: RaceModel.Run
        qualifiedName: Model.RaceModel.Run
      VB:
      - id: Model.RaceModel.Run*
        name: Run
        nameWithType: RaceModel.Run
        qualifiedName: Model.RaceModel.Run
    isDefinition: true
    commentId: Overload:Model.RaceModel.Run
  Model.RaceModel.Pause*:
    name:
      CSharp:
      - id: Model.RaceModel.Pause*
        name: Pause
        nameWithType: RaceModel.Pause
        qualifiedName: Model.RaceModel.Pause
      VB:
      - id: Model.RaceModel.Pause*
        name: Pause
        nameWithType: RaceModel.Pause
        qualifiedName: Model.RaceModel.Pause
    isDefinition: true
    commentId: Overload:Model.RaceModel.Pause
  Model.BoatInfo:
    name:
      CSharp:
      - id: Model.BoatInfo
        name: BoatInfo
        nameWithType: BoatInfo
        qualifiedName: Model.BoatInfo
      VB:
      - id: Model.BoatInfo
        name: BoatInfo
        nameWithType: BoatInfo
        qualifiedName: Model.BoatInfo
    isDefinition: true
    parent: Model
    commentId: T:Model.BoatInfo
  Model.RaceModel.GetBoatStatus*:
    name:
      CSharp:
      - id: Model.RaceModel.GetBoatStatus*
        name: GetBoatStatus
        nameWithType: RaceModel.GetBoatStatus
        qualifiedName: Model.RaceModel.GetBoatStatus
      VB:
      - id: Model.RaceModel.GetBoatStatus*
        name: GetBoatStatus
        nameWithType: RaceModel.GetBoatStatus
        qualifiedName: Model.RaceModel.GetBoatStatus
    isDefinition: true
    commentId: Overload:Model.RaceModel.GetBoatStatus
  Model.ISubject.GetBoatStatus:
    name:
      CSharp:
      - id: Model.ISubject.GetBoatStatus
        name: GetBoatStatus
        nameWithType: ISubject.GetBoatStatus
        qualifiedName: Model.ISubject.GetBoatStatus
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Model.ISubject.GetBoatStatus
        name: GetBoatStatus
        nameWithType: ISubject.GetBoatStatus
        qualifiedName: Model.ISubject.GetBoatStatus
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Model.ISubject
    commentId: M:Model.ISubject.GetBoatStatus
  Model.RaceModel.SetCurrent*:
    name:
      CSharp:
      - id: Model.RaceModel.SetCurrent*
        name: SetCurrent
        nameWithType: RaceModel.SetCurrent
        qualifiedName: Model.RaceModel.SetCurrent
      VB:
      - id: Model.RaceModel.SetCurrent*
        name: SetCurrent
        nameWithType: RaceModel.SetCurrent
        qualifiedName: Model.RaceModel.SetCurrent
    isDefinition: true
    commentId: Overload:Model.RaceModel.SetCurrent
  Model.RaceModel.SetWave*:
    name:
      CSharp:
      - id: Model.RaceModel.SetWave*
        name: SetWave
        nameWithType: RaceModel.SetWave
        qualifiedName: Model.RaceModel.SetWave
      VB:
      - id: Model.RaceModel.SetWave*
        name: SetWave
        nameWithType: RaceModel.SetWave
        qualifiedName: Model.RaceModel.SetWave
    isDefinition: true
    commentId: Overload:Model.RaceModel.SetWave
  Model.RaceModel.SetWind*:
    name:
      CSharp:
      - id: Model.RaceModel.SetWind*
        name: SetWind
        nameWithType: RaceModel.SetWind
        qualifiedName: Model.RaceModel.SetWind
      VB:
      - id: Model.RaceModel.SetWind*
        name: SetWind
        nameWithType: RaceModel.SetWind
        qualifiedName: Model.RaceModel.SetWind
    isDefinition: true
    commentId: Overload:Model.RaceModel.SetWind
  Model.RaceModel.SetFactor*:
    name:
      CSharp:
      - id: Model.RaceModel.SetFactor*
        name: SetFactor
        nameWithType: RaceModel.SetFactor
        qualifiedName: Model.RaceModel.SetFactor
      VB:
      - id: Model.RaceModel.SetFactor*
        name: SetFactor
        nameWithType: RaceModel.SetFactor
        qualifiedName: Model.RaceModel.SetFactor
    isDefinition: true
    commentId: Overload:Model.RaceModel.SetFactor
  Model.RaceModel.GetAccFactor*:
    name:
      CSharp:
      - id: Model.RaceModel.GetAccFactor*
        name: GetAccFactor
        nameWithType: RaceModel.GetAccFactor
        qualifiedName: Model.RaceModel.GetAccFactor
      VB:
      - id: Model.RaceModel.GetAccFactor*
        name: GetAccFactor
        nameWithType: RaceModel.GetAccFactor
        qualifiedName: Model.RaceModel.GetAccFactor
    isDefinition: true
    commentId: Overload:Model.RaceModel.GetAccFactor
  Model.RaceModel.IncrementCap*:
    name:
      CSharp:
      - id: Model.RaceModel.IncrementCap*
        name: IncrementCap
        nameWithType: RaceModel.IncrementCap
        qualifiedName: Model.RaceModel.IncrementCap
      VB:
      - id: Model.RaceModel.IncrementCap*
        name: IncrementCap
        nameWithType: RaceModel.IncrementCap
        qualifiedName: Model.RaceModel.IncrementCap
    isDefinition: true
    commentId: Overload:Model.RaceModel.IncrementCap
  Model.RaceModel.SwitchCommande*:
    name:
      CSharp:
      - id: Model.RaceModel.SwitchCommande*
        name: SwitchCommande
        nameWithType: RaceModel.SwitchCommande
        qualifiedName: Model.RaceModel.SwitchCommande
      VB:
      - id: Model.RaceModel.SwitchCommande*
        name: SwitchCommande
        nameWithType: RaceModel.SwitchCommande
        qualifiedName: Model.RaceModel.SwitchCommande
    isDefinition: true
    commentId: Overload:Model.RaceModel.SwitchCommande
  Model.RaceModel.getModelCap*:
    name:
      CSharp:
      - id: Model.RaceModel.getModelCap*
        name: getModelCap
        nameWithType: RaceModel.getModelCap
        qualifiedName: Model.RaceModel.getModelCap
      VB:
      - id: Model.RaceModel.getModelCap*
        name: getModelCap
        nameWithType: RaceModel.getModelCap
        qualifiedName: Model.RaceModel.getModelCap
    isDefinition: true
    commentId: Overload:Model.RaceModel.getModelCap
  Model.RaceModel.getAllureCap*:
    name:
      CSharp:
      - id: Model.RaceModel.getAllureCap*
        name: getAllureCap
        nameWithType: RaceModel.getAllureCap
        qualifiedName: Model.RaceModel.getAllureCap
      VB:
      - id: Model.RaceModel.getAllureCap*
        name: getAllureCap
        nameWithType: RaceModel.getAllureCap
        qualifiedName: Model.RaceModel.getAllureCap
    isDefinition: true
    commentId: Overload:Model.RaceModel.getAllureCap
  Model.RaceModel.getCommandeMode*:
    name:
      CSharp:
      - id: Model.RaceModel.getCommandeMode*
        name: getCommandeMode
        nameWithType: RaceModel.getCommandeMode
        qualifiedName: Model.RaceModel.getCommandeMode
      VB:
      - id: Model.RaceModel.getCommandeMode*
        name: getCommandeMode
        nameWithType: RaceModel.getCommandeMode
        qualifiedName: Model.RaceModel.getCommandeMode
    isDefinition: true
    commentId: Overload:Model.RaceModel.getCommandeMode
  Model.RaceModel.getWindSpeed*:
    name:
      CSharp:
      - id: Model.RaceModel.getWindSpeed*
        name: getWindSpeed
        nameWithType: RaceModel.getWindSpeed
        qualifiedName: Model.RaceModel.getWindSpeed
      VB:
      - id: Model.RaceModel.getWindSpeed*
        name: getWindSpeed
        nameWithType: RaceModel.getWindSpeed
        qualifiedName: Model.RaceModel.getWindSpeed
    isDefinition: true
    commentId: Overload:Model.RaceModel.getWindSpeed
  Model.RaceModel.getWindDir*:
    name:
      CSharp:
      - id: Model.RaceModel.getWindDir*
        name: getWindDir
        nameWithType: RaceModel.getWindDir
        qualifiedName: Model.RaceModel.getWindDir
      VB:
      - id: Model.RaceModel.getWindDir*
        name: getWindDir
        nameWithType: RaceModel.getWindDir
        qualifiedName: Model.RaceModel.getWindDir
    isDefinition: true
    commentId: Overload:Model.RaceModel.getWindDir
  Model.RaceModel.getWaveAmpl*:
    name:
      CSharp:
      - id: Model.RaceModel.getWaveAmpl*
        name: getWaveAmpl
        nameWithType: RaceModel.getWaveAmpl
        qualifiedName: Model.RaceModel.getWaveAmpl
      VB:
      - id: Model.RaceModel.getWaveAmpl*
        name: getWaveAmpl
        nameWithType: RaceModel.getWaveAmpl
        qualifiedName: Model.RaceModel.getWaveAmpl
    isDefinition: true
    commentId: Overload:Model.RaceModel.getWaveAmpl
  Model.RaceModel.getWaveDir*:
    name:
      CSharp:
      - id: Model.RaceModel.getWaveDir*
        name: getWaveDir
        nameWithType: RaceModel.getWaveDir
        qualifiedName: Model.RaceModel.getWaveDir
      VB:
      - id: Model.RaceModel.getWaveDir*
        name: getWaveDir
        nameWithType: RaceModel.getWaveDir
        qualifiedName: Model.RaceModel.getWaveDir
    isDefinition: true
    commentId: Overload:Model.RaceModel.getWaveDir
  Model.RaceModel.getWaveLength*:
    name:
      CSharp:
      - id: Model.RaceModel.getWaveLength*
        name: getWaveLength
        nameWithType: RaceModel.getWaveLength
        qualifiedName: Model.RaceModel.getWaveLength
      VB:
      - id: Model.RaceModel.getWaveLength*
        name: getWaveLength
        nameWithType: RaceModel.getWaveLength
        qualifiedName: Model.RaceModel.getWaveLength
    isDefinition: true
    commentId: Overload:Model.RaceModel.getWaveLength
  Model.RaceModel.getWaterSpeed*:
    name:
      CSharp:
      - id: Model.RaceModel.getWaterSpeed*
        name: getWaterSpeed
        nameWithType: RaceModel.getWaterSpeed
        qualifiedName: Model.RaceModel.getWaterSpeed
      VB:
      - id: Model.RaceModel.getWaterSpeed*
        name: getWaterSpeed
        nameWithType: RaceModel.getWaterSpeed
        qualifiedName: Model.RaceModel.getWaterSpeed
    isDefinition: true
    commentId: Overload:Model.RaceModel.getWaterSpeed
  Model.RaceModel.getWaterDir*:
    name:
      CSharp:
      - id: Model.RaceModel.getWaterDir*
        name: getWaterDir
        nameWithType: RaceModel.getWaterDir
        qualifiedName: Model.RaceModel.getWaterDir
      VB:
      - id: Model.RaceModel.getWaterDir*
        name: getWaterDir
        nameWithType: RaceModel.getWaterDir
        qualifiedName: Model.RaceModel.getWaterDir
    isDefinition: true
    commentId: Overload:Model.RaceModel.getWaterDir
  Model.RaceModel.getSTW*:
    name:
      CSharp:
      - id: Model.RaceModel.getSTW*
        name: getSTW
        nameWithType: RaceModel.getSTW
        qualifiedName: Model.RaceModel.getSTW
      VB:
      - id: Model.RaceModel.getSTW*
        name: getSTW
        nameWithType: RaceModel.getSTW
        qualifiedName: Model.RaceModel.getSTW
    isDefinition: true
    commentId: Overload:Model.RaceModel.getSTW
  Model.RaceModel.setNMEA*:
    name:
      CSharp:
      - id: Model.RaceModel.setNMEA*
        name: setNMEA
        nameWithType: RaceModel.setNMEA
        qualifiedName: Model.RaceModel.setNMEA
      VB:
      - id: Model.RaceModel.setNMEA*
        name: setNMEA
        nameWithType: RaceModel.setNMEA
        qualifiedName: Model.RaceModel.setNMEA
    isDefinition: true
    commentId: Overload:Model.RaceModel.setNMEA
  Model.RaceModel.getportNMEA*:
    name:
      CSharp:
      - id: Model.RaceModel.getportNMEA*
        name: getportNMEA
        nameWithType: RaceModel.getportNMEA
        qualifiedName: Model.RaceModel.getportNMEA
      VB:
      - id: Model.RaceModel.getportNMEA*
        name: getportNMEA
        nameWithType: RaceModel.getportNMEA
        qualifiedName: Model.RaceModel.getportNMEA
    isDefinition: true
    commentId: Overload:Model.RaceModel.getportNMEA
  Model.RaceModel.getipNMEA*:
    name:
      CSharp:
      - id: Model.RaceModel.getipNMEA*
        name: getipNMEA
        nameWithType: RaceModel.getipNMEA
        qualifiedName: Model.RaceModel.getipNMEA
      VB:
      - id: Model.RaceModel.getipNMEA*
        name: getipNMEA
        nameWithType: RaceModel.getipNMEA
        qualifiedName: Model.RaceModel.getipNMEA
    isDefinition: true
    commentId: Overload:Model.RaceModel.getipNMEA
  Model.RaceModel.getListPolaire*:
    name:
      CSharp:
      - id: Model.RaceModel.getListPolaire*
        name: getListPolaire
        nameWithType: RaceModel.getListPolaire
        qualifiedName: Model.RaceModel.getListPolaire
      VB:
      - id: Model.RaceModel.getListPolaire*
        name: getListPolaire
        nameWithType: RaceModel.getListPolaire
        qualifiedName: Model.RaceModel.getListPolaire
    isDefinition: true
    commentId: Overload:Model.RaceModel.getListPolaire
  Model.RaceModel.setPolaire*:
    name:
      CSharp:
      - id: Model.RaceModel.setPolaire*
        name: setPolaire
        nameWithType: RaceModel.setPolaire
        qualifiedName: Model.RaceModel.setPolaire
      VB:
      - id: Model.RaceModel.setPolaire*
        name: setPolaire
        nameWithType: RaceModel.setPolaire
        qualifiedName: Model.RaceModel.setPolaire
    isDefinition: true
    commentId: Overload:Model.RaceModel.setPolaire
  Model.RaceModel.setNoneCurrentPolar*:
    name:
      CSharp:
      - id: Model.RaceModel.setNoneCurrentPolar*
        name: setNoneCurrentPolar
        nameWithType: RaceModel.setNoneCurrentPolar
        qualifiedName: Model.RaceModel.setNoneCurrentPolar
      VB:
      - id: Model.RaceModel.setNoneCurrentPolar*
        name: setNoneCurrentPolar
        nameWithType: RaceModel.setNoneCurrentPolar
        qualifiedName: Model.RaceModel.setNoneCurrentPolar
    isDefinition: true
    commentId: Overload:Model.RaceModel.setNoneCurrentPolar
  Model.RaceModel.setPositionDeDepart*:
    name:
      CSharp:
      - id: Model.RaceModel.setPositionDeDepart*
        name: setPositionDeDepart
        nameWithType: RaceModel.setPositionDeDepart
        qualifiedName: Model.RaceModel.setPositionDeDepart
      VB:
      - id: Model.RaceModel.setPositionDeDepart*
        name: setPositionDeDepart
        nameWithType: RaceModel.setPositionDeDepart
        qualifiedName: Model.RaceModel.setPositionDeDepart
    isDefinition: true
    commentId: Overload:Model.RaceModel.setPositionDeDepart
  Model.RaceModel.getTime*:
    name:
      CSharp:
      - id: Model.RaceModel.getTime*
        name: getTime
        nameWithType: RaceModel.getTime
        qualifiedName: Model.RaceModel.getTime
      VB:
      - id: Model.RaceModel.getTime*
        name: getTime
        nameWithType: RaceModel.getTime
        qualifiedName: Model.RaceModel.getTime
    isDefinition: true
    commentId: Overload:Model.RaceModel.getTime
  Model.Observer.#ctor*:
    name:
      CSharp:
      - id: Model.Observer.#ctor*
        name: Observer
        nameWithType: Observer.Observer
        qualifiedName: Model.Observer.Observer
      VB:
      - id: Model.Observer.#ctor*
        name: Observer
        nameWithType: Observer.Observer
        qualifiedName: Model.Observer.Observer
    isDefinition: true
    commentId: Overload:Model.Observer.#ctor
  Model.Observer.Update*:
    name:
      CSharp:
      - id: Model.Observer.Update*
        name: Update
        nameWithType: Observer.Update
        qualifiedName: Model.Observer.Update
      VB:
      - id: Model.Observer.Update*
        name: Update
        nameWithType: Observer.Update
        qualifiedName: Model.Observer.Update
    isDefinition: true
    commentId: Overload:Model.Observer.Update
  Model.IObserver.Update(Model.ISubject):
    name:
      CSharp:
      - id: Model.IObserver.Update(Model.ISubject)
        name: Update
        nameWithType: IObserver.Update
        qualifiedName: Model.IObserver.Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Model.ISubject
        name: ISubject
        nameWithType: ISubject
        qualifiedName: Model.ISubject
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Model.IObserver.Update(Model.ISubject)
        name: Update
        nameWithType: IObserver.Update
        qualifiedName: Model.IObserver.Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Model.ISubject
        name: ISubject
        nameWithType: ISubject
        qualifiedName: Model.ISubject
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Model.IObserver
    commentId: M:Model.IObserver.Update(Model.ISubject)
  Model.IObserver.Update*:
    name:
      CSharp:
      - id: Model.IObserver.Update*
        name: Update
        nameWithType: IObserver.Update
        qualifiedName: Model.IObserver.Update
      VB:
      - id: Model.IObserver.Update*
        name: Update
        nameWithType: IObserver.Update
        qualifiedName: Model.IObserver.Update
    isDefinition: true
    commentId: Overload:Model.IObserver.Update
  AquitisionCommunication.AquisitionPolaire.#ctor*:
    name:
      CSharp:
      - id: AquitisionCommunication.AquisitionPolaire.#ctor*
        name: AquisitionPolaire
        nameWithType: AquisitionPolaire.AquisitionPolaire
        qualifiedName: AquitisionCommunication.AquisitionPolaire.AquisitionPolaire
      VB:
      - id: AquitisionCommunication.AquisitionPolaire.#ctor*
        name: AquisitionPolaire
        nameWithType: AquisitionPolaire.AquisitionPolaire
        qualifiedName: AquitisionCommunication.AquisitionPolaire.AquisitionPolaire
    isDefinition: true
    commentId: Overload:AquitisionCommunication.AquisitionPolaire.#ctor
  AquitisionCommunication.AquisitionPolaire.ReadPolaire*:
    name:
      CSharp:
      - id: AquitisionCommunication.AquisitionPolaire.ReadPolaire*
        name: ReadPolaire
        nameWithType: AquisitionPolaire.ReadPolaire
        qualifiedName: AquitisionCommunication.AquisitionPolaire.ReadPolaire
      VB:
      - id: AquitisionCommunication.AquisitionPolaire.ReadPolaire*
        name: ReadPolaire
        nameWithType: AquisitionPolaire.ReadPolaire
        qualifiedName: AquitisionCommunication.AquisitionPolaire.ReadPolaire
    isDefinition: true
    commentId: Overload:AquitisionCommunication.AquisitionPolaire.ReadPolaire
  ? System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.Single,System.Collections.Generic.Dictionary{System.Single,System.Single}}}
  : name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.Single,System.Collections.Generic.Dictionary{System.Single,System.Single}}}
  AquitisionCommunication.AquisitionPolaire.ReadMultiplePolaire*:
    name:
      CSharp:
      - id: AquitisionCommunication.AquisitionPolaire.ReadMultiplePolaire*
        name: ReadMultiplePolaire
        nameWithType: AquisitionPolaire.ReadMultiplePolaire
        qualifiedName: AquitisionCommunication.AquisitionPolaire.ReadMultiplePolaire
      VB:
      - id: AquitisionCommunication.AquisitionPolaire.ReadMultiplePolaire*
        name: ReadMultiplePolaire
        nameWithType: AquisitionPolaire.ReadMultiplePolaire
        qualifiedName: AquitisionCommunication.AquisitionPolaire.ReadMultiplePolaire
    isDefinition: true
    commentId: Overload:AquitisionCommunication.AquisitionPolaire.ReadMultiplePolaire
  AquitisionCommunication.AquisitionPolaire:
    name:
      CSharp:
      - id: AquitisionCommunication.AquisitionPolaire
        name: AquisitionPolaire
        nameWithType: AquisitionPolaire
        qualifiedName: AquitisionCommunication.AquisitionPolaire
      VB:
      - id: AquitisionCommunication.AquisitionPolaire
        name: AquisitionPolaire
        nameWithType: AquisitionPolaire
        qualifiedName: AquitisionCommunication.AquisitionPolaire
    isDefinition: true
    commentId: T:AquitisionCommunication.AquisitionPolaire
  AquitisionCommunication.AquisitionFichierSaveRace.#ctor*:
    name:
      CSharp:
      - id: AquitisionCommunication.AquisitionFichierSaveRace.#ctor*
        name: AquisitionFichierSaveRace
        nameWithType: AquisitionFichierSaveRace.AquisitionFichierSaveRace
        qualifiedName: AquitisionCommunication.AquisitionFichierSaveRace.AquisitionFichierSaveRace
      VB:
      - id: AquitisionCommunication.AquisitionFichierSaveRace.#ctor*
        name: AquisitionFichierSaveRace
        nameWithType: AquisitionFichierSaveRace.AquisitionFichierSaveRace
        qualifiedName: AquitisionCommunication.AquisitionFichierSaveRace.AquisitionFichierSaveRace
    isDefinition: true
    commentId: Overload:AquitisionCommunication.AquisitionFichierSaveRace.#ctor
  AquitisionCommunication.AquisitionFichierSaveRace:
    name:
      CSharp:
      - id: AquitisionCommunication.AquisitionFichierSaveRace
        name: AquisitionFichierSaveRace
        nameWithType: AquisitionFichierSaveRace
        qualifiedName: AquitisionCommunication.AquisitionFichierSaveRace
      VB:
      - id: AquitisionCommunication.AquisitionFichierSaveRace
        name: AquisitionFichierSaveRace
        nameWithType: AquisitionFichierSaveRace
        qualifiedName: AquitisionCommunication.AquisitionFichierSaveRace
    isDefinition: true
    commentId: T:AquitisionCommunication.AquisitionFichierSaveRace
  AquitisionCommunication.Sauvegarde.#ctor*:
    name:
      CSharp:
      - id: AquitisionCommunication.Sauvegarde.#ctor*
        name: Sauvegarde
        nameWithType: Sauvegarde.Sauvegarde
        qualifiedName: AquitisionCommunication.Sauvegarde.Sauvegarde
      VB:
      - id: AquitisionCommunication.Sauvegarde.#ctor*
        name: Sauvegarde
        nameWithType: Sauvegarde.Sauvegarde
        qualifiedName: AquitisionCommunication.Sauvegarde.Sauvegarde
    isDefinition: true
    commentId: Overload:AquitisionCommunication.Sauvegarde.#ctor
  AquitisionCommunication.Sauvegarde:
    name:
      CSharp:
      - id: AquitisionCommunication.Sauvegarde
        name: Sauvegarde
        nameWithType: Sauvegarde
        qualifiedName: AquitisionCommunication.Sauvegarde
      VB:
      - id: AquitisionCommunication.Sauvegarde
        name: Sauvegarde
        nameWithType: Sauvegarde
        qualifiedName: AquitisionCommunication.Sauvegarde
    isDefinition: true
    commentId: T:AquitisionCommunication.Sauvegarde
  AquitisionCommunication.Aquisition.#ctor*:
    name:
      CSharp:
      - id: AquitisionCommunication.Aquisition.#ctor*
        name: Aquisition
        nameWithType: Aquisition.Aquisition
        qualifiedName: AquitisionCommunication.Aquisition.Aquisition
      VB:
      - id: AquitisionCommunication.Aquisition.#ctor*
        name: Aquisition
        nameWithType: Aquisition.Aquisition
        qualifiedName: AquitisionCommunication.Aquisition.Aquisition
    isDefinition: true
    commentId: Overload:AquitisionCommunication.Aquisition.#ctor
  AquitisionCommunication.Aquisition.SetNMEA*:
    name:
      CSharp:
      - id: AquitisionCommunication.Aquisition.SetNMEA*
        name: SetNMEA
        nameWithType: Aquisition.SetNMEA
        qualifiedName: AquitisionCommunication.Aquisition.SetNMEA
      VB:
      - id: AquitisionCommunication.Aquisition.SetNMEA*
        name: SetNMEA
        nameWithType: Aquisition.SetNMEA
        qualifiedName: AquitisionCommunication.Aquisition.SetNMEA
    isDefinition: true
    commentId: Overload:AquitisionCommunication.Aquisition.SetNMEA
  AquitisionCommunication.Aquisition.getPortNMEA*:
    name:
      CSharp:
      - id: AquitisionCommunication.Aquisition.getPortNMEA*
        name: getPortNMEA
        nameWithType: Aquisition.getPortNMEA
        qualifiedName: AquitisionCommunication.Aquisition.getPortNMEA
      VB:
      - id: AquitisionCommunication.Aquisition.getPortNMEA*
        name: getPortNMEA
        nameWithType: Aquisition.getPortNMEA
        qualifiedName: AquitisionCommunication.Aquisition.getPortNMEA
    isDefinition: true
    commentId: Overload:AquitisionCommunication.Aquisition.getPortNMEA
  AquitisionCommunication.Aquisition.getIpNMEA*:
    name:
      CSharp:
      - id: AquitisionCommunication.Aquisition.getIpNMEA*
        name: getIpNMEA
        nameWithType: Aquisition.getIpNMEA
        qualifiedName: AquitisionCommunication.Aquisition.getIpNMEA
      VB:
      - id: AquitisionCommunication.Aquisition.getIpNMEA*
        name: getIpNMEA
        nameWithType: Aquisition.getIpNMEA
        qualifiedName: AquitisionCommunication.Aquisition.getIpNMEA
    isDefinition: true
    commentId: Overload:AquitisionCommunication.Aquisition.getIpNMEA
  AquitisionCommunication.Aquisition.sentPosition*:
    name:
      CSharp:
      - id: AquitisionCommunication.Aquisition.sentPosition*
        name: sentPosition
        nameWithType: Aquisition.sentPosition
        qualifiedName: AquitisionCommunication.Aquisition.sentPosition
      VB:
      - id: AquitisionCommunication.Aquisition.sentPosition*
        name: sentPosition
        nameWithType: Aquisition.sentPosition
        qualifiedName: AquitisionCommunication.Aquisition.sentPosition
    isDefinition: true
    commentId: Overload:AquitisionCommunication.Aquisition.sentPosition
  AquitisionCommunication.RaceSave.#ctor*:
    name:
      CSharp:
      - id: AquitisionCommunication.RaceSave.#ctor*
        name: RaceSave
        nameWithType: RaceSave.RaceSave
        qualifiedName: AquitisionCommunication.RaceSave.RaceSave
      VB:
      - id: AquitisionCommunication.RaceSave.#ctor*
        name: RaceSave
        nameWithType: RaceSave.RaceSave
        qualifiedName: AquitisionCommunication.RaceSave.RaceSave
    isDefinition: true
    commentId: Overload:AquitisionCommunication.RaceSave.#ctor
  AquitisionCommunication.RaceSave.GetJsonRace*:
    name:
      CSharp:
      - id: AquitisionCommunication.RaceSave.GetJsonRace*
        name: GetJsonRace
        nameWithType: RaceSave.GetJsonRace
        qualifiedName: AquitisionCommunication.RaceSave.GetJsonRace
      VB:
      - id: AquitisionCommunication.RaceSave.GetJsonRace*
        name: GetJsonRace
        nameWithType: RaceSave.GetJsonRace
        qualifiedName: AquitisionCommunication.RaceSave.GetJsonRace
    isDefinition: true
    commentId: Overload:AquitisionCommunication.RaceSave.GetJsonRace
  AquitisionCommunication.RaceSave.Update*:
    name:
      CSharp:
      - id: AquitisionCommunication.RaceSave.Update*
        name: Update
        nameWithType: RaceSave.Update
        qualifiedName: AquitisionCommunication.RaceSave.Update
      VB:
      - id: AquitisionCommunication.RaceSave.Update*
        name: Update
        nameWithType: RaceSave.Update
        qualifiedName: AquitisionCommunication.RaceSave.Update
    isDefinition: true
    commentId: Overload:AquitisionCommunication.RaceSave.Update
  AquitisionCommunication.RaceSave.loadfile*:
    name:
      CSharp:
      - id: AquitisionCommunication.RaceSave.loadfile*
        name: loadfile
        nameWithType: RaceSave.loadfile
        qualifiedName: AquitisionCommunication.RaceSave.loadfile
      VB:
      - id: AquitisionCommunication.RaceSave.loadfile*
        name: loadfile
        nameWithType: RaceSave.loadfile
        qualifiedName: AquitisionCommunication.RaceSave.loadfile
    isDefinition: true
    commentId: Overload:AquitisionCommunication.RaceSave.loadfile
  AquitisionCommunication.RaceSave.savefile*:
    name:
      CSharp:
      - id: AquitisionCommunication.RaceSave.savefile*
        name: savefile
        nameWithType: RaceSave.savefile
        qualifiedName: AquitisionCommunication.RaceSave.savefile
      VB:
      - id: AquitisionCommunication.RaceSave.savefile*
        name: savefile
        nameWithType: RaceSave.savefile
        qualifiedName: AquitisionCommunication.RaceSave.savefile
    isDefinition: true
    commentId: Overload:AquitisionCommunication.RaceSave.savefile
  AquitisionCommunication.RaceSave:
    name:
      CSharp:
      - id: AquitisionCommunication.RaceSave
        name: RaceSave
        nameWithType: RaceSave
        qualifiedName: AquitisionCommunication.RaceSave
      VB:
      - id: AquitisionCommunication.RaceSave
        name: RaceSave
        nameWithType: RaceSave
        qualifiedName: AquitisionCommunication.RaceSave
    isDefinition: true
    commentId: T:AquitisionCommunication.RaceSave
  AquitisionCommunication.RaceSave.JsonRace.#ctor*:
    name:
      CSharp:
      - id: AquitisionCommunication.RaceSave.JsonRace.#ctor*
        name: JsonRace
        nameWithType: RaceSave.JsonRace.JsonRace
        qualifiedName: AquitisionCommunication.RaceSave.JsonRace.JsonRace
      VB:
      - id: AquitisionCommunication.RaceSave.JsonRace.#ctor*
        name: JsonRace
        nameWithType: RaceSave.JsonRace.JsonRace
        qualifiedName: AquitisionCommunication.RaceSave.JsonRace.JsonRace
    isDefinition: true
    commentId: Overload:AquitisionCommunication.RaceSave.JsonRace.#ctor
  AquitisionCommunication.RaceSave.JsonRace.GetMode*:
    name:
      CSharp:
      - id: AquitisionCommunication.RaceSave.JsonRace.GetMode*
        name: GetMode
        nameWithType: RaceSave.JsonRace.GetMode
        qualifiedName: AquitisionCommunication.RaceSave.JsonRace.GetMode
      VB:
      - id: AquitisionCommunication.RaceSave.JsonRace.GetMode*
        name: GetMode
        nameWithType: RaceSave.JsonRace.GetMode
        qualifiedName: AquitisionCommunication.RaceSave.JsonRace.GetMode
    isDefinition: true
    commentId: Overload:AquitisionCommunication.RaceSave.JsonRace.GetMode
  AquitisionCommunication.RaceSave.JsonRace.Equals*:
    name:
      CSharp:
      - id: AquitisionCommunication.RaceSave.JsonRace.Equals*
        name: Equals
        nameWithType: RaceSave.JsonRace.Equals
        qualifiedName: AquitisionCommunication.RaceSave.JsonRace.Equals
      VB:
      - id: AquitisionCommunication.RaceSave.JsonRace.Equals*
        name: Equals
        nameWithType: RaceSave.JsonRace.Equals
        qualifiedName: AquitisionCommunication.RaceSave.JsonRace.Equals
    isDefinition: true
    commentId: Overload:AquitisionCommunication.RaceSave.JsonRace.Equals
  SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.TrameType*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.TrameType*
        name: TrameType
        nameWithType: TrameRSA.TrameType
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.TrameType
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.TrameType*
        name: TrameType
        nameWithType: TrameRSA.TrameType
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.TrameType
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.TrameType
  SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreT*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreT*
        name: BarreT
        nameWithType: TrameRSA.BarreT
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreT
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreT*
        name: BarreT
        nameWithType: TrameRSA.BarreT
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreT
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreT
  SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatT*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatT*
        name: EtatT
        nameWithType: TrameRSA.EtatT
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatT
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatT*
        name: EtatT
        nameWithType: TrameRSA.EtatT
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatT
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatT
  SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreB*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreB*
        name: BarreB
        nameWithType: TrameRSA.BarreB
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreB
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreB*
        name: BarreB
        nameWithType: TrameRSA.BarreB
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreB
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.BarreB
  SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatB*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatB*
        name: EtatB
        nameWithType: TrameRSA.EtatB
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatB
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatB*
        name: EtatB
        nameWithType: TrameRSA.EtatB
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatB
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.EtatB
  SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Controle*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Controle*
        name: Controle
        nameWithType: TrameRSA.Controle
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Controle
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Controle*
        name: Controle
        nameWithType: TrameRSA.Controle
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Controle
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Controle
  SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Checksum*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Checksum*
        name: Checksum
        nameWithType: TrameRSA.Checksum
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Checksum
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Checksum*
        name: Checksum
        nameWithType: TrameRSA.Checksum
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Checksum
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.Checksum
  SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.ToString*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.ToString*
        name: ToString
        nameWithType: TrameRSA.ToString
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.ToString
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.ToString*
        name: ToString
        nameWithType: TrameRSA.ToString
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.ToString
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRSA.ToString
  SimpleSimulator.AquitisionCommunication.Trame.TrameRSA:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA
        name: TrameRSA
        nameWithType: TrameRSA
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA
        name: TrameRSA
        nameWithType: TrameRSA
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRSA
    isDefinition: true
    commentId: T:SimpleSimulator.AquitisionCommunication.Trame.TrameRSA
  SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.TrameType*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.TrameType*
        name: TrameType
        nameWithType: TrameXDR.TrameType
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.TrameType
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.TrameType*
        name: TrameType
        nameWithType: TrameXDR.TrameType
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.TrameType
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.TrameType
  System.Collections.Generic.List{SimpleSimulator.AquitisionCommunication.Trame.XDRSub}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: SimpleSimulator.AquitisionCommunication.Trame.XDRSub
        name: XDRSub
        nameWithType: XDRSub
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.XDRSub
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: SimpleSimulator.AquitisionCommunication.Trame.XDRSub
        name: XDRSub
        nameWithType: XDRSub
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.XDRSub
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{SimpleSimulator.AquitisionCommunication.Trame.XDRSub}
  SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.XDRSubs*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.XDRSubs*
        name: XDRSubs
        nameWithType: TrameXDR.XDRSubs
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.XDRSubs
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.XDRSubs*
        name: XDRSubs
        nameWithType: TrameXDR.XDRSubs
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.XDRSubs
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.XDRSubs
  SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Controle*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Controle*
        name: Controle
        nameWithType: TrameXDR.Controle
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Controle
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Controle*
        name: Controle
        nameWithType: TrameXDR.Controle
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Controle
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Controle
  SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Checksum*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Checksum*
        name: Checksum
        nameWithType: TrameXDR.Checksum
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Checksum
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Checksum*
        name: Checksum
        nameWithType: TrameXDR.Checksum
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Checksum
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.Checksum
  SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.ToString*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.ToString*
        name: ToString
        nameWithType: TrameXDR.ToString
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.ToString
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.ToString*
        name: ToString
        nameWithType: TrameXDR.ToString
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.ToString
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameXDR.ToString
  SimpleSimulator.AquitisionCommunication.Trame.TrameXDR:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR
        name: TrameXDR
        nameWithType: TrameXDR
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR
        name: TrameXDR
        nameWithType: TrameXDR
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameXDR
    isDefinition: true
    commentId: T:SimpleSimulator.AquitisionCommunication.Trame.TrameXDR
  SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.TrameType*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.TrameType*
        name: TrameType
        nameWithType: TrameVDM.TrameType
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.TrameType
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.TrameType*
        name: TrameType
        nameWithType: TrameVDM.TrameType
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.TrameType
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.TrameType
  SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Heure*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Heure*
        name: Heure
        nameWithType: TrameVDM.Heure
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Heure
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Heure*
        name: Heure
        nameWithType: TrameVDM.Heure
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Heure
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Heure
  SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Etat*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Etat*
        name: Etat
        nameWithType: TrameVDM.Etat
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Etat
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Etat*
        name: Etat
        nameWithType: TrameVDM.Etat
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Etat
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Etat
  SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Latitude*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Latitude*
        name: Latitude
        nameWithType: TrameVDM.Latitude
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Latitude
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Latitude*
        name: Latitude
        nameWithType: TrameVDM.Latitude
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Latitude
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Latitude
  SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLatitude*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLatitude*
        name: IndicateurLatitude
        nameWithType: TrameVDM.IndicateurLatitude
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLatitude
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLatitude*
        name: IndicateurLatitude
        nameWithType: TrameVDM.IndicateurLatitude
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLatitude
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLatitude
  SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Longitude*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Longitude*
        name: Longitude
        nameWithType: TrameVDM.Longitude
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Longitude
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Longitude*
        name: Longitude
        nameWithType: TrameVDM.Longitude
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Longitude
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Longitude
  SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLongitude*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLongitude*
        name: IndicateurLongitude
        nameWithType: TrameVDM.IndicateurLongitude
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLongitude
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLongitude*
        name: IndicateurLongitude
        nameWithType: TrameVDM.IndicateurLongitude
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLongitude
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.IndicateurLongitude
  SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Vitesse*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Vitesse*
        name: Vitesse
        nameWithType: TrameVDM.Vitesse
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Vitesse
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Vitesse*
        name: Vitesse
        nameWithType: TrameVDM.Vitesse
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Vitesse
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Vitesse
  SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Road*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Road*
        name: Road
        nameWithType: TrameVDM.Road
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Road
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Road*
        name: Road
        nameWithType: TrameVDM.Road
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Road
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Road
  SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Date*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Date*
        name: Date
        nameWithType: TrameVDM.Date
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Date
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Date*
        name: Date
        nameWithType: TrameVDM.Date
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Date
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Date
  SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Magneto*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Magneto*
        name: Magneto
        nameWithType: TrameVDM.Magneto
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Magneto
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Magneto*
        name: Magneto
        nameWithType: TrameVDM.Magneto
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Magneto
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Magneto
  SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Sens*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Sens*
        name: Sens
        nameWithType: TrameVDM.Sens
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Sens
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Sens*
        name: Sens
        nameWithType: TrameVDM.Sens
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Sens
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Sens
  SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Mode*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Mode*
        name: Mode
        nameWithType: TrameVDM.Mode
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Mode
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Mode*
        name: Mode
        nameWithType: TrameVDM.Mode
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Mode
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Mode
  SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Controle*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Controle*
        name: Controle
        nameWithType: TrameVDM.Controle
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Controle
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Controle*
        name: Controle
        nameWithType: TrameVDM.Controle
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Controle
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Controle
  SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeHeure*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeHeure*
        name: NormalizeHeure
        nameWithType: TrameVDM.NormalizeHeure
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeHeure
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeHeure*
        name: NormalizeHeure
        nameWithType: TrameVDM.NormalizeHeure
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeHeure
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeHeure
  SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeDate*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeDate*
        name: NormalizeDate
        nameWithType: TrameVDM.NormalizeDate
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeDate
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeDate*
        name: NormalizeDate
        nameWithType: TrameVDM.NormalizeDate
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeDate
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.NormalizeDate
  SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Checksum*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Checksum*
        name: Checksum
        nameWithType: TrameVDM.Checksum
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Checksum
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Checksum*
        name: Checksum
        nameWithType: TrameVDM.Checksum
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Checksum
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.Checksum
  SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.ToString*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.ToString*
        name: ToString
        nameWithType: TrameVDM.ToString
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.ToString
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.ToString*
        name: ToString
        nameWithType: TrameVDM.ToString
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.ToString
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM.ToString
  SimpleSimulator.AquitisionCommunication.Trame.TrameVDM:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM
        name: TrameVDM
        nameWithType: TrameVDM
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM
        name: TrameVDM
        nameWithType: TrameVDM
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVDM
    isDefinition: true
    commentId: T:SimpleSimulator.AquitisionCommunication.Trame.TrameVDM
  System.Net.Sockets.UdpClient:
    name:
      CSharp:
      - id: System.Net.Sockets.UdpClient
        name: UdpClient
        nameWithType: UdpClient
        qualifiedName: System.Net.Sockets.UdpClient
        isExternal: true
      VB:
      - id: System.Net.Sockets.UdpClient
        name: UdpClient
        nameWithType: UdpClient
        qualifiedName: System.Net.Sockets.UdpClient
        isExternal: true
    isDefinition: true
    parent: System.Net.Sockets
    commentId: T:System.Net.Sockets.UdpClient
  SimpleSimulator.AquitisionCommunication.Trame.Sender.ip*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.Sender.ip*
        name: ip
        nameWithType: Sender.ip
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.Sender.ip
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.Sender.ip*
        name: ip
        nameWithType: Sender.ip
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.Sender.ip
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.Sender.ip
  SimpleSimulator.AquitisionCommunication.Trame.Sender.port*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.Sender.port*
        name: port
        nameWithType: Sender.port
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.Sender.port
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.Sender.port*
        name: port
        nameWithType: Sender.port
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.Sender.port
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.Sender.port
  SimpleSimulator.AquitisionCommunication.Trame.Sender.Send*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.Sender.Send*
        name: Send
        nameWithType: Sender.Send
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.Sender.Send
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.Sender.Send*
        name: Send
        nameWithType: Sender.Send
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.Sender.Send
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.Sender.Send
  SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.TrameType*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.TrameType*
        name: TrameType
        nameWithType: TrameRMC.TrameType
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.TrameType
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.TrameType*
        name: TrameType
        nameWithType: TrameRMC.TrameType
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.TrameType
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.TrameType
  SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Heure*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Heure*
        name: Heure
        nameWithType: TrameRMC.Heure
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Heure
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Heure*
        name: Heure
        nameWithType: TrameRMC.Heure
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Heure
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Heure
  SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Etat*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Etat*
        name: Etat
        nameWithType: TrameRMC.Etat
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Etat
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Etat*
        name: Etat
        nameWithType: TrameRMC.Etat
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Etat
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Etat
  SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Latitude*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Latitude*
        name: Latitude
        nameWithType: TrameRMC.Latitude
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Latitude
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Latitude*
        name: Latitude
        nameWithType: TrameRMC.Latitude
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Latitude
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Latitude
  SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLatitude*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLatitude*
        name: IndicateurLatitude
        nameWithType: TrameRMC.IndicateurLatitude
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLatitude
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLatitude*
        name: IndicateurLatitude
        nameWithType: TrameRMC.IndicateurLatitude
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLatitude
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLatitude
  SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Longitude*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Longitude*
        name: Longitude
        nameWithType: TrameRMC.Longitude
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Longitude
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Longitude*
        name: Longitude
        nameWithType: TrameRMC.Longitude
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Longitude
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Longitude
  SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLongitude*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLongitude*
        name: IndicateurLongitude
        nameWithType: TrameRMC.IndicateurLongitude
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLongitude
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLongitude*
        name: IndicateurLongitude
        nameWithType: TrameRMC.IndicateurLongitude
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLongitude
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.IndicateurLongitude
  SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Vitesse*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Vitesse*
        name: Vitesse
        nameWithType: TrameRMC.Vitesse
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Vitesse
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Vitesse*
        name: Vitesse
        nameWithType: TrameRMC.Vitesse
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Vitesse
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Vitesse
  SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Road*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Road*
        name: Road
        nameWithType: TrameRMC.Road
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Road
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Road*
        name: Road
        nameWithType: TrameRMC.Road
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Road
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Road
  SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Date*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Date*
        name: Date
        nameWithType: TrameRMC.Date
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Date
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Date*
        name: Date
        nameWithType: TrameRMC.Date
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Date
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Date
  SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Magneto*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Magneto*
        name: Magneto
        nameWithType: TrameRMC.Magneto
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Magneto
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Magneto*
        name: Magneto
        nameWithType: TrameRMC.Magneto
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Magneto
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Magneto
  SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Sens*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Sens*
        name: Sens
        nameWithType: TrameRMC.Sens
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Sens
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Sens*
        name: Sens
        nameWithType: TrameRMC.Sens
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Sens
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Sens
  SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Mode*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Mode*
        name: Mode
        nameWithType: TrameRMC.Mode
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Mode
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Mode*
        name: Mode
        nameWithType: TrameRMC.Mode
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Mode
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Mode
  SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Controle*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Controle*
        name: Controle
        nameWithType: TrameRMC.Controle
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Controle
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Controle*
        name: Controle
        nameWithType: TrameRMC.Controle
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Controle
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Controle
  SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeHeure*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeHeure*
        name: NormalizeHeure
        nameWithType: TrameRMC.NormalizeHeure
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeHeure
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeHeure*
        name: NormalizeHeure
        nameWithType: TrameRMC.NormalizeHeure
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeHeure
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeHeure
  SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeDate*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeDate*
        name: NormalizeDate
        nameWithType: TrameRMC.NormalizeDate
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeDate
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeDate*
        name: NormalizeDate
        nameWithType: TrameRMC.NormalizeDate
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeDate
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.NormalizeDate
  SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Checksum*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Checksum*
        name: Checksum
        nameWithType: TrameRMC.Checksum
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Checksum
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Checksum*
        name: Checksum
        nameWithType: TrameRMC.Checksum
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Checksum
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.Checksum
  SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.ToString*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.ToString*
        name: ToString
        nameWithType: TrameRMC.ToString
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.ToString
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.ToString*
        name: ToString
        nameWithType: TrameRMC.ToString
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.ToString
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC.ToString
  SimpleSimulator.AquitisionCommunication.Trame.TrameRMC:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC
        name: TrameRMC
        nameWithType: TrameRMC
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC
        name: TrameRMC
        nameWithType: TrameRMC
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameRMC
    isDefinition: true
    parent: SimpleSimulator.AquitisionCommunication.Trame
    commentId: T:SimpleSimulator.AquitisionCommunication.Trame.TrameRMC
  SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.TrameType*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.TrameType*
        name: TrameType
        nameWithType: TrameVHW.TrameType
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.TrameType
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.TrameType*
        name: TrameType
        nameWithType: TrameVHW.TrameType
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.TrameType
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.TrameType
  SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapDegres*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapDegres*
        name: CapDegres
        nameWithType: TrameVHW.CapDegres
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapDegres
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapDegres*
        name: CapDegres
        nameWithType: TrameVHW.CapDegres
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapDegres
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapDegres
  SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapMagne*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapMagne*
        name: CapMagne
        nameWithType: TrameVHW.CapMagne
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapMagne
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapMagne*
        name: CapMagne
        nameWithType: TrameVHW.CapMagne
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapMagne
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.CapMagne
  SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauNoeud*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauNoeud*
        name: VitBateauNoeud
        nameWithType: TrameVHW.VitBateauNoeud
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauNoeud
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauNoeud*
        name: VitBateauNoeud
        nameWithType: TrameVHW.VitBateauNoeud
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauNoeud
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauNoeud
  SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauKm*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauKm*
        name: VitBateauKm
        nameWithType: TrameVHW.VitBateauKm
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauKm
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauKm*
        name: VitBateauKm
        nameWithType: TrameVHW.VitBateauKm
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauKm
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.VitBateauKm
  SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Controle*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Controle*
        name: Controle
        nameWithType: TrameVHW.Controle
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Controle
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Controle*
        name: Controle
        nameWithType: TrameVHW.Controle
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Controle
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Controle
  SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Checksum*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Checksum*
        name: Checksum
        nameWithType: TrameVHW.Checksum
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Checksum
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Checksum*
        name: Checksum
        nameWithType: TrameVHW.Checksum
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Checksum
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.Checksum
  SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.ToString*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.ToString*
        name: ToString
        nameWithType: TrameVHW.ToString
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.ToString
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.ToString*
        name: ToString
        nameWithType: TrameVHW.ToString
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.ToString
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameVHW.ToString
  SimpleSimulator.AquitisionCommunication.Trame.TrameVHW:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW
        name: TrameVHW
        nameWithType: TrameVHW
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW
        name: TrameVHW
        nameWithType: TrameVHW
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameVHW
    isDefinition: true
    parent: SimpleSimulator.AquitisionCommunication.Trame
    commentId: T:SimpleSimulator.AquitisionCommunication.Trame.TrameVHW
  SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerType*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerType*
        name: TransducerType
        nameWithType: XDRSub.TransducerType
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerType
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerType*
        name: TransducerType
        nameWithType: XDRSub.TransducerType
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerType
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerType
  SimpleSimulator.AquitisionCommunication.Trame.XDRSub.MesurementData*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.MesurementData*
        name: MesurementData
        nameWithType: XDRSub.MesurementData
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.MesurementData
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.MesurementData*
        name: MesurementData
        nameWithType: XDRSub.MesurementData
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.MesurementData
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.XDRSub.MesurementData
  SimpleSimulator.AquitisionCommunication.Trame.XDRSub.UnitsMeasure*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.UnitsMeasure*
        name: UnitsMeasure
        nameWithType: XDRSub.UnitsMeasure
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.UnitsMeasure
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.UnitsMeasure*
        name: UnitsMeasure
        nameWithType: XDRSub.UnitsMeasure
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.UnitsMeasure
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.XDRSub.UnitsMeasure
  SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerName*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerName*
        name: TransducerName
        nameWithType: XDRSub.TransducerName
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerName
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerName*
        name: TransducerName
        nameWithType: XDRSub.TransducerName
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerName
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.XDRSub.TransducerName
  SimpleSimulator.AquitisionCommunication.Trame.XDRSub.ToString*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.ToString*
        name: ToString
        nameWithType: XDRSub.ToString
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.ToString
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.ToString*
        name: ToString
        nameWithType: XDRSub.ToString
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.XDRSub.ToString
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.XDRSub.ToString
  SimpleSimulator.AquitisionCommunication.Trame.XDRSub:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.XDRSub
        name: XDRSub
        nameWithType: XDRSub
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.XDRSub
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.XDRSub
        name: XDRSub
        nameWithType: XDRSub
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.XDRSub
    isDefinition: true
    commentId: T:SimpleSimulator.AquitisionCommunication.Trame.XDRSub
  SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.TrameType*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.TrameType*
        name: TrameType
        nameWithType: TrameMWV.TrameType
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.TrameType
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.TrameType*
        name: TrameType
        nameWithType: TrameMWV.TrameType
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.TrameType
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.TrameType
  SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.AngleVent*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.AngleVent*
        name: AngleVent
        nameWithType: TrameMWV.AngleVent
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.AngleVent
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.AngleVent*
        name: AngleVent
        nameWithType: TrameMWV.AngleVent
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.AngleVent
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.AngleVent
  SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Reference*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Reference*
        name: Reference
        nameWithType: TrameMWV.Reference
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Reference
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Reference*
        name: Reference
        nameWithType: TrameMWV.Reference
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Reference
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Reference
  SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.VitesseVent*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.VitesseVent*
        name: VitesseVent
        nameWithType: TrameMWV.VitesseVent
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.VitesseVent
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.VitesseVent*
        name: VitesseVent
        nameWithType: TrameMWV.VitesseVent
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.VitesseVent
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.VitesseVent
  SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Unite*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Unite*
        name: Unite
        nameWithType: TrameMWV.Unite
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Unite
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Unite*
        name: Unite
        nameWithType: TrameMWV.Unite
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Unite
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Unite
  SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Etat*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Etat*
        name: Etat
        nameWithType: TrameMWV.Etat
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Etat
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Etat*
        name: Etat
        nameWithType: TrameMWV.Etat
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Etat
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Etat
  SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Controle*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Controle*
        name: Controle
        nameWithType: TrameMWV.Controle
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Controle
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Controle*
        name: Controle
        nameWithType: TrameMWV.Controle
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Controle
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Controle
  SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Checksum*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Checksum*
        name: Checksum
        nameWithType: TrameMWV.Checksum
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Checksum
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Checksum*
        name: Checksum
        nameWithType: TrameMWV.Checksum
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Checksum
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.Checksum
  SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.ToString*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.ToString*
        name: ToString
        nameWithType: TrameMWV.ToString
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.ToString
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.ToString*
        name: ToString
        nameWithType: TrameMWV.ToString
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.ToString
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameMWV.ToString
  SimpleSimulator.AquitisionCommunication.Trame.TrameMWV:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV
        name: TrameMWV
        nameWithType: TrameMWV
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV
        name: TrameMWV
        nameWithType: TrameMWV
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameMWV
    isDefinition: true
    parent: SimpleSimulator.AquitisionCommunication.Trame
    commentId: T:SimpleSimulator.AquitisionCommunication.Trame.TrameMWV
  SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA.ToString*:
    name:
      CSharp:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA.ToString*
        name: ToString
        nameWithType: TrameNMEA.ToString
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA.ToString
      VB:
      - id: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA.ToString*
        name: ToString
        nameWithType: TrameNMEA.ToString
        qualifiedName: SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA.ToString
    isDefinition: true
    commentId: Overload:SimpleSimulator.AquitisionCommunication.Trame.TrameNMEA.ToString
  physicSimulator.physics_simulator.#ctor*:
    name:
      CSharp:
      - id: physicSimulator.physics_simulator.#ctor*
        name: physics_simulator
        nameWithType: physics_simulator.physics_simulator
        qualifiedName: physicSimulator.physics_simulator.physics_simulator
      VB:
      - id: physicSimulator.physics_simulator.#ctor*
        name: physics_simulator
        nameWithType: physics_simulator.physics_simulator
        qualifiedName: physicSimulator.physics_simulator.physics_simulator
    isDefinition: true
    commentId: Overload:physicSimulator.physics_simulator.#ctor
  physicSimulator.physics_simulator.SetBoat*:
    name:
      CSharp:
      - id: physicSimulator.physics_simulator.SetBoat*
        name: SetBoat
        nameWithType: physics_simulator.SetBoat
        qualifiedName: physicSimulator.physics_simulator.SetBoat
      VB:
      - id: physicSimulator.physics_simulator.SetBoat*
        name: SetBoat
        nameWithType: physics_simulator.SetBoat
        qualifiedName: physicSimulator.physics_simulator.SetBoat
    isDefinition: true
    commentId: Overload:physicSimulator.physics_simulator.SetBoat
  physicSimulator.physics_simulator.MathMod*:
    name:
      CSharp:
      - id: physicSimulator.physics_simulator.MathMod*
        name: MathMod
        nameWithType: physics_simulator.MathMod
        qualifiedName: physicSimulator.physics_simulator.MathMod
      VB:
      - id: physicSimulator.physics_simulator.MathMod*
        name: MathMod
        nameWithType: physics_simulator.MathMod
        qualifiedName: physicSimulator.physics_simulator.MathMod
    isDefinition: true
    commentId: Overload:physicSimulator.physics_simulator.MathMod
  physicSimulator.physics_simulator.Move*:
    name:
      CSharp:
      - id: physicSimulator.physics_simulator.Move*
        name: Move
        nameWithType: physics_simulator.Move
        qualifiedName: physicSimulator.physics_simulator.Move
      VB:
      - id: physicSimulator.physics_simulator.Move*
        name: Move
        nameWithType: physics_simulator.Move
        qualifiedName: physicSimulator.physics_simulator.Move
    isDefinition: true
    commentId: Overload:physicSimulator.physics_simulator.Move
  physicSimulator.physics_simulator.GetCOG*:
    name:
      CSharp:
      - id: physicSimulator.physics_simulator.GetCOG*
        name: GetCOG
        nameWithType: physics_simulator.GetCOG
        qualifiedName: physicSimulator.physics_simulator.GetCOG
      VB:
      - id: physicSimulator.physics_simulator.GetCOG*
        name: GetCOG
        nameWithType: physics_simulator.GetCOG
        qualifiedName: physicSimulator.physics_simulator.GetCOG
    isDefinition: true
    commentId: Overload:physicSimulator.physics_simulator.GetCOG
  physicSimulator.physics_simulator.GetCOGDegre*:
    name:
      CSharp:
      - id: physicSimulator.physics_simulator.GetCOGDegre*
        name: GetCOGDegre
        nameWithType: physics_simulator.GetCOGDegre
        qualifiedName: physicSimulator.physics_simulator.GetCOGDegre
      VB:
      - id: physicSimulator.physics_simulator.GetCOGDegre*
        name: GetCOGDegre
        nameWithType: physics_simulator.GetCOGDegre
        qualifiedName: physicSimulator.physics_simulator.GetCOGDegre
    isDefinition: true
    commentId: Overload:physicSimulator.physics_simulator.GetCOGDegre
  physicSimulator.physics_simulator.GetSOG*:
    name:
      CSharp:
      - id: physicSimulator.physics_simulator.GetSOG*
        name: GetSOG
        nameWithType: physics_simulator.GetSOG
        qualifiedName: physicSimulator.physics_simulator.GetSOG
      VB:
      - id: physicSimulator.physics_simulator.GetSOG*
        name: GetSOG
        nameWithType: physics_simulator.GetSOG
        qualifiedName: physicSimulator.physics_simulator.GetSOG
    isDefinition: true
    commentId: Overload:physicSimulator.physics_simulator.GetSOG
  physicSimulator.physics_simulator.GetSTW*:
    name:
      CSharp:
      - id: physicSimulator.physics_simulator.GetSTW*
        name: GetSTW
        nameWithType: physics_simulator.GetSTW
        qualifiedName: physicSimulator.physics_simulator.GetSTW
      VB:
      - id: physicSimulator.physics_simulator.GetSTW*
        name: GetSTW
        nameWithType: physics_simulator.GetSTW
        qualifiedName: physicSimulator.physics_simulator.GetSTW
    isDefinition: true
    commentId: Overload:physicSimulator.physics_simulator.GetSTW
  physicSimulator.physics_simulator.GetSTWdirDegre*:
    name:
      CSharp:
      - id: physicSimulator.physics_simulator.GetSTWdirDegre*
        name: GetSTWdirDegre
        nameWithType: physics_simulator.GetSTWdirDegre
        qualifiedName: physicSimulator.physics_simulator.GetSTWdirDegre
      VB:
      - id: physicSimulator.physics_simulator.GetSTWdirDegre*
        name: GetSTWdirDegre
        nameWithType: physics_simulator.GetSTWdirDegre
        qualifiedName: physicSimulator.physics_simulator.GetSTWdirDegre
    isDefinition: true
    commentId: Overload:physicSimulator.physics_simulator.GetSTWdirDegre
  physicSimulator.physics_simulator.GetAWS*:
    name:
      CSharp:
      - id: physicSimulator.physics_simulator.GetAWS*
        name: GetAWS
        nameWithType: physics_simulator.GetAWS
        qualifiedName: physicSimulator.physics_simulator.GetAWS
      VB:
      - id: physicSimulator.physics_simulator.GetAWS*
        name: GetAWS
        nameWithType: physics_simulator.GetAWS
        qualifiedName: physicSimulator.physics_simulator.GetAWS
    isDefinition: true
    commentId: Overload:physicSimulator.physics_simulator.GetAWS
  physicSimulator.physics_simulator.GetAWADegre*:
    name:
      CSharp:
      - id: physicSimulator.physics_simulator.GetAWADegre*
        name: GetAWADegre
        nameWithType: physics_simulator.GetAWADegre
        qualifiedName: physicSimulator.physics_simulator.GetAWADegre
      VB:
      - id: physicSimulator.physics_simulator.GetAWADegre*
        name: GetAWADegre
        nameWithType: physics_simulator.GetAWADegre
        qualifiedName: physicSimulator.physics_simulator.GetAWADegre
    isDefinition: true
    commentId: Overload:physicSimulator.physics_simulator.GetAWADegre
  physicSimulator.physics_simulator:
    name:
      CSharp:
      - id: physicSimulator.physics_simulator
        name: physics_simulator
        nameWithType: physics_simulator
        qualifiedName: physicSimulator.physics_simulator
      VB:
      - id: physicSimulator.physics_simulator
        name: physics_simulator
        nameWithType: physics_simulator
        qualifiedName: physicSimulator.physics_simulator
    isDefinition: true
    commentId: T:physicSimulator.physics_simulator
  physicSimulator:
    name:
      CSharp:
      - name: physicSimulator
        nameWithType: physicSimulator
        qualifiedName: physicSimulator
      VB:
      - name: physicSimulator
        nameWithType: physicSimulator
        qualifiedName: physicSimulator
    isDefinition: true
    commentId: N:physicSimulator
