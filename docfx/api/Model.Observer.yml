### YamlMime:ManagedReference
items:
- uid: Model.Observer
  commentId: T:Model.Observer
  id: Observer
  parent: Model
  children:
  - Model.Observer.#ctor(Unityscript.Creation)
  - Model.Observer.creation
  - Model.Observer.Update(Model.ISubject)
  langs:
  - csharp
  - vb
  name: Observer
  nameWithType: Observer
  fullName: Model.Observer
  type: Class
  source:
    id: Observer
    path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Observer.cs
    startLine: 11
  assemblies:
  - Assembly-CSharp
  namespace: Model
  summary: "\nThe is an observer(or interface) of <xref href=\"Model.RaceModel\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: 'public class Observer : IObserver'
    content.vb: >-
      Public Class Observer
          Implements IObserver
  inheritance:
  - System.Object
  implements:
  - Model.IObserver
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Model.Observer.#ctor(Unityscript.Creation)
  commentId: M:Model.Observer.#ctor(Unityscript.Creation)
  id: '#ctor(Unityscript.Creation)'
  parent: Model.Observer
  langs:
  - csharp
  - vb
  name: Observer(Creation)
  nameWithType: Observer.Observer(Creation)
  fullName: Model.Observer.Observer(Unityscript.Creation)
  type: Constructor
  source:
    id: .ctor
    path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Observer.cs
    startLine: 17
  assemblies:
  - Assembly-CSharp
  namespace: Model
  summary: "\nCreate an instance of Observer\n"
  example: []
  syntax:
    content: public Observer(Creation creation)
    parameters:
    - id: creation
      type: Unityscript.Creation
      description: ''
    content.vb: Public Sub New(creation As Creation)
  overload: Model.Observer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Model.Observer.creation
  commentId: F:Model.Observer.creation
  id: creation
  parent: Model.Observer
  langs:
  - csharp
  - vb
  name: creation
  nameWithType: Observer.creation
  fullName: Model.Observer.creation
  type: Field
  source:
    id: creation
    path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Observer.cs
    startLine: 22
  assemblies:
  - Assembly-CSharp
  namespace: Model
  syntax:
    content: public Creation creation
    return:
      type: Unityscript.Creation
    content.vb: Public creation As Creation
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Model.Observer.Update(Model.ISubject)
  commentId: M:Model.Observer.Update(Model.ISubject)
  id: Update(Model.ISubject)
  parent: Model.Observer
  langs:
  - csharp
  - vb
  name: Update(ISubject)
  nameWithType: Observer.Update(ISubject)
  fullName: Model.Observer.Update(Model.ISubject)
  type: Method
  source:
    id: Update
    path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\Observer.cs
    startLine: 28
  assemblies:
  - Assembly-CSharp
  namespace: Model
  summary: "\nUpdate the attribut &apos;creation&apos; according to the subject status\n"
  example: []
  syntax:
    content: public void Update(ISubject s)
    parameters:
    - id: s
      type: Model.ISubject
      description: ''
    content.vb: Public Sub Update(s As ISubject)
  overload: Model.Observer.Update*
  implements:
  - Model.IObserver.Update(Model.ISubject)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Model.RaceModel
  commentId: T:Model.RaceModel
  parent: Model
  name: RaceModel
  nameWithType: RaceModel
  fullName: Model.RaceModel
- uid: Model
  commentId: N:Model
  name: Model
  nameWithType: Model
  fullName: Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Model.IObserver
  commentId: T:Model.IObserver
  parent: Model
  name: IObserver
  nameWithType: IObserver
  fullName: Model.IObserver
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Model.Observer.#ctor*
  commentId: Overload:Model.Observer.#ctor
  name: Observer
  nameWithType: Observer.Observer
  fullName: Model.Observer.Observer
- uid: Unityscript.Creation
  commentId: T:Unityscript.Creation
  parent: Unityscript
  name: Creation
  nameWithType: Creation
  fullName: Unityscript.Creation
- uid: Unityscript
  commentId: N:Unityscript
  name: Unityscript
  nameWithType: Unityscript
  fullName: Unityscript
- uid: Model.Observer.Update*
  commentId: Overload:Model.Observer.Update
  name: Update
  nameWithType: Observer.Update
  fullName: Model.Observer.Update
- uid: Model.IObserver.Update(Model.ISubject)
  commentId: M:Model.IObserver.Update(Model.ISubject)
  parent: Model.IObserver
  name: Update(ISubject)
  nameWithType: IObserver.Update(ISubject)
  fullName: Model.IObserver.Update(Model.ISubject)
  spec.csharp:
  - uid: Model.IObserver.Update(Model.ISubject)
    name: Update
    nameWithType: IObserver.Update
    fullName: Model.IObserver.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Model.ISubject
    name: ISubject
    nameWithType: ISubject
    fullName: Model.ISubject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Model.IObserver.Update(Model.ISubject)
    name: Update
    nameWithType: IObserver.Update
    fullName: Model.IObserver.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Model.ISubject
    name: ISubject
    nameWithType: ISubject
    fullName: Model.ISubject
  - name: )
    nameWithType: )
    fullName: )
- uid: Model.ISubject
  commentId: T:Model.ISubject
  parent: Model
  name: ISubject
  nameWithType: ISubject
  fullName: Model.ISubject
