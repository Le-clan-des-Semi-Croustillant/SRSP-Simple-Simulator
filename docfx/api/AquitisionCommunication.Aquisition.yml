### YamlMime:ManagedReference
items:
- uid: AquitisionCommunication.Aquisition
  commentId: T:AquitisionCommunication.Aquisition
  id: Aquisition
  parent: AquitisionCommunication
  children:
  - AquitisionCommunication.Aquisition.#ctor(PRace.Race,System.Int32,System.String,System.Int32,System.String)
  - AquitisionCommunication.Aquisition.conf
  - AquitisionCommunication.Aquisition.getIpNMEA
  - AquitisionCommunication.Aquisition.getPortNMEA
  - AquitisionCommunication.Aquisition.sentPosition(System.Collections.Generic.Dictionary{Environement.Conditions,System.Single},System.Single,System.Single,System.Single,PRace.Position.Coords,PRace.Position.Coords,System.DateTime,System.Single,System.Single,System.Single)
  - AquitisionCommunication.Aquisition.SetNMEA(System.Int32,System.String)
  langs:
  - csharp
  - vb
  name: Aquisition
  nameWithType: Aquisition
  fullName: AquitisionCommunication.Aquisition
  type: Class
  source:
    id: Aquisition
    path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Aquisition.cs
    startLine: 15
  assemblies:
  - Assembly-CSharp
  namespace: AquitisionCommunication
  summary: "\nthis classe manages the communication with QTVLM on OpenCPN\n"
  example: []
  syntax:
    content: public class Aquisition
    content.vb: Public Class Aquisition
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AquitisionCommunication.Aquisition.#ctor(PRace.Race,System.Int32,System.String,System.Int32,System.String)
  commentId: M:AquitisionCommunication.Aquisition.#ctor(PRace.Race,System.Int32,System.String,System.Int32,System.String)
  id: '#ctor(PRace.Race,System.Int32,System.String,System.Int32,System.String)'
  parent: AquitisionCommunication.Aquisition
  langs:
  - csharp
  - vb
  name: Aquisition(Race, Int32, String, Int32, String)
  nameWithType: Aquisition.Aquisition(Race, Int32, String, Int32, String)
  fullName: AquitisionCommunication.Aquisition.Aquisition(PRace.Race, System.Int32, System.String, System.Int32, System.String)
  type: Constructor
  source:
    id: .ctor
    path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Aquisition.cs
    startLine: 25
  assemblies:
  - Assembly-CSharp
  namespace: AquitisionCommunication
  summary: "\nCreate an instance of Aquisition\n"
  example: []
  syntax:
    content: public Aquisition(Race race, int portQTVLM, string ipQTVLM, int portRM, string ipRM)
    parameters:
    - id: race
      type: PRace.Race
      description: the race whose launch the communication
    - id: portQTVLM
      type: System.Int32
      description: ''
    - id: ipQTVLM
      type: System.String
      description: ''
    - id: portRM
      type: System.Int32
      description: ''
    - id: ipRM
      type: System.String
      description: ''
    content.vb: Public Sub New(race As Race, portQTVLM As Integer, ipQTVLM As String, portRM As Integer, ipRM As String)
  overload: AquitisionCommunication.Aquisition.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AquitisionCommunication.Aquisition.conf
  commentId: F:AquitisionCommunication.Aquisition.conf
  id: conf
  parent: AquitisionCommunication.Aquisition
  langs:
  - csharp
  - vb
  name: conf
  nameWithType: Aquisition.conf
  fullName: AquitisionCommunication.Aquisition.conf
  type: Field
  source:
    id: conf
    path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Aquisition.cs
    startLine: 38
  assemblies:
  - Assembly-CSharp
  namespace: AquitisionCommunication
  syntax:
    content: public SavedConfigReader.SavedConfig conf
    return:
      type: SavedConfigReader.SavedConfig
    content.vb: Public conf As SavedConfigReader.SavedConfig
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AquitisionCommunication.Aquisition.SetNMEA(System.Int32,System.String)
  commentId: M:AquitisionCommunication.Aquisition.SetNMEA(System.Int32,System.String)
  id: SetNMEA(System.Int32,System.String)
  parent: AquitisionCommunication.Aquisition
  langs:
  - csharp
  - vb
  name: SetNMEA(Int32, String)
  nameWithType: Aquisition.SetNMEA(Int32, String)
  fullName: AquitisionCommunication.Aquisition.SetNMEA(System.Int32, System.String)
  type: Method
  source:
    id: SetNMEA
    path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Aquisition.cs
    startLine: 46
  assemblies:
  - Assembly-CSharp
  namespace: AquitisionCommunication
  summary: "\nSet the ip and port to communicate with QTVLM\n"
  example: []
  syntax:
    content: public void SetNMEA(int port, string ip)
    parameters:
    - id: port
      type: System.Int32
      description: ''
    - id: ip
      type: System.String
      description: ''
    content.vb: Public Sub SetNMEA(port As Integer, ip As String)
  overload: AquitisionCommunication.Aquisition.SetNMEA*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AquitisionCommunication.Aquisition.getPortNMEA
  commentId: M:AquitisionCommunication.Aquisition.getPortNMEA
  id: getPortNMEA
  parent: AquitisionCommunication.Aquisition
  langs:
  - csharp
  - vb
  name: getPortNMEA()
  nameWithType: Aquisition.getPortNMEA()
  fullName: AquitisionCommunication.Aquisition.getPortNMEA()
  type: Method
  source:
    id: getPortNMEA
    path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Aquisition.cs
    startLine: 56
  assemblies:
  - Assembly-CSharp
  namespace: AquitisionCommunication
  summary: "\nReturn the port used to communicate with QTVML\n"
  example: []
  syntax:
    content: public int getPortNMEA()
    return:
      type: System.Int32
      description: ''
    content.vb: Public Function getPortNMEA As Integer
  overload: AquitisionCommunication.Aquisition.getPortNMEA*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AquitisionCommunication.Aquisition.getIpNMEA
  commentId: M:AquitisionCommunication.Aquisition.getIpNMEA
  id: getIpNMEA
  parent: AquitisionCommunication.Aquisition
  langs:
  - csharp
  - vb
  name: getIpNMEA()
  nameWithType: Aquisition.getIpNMEA()
  fullName: AquitisionCommunication.Aquisition.getIpNMEA()
  type: Method
  source:
    id: getIpNMEA
    path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Aquisition.cs
    startLine: 65
  assemblies:
  - Assembly-CSharp
  namespace: AquitisionCommunication
  summary: "\nReturn the ip used to communicate with QTVML\n"
  example: []
  syntax:
    content: public string getIpNMEA()
    return:
      type: System.String
      description: ''
    content.vb: Public Function getIpNMEA As String
  overload: AquitisionCommunication.Aquisition.getIpNMEA*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AquitisionCommunication.Aquisition.sentPosition(System.Collections.Generic.Dictionary{Environement.Conditions,System.Single},System.Single,System.Single,System.Single,PRace.Position.Coords,PRace.Position.Coords,System.DateTime,System.Single,System.Single,System.Single)
  commentId: M:AquitisionCommunication.Aquisition.sentPosition(System.Collections.Generic.Dictionary{Environement.Conditions,System.Single},System.Single,System.Single,System.Single,PRace.Position.Coords,PRace.Position.Coords,System.DateTime,System.Single,System.Single,System.Single)
  id: sentPosition(System.Collections.Generic.Dictionary{Environement.Conditions,System.Single},System.Single,System.Single,System.Single,PRace.Position.Coords,PRace.Position.Coords,System.DateTime,System.Single,System.Single,System.Single)
  parent: AquitisionCommunication.Aquisition
  langs:
  - csharp
  - vb
  name: sentPosition(Dictionary<Conditions, Single>, Single, Single, Single, Position.Coords, Position.Coords, DateTime, Single, Single, Single)
  nameWithType: Aquisition.sentPosition(Dictionary<Conditions, Single>, Single, Single, Single, Position.Coords, Position.Coords, DateTime, Single, Single, Single)
  fullName: AquitisionCommunication.Aquisition.sentPosition(System.Collections.Generic.Dictionary<Environement.Conditions, System.Single>, System.Single, System.Single, System.Single, PRace.Position.Coords, PRace.Position.Coords, System.DateTime, System.Single, System.Single, System.Single)
  type: Method
  source:
    id: sentPosition
    path: E:\Unity\Project\SRSP-Simple-Simulator\Assets\Controller\script\Model\AquitisionCommunication\Aquisition.cs
    startLine: 83
  assemblies:
  - Assembly-CSharp
  namespace: AquitisionCommunication
  syntax:
    content: public void sentPosition(Dictionary<Conditions, float> condition, float SOG, float COG, float cap, Position.Coords latitude, Position.Coords longitude, DateTime date, float STW, float AWS, float AWA)
    parameters:
    - id: condition
      type: System.Collections.Generic.Dictionary{Environement.Conditions,System.Single}
    - id: SOG
      type: System.Single
    - id: COG
      type: System.Single
    - id: cap
      type: System.Single
    - id: latitude
      type: PRace.Position.Coords
    - id: longitude
      type: PRace.Position.Coords
    - id: date
      type: System.DateTime
    - id: STW
      type: System.Single
    - id: AWS
      type: System.Single
    - id: AWA
      type: System.Single
    content.vb: Public Sub sentPosition(condition As Dictionary(Of Conditions, Single), SOG As Single, COG As Single, cap As Single, latitude As Position.Coords, longitude As Position.Coords, date As Date, STW As Single, AWS As Single, AWA As Single)
  overload: AquitisionCommunication.Aquisition.sentPosition*
  nameWithType.vb: Aquisition.sentPosition(Dictionary(Of Conditions, Single), Single, Single, Single, Position.Coords, Position.Coords, DateTime, Single, Single, Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AquitisionCommunication.Aquisition.sentPosition(System.Collections.Generic.Dictionary(Of Environement.Conditions, System.Single), System.Single, System.Single, System.Single, PRace.Position.Coords, PRace.Position.Coords, System.DateTime, System.Single, System.Single, System.Single)
  name.vb: sentPosition(Dictionary(Of Conditions, Single), Single, Single, Single, Position.Coords, Position.Coords, DateTime, Single, Single, Single)
references:
- uid: AquitisionCommunication
  commentId: N:AquitisionCommunication
  name: AquitisionCommunication
  nameWithType: AquitisionCommunication
  fullName: AquitisionCommunication
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AquitisionCommunication.Aquisition.#ctor*
  commentId: Overload:AquitisionCommunication.Aquisition.#ctor
  name: Aquisition
  nameWithType: Aquisition.Aquisition
  fullName: AquitisionCommunication.Aquisition.Aquisition
- uid: PRace.Race
  commentId: T:PRace.Race
  parent: PRace
  name: Race
  nameWithType: Race
  fullName: PRace.Race
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: PRace
  commentId: N:PRace
  name: PRace
  nameWithType: PRace
  fullName: PRace
- uid: SavedConfigReader.SavedConfig
  commentId: T:SavedConfigReader.SavedConfig
  name: SavedConfigReader.SavedConfig
  nameWithType: SavedConfigReader.SavedConfig
  fullName: SavedConfigReader.SavedConfig
- uid: AquitisionCommunication.Aquisition.SetNMEA*
  commentId: Overload:AquitisionCommunication.Aquisition.SetNMEA
  name: SetNMEA
  nameWithType: Aquisition.SetNMEA
  fullName: AquitisionCommunication.Aquisition.SetNMEA
- uid: AquitisionCommunication.Aquisition.getPortNMEA*
  commentId: Overload:AquitisionCommunication.Aquisition.getPortNMEA
  name: getPortNMEA
  nameWithType: Aquisition.getPortNMEA
  fullName: AquitisionCommunication.Aquisition.getPortNMEA
- uid: AquitisionCommunication.Aquisition.getIpNMEA*
  commentId: Overload:AquitisionCommunication.Aquisition.getIpNMEA
  name: getIpNMEA
  nameWithType: Aquisition.getIpNMEA
  fullName: AquitisionCommunication.Aquisition.getIpNMEA
- uid: AquitisionCommunication.Aquisition.sentPosition*
  commentId: Overload:AquitisionCommunication.Aquisition.sentPosition
  name: sentPosition
  nameWithType: Aquisition.sentPosition
  fullName: AquitisionCommunication.Aquisition.sentPosition
- uid: System.Collections.Generic.Dictionary{Environement.Conditions,System.Single}
  commentId: T:System.Collections.Generic.Dictionary{Environement.Conditions,System.Single}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<Conditions, Single>
  nameWithType: Dictionary<Conditions, Single>
  fullName: System.Collections.Generic.Dictionary<Environement.Conditions, System.Single>
  nameWithType.vb: Dictionary(Of Conditions, Single)
  fullName.vb: System.Collections.Generic.Dictionary(Of Environement.Conditions, System.Single)
  name.vb: Dictionary(Of Conditions, Single)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Environement.Conditions
    name: Conditions
    nameWithType: Conditions
    fullName: Environement.Conditions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Environement.Conditions
    name: Conditions
    nameWithType: Conditions
    fullName: Environement.Conditions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: PRace.Position.Coords
  commentId: T:PRace.Position.Coords
  parent: PRace
  name: Position.Coords
  nameWithType: Position.Coords
  fullName: PRace.Position.Coords
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
